Summary,Issue key,Issue id,Issue Type,Status,Project key,Project name,Project type,Project lead,Project description,Project url,Priority,Resolution,Assignee,Reporter,Creator,Created,Updated,Last Viewed,Resolved,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Fix Version/s,Fix Version/s,Fix Version/s,Fix Version/s,Component/s,Component/s,Component/s,Component/s,Due Date,Votes,Labels,Labels,Labels,Labels,Labels,Description,Environment,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Original Estimate,Remaining Estimate,Time Spent,Work Ratio,Σ Original Estimate,Σ Remaining Estimate,Σ Time Spent,Security Level,Inward issue link (Blocker),Outward issue link (Blocker),Inward issue link (Cloners),Outward issue link (Cloners),Outward issue link (Cloners),Outward issue link (Completes),Inward issue link (Duplicate),Inward issue link (Duplicate),Inward issue link (Duplicate),Outward issue link (Duplicate),Outward issue link (Duplicate),Outward issue link (Duplicate),Inward issue link (Incorporates),Outward issue link (Incorporates),Inward issue link (Problem/Incident),Outward issue link (Problem/Incident),Inward issue link (Reference),Inward issue link (Reference),Inward issue link (Reference),Outward issue link (Reference),Outward issue link (Reference),Outward issue link (Reference),Inward issue link (Regression),Outward issue link (Regression),Inward issue link (Required),Outward issue link (Required),Inward issue link (Supercedes),Outward issue link (Supercedes),Inward issue link (dependent),Outward issue link (dependent),Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Custom field (Affects version (Component)),Custom field (Attachment count),Custom field (Blog - New Blog Administrators),Custom field (Blog - New Blog PMC),Custom field (Blog - Write access),Custom field (Blog Administrator?),Custom field (Blogs - Admin for blog),Custom field (Blogs - Email Address),Custom field (Blogs - Existing Blog Access Level),Custom field (Blogs - Existing Blog Name),Custom field (Blogs - New Blog Write Access),Custom field (Blogs - Username),Custom field (Bug Category),Custom field (Bugzilla - Email Notification Address),Custom field (Bugzilla - List of usernames),Custom field (Bugzilla - PMC Name),Custom field (Bugzilla - Project Name),Custom field (Bugzilla Id),Custom field (Bugzilla Id),Custom field (Change Category),Custom field (Complexity),Custom field (Discovered By),Custom field (Docs Text),Custom field (Enable Automatic Patch Review),Custom field (Epic Link),Custom field (Estimated Complexity),Custom field (Evidence Of Open Source Adoption),Custom field (Evidence Of Registration),Custom field (Evidence Of Use On World Wide Web),Custom field (Existing GitBox Approval),Custom field (External issue ID),Custom field (External issue URL),Custom field (Fix version (Component)),Custom field (Flags),Custom field (Flags),Custom field (Git Notification Mailing List),Custom field (Git Repository Import Path),Custom field (Git Repository Name),Custom field (Git Repository Type),Custom field (GitHub Options),Custom field (Github Integration),Custom field (Github Integrations - Other),Custom field (Global Rank),Custom field (INFRA - Subversion Repository Path),Custom field (Initial Confluence Contributors),Custom field (Last public comment date),Custom field (Level of effort),Custom field (Machine Readable Info),Custom field (Mentor),Custom field (New-TLP-TLPName),Custom field (Original story points),Custom field (Parent Link),Custom field (Patch Info),Custom field (Priority),Custom field (Project),Custom field (Protected Branch),Custom field (Rank),Custom field (Rank (Obsolete)),Custom field (Regression),Custom field (Regression),Custom field (Review Date),Custom field (Reviewer),Custom field (Severity),Custom field (Severity),Custom field (Skill Level),Custom field (Source Control Link),Custom field (Space Description),Custom field (Space Key),Custom field (Space Name),Custom field (Start Date),Custom field (Tags),Custom field (Target end),Custom field (Target start),Custom field (Team),Custom field (Test and Documentation Plan),Custom field (Testcase included),Custom field (Tester),Custom field (Workaround),Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment
Virtual destination consumers can create invalid demand for Virtual Topics,AMQ-6875,13125040,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,14/Dec/17 20:59,14/Dec/17 21:22,14/Jul/23 05:44,14/Dec/17 21:22,5.15.2,,,,,,,,,5.15.3,5.16.0,,,Broker,Network of Brokers,,,,0,,,,,,"When testing out Virtual topics over a network bridge that has the virtual destination consumers feature enabled I noticed that the consumer advisories were wrong.  The destinations sent as part of the consumer advisories to create demand over the bridge are using the name of the Virtual Topic.  

This is causing extra demand to flow across the network bridge in some cases because by default the VirtualTopic name is ""VirtualTopic.>"" .  So once one Virtual Topic is created on a remote broker then any messages sent to ""VirtualTopic.>"" on the local broker will be forwarded over to the other broker even if there is no VirtualTopic matching.

The solution is to make sure to use the actual topic that the VirtualTopic is subscribed to as part of the advisory messags.",,cshannon,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Dec 14 21:22:14 UTC 2017,,,,,,,,,,,"0|i3nx47:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Dec/17 21:01;jira-bot;Commit 56baba96c657d4e44b88955a964d6c92ff39b822 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=56baba9 ]

AMQ-6875 - Use the correct destination for Virtual destination consumers
when using Virtual Topics
;;;","14/Dec/17 21:02;jira-bot;Commit 94aea677acab41fc8ba425c9fefc9c351fb31a94 in activemq's branch refs/heads/activemq-5.15.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=94aea67 ]

AMQ-6875 - Use the correct destination for Virtual destination consumers
when using Virtual Topics

(cherry picked from commit 56baba96c657d4e44b88955a964d6c92ff39b822)
;;;","14/Dec/17 21:22;cshannon;This is fixed.  Finding the correct topic requires a little bit of overhead but this is only done if useVirtualDestSubs is set to true and a new virtual topic demand advisory is sent (ie when the consumer comes online) so it shouldn't be run very often unless there are consumers constantly coming online/offline which would cause a lot more cpu in other places as well.  Also, the arrays that are being manipulated/copied are going to generally be very small as they are just the size of a tokenized destination name.  If for some reason this ends up being a performance hit then the resulting computed topics could be stored into a cache so they only have to get computed once per destination.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ client should send only generic platform details by default to server,AMQ-6871,13123193,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,cshannon,cshannon,cshannon,06/Dec/17 13:38,06/Dec/17 13:44,14/Jul/23 05:44,06/Dec/17 13:43,5.14.5,5.15.2,,,,,,,,5.14.6,5.15.3,5.16.0,,JMS client,,,,,0,,,,,,By default the OpenWire Java client should send generic platform details to the broker to specify the type of client.  A flag on the URI can be used to send more detailed information about the client to the broker for debugging purposes.,,cshannon,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Dec 06 13:42:56 UTC 2017,,,,,,,,,,,"0|i3nlr3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Dec/17 13:41;jira-bot;Commit 5fa0bbd5156f29d97dcf48fd9fdb6a0488a8df1a in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=5fa0bbd ]

AMQ-6871 - By default only send generic platform details

The default behavior by the OpenWire client will be to send generic
platform details to the server with a new flag to send more specific
information.
;;;","06/Dec/17 13:42;jira-bot;Commit d2e49be3a8f21d862726c1f6bc9e1caa6ee8b581 in activemq's branch refs/heads/activemq-5.15.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=d2e49be ]

AMQ-6871 - By default only send generic platform details

The default behavior by the OpenWire client will be to send generic
platform details to the server with a new flag to send more specific
information.

(cherry picked from commit 5fa0bbd5156f29d97dcf48fd9fdb6a0488a8df1a)
;;;","06/Dec/17 13:42;jira-bot;Commit 8ff18c5e254bf43395f2e0d7e3a1092b33ec6462 in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=8ff18c5 ]

AMQ-6871 - By default only send generic platform details

The default behavior by the OpenWire client will be to send generic
platform details to the server with a new flag to send more specific
information.

(cherry picked from commit 5fa0bbd5156f29d97dcf48fd9fdb6a0488a8df1a)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MQTT - topic name of the message,AMQ-6859,13117577,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,10/Nov/17 14:06,10/Nov/17 14:28,14/Jul/23 05:44,10/Nov/17 14:28,5.15.0,,,,,,,,,5.16.0,,,,MQTT,,,,,0,,,,,,"When using virtual topics and wildcards, a message sent to the subscriber will end up containing the topic name of the actual subscription. This was introduced with https://issues.apache.org/jira/browse/AMQ-6100, but as mqtt clients can't use JMSOriginalDestination it's useful not to change the original topic name, producer used to send a message to.",,dejanb,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Nov 10 14:27:11 UTC 2017,,,,,,,,,,,"0|i3mn8v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/Nov/17 14:27;jira-bot;Commit a0a23b99ccaf13d68853a308240a10807df2c6d8 in activemq's branch refs/heads/master from [~dejanb]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=a0a23b9 ]

[AMQ-6859] MQTT - topic name of the message
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix several durable subscription bridge propagation issues,AMQ-6858,13117322,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,09/Nov/17 16:20,16/Nov/17 12:52,14/Jul/23 05:44,16/Nov/17 12:52,,,,,,,,,,5.15.3,5.16.0,,,Broker,Network of Brokers,,,,0,,,,,,"While testing bridging together 3 or more brokers I discovered several problems specifically related to durable subscription propagation.  In general durable network subscriptions were not propagating properly when using more than 2 brokers either by not being created at all, not being removed, or even in some cases the same durable was being added twice and causing bridge failures.

This jira includes the following changes to fix these issues:
# Currently proxy network subscriptions are not eligible to be conduit.  For topics it doesn't make sense to not use conduit subscriptions so this should be changed.  For queue subscriptions this can sometimes be useful to conduit as well so I added a new flag for this.  Not allowing conduit topic proxy network subs was causing collisions with durables and breaking bridges
# The durable sync process should only ignore network durable subs for the specific bridge it is syncing, it should still be re-adding subs for other bridges otherwise they will get dropped
# On demand subscription removal, the tracked demand sub should be checked to see if it's a network demand sub and if it still has remote durable subs attached to it.  If it does they need to be cleaned up and removed
# Lastly, when creating a demand subscription the consumerId should only be changed if the consumer is for a direct bridge and not a proxy bridge otherwise the demand won't be properly tracked and removed later ",,brianjohnson,cshannon,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Nov 16 12:52:45 UTC 2017,,,,,,,,,,,"0|i3mlon:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Nov/17 16:23;jira-bot;Commit 96ce14b278fef9e5f428f1c3c07ce5c09fd8f9a8 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=96ce14b ]

AMQ-6858 - Fix several durable subscription bridge propagation issues

Durable network proxy subs will now be properly created across multiple
bridges when 3 or more brokers are used.  Demand will be properly synced
and removed.
;;;","09/Nov/17 16:24;cshannon;I will let CI run before closing this out to make sure nothing was broken.;;;","11/Nov/17 13:33;cshannon;Current CI looks good but I found a couple of other tweaks I need to make as I was doing some more testing locally.  I will push up another commit to modify this in the next few days.;;;","12/Nov/17 15:29;cshannon;The current approach I took seems to have a lot of edge case issues so I'll be re-working this.;;;","13/Nov/17 16:12;jira-bot;Commit 41211c78d19b545a2352584d3598346aa3705be4 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=41211c7 ]

AMQ-6858 - reworking durable subscription propagation fix

Significantly reworking previous fix so that the client id is properly
changed when tracking network proxy subscriptions. This makes it so
removal is done properly
;;;","14/Nov/17 20:27;jira-bot;Commit 3ca439cadaa8c40f506aa1ef683b36624d216254 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=3ca439c ]

AMQ-6858 - Allow configuration of the client Id token in network bridge

The client id token that is used to separate parts of a generated local
client id in a network bridge should be configurable so bridge names and
broker names can contain underscores if desired
;;;","14/Nov/17 23:33;cshannon;This is looking pretty good but there is still one more thing I think I need to fix which is handling the case of broker restarts and not just bridge restarts.  It seems to be not re-adding the subscription quite right so it isn't always being cleaned up later.  I will work on that before closing this out.;;;","15/Nov/17 13:57;jira-bot;Commit 6013441a9a7c4a13f7412d6d72638de0f420e6a3 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=6013441 ]

AMQ-6858 - handle resync of network proxy durables after restart

We need to properly handle the re-addition of network proxy durables
after the brokers are restarted so removal is done properly
;;;","15/Nov/17 14:22;jira-bot;Commit 2e3a7f6114fae1ffb9c19ee4af2f4541fdfc238e in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=2e3a7f6 ]

(AMQ-6858) - test fix
;;;","16/Nov/17 12:46;jira-bot;Commit 08aa5118ffcd8dfc4ec813d799a61ef1ee4421d1 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=08aa511 ]

(AMQ-6858) - add extra precautionary check for demand subs

also remove test that intermittently fails with timing issues
;;;","16/Nov/17 12:51;jira-bot;Commit d5a987b6a55233f9a83e108521746cf55d3eb32f in activemq's branch refs/heads/activemq-5.15.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=d5a987b ]

AMQ-6858 - Fix several durable subscription bridge propagation issues

Durable network proxy subs will now be properly created across multiple
bridges when 3 or more brokers are used.  Demand will be properly synced
and removed.

(cherry picked from commit 96ce14b278fef9e5f428f1c3c07ce5c09fd8f9a8)
;;;","16/Nov/17 12:51;jira-bot;Commit 97fe20a5721a39b70f841f303024fa30352d7336 in activemq's branch refs/heads/activemq-5.15.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=97fe20a ]

AMQ-6858 - reworking durable subscription propagation fix

Significantly reworking previous fix so that the client id is properly
changed when tracking network proxy subscriptions. This makes it so
removal is done properly

(cherry picked from commit 41211c78d19b545a2352584d3598346aa3705be4)
;;;","16/Nov/17 12:51;jira-bot;Commit 39d6321a4a2e9f929ba9cc451cafa8f244e3d716 in activemq's branch refs/heads/activemq-5.15.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=39d6321 ]

AMQ-6858 - Allow configuration of the client Id token in network bridge

The client id token that is used to separate parts of a generated local
client id in a network bridge should be configurable so bridge names and
broker names can contain underscores if desired

(cherry picked from commit 3ca439cadaa8c40f506aa1ef683b36624d216254)
;;;","16/Nov/17 12:51;jira-bot;Commit 247243c9c120f5d1c526330813dcc2b8079f52c3 in activemq's branch refs/heads/activemq-5.15.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=247243c ]

AMQ-6858 - handle resync of network proxy durables after restart

We need to properly handle the re-addition of network proxy durables
after the brokers are restarted so removal is done properly

(cherry picked from commit 6013441a9a7c4a13f7412d6d72638de0f420e6a3)
;;;","16/Nov/17 12:51;jira-bot;Commit 3285be60ede1ee6cf377d4d4eeca6fbff79d5dec in activemq's branch refs/heads/activemq-5.15.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=3285be6 ]

(AMQ-6858) - test fix

(cherry picked from commit 2e3a7f6114fae1ffb9c19ee4af2f4541fdfc238e)
;;;","16/Nov/17 12:51;jira-bot;Commit 1cfc9ff9a6d0682bd8fccf278924d15a908ccb31 in activemq's branch refs/heads/activemq-5.15.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=1cfc9ff ]

(AMQ-6858) - add extra precautionary check for demand subs

also remove test that intermittently fails with timing issues

(cherry picked from commit 08aa5118ffcd8dfc4ec813d799a61ef1ee4421d1)
;;;","16/Nov/17 12:52;cshannon;I'm going to close this as resolved.  Everything seems to be working as intended.  I merged the commits back to 5.15.3 as this is just a bunch of bug fixes and not a new feature.;;;",,,,,,,,,,,,,,,,,,,,,,,,
Immediate poison ACK after move from DLQ leads to message loss,AMQ-6847,13111681,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,alvinkwekel@gmail.com,alvinkwekel@gmail.com,24/Oct/17 12:59,19/Dec/17 15:21,14/Jul/23 05:44,27/Oct/17 10:42,5.14.5,5.15.2,,,,,,,,5.14.6,5.15.3,5.16.0,,,,,,,0,,,,,,"*Setup*
* setMaximumRedeliveries(0)
* Throw RuntimeException (Poison ACK) in consumer directly after receiving message

*Scenario*
* Move message from DLQ to original input queue (either web console or JMX retryMessages)
* Processing of message fails again directly
* The message is considered to be still on the DLQ on the rejection and ActiveMQ logs ""Not adding duplicate to DLQ""

Introducing a delay before throwing the exception in the client will get around the issue.

I initially noticed the issue when using an AMQP reject (Apache Qpid Proton) after which I reproduced similar conditions (instant poison ACK) it with the JMS client. The attached Java app will reproduce the issue on 5.14.5 and 5.15.2.

Might be related to AMQ-5752.
 
2017-10-24 13:38:11,275 | DEBUG | Not adding duplicate to DLQ: ID:xxx-32848-1508845049112-6:1:1:1:1, dest: queue://TEST | org.apache.activemq.broker.region.policy.AbstractDeadLetterStrategy | ActiveMQ Transport: tcp:///127.0.0.1:36360@61616",,alvinkwekel@gmail.com,cshannon,gtully,guido.schreuder@gmail.com,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Oct/17 12:59;alvinkwekel@gmail.com;FailingReceiver.java;https://issues.apache.org/jira/secure/attachment/12893740/FailingReceiver.java","24/Oct/17 13:13;alvinkwekel@gmail.com;dlq-redelivery-issue.tar.gz;https://issues.apache.org/jira/secure/attachment/12893743/dlq-redelivery-issue.tar.gz",,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Dec 19 15:21:20 UTC 2017,,,,,,,,,,,"0|i3lmyf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Oct/17 16:27;gtully;it seems the retry operation will need to lock down dispatch to the DLQ till it completes. This case shows that it can accept a message while an ack (and rollback of the audit) is pending.;;;","27/Oct/17 10:40;jira-bot;Commit 2ea5d1420bbbf90bd151e19a75e6ca33c773f1f4 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=2ea5d14 ]

[AMQ-6847] pause dispatch for message move to avoid redelivery with pending ack/remove/audit rollback
;;;","27/Oct/17 10:42;gtully;[~alvinkwekel@gmail.com] Thanks for the test - I was able to easily integrate into a unit test to validate. Having the receiving queue pause while the move is in progress sorts this issue.;;;","28/Oct/17 21:24;alvinkwekel@gmail.com;Great work [~gtully]. Thanks for the fix!;;;","31/Oct/17 09:18;guido.schreuder@gmail.com;Will this be backported to a 5.14.x maintenance release?
I'm asking since this is a blocking issue for us and upgrading would require some serious impact analysis.

BTW I'm following this bug up for the client [~alvinkwekel@gmail.com] reported this for
;;;","31/Oct/17 10:58;cshannon;This can be backported to 5.15.x for sure but there's not really any plans right now to do another 5.14.x release.  (this could change if enough people want a new release) Is it possible to upgrade to 5.15.x? (this requires Java 8).  

[~gtully] - Looks like this test broke on the latest run in CI: https://builds.apache.org/view/A/view/ActiveMQ/job/ActiveMQ-Java8/lastBuild/org.apache.activemq$activemq-unit-tests/testReport/org.apache.activemq.broker.virtual/VirtualTopicsAndDurableSubsTest/testMoveFromDLQImmediateDLQ/

It works for me locally though so maybe just need to tweak something ;;;","01/Nov/17 11:26;jira-bot;Commit 03b19b9da4d50c3bb8985f930e93596c7d994d26 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=03b19b9 ]

[AMQ-6847] limit the retry loop to one iteration overa all pending messages such that new additions are not replayed to avoid duplicates
;;;","01/Nov/17 11:30;gtully;[~cshannon] sorted that failure, it reproduced locally in a loop. It exposed another problem with retry where new additions would be retried twice leading do duplicate send suppression.;;;","19/Dec/17 08:58;guido.schreuder@gmail.com;Since there is now a [5.14.6|https://issues.apache.org/jira/projects/AMQ/versions/12340366] maintenance release planned; can I vote for this bug to be included in it?;;;","19/Dec/17 12:18;jira-bot;Commit eb9e50f3c9ea9de4777a6c6295ff8065aa3b4252 in activemq's branch refs/heads/activemq-5.15.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=eb9e50f ]

[AMQ-6847] pause dispatch for message move to avoid redelivery with pending ack/remove/audit rollback

(cherry picked from commit 2ea5d1420bbbf90bd151e19a75e6ca33c773f1f4)
;;;","19/Dec/17 12:18;jira-bot;Commit 0464d53233f95535dfaf8da6adcef9470cb52bdf in activemq's branch refs/heads/activemq-5.15.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=0464d53 ]

[AMQ-6847] limit the retry loop to one iteration overa all pending messages such that new additions are not replayed to avoid duplicates

(cherry picked from commit 03b19b9da4d50c3bb8985f930e93596c7d994d26)
;;;","19/Dec/17 12:19;jira-bot;Commit e62705aa9d7646108e42c321d390189aa26587ba in activemq's branch refs/heads/activemq-5.14.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e62705a ]

[AMQ-6847] pause dispatch for message move to avoid redelivery with pending ack/remove/audit rollback

(cherry picked from commit 2ea5d1420bbbf90bd151e19a75e6ca33c773f1f4)
;;;","19/Dec/17 12:19;jira-bot;Commit 185160c0daf955bf7ef43a9440cf5bc9672bd461 in activemq's branch refs/heads/activemq-5.14.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=185160c ]

[AMQ-6847] limit the retry loop to one iteration overa all pending messages such that new additions are not replayed to avoid duplicates

(cherry picked from commit 03b19b9da4d50c3bb8985f930e93596c7d994d26)
;;;","19/Dec/17 12:20;cshannon;I cherry picked into both 5.15.x and 5.14.x branches.;;;","19/Dec/17 12:28;jira-bot;Commit a5d32da8a143ad541cc484f10fac759c81449482 in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=a5d32da ]

AMQ-6847 - fix compilation for java 7
;;;","19/Dec/17 15:21;guido.schreuder@gmail.com;Thank you Christopher! Eagerly awaiting the release ;-);;;",,,,,,,,,,,,,,,,,,,,,,,,,
"Getting error: cannot find symbol  [javac] entry.setAdvisdoryForFastProducers(true); with ActiveMQ 5.13.0",AMQ-6841,13109143,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,,sunil.jingade@gmail.com,sunil.jingade@gmail.com,13/Oct/17 04:22,13/Oct/17 06:57,14/Jul/23 05:44,13/Oct/17 06:57,5.13.0,,,,,,,,,,,,,Broker,,,,,0,,,,,,"Getting 
error: cannot find symbol  [javac] entry.setAdvisdoryForFastProducers(true); with ActiveMQ 5.13.0
Note : Using new jar(activemq.broker-5.13.0.jar and client jar)


Which is working fine with activeMQ 5.5.1(activemq.core-5.5.1.jar)",,sunil.jingade@gmail.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,2017-10-13 04:22:33.0,,,,,,,,,,,"0|i3l82f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Getting error: cannot find symbol  [javac] entry.setAdvisdoryForFastProducers(true); with ActiveMQ 5.13.0",AMQ-6840,13109140,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,,sunil.jingade@gmail.com,sunil.jingade@gmail.com,13/Oct/17 03:59,13/Oct/17 06:56,14/Jul/23 05:44,13/Oct/17 06:56,5.13.0,,,,,,,,,,,,,Broker,,,,,0,,,,,,"Getting 
error: cannot find symbol  [javac] entry.setAdvisdoryForFastProducers(true); with ActiveMQ 5.13.0
Note : Using new jar(activemq.broker-5.13.0.jar and client jar)


Which is working fine with activeMQ 5.5.1(activemq.core-5.5.1.jar)",,sunil.jingade@gmail.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Oct 13 06:06:20 UTC 2017,,,,,,,,,,,"0|i3l81r:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Oct/17 06:06;sunil.jingade@gmail.com;Our implementation is something like this :
PolicyEntry entry = new PolicyEntry();
			entry.setAdvisdoryForFastProducers(true);
			entry.setAdvisoryForConsumed(true);
			entry.setAdvisoryForDelivery(true);
			entry.setAdvisoryForDiscardingMessages(true);
			entry.setAdvisoryForSlowConsumers(true);
			entry.setAdvisoryWhenFull(true);
			entry.setQueue("">"");
			entry.setMemoryLimit(m_queueMemoryLimit);
			entry.setOptimizedDispatch(true);
			entry.setProducerFlowControl(true);
			//entry.setMaxPageSize(10); //only used when persistent?
			entry.setLazyDispatch(true); 

And we are getting the method deprecated error.. I went through the activemq 5.13.0 APIs and i can see the setAdvisdoryForFastProducers.
Please guide us in fixing this issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ClassNotFoundException when install activemq-osgi bundle with Camel 2.19.x into OSGi container,AMQ-6834,13108482,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,davsclaus,xldai,xldai,11/Oct/17 03:27,16/Oct/17 13:26,14/Jul/23 05:44,16/Oct/17 13:26,5.15.0,,,,,,,,,5.15.2,5.16.0,,,OSGi/Karaf,,,,,0,,,,,,"Start karaf OSGi container, install Camel 2.19.2 and activemq-client feature (activemq-osgi bundle), then the ClassNotFoundException is thrown:
{code}
2017-10-10T10:12:30,012 | WARN  | pool-46-thread-2 | aries.blueprint.spring.Activator   57 | 291 - org.apache.aries.blueprint.spring - 0.4.0 | Error starting extension: org.apache.activemq.activemq-osgi/5.15.0
java.lang.ClassNotFoundException: org.apache.camel.osgi.CamelNamespaceHandler cannot be found by org.apache.activemq.activemq-osgi_5.15.0
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:461) [?:?]
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:372) [?:?]
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:364) [?:?]
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:161) [?:?]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) [?:?]
	at org.eclipse.osgi.internal.framework.EquinoxBundle.loadClass(EquinoxBundle.java:564) [?:?]
	at org.apache.aries.blueprint.spring.SpringExtension.start(SpringExtension.java:64) [291:org.apache.aries.blueprint.spring:0.4.0]
	at org.apache.felix.utils.extender.AbstractExtender$1.run(AbstractExtender.java:265) [291:org.apache.aries.blueprint.spring:0.4.0]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:?]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:?]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:?]
	at java.lang.Thread.run(Thread.java:745) [?:?]
{code}

From Camel 2.19.x, the camel-spring-dm feature/bundle has been totally removed, that's why the org.apache.camel.osgi.CamelNamespaceHandler couldn't be found anymore. 

{code}
http\://camel.apache.org/schema/osgi=org.apache.camel.osgi.CamelNamespaceHandler
{code}
There is still definition above in the spring.handlers of the activemq-osgi bundle. this may need to be removed or updated from spring.handlers.",Java 8,cshannon,davsclaus,jira-bot,xldai,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Oct 16 13:26:34 UTC 2017,,,,,,,,,,,"0|i3l45j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Oct/17 12:14;cshannon;[~davsclaus] or [~chris@die-schneider.net] - Can we just delete this line or do we need to update it to http\://camel.apache.org/schema/blueprint=org.apache.camel.blueprint.CamelNamespaceHandler;;;","11/Oct/17 13:12;davsclaus;Yeah not sure why those camel namespace handlers are there, I would assume you can remove all of them, so its only ActiveMQ left.;;;","15/Oct/17 08:21;jira-bot;Commit b27b4d9a3338945125cc64ead87ea65fba785fd5 in activemq's branch refs/heads/activemq-5.15.x from [~davsclaus]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b27b4d9 ]

AMQ-6834: activemq-osgi should not include camel namespace in spring as they have been removed from Camel. Only blueprint is supported
;;;","15/Oct/17 08:21;jira-bot;Commit 98a5e55a9676f6857aefed5a0d4a364ba4920375 in activemq's branch refs/heads/master from [~davsclaus]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=98a5e55 ]

AMQ-6834: activemq-osgi should not include camel namespace in spring as they have been removed from Camel. Only blueprint is supported
;;;","16/Oct/17 13:03;cshannon;[~davsclaus] - Don't we still want to keep the camel-spring stuff and only remove the osgi line?  I think it was only this line that was broken http\://camel.apache.org/schema/osgi=org.apache.camel.osgi.CamelNamespaceHandler

I think we still need to keep http\://camel.apache.org/schema/spring/camel-spring.xsd=camel-spring.xsd

There's a bunch of tests that refer to that schema and there is now a test failure because of the schema being removed:  https://builds.apache.org/view/A/view/ActiveMQ/job/ActiveMQ-Java8/lastBuild/org.apache.activemq$activemq-karaf-itest/testReport/org.apache.activemq.karaf.itest/ActiveMQBrokerNdCamelFeatureTest/test/;;;","16/Oct/17 13:18;davsclaus;You are welcome to add it back and see if that helps;;;","16/Oct/17 13:22;jira-bot;Commit 0c396a23e761c9371edacbdbddff891fcc0e3a04 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=0c396a2 ]

AMQ-6834 - Adding back in spring schemas for camel
;;;","16/Oct/17 13:25;jira-bot;Commit bc4da284f58230b6d900975aaf628627d6dea227 in activemq's branch refs/heads/activemq-5.15.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=bc4da28 ]

AMQ-6834 - Adding back in spring schemas for camel

(cherry picked from commit 0c396a23e761c9371edacbdbddff891fcc0e3a04)
;;;","16/Oct/17 13:26;cshannon;Ok I partially reverted your commit, I added back in the spring schema but I left out the osgi one that was broken.  I think this will sort it but we can wait for CI to confirm.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LDAPLogin does not close the Connection on success,AMQ-6833,13108264,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,laeubi,laeubi,10/Oct/17 10:57,27/Feb/20 16:01,14/Jul/23 05:44,27/Feb/20 16:01,5.14.2,,,,,,,,,5.15.12,5.16.0,,,Security/JAAS,,,,,0,,,,,,"Currently the DirContext is only closed in case of errors, in case of success the connection is held open until it times out.",,jira-bot,laeubi,,,,,,,,,,,,,,,,,,,,,,,,"jbonofre commented on pull request #476: [AMQ-6833] Cleanly close DirContext in LDAPLoginModule when the authentication is complete
URL: https://github.com/apache/activemq/pull/476
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/20 17:26;githubbot;600","jbonofre commented on pull request #476: [AMQ-6833] Cleanly close DirContext in LDAPLoginModule when the authentication is complete
URL: https://github.com/apache/activemq/pull/476
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Feb/20 16:00;githubbot;600",,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Feb 27 16:01:20 UTC 2020,,,,,,,,,,,"0|i3l2tr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Feb/20 16:00;jira-bot;Commit a1e87c60963d7ac736aad01786dc6026fe2c3ac3 in activemq's branch refs/heads/master from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=a1e87c6 ]

[AMQ-6833] Cleanly close DirContext in LDAPLoginModule when the authentication is complete
;;;","27/Feb/20 16:00;jira-bot;Commit 6e650841fd77a382cdc969b089168e40fa356e0c in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=6e65084 ]

Merge pull request #476 from jbonofre/AMQ-6833

[AMQ-6833] Cleanly close DirContext in LDAPLoginModule when the authentication is complete;;;","27/Feb/20 16:00;jira-bot;Commit 6e650841fd77a382cdc969b089168e40fa356e0c in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=6e65084 ]

Merge pull request #476 from jbonofre/AMQ-6833

[AMQ-6833] Cleanly close DirContext in LDAPLoginModule when the authentication is complete;;;","27/Feb/20 16:01;jira-bot;Commit e0f708439653dbedcd2e8ed81257a7392718add6 in activemq's branch refs/heads/activemq-5.15.x from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=e0f7084 ]

[AMQ-6833] Cleanly close DirContext in LDAPLoginModule when the authentication is complete

(cherry picked from commit a1e87c60963d7ac736aad01786dc6026fe2c3ac3)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broker fails to start complaining about missing/corrupt journal files,AMQ-6831,13107941,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,gtully,masc3d,masc3d,09/Oct/17 10:35,28/Nov/19 17:39,14/Jul/23 05:44,28/Nov/19 15:22,5.15.1,,,,,,,,,5.15.2,5.16.0,,,,,,,,0,,,,,,"{code}
2017-10-09 12:29:36.802 ERROR 4197 --- [pool-3-thread-1] org.deku.leoz.node.Application           : java.io.IOException: Detected missing/corrupt journal files referenced by:[0:ActiveMQ.DLQ] 3 messages affected.

java.lang.Error: java.io.IOException: Detected missing/corrupt journal files referenced by:[0:ActiveMQ.DLQ] 3 messages affected.
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1148) ~[na:1.8.0_131]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) ~[na:1.8.0_131]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_131]
Caused by: java.io.IOException: Detected missing/corrupt journal files referenced by:[0:ActiveMQ.DLQ] 3 messages affected.
	at org.apache.activemq.store.kahadb.MessageDatabase.recoverIndex(MessageDatabase.java:965) ~[activemq-kahadb-store-5.15.1.jar:5.15.1]
	at org.apache.activemq.store.kahadb.MessageDatabase$5.execute(MessageDatabase.java:717) ~[activemq-kahadb-store-5.15.1.jar:5.15.1]
	at org.apache.activemq.store.kahadb.disk.page.Transaction.execute(Transaction.java:779) ~[activemq-kahadb-store-5.15.1.jar:5.15.1]
	at org.apache.activemq.store.kahadb.MessageDatabase.recover(MessageDatabase.java:714) ~[activemq-kahadb-store-5.15.1.jar:5.15.1]
	at org.apache.activemq.store.kahadb.MessageDatabase.open(MessageDatabase.java:473) ~[activemq-kahadb-store-5.15.1.jar:5.15.1]
	at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:493) ~[activemq-kahadb-store-5.15.1.jar:5.15.1]
	at org.apache.activemq.store.kahadb.MessageDatabase.doStart(MessageDatabase.java:297) ~[activemq-kahadb-store-5.15.1.jar:5.15.1]
	at org.apache.activemq.store.kahadb.KahaDBStore.doStart(KahaDBStore.java:219) ~[activemq-kahadb-store-5.15.1.jar:5.15.1]
	at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:55) ~[activemq-client-5.15.1.jar:5.15.1]
	at org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter.doStart(KahaDBPersistenceAdapter.java:232) ~[activemq-kahadb-store-5.15.1.jar:5.15.1]
{code}

Downgrading to 5.15.0 resolves the problem.
This is an embedded broker setup, using

{code:none}
        val pa = brokerService.persistenceAdapter as KahaDBPersistenceAdapter
        pa.isCheckForCorruptJournalFiles = true
        pa.isIgnoreMissingJournalfiles = false
{code}",,cshannon,gtully,jira-bot,masc3d,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6771,,,,,,,,"09/Oct/17 20:58;masc3d;kahadb.zip;https://issues.apache.org/jira/secure/attachment/12891125/kahadb.zip",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Nov 28 17:39:23 UTC 2019,,,,,,,,,,,"0|i3l0un:",9223372036854775807,Regression,,,,,,,,,,,,,,,,,,,,"09/Oct/17 11:45;cshannon;[~gtully] - Do you think this issue is related to AMQ-6771 ?;;;","09/Oct/17 12:14;gtully;[~cshannon] I hope not. I would need to check the journal files to verify the corrupt locations. A sanity check to see if a current snapshot has the same determination may help narrow this down.

The logs should indicate the journal locations in question? How do we know there is no corruption present at the moment?;;;","09/Oct/17 12:54;cshannon;Yeah I just find it interesting that the description says downgrading to 5.15.0 fixes the issue.  

[~masc3d], are you able to upload a small KahaDB store that reproduces the issue?;;;","09/Oct/17 16:41;masc3d;yes, that would be possible, as it's my local dev db, it shouldn't contain anything sensitive.

I also found that this issue is related to the preallocation kahadb settings:
{code}
        pa.preallocationScope = Journal.PreallocationScope.ENTIRE_JOURNAL_ASYNC.name
        pa.preallocationStrategy = Journal.PreallocationStrategy.ZEROS.name
{code}

which I enabled for performance reasons.

Disabling preallocation will yield both
{code}
2017-10-09 18:34:57.512  WARN 10617 --- [pool-3-thread-1] o.a.a.store.kahadb.MessageDatabase       : Cannot recover message audit

java.io.IOException: Invalid location size: 1:28, size: 0
	at org.apache.activemq.store.kahadb.disk.journal.DataFileAccessor.readRecord(DataFileAccessor.java:88) ~[activemq-kahadb-store-5.15.1.jar:5.15.1]
	at org.apache.activemq.store.kahadb.disk.journal.Journal.read(Journal.java:936) ~[activemq-kahadb-store-5.15.1.jar:5.15.1]
	at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:1151) [activemq-kahadb-store-5.15.1.jar:5.15.1]
	at org.apache.activemq.store.kahadb.MessageDatabase.recoverProducerAudit(MessageDatabase.java:784) [activemq-kahadb-store-5.15.1.jar:5.15.1]
	at org.apache.activemq.store.kahadb.MessageDatabase.recover(MessageDatabase.java:674) [activemq-kahadb-store-5.15.1.jar:5.15.1]
	at org.apache.activemq.store.kahadb.MessageDatabase.open(MessageDatabase.java:473) [activemq-kahadb-store-5.15.1.jar:5.15.1]
	at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:493) [activemq-kahadb-store-5.15.1.jar:5.15.1]
	at org.apache.activemq.store.kahadb.MessageDatabase.doStart(MessageDatabase.java:297) [activemq-kahadb-store-5.15.1.jar:5.15.1]
	at org.apache.activemq.store.kahadb.KahaDBStore.doStart(KahaDBStore.java:219) [activemq-kahadb-store-5.15.1.jar:5.15.1]
{code}
and subsequently
{code}
2017-10-09 18:34:57.513  WARN 10617 --- [pool-3-thread-1] o.a.a.store.kahadb.MessageDatabase       : Cannot recover ackMessageFileMap

java.io.IOException: Invalid location size: 1:431, size: 0
	at org.apache.activemq.store.kahadb.disk.journal.DataFileAccessor.readRecord(DataFileAccessor.java:88) ~[activemq-kahadb-store-5.15.1.jar:5.15.1]
	at org.apache.activemq.store.kahadb.disk.journal.Journal.read(Journal.java:936) ~[activemq-kahadb-store-5.15.1.jar:5.15.1]
	at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:1151) [activemq-kahadb-store-5.15.1.jar:5.15.1]
	at org.apache.activemq.store.kahadb.MessageDatabase.recoverAckMessageFileMap(MessageDatabase.java:805) [activemq-kahadb-store-5.15.1.jar:5.15.1]
	at org.apache.activemq.store.kahadb.MessageDatabase.recover(MessageDatabase.java:675) [activemq-kahadb-store-5.15.1.jar:5.15.1]
	at org.apache.activemq.store.kahadb.MessageDatabase.open(MessageDatabase.java:473) [activemq-kahadb-store-5.15.1.jar:5.15.1]
	at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:493) [activemq-kahadb-store-5.15.1.jar:5.15.1]
	at org.apache.activemq.store.kahadb.MessageDatabase.doStart(MessageDatabase.java:297) [activemq-kahadb-store-5.15.1.jar:5.15.1]
	at org.apache.activemq.store.kahadb.KahaDBStore.doStart(KahaDBStore.java:219) [activemq-kahadb-store-5.15.1.jar:5.15.1]
	at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:55) [activemq-client-5.15.1.jar:5.15.1]
	at org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter.doStart(KahaDBPersistenceAdapter.java:232) [activemq-kahadb-store-5.15.1.jar:5.15.1]
{code}

but the broker will at least start.
;;;","09/Oct/17 19:09;gtully;[~masc3d] I had a quick peek at the kahadb.zip but there are no journal files in there. Can you check. Also, if possible describe simple steps to reproduce. I flipped the bits to enable PreallocationStrategy.ZEROS on a few of the recovery unit tests and did not reproduce.;;;","09/Oct/17 21:01;masc3d;yes sorry, checked again and replaced the archive with the full kahadb folder;;;","10/Oct/17 16:24;jira-bot;Commit f9899922783e0e94de030f4c867e5d48a3d869a9 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=f989992 ]

[AMQ-6831, AMQ-6771] fix up recovery check to ensure full batch is available in memory, regression from AMQ-6771
;;;","10/Oct/17 16:26;gtully;This is a regression - AMQ-6771 batched the recovery reads but in this case the alignment on a batch record meant a the batch buffer was not refilled. Disabling the recoveryCheck will avoid this problem but it is a serious bug.;;;","10/Oct/17 16:33;jira-bot;Commit 0f544fd54bde5d39f5e6e19d189580884740768b in activemq's branch refs/heads/activemq-5.15.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=0f544fd ]

[AMQ-6831, AMQ-6771] fix up recovery check to ensure full batch is available in memory, regression from AMQ-6771

(cherry picked from commit f9899922783e0e94de030f4c867e5d48a3d869a9)
;;;","10/Oct/17 16:50;cshannon;Thanks for taking a look Gary, when this is good to go I can do a 5.15.2 release since this is a serious issue.;;;","10/Oct/17 18:57;gtully;[~masc3d] thanks for the kahadb.zip it made it easy to track down.

[~cshannon] it should be sorted however another set of eyes on the change set for AMQ-6831 would be valuable. Thanks.;;;","10/Oct/17 23:21;jira-bot;Commit e793260573f30365572a1e7507cd98e9ed17b1b5 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e793260 ]

[AMQ-6831, AMQ-6771] trigger eofexception on read -1 - AMQ6522Test
;;;","11/Oct/17 11:44;gtully;There is a workaround but it is temporary. Here is the background, there is a problem with AMQ-6771 that speeds up the checkForCorruptJournalFiles. On a restart, it is possible that the check will report corruption when there is none. It is independent of the preallocation strategy or preallocation scope. 
If ignoreMissingJournalFiles=true is configured, this can lead to unnecessary loss of data, otherwise the broker will fail to start and report the corruption and there will be no loss.
If there is no reason to suspect corruption it may be this defect. The defect relates to the parsing of a batch of journal data. If the journal record header crosses a batch boundary at a particular point, the defect can happen. 
Disabling the checkForCorruptJournalFiles will avoid the problem but also changing or varying the read batch size may avoid the problem.
The read batch size is controlled by journalMaxWriteBatchSize which default to 4mb. Setting that to 10mb or some larger number may help. It is a little random but the window for this to occur is quite small. If the journalMaxWriteBatchSize is half of of the journalSize (and there is enough memory) then two reads will parse a journal file and the chance of a batch being on a boundary and hitting this defect is very small.;;;","11/Oct/17 11:49;jira-bot;Commit d66e96e8bc7be51a93835149e132204407d79b5f in activemq's branch refs/heads/activemq-5.15.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=d66e96e ]

[AMQ-6831, AMQ-6771] trigger eofexception on read -1 - AMQ6522Test

(cherry picked from commit e793260573f30365572a1e7507cd98e9ed17b1b5)
;;;","11/Oct/17 11:50;cshannon;[~gtully] - The fix looks good to me, I ran through some of my tests and everything seemed fine so far;;;","28/Nov/19 12:06;masc3d;This issue is apparently regressing in 5.15.11. 

After upgrading from 5.15.10 to 5.15.11 broker complains about missing / corrupt journal files on every restart.

Downgrading to 5.15.10 resolves the issue.;;;","28/Nov/19 12:07;masc3d;regression 5.15.10 -> 5.15.11;;;","28/Nov/19 12:51;cshannon;[~masc3d] - if you think there is a regression here it would be better to open a new Jira and leave this one closed to prevent confusion and then link the two;;;","28/Nov/19 13:12;cshannon;Also looking at the release notes nothing stands out that would cause a regression as nothing touches KahaDB so some investigation would be needed to see if there really is an issue

[https://issues.apache.org/jira/secure/ReleaseNote.jspa?projectId=12311210&version=12345958];;;","28/Nov/19 13:24;masc3d;`CallerBufferingDataFileAppender` of kahadb was actually touched in 5.15.11.

Im quite positive yes, I could replicate this in productive environment 100% on half a dozen restarts while this issue was never seen before (since 5.15.1) and downgrading resolves it instantly.

 ;;;","28/Nov/19 13:47;cshannon;Hmm, it looks like this commit was added [https://github.com/apache/activemq/commit/0262338687d7bf811ad9ee0620f77806bd7e08ad] with no Jira which is a big problem as we then it's hard to track this stuff as seen here.

[~gtully] - What do you think about this?

I'm out of the office until Monday but I can take a look next week at it and see if I can reproduce if you don't have time to peek at it.  If there is a regression here I'd certainly like to get it fixed ASAP to prevent breaking people's data stores.;;;","28/Nov/19 15:19;robbie;The commit was from https://github.com/apache/activemq/pull/348, but it still didn't have a JIRA, tests, or any description of / reason for the change to made.

As Christopher already noted, a new JIRA should be raised for discussion of the new issue noted, and linked back to this JIRA if desired...though it seems so far like it might be a totally different issue, and if so isnt really related at all. I'll close this one again now.;;;","28/Nov/19 15:34;masc3d;[~robbie] depends how you look at it. functionally and referring to description and stack trace this is totally a regression.

if you require separate jira issues in order to group your commits, that's up to you.
you're now aware of the issue, feel free to spawn as many issues as you prefer.;;;","28/Nov/19 15:45;cshannon;I added a message to the PR asking if the original person could provide some context as to what the purpose of the commit was for.  Otherwise I'm just inclined to open a new Jira and then revert the change as there's no clear indication why it was made or what it was trying to solve and no tests.;;;","28/Nov/19 15:58;gtully;[~cshannon] I don't think that PR is related to the problem b/c that class (that the pr modifies) is only used if a system property is in play that defaults to false, it was an experiment that failed to bare fruit. 
see: https://github.com/apache/activemq/blob/bf8eb08acaeec653d04daa0b8b6dd889ef990bed/activemq-kahadb-store/src/main/java/org/apache/activemq/store/kahadb/disk/journal/Journal.java#L251

Unless the -Dorg.apache.kahadb.journal.CALLER_BUFFER_APPENDER=true is set, that code is not in play. And if it is, unsetting org.apache.kahadb.journal.CALLER_BUFFER_APPENDER is the way to go.;;;","28/Nov/19 16:12;cshannon;[~gtully] - Thanks for the context...that is the only KahaDB commit I see between 5.15.10 and 5.15.11 so if that is not causing a problem then I don't see what else would cause a possible regression.

[~masc3d] - Have you set the -Dorg.apache.kahadb.journal.CALLER_BUFFER_APPENDER=true property in your setup to true?;;;","28/Nov/19 17:39;masc3d;good call, no we don't set this and I double checked that `CallerDataFileAppender` is actually not used / instantiated in our build.

still can't believe seeing this several times in a row on orderly restart with 5.15.11 and then not at all with 5.15.10 could be coincidence.

I marked this TODO for more in-depth tests / isolation but it could take a while until I come up with sth.;;;",,,,,,,,,,,,,,
PrefetchExtension growth with transacted consumers,AMQ-6824,13105037,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,26/Sep/17 09:59,01/Jun/18 11:48,14/Jul/23 05:44,27/Sep/17 13:54,5.15.0,,,,,,,,,5.16.0,,,,Broker,,,,,0,,,,,,"With a transacted consumer on either a topic or queue the prefetch extension increments only. This leads to flow control failing b/c the subscription is never full. Messages can accumulate on the subscription dispatch channel if the consumer is blocked or slow. As a result, memory usage limits can be exceeded for topics.
There is a similar issue with client_ack mode and prefetch.",,gtully,jira-bot,lionel.cons,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6422,,,,,,,,AMQ-6577,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jun 01 11:48:17 UTC 2018,,,,,,,,,,,"0|i3kjk7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Sep/17 10:00;gtully;AMQ-6577 - used expiry processing as the trigger but prefetchExtension should be used for client_ack and transactions to allow batches to exceed the configured prefetch. Re worked the test to address that.;;;","26/Sep/17 10:02;gtully;AMQ-6422 - brought the flawed prefetch logic from queue subscriptions to topic subscriptions.;;;","26/Sep/17 10:30;jira-bot;Commit 41a100766c19655816d575841ba559d33c63313d in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=41a1007 ]

[AMQ-6824] - fix up prefetchExtension growth on transaction completion and delivered ack and tie in boolean usePrefetchExtension
;;;","26/Sep/17 18:35;jira-bot;Commit 26788f5fd7109a3cf30210744b5900f84a8eafd9 in activemq's branch refs/heads/activemq-5.15.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=26788f5 ]

[AMQ-6824] - fix up prefetchExtension growth on transaction completion and delivered ack and tie in boolean usePrefetchExtension

(cherry picked from commit 41a100766c19655816d575841ba559d33c63313d)
;;;","28/Sep/17 10:36;jira-bot;Commit 578eacab455d82989da2ac26980379a04eeb2ad0 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=578eaca ]

[AMQ-6824] remove time dependency in test assertion
;;;","28/Sep/17 13:40;jira-bot;Commit fe82d02e381a166f67c9da23004f3a8739b18258 in activemq's branch refs/heads/activemq-5.15.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=fe82d02 ]

[AMQ-6824] remove time dependency in test assertion

(cherry picked from commit 578eacab455d82989da2ac26980379a04eeb2ad0)
;;;","01/Jun/18 11:48;jira-bot;Commit 63b71affbc22f2186ec6b02baeed34a77cbeb27b in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=63b71af ]

AMQ-6824 - harden test
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
No message received with prefetch 0 over http,AMQ-6823,13104782,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,john123,john123,25/Sep/17 13:33,31/Dec/17 07:16,14/Jul/23 05:44,25/Sep/17 17:28,5.14.5,,,,,,,,,5.15.1,5.16.0,,,Connector,,,,,0,,,,,,"The http connector doesn't seem to work with prefetchSize 0.
It works with tcp connector.

AMQ configuration:
{code}
        <transportConnectors>
            <transportConnector name=""openwire"" uri=""tcp://0.0.0.0:61616""/>
            <transportConnector name=""http"" uri=""http://0.0.0.0:8080""/>
        </transportConnectors>
{code}
Code to reproduce:
{code}
	String brokerURL = ""http://localhost:8080"";
	//String brokerURL = ""tcp://localhost:61616"";
	ActiveMQConnectionFactory cf = new ActiveMQConnectionFactory(brokerURL);
	ActiveMQPrefetchPolicy pp = new ActiveMQPrefetchPolicy();
	pp.setQueuePrefetch(0);
	cf.setPrefetchPolicy(pp);
	Connection con = cf.createConnection();
	con.start();
	Session s = con.createSession(false, Session.AUTO_ACKNOWLEDGE);
	Destination d = s.createQueue(""test"");
	MessageProducer p = s.createProducer(d);
	MessageConsumer c = s.createConsumer(d);
	Message m = new ActiveMQTextMessage();
	m.setStringProperty(""test"", ""test"");
	p.send(m);
	c.receive();
	p.close();
	s.close();
	con.stop();
{code}","Windows, Linux",jira-bot,john123,tbain98,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6877,,,,,,,,,,UIMA-5562,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Sun Dec 31 07:16:44 UTC 2017,,,,,,,,,,,"0|i3khzr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Sep/17 17:26;jira-bot;Commit a21dd40527d1576c8fa0029ca2996961af12bb9a in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=a21dd40 ]

AMQ-6823 Ensure that MessagePull is works across HTTP transport

The MessagePull command needs to have the transients initialized such
that the pull operation works across transports that use XStream or
other marshaling that doesn't performs custom serialization. ;;;","25/Sep/17 17:27;jira-bot;Commit eccbd75bcffdb1ae0e160e06383f6a2dffca6e88 in activemq's branch refs/heads/activemq-5.15.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=eccbd75 ]

AMQ-6823 Ensure that MessagePull is works across HTTP transport

The MessagePull command needs to have the transients initialized such
that the pull operation works across transports that use XStream or
other marshaling that doesn't performs custom serialization.
(cherry picked from commit a21dd40527d1576c8fa0029ca2996961af12bb9a)
;;;","26/Sep/17 09:38;john123;Bugfix tested successfully.;;;","31/Dec/17 07:16;tbain98;Do we believe that this was introduced in 5.14.5 as indicated by the Affects Version(s) field, or do we think this goes further back in the version history? Maintaining an accurate Affects Version value helps users know whether their version of the broker is believed to be prone to a bug or not, so if we believe this goes further back (as implied by AMQ-6877), it would be great if we could update the field.

I looked at the fix and wasn't clear on why that would relate to the behavior described, which made it impossible to figure out at which point the problem was introduced, otherwise I'd do this myself. So hopefully [~tabish121] can shed some light on when the problem was introduced.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NIO transport should properly handle ClosedChannelException,AMQ-6820,13103906,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,cshannon,cshannon,cshannon,21/Sep/17 12:13,11/Jan/18 12:26,14/Jul/23 05:44,21/Sep/17 12:15,5.15.0,,,,,,,,,5.15.1,5.16.0,,,Transport,,,,,0,,,,,,The NIO transport does not properly handle a ClosedChannelException when it happens inside the SelectorSelection class.  Instead of properly disposing of the transport it calls System.out.println() for the exception and keeps the transport alive.  This caused a NPE later when the enable() method was called because the SelectionKey was null.  The fix is to call onError() when the ClosedChannelException occurs so things get cleaned up and logged properly.,,cshannon,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6884,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Sep 21 12:16:38 UTC 2017,,,,,,,,,,,"0|i3kclr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Sep/17 12:14;jira-bot;Commit 6e33507bf2fc2acea9f61e230cf8e2a9cbccc3ce in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=6e33507 ]

AMQ-6820 - Properly handle ClosedChannelException

When a ClosedChannelException occurs inside SelectorSelection properly
call the transport listener onError() method to handle cleanup and
logging.
;;;","21/Sep/17 12:16;jira-bot;Commit 3ef457125b11decc4e9b03dfbbc3e926725ff91c in activemq's branch refs/heads/activemq-5.15.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=3ef4571 ]

AMQ-6820 - Properly handle ClosedChannelException

When a ClosedChannelException occurs inside SelectorSelection properly
call the transport listener onError() method to handle cleanup and
logging.

(cherry picked from commit 6e33507bf2fc2acea9f61e230cf8e2a9cbccc3ce)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KahaDB checkpoint needs to fail fast in the event of journal write failure,AMQ-6815,13103273,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,19/Sep/17 15:48,02/May/23 14:34,14/Jul/23 05:44,11/Jan/18 13:06,5.15.0,,,,,,,,,5.15.3,5.16.0,,,KahaDB,,,,,0,,,,,,"KahaDB checkpoint does some async updated to the journal and syncs to the index. However the async journal updates can error out and not get reported leading to the index metadata being stale. This can lead to reading an invalid location on restart which may result in full recovery of the index.

Any exception from the async store needs to cause the checkpoint to fail.

In addition, on reading a corrupt location, we can do a sanity check to avoid a potential OOM by validating the size before allocation.",,cshannon,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-9254,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jan 11 13:25:55 UTC 2018,,,,,,,,,,,"0|i3k8pj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/Sep/17 15:51;jira-bot;Commit 8c3ef6cadb46d9694c68aa649a7952eb1612279f in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=8c3ef6c ]

[AMQ-6815] have checkpoint validate status of async writes to avoid stale metadata and validate location size on read to avoid potential oom on restart
;;;","19/Sep/17 16:01;jira-bot;Commit b5f7c15b2518334d338f9fad54696f62ba4c268b in activemq's branch refs/heads/activemq-5.15.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b5f7c15 ]

[AMQ-6815] have checkpoint validate status of async writes to avoid stale metadata and validate location size on read to avoid potential oom on restart

(cherry picked from commit 8c3ef6cadb46d9694c68aa649a7952eb1612279f)
;;;","11/Jan/18 12:57;jira-bot;Commit ec6fa190999160676cab900038b268b2d40a4d5c in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=ec6fa19 ]

[AMQ-6815] rework to drop the batch reference from Location such that batches are free for gc when index pages are agressively cached
;;;","11/Jan/18 13:03;cshannon;[~gtully] - thanks for fixing this memory leak...I actually saw an OOM error because of this a couple weeks ago before vacation but I didn't get a chance to get back to investigating it yet.  ;;;","11/Jan/18 13:25;jira-bot;Commit d8f8ae9f925b905968c51b386049c5b2d9b6b2d0 in activemq's branch refs/heads/activemq-5.15.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=d8f8ae9 ]

[AMQ-6815] rework to drop the batch reference from Location such that batches are free for gc when index pages are agressively cached

(cherry picked from commit ec6fa190999160676cab900038b268b2d40a4d5c)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
handle edge cases when driving transport#tick(now) with nanoTime derived values,AMQ-6813,13102623,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,robbie,robbie,robbie,15/Sep/17 16:44,15/Sep/17 17:19,14/Jul/23 05:44,15/Sep/17 17:19,,,,,,,,,,5.15.1,5.16.0,,,AMQP,,,,,0,,,,,,,,jira-bot,robbie,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,PROTON-1583,,,,,,,,,,AMQ-6812,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Sep 15 17:15:52 UTC 2017,,,,,,,,,,,"0|i3k4qn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Sep/17 16:59;jira-bot;Commit f82eccd2f504b59c2e98ba8273e28f4d7a2a8698 in activemq's branch refs/heads/master from [~gemmellr]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=f82eccd ]

AMQ-6813: update tick deadline handling to account for potential to be negative due to using nanoTime derived values, plus other edge case protections
;;;","15/Sep/17 17:15;jira-bot;Commit 4f6326f4fb35867b6d83c624a947a4510d0f674f in activemq's branch refs/heads/activemq-5.15.x from [~gemmellr]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=4f6326f ]

AMQ-6813: update tick deadline handling to account for potential to be negative due to using nanoTime derived values, plus other edge case protections

(cherry picked from commit f82eccd2f504b59c2e98ba8273e28f4d7a2a8698)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ReduceMemoryFootprint does not work on messages with no body,AMQ-6811,13102580,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,15/Sep/17 14:10,15/Sep/17 16:22,14/Jul/23 05:44,15/Sep/17 14:12,5.15.0,,,,,,,,,5.15.1,5.16.0,,,Broker,,,,,0,,,,,,"I was debugging an out of memory error on a broker that was caused by the unmarshalled message properties being in memory even though the reduceMemoryFootprint flag was set to true so this map should have been cleared after send.  

Upon further investigation I realized it was because the isMarshalled() method on a message only checks if the marshalled content is not null however the check should actually be if the content is not null OR if the unmarshalled value is null/empty (ie no body set at all).  This same check is already done properly for header properties and just needs to be extended for the body.",,cshannon,jira-bot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Sep 15 16:22:23 UTC 2017,,,,,,,,,,,"0|i3k4hb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Sep/17 14:12;jira-bot;Commit f82993d9c2315d7ea6c35d164f7665987cdbe1b8 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=f82993d ]

AMQ-6811 - fix reduceMemoryFootprint when no message body

ReduceMemoryFootprint will now properly detect that a message is
marshalled even if there is no message body so the headers can be
cleared out after message send
;;;","15/Sep/17 14:12;jira-bot;Commit 01f6aeb0128263408522981cadefd41c9216bfa8 in activemq's branch refs/heads/activemq-5.15.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=01f6aeb ]

AMQ-6811 - fix reduceMemoryFootprint when no message body

ReduceMemoryFootprint will now properly detect that a message is
marshalled even if there is no message body so the headers can be
cleared out after message send

(cherry picked from commit f82993d9c2315d7ea6c35d164f7665987cdbe1b8)
;;;","15/Sep/17 16:16;tabish;Your unit test somehow ended up in src/main/java ...  which is messing up builds from the command line :)

https://github.com/apache/activemq/blob/master/activemq-client/src/main/java/org/apache/activemq/command/ActiveMQMessageIsMarshalledTest.java;;;","15/Sep/17 16:21;jira-bot;Commit 6b27708ae15818d025e9f65a1bf8d54a31e01045 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=6b27708 ]

AMQ-6811 - moving ActiveMQMessageIsMarshalled test to src/test/java
;;;","15/Sep/17 16:22;jira-bot;Commit 2015888ad7eb24a5888e6e55a70de33bbb9854a5 in activemq's branch refs/heads/activemq-5.15.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=2015888 ]

AMQ-6811 - moving ActiveMQMessageIsMarshalled test to src/test/java

(cherry picked from commit 6b27708ae15818d025e9f65a1bf8d54a31e01045)
;;;","15/Sep/17 16:22;cshannon;Thanks, I moved it to the right location.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prevent unnecessary journal replay when the producer audit is unmodified on broker stop,AMQ-6810,13102556,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,15/Sep/17 12:38,15/Sep/17 12:53,14/Jul/23 05:44,15/Sep/17 12:53,5.15.0,,,,,,,,,5.16.0,,,,Broker,Message Store,,,,0,,,,,,"On an idle broker stop, two artefacts are synced to the journal via checkpoint, one restart the recovery checking verifies the ordered replay of these artefacts. However if there has been no message send since the last update the audit artefact is not written and recovery believes in error that it needs to replay records. This process creates unnecessary logging and can slow restart along with causing alarm.

{code}INFO: Recovery replayed X operations from the journal in Y seconds.{code}",,gtully,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3833,,,,,,,,AMQ-6277,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Sep 15 12:53:38 UTC 2017,,,,,,,,,,,"0|i3k4bz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Sep/17 12:53;gtully;Commit a359d8152cfee6f2fe95d34fd1b2296f6ed2670c in activemq's branch refs/heads/master from Gary Tully
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=a359d81 ]
AMQ-6277 take account of producer audit not being updatated on recovery check, avoid unnecessary partial journal replay;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq-client returns unexpected length code on first read from stream containing empty byte array,AMQ-6809,13102496,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,jdanek,jdanek,15/Sep/17 08:06,20/Sep/17 19:51,14/Jul/23 05:44,20/Sep/17 19:51,5.14.5,,,,,,,,,5.15.1,5.16.0,,,JMS client,,,,,0,,,,,,"Consider this code

{code}
	private void testEmptyBufferInput() throws JMSException {
		byte[] readList = new byte[BYTE_LIST.length - 1];
		byte[] emptyList = {};
		LOG.info(""Streaming BYTE_LIST message testing EMPTY buffer input"");
		stream.writeBytes(emptyList);
		stream.reset();
		LOG.info(""Reading BYTE_LIST message testing EMPTY buffer input"");
		final int IS_EMPTY = 0;
		assertThat(stream.readBytes(readList)).isEqualTo(IS_EMPTY);
	}
{code}

The code above works with qpid-jms, but fails with activemq-client on the {{assertThat}} with error message {{java.lang.AssertionError: Not true that <-1> is equal to <0>}}. Judging by documentation http://docs.oracle.com/javaee/6/api/javax/jms/StreamMessage.html#readBytes(byte[]), I think that qpid-jms behavior is correct and what activemq-client does is a bug.",,jdanek,jira-bot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,QPIDJMS-325,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Sep 20 19:51:03 UTC 2017,,,,,,,,,,,"0|i3k3yn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Sep/17 15:04;tabish;Could you provide a more complete unit test, there's a lot of things not defined or a bit unclear here.  The name ""stream"" implies something other than a BytesMessage so it would be good to have a complete test.  ;;;","15/Sep/17 15:22;jdanek;Sorry, that was not very useful code to provide. Here it is in full.

{code}
import org.apache.activemq.ActiveMQConnectionFactory;
import org.junit.Test;

import javax.jms.*;

import static com.google.common.truth.Truth.assertThat;

public class EmptyBufferInputTest {
    @Test
    public void testEmptyBufferInput() throws JMSException {
        ConnectionFactory connectionFactory = new ActiveMQConnectionFactory(""tcp://127.0.0.1:61616"");
        Connection connection = connectionFactory.createConnection();
        Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
        final byte[] BYTE_LIST = {1, 2, 4};
        StreamMessage stream = session.createStreamMessage();
        stream.clearBody();
        byte[] readList = new byte[BYTE_LIST.length - 1];
        byte[] emptyList = {};
        stream.writeBytes(emptyList);
        stream.reset();
        final int IS_EMPTY = 0;
        assertThat(stream.readBytes(readList)).isEqualTo(IS_EMPTY);
    }
}
{code}

{noformat}
java.lang.AssertionError: Not true that <-1> is equal to <0>

	at com.redhat.mqe.jms.main.EmptyBufferInputTest.testEmptyBufferInput(EmptyBufferInputTest.java:24)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
{noformat};;;","15/Sep/17 15:24;jdanek;Now, let me check what is valid for StreamMessage and why I linked BytesMessage.

edit: done checking, I think the Jira still stands. StreamMessage and BytesMessage should behave the same in this aspect.;;;","15/Sep/17 15:26;tabish;Ok, that helps, I am trying to figure out which we are talking about as that has implications on what the expected behavior is :);;;","20/Sep/17 19:50;jira-bot;Commit 61d3231d3647fc136b12fd88a9165b783e36585b in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=61d3231 ]

AMQ-6809 Fix issue where stream message getBytes returned wrong value

StreamMessage implementation should return zero when the full value of a
written byte array has been consumed before then returning -1 on the
next read.  Ands fix and additional testing of ActiveMQStreamMessage;;;","20/Sep/17 19:51;jira-bot;Commit 592b31343e62d909be52be79845a55833813c2ce in activemq's branch refs/heads/activemq-5.15.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=592b313 ]

AMQ-6809 Fix issue where stream message getBytes returned wrong value

StreamMessage implementation should return zero when the full value of a
written byte array has been consumed before then returning -1 on the
next read.  Ands fix and additional testing of ActiveMQStreamMessage
(cherry picked from commit 61d3231d3647fc136b12fd88a9165b783e36585b)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ConnectionFactory options trafficClass and wireFormat.prefixPacketSize are not accepted by the OpenWire JMS library.,AMQ-6803,13099832,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,gtully,jdanek,jdanek,05/Sep/17 12:49,12/Sep/17 10:46,14/Jul/23 05:44,12/Sep/17 10:37,5.15.0,,,,,,,,,5.16.0,,,,Broker,JMS client,,,,0,,,,,,"ConnectionFactory options {{trafficClass}} and {{wireFormat.prefixPacketSize}} are not accepted by the OpenWire JMS library. When i put them to my connection url, I get the following error

{noformat}
        ""tcp://127.0.0.1:61616?trafficClass=2&wireFormat.prefixPacketSize=1"";

javax.jms.JMSException: Could not create Transport. Reason: java.lang.IllegalArgumentException: Invalid connect parameters: {trafficClass=2, wireFormat.prefixPacketSize=1}
	at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:36)
	at org.apache.activemq.ActiveMQConnectionFactory.createTransport(ActiveMQConnectionFactory.java:333)
	at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:346)
	at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:304)
	at org.apache.activemq.ActiveMQConnectionFactory.createConnection(ActiveMQConnectionFactory.java:244)
{noformat}

These options are not widely useful, so I am marking the lowest priority.",,gtully,jdanek,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Sep/17 11:11;jdanek;popup.png;https://issues.apache.org/jira/secure/attachment/12886396/popup.png",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Sep 12 10:46:11 UTC 2017,,,,,,,,,,,"0|i3jnlr:",9223372036854775807,Regression,,,,,,,,,,,,,,,,,,,,"05/Sep/17 15:28;gtully;the trafficClass is not a supported property - it is set via: diffServ attribute;;;","05/Sep/17 15:32;gtully;sizePrefixDisabled is a boolean attribute that represents  prefixPacketSize.;;;","05/Sep/17 15:33;jdanek;Ok, I was looking at http://activemq.apache.org/tcp-transport-reference.html
and homed onto trafficClass. If that is server only, ok.





-- 
Jiří Daněk
Messaging QA
;;;","05/Sep/17 15:39;gtully;updated the doc for wireformat info for the sizePrefixDisabled

https://cwiki.apache.org/confluence/display/ACTIVEMQ/Configuring+Wire+Formats;;;","11/Sep/17 11:10;jdanek;The update slightly broke formatting on http://activemq.apache.org/configuring-wire-formats.html. The sizePrefixDisabled is in a wrong font.

More importantly, when I open that page, I get a popup

!popup.png!;;;","11/Sep/17 14:27;gtully;i got rid of the popup - that page had old references and had not been rebuild in a long time.;;;","11/Sep/17 14:30;jdanek;The font in the word is still slightly different, but not way too obviously distracting as before.;;;","12/Sep/17 10:46;jdanek;lgtm, thanks for fixing;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
race in WSTransportProxy startup can lead to WebSocket connection failure,AMQ-6801,13099200,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,robbie,robbie,robbie,01/Sep/17 11:56,01/Sep/17 12:12,14/Jul/23 05:44,01/Sep/17 12:12,5.15.0,,,,,,,,,5.15.1,5.16.0,,,,,,,,0,,,,,,"There is a race between the startup and arrival of data in the WSTransportProxy class that can lead to failure to create a WebSocket connection because there is no transport listener available when data arrives, at least over AMQP where the SASL header arrives and can't be processed. This has been observed causing Websocket related test failures in the ActiveMQ CI jobs and also in Qpid JMS CI jobs (seemingly only since it was updated to use 5.15.0, though this code hasn't changed since introduction in 5.14.0 it appears?).

When supplied with new frame data, there is a check that the WSTransportProxy instance has already been started, and if not a latch wait is performed until it is before proceeding. This latch is tripped during startup but before the transport listener has been set, meaning it is possible for frame data processing to proceed before the listener is actually set on the transport. Also, the listener field isn't volatile so it could additionally be true that the thread processing the data doesnt yet see a listener which has been set on the transport in the startup thread. Moving the latch trip to after setting the listener should address both those issues.",,jira-bot,robbie,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Sep 01 12:06:31 UTC 2017,,,,,,,,,,,"0|i3jjpj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Sep/17 12:01;jira-bot;Commit 2e492569db2345cf3be8532630f93219159a8b15 in activemq's branch refs/heads/master from [~gemmellr]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=2e49256 ]

AMQ-6801: ensure transport listener is set before tripping latch to indicate startup is occuring
;;;","01/Sep/17 12:06;jira-bot;Commit ca86e2fbe6ff1cba762993c09de443a36c3709e7 in activemq's branch refs/heads/activemq-5.15.x from [~gemmellr]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=ca86e2f ]

AMQ-6801: ensure transport listener is set before tripping latch to indicate startup is occuring

(cherry picked from commit 2e492569db2345cf3be8532630f93219159a8b15)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IOExceptionHandler during the startup,AMQ-6799,13097292,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,24/Aug/17 12:03,07/Sep/17 16:23,14/Jul/23 05:44,24/Aug/17 12:05,5.15.0,,,,,,,,,5.15.1,5.16.0,,,,,,,,0,,,,,,"When the broker is starting and exception happens during persistence adapter startup (or its locker) an IOExceptionHandler will be called. This can lead to inconsistent state where the handler will stop the connector and launch a thread to check adapter, while the broker has been stopped due to startup error.

The solution to this would be to allow handler only to work when the broker is fully stared.",,dejanb,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Sep 07 16:17:56 UTC 2017,,,,,,,,,,,"0|i3j8j3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Aug/17 12:04;jira-bot;Commit c7291f1ecfefec7aad6fcf168e298e2ef0af8ed7 in activemq's branch refs/heads/master from [~dejanb]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=c7291f1 ]

https://issues.apache.org/jira/browse/AMQ-6799 - IOExceptionHandler during the startup
;;;","01/Sep/17 11:03;jira-bot;Commit 5e656d394ce73d6f7d9e72f46348ed7dc9b6240c in activemq's branch refs/heads/master from [~dejanb]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=5e656d3 ]

https://issues.apache.org/jira/browse/AMQ-6799 - stop the jmx server connector properly
;;;","01/Sep/17 11:03;dejanb;Another issue in this scenario is that JMX Server Connector is started asynchronously and it can be missed for cleanup on the immediate stop.;;;","07/Sep/17 16:17;jira-bot;Commit ccf8dbe28be0961b571b6125c78758dd5fb2cad9 in activemq's branch refs/heads/activemq-5.15.x from [~dejanb]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=ccf8dbe ]

https://issues.apache.org/jira/browse/AMQ-6799 - IOExceptionHandler during the startup

(cherry picked from commit c7291f1ecfefec7aad6fcf168e298e2ef0af8ed7)
;;;","07/Sep/17 16:17;jira-bot;Commit 93874514120b84eff7aee26ed21e3cbe0edf1d50 in activemq's branch refs/heads/activemq-5.15.x from [~dejanb]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=9387451 ]

https://issues.apache.org/jira/browse/AMQ-6799 - stop the jmx server connector properly

(cherry picked from commit 5e656d394ce73d6f7d9e72f46348ed7dc9b6240c)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Queue left StoreUsage object in memory. Memory leak,AMQ-6798,13097283,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,tolikrdi,tolikrdi,24/Aug/17 10:20,24/Aug/17 13:25,14/Jul/23 05:44,24/Aug/17 13:25,5.10.2,5.15.0,,,,,,,,5.15.1,5.16.0,,,,,,,,0,,,,,,"Our services create queues on broker. It queues exists in 1 day then they become inactive, cause clients turned off. Active mq removes them by Inactivity timeout 60 seconds. But memory consumption of broker grows permanently. We acquired heap dump, and saw that org.apache.activemq.usage.StoreUsage contains 2.7 millions of object with 1.5 gb. That objects belongs to StoreUsage of queues. 

I don't sure that we uses broker as it should be used. Maybe we shouldn't create new queues. But this behavior is stranged for me.",Linux 3.10.0-327.36.3.el7.x86_64 #1 SMP Mon Oct 24 16:09:20 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux,cshannon,jira-bot,tolikrdi,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Aug/17 10:26;tolikrdi;1535.dmp;https://issues.apache.org/jira/secure/attachment/12883522/1535.dmp","24/Aug/17 10:27;tolikrdi;activemq.xml;https://issues.apache.org/jira/secure/attachment/12883523/activemq.xml",,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Aug 24 13:25:25 UTC 2017,,,,,,,,,,,"0|i3j8hb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Aug/17 10:26;tolikrdi;Dump of ActiveMQ Broker memory - this dump is after test cases but StoreUsage objects hold here too.;;;","24/Aug/17 10:27;tolikrdi;ActiveMQ configuration file.;;;","24/Aug/17 11:23;cshannon;Can you try a newer version of ActiveMQ to see if your issue still exists? Such as 5.14.5 or 5.15.0 ?;;;","24/Aug/17 11:52;tolikrdi;I suggest that org.apache.activemq.broker.region.Queue in method start() runs StoreUsage like this:
if (systemUsage.getStoreUsage() != null) {
       systemUsage.getStoreUsage().start();
}

But in method stop StoreUsage isn't stoped. So it remains in its parent StoreUsage.

Ok i'll try to test on 5.14.5 or 5.15.0.;;;","24/Aug/17 12:10;cshannon;I think you might be right, the memoryUsage variable is stopped in the stop() method but the systemUsage variable is not stopped which I think would lead to this leak.  I'll take a look at this closer today.;;;","24/Aug/17 12:41;tolikrdi;I've tested on ActiveMq 5.15.0. Story is the same. StoreUsage is hung in their parent. Memory grows after each queue instance creation.;;;","24/Aug/17 13:24;jira-bot;Commit 35bd3ad938f5c378b17a34980d2f3480bf3bbfc3 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=35bd3ad ]

AMQ-6798 - Clean up store usage object on Queue stop

When queues are stopped the StoreUsage object needs to be stopped so it
will be removed from the parent StoreUsage.  This allows the object to
be garbage collected and prevents a memory leak.
;;;","24/Aug/17 13:25;jira-bot;Commit eca72dc81ad8113e31fadf161580bf5e2b93e27a in activemq's branch refs/heads/activemq-5.15.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=eca72dc ]

AMQ-6798 - Clean up store usage object on Queue stop

When queues are stopped the StoreUsage object needs to be stopped so it
will be removed from the parent StoreUsage.  This allows the object to
be garbage collected and prevents a memory leak.

(cherry picked from commit 35bd3ad938f5c378b17a34980d2f3480bf3bbfc3)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Acknowledging messages out of order in a STOMP 1.1 transaction raises exception,AMQ-6796,13096666,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,mgerstel,mgerstel,22/Aug/17 08:08,23/Aug/17 16:24,14/Jul/23 05:44,23/Aug/17 16:24,5.15.0,,,,,,,,,5.15.1,5.16.0,,,STOMP,,,,,0,,,,,,"Reproducing the problem:
* Receive two messages via STOMP on a subscription with ack:client-individual
* Start a transaction
* Acknowledge message #2
* Acknowledge message #1
* Commit the transaction

Expected behaviour:
* Both messages are acknowledged, life goes on

Observed behaviour:
* Exception is raised

{{javax.jms.JMSException: Unmatched acknowledge: MessageAck {commandId = 0, responseRequired = false, ackType = 2, consumerId = ID:(...)-6:555:-1:1, firstMessageId = null, lastMessageId = ID:(...)-6:555:-1:1:1, destination = queue://(...), transactionId = null, messageCount = 2, poisonCause = null}; Expected message count (2) differs from count in dispatched-list (1)
  	at org.apache.activemq.broker.region.PrefetchSubscription.assertAckMatchesDispatched(PrefetchSubscription.java:519)
  	at org.apache.activemq.broker.region.PrefetchSubscription.acknowledge(PrefetchSubscription.java:211)
  	at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:528)
  	at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:475)
(..)}}

I have prepared a [unit test|https://github.com/Anthchirp/activemq/commit/7df4f25975c6500e65b1688ca81e761c1825a32a] for this ([patch file|https://github.com/Anthchirp/activemq/commit/7df4f25975c6500e65b1688ca81e761c1825a32a.patch]).

The exception is not raised if the messages are acknowledged outside of a transaction.",,jira-bot,mgerstel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Aug 23 16:23:24 UTC 2017,,,,,,,,,,,"0|i3j4pb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Aug/17 16:21;jira-bot;Commit 4c986d102cd5c862d88fd84eec1889b9786e9970 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=4c986d1 ]

AMQ-6796 Avoid double Ack on commit in STOMP individual ack mode

During commit of transaction when subscription mode is individual ack
the messages can get double acked leading to an error about receipt of
an invalid ack.;;;","23/Aug/17 16:23;jira-bot;Commit 8e9f80e7d6fdee3e3ecd2293fa364c05a2e9b18b in activemq's branch refs/heads/activemq-5.15.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=8e9f80e ]

AMQ-6796 Avoid double Ack on commit in STOMP individual ack mode

During commit of transaction when subscription mode is individual ack
the messages can get double acked leading to an error about receipt of
an invalid ack.
(cherry picked from commit 4c986d102cd5c862d88fd84eec1889b9786e9970)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
masterslave: transport blocked socket write can block network bridge stop in error,AMQ-6792,13094081,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,11/Aug/17 11:54,07/Sep/17 16:22,14/Jul/23 05:44,11/Aug/17 12:25,5.15.0,,,,,,,,,5.15.1,5.16.0,,,Network of Brokers,,,,,0,,,,,,"With a blocked socket write, the failover (use for masterslave) transport holds the reconnect mutex. this blocks normal stop pending the completion of the write. If the write blocks and there is no timeout exception, the transport stays up in error even when stop is called on the network bridge which can block broker shutdown.

Threads:
{code}""ActiveMQ BrokerService[amq10] Task-147"" - Thread t@45016
   java.lang.Thread.State: RUNNABLE
	at java.net.SocketOutputStream.socketWrite0(Native Method)
	at java.net.SocketOutputStream.__AW_socketWrite(SocketOutputStream.java:111)
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:155)
	at sun.security.ssl.OutputRecord.writeBuffer(OutputRecord.java:431)
	at sun.security.ssl.OutputRecord.write(OutputRecord.java:417)
	at sun.security.ssl.SSLSocketImpl.writeRecordInternal(SSLSocketImpl.java:886)
	at sun.security.ssl.SSLSocketImpl.writeRecord(SSLSocketImpl.java:857)
	at sun.security.ssl.AppOutputStream.__AW_write(AppOutputStream.java:123)
	- locked <5ce0bde7> (a sun.security.ssl.AppOutputStream)
	at sun.security.ssl.AppOutputStream.write(AppOutputStream.java)
	at org.apache.activemq.transport.tcp.TcpBufferedOutputStream.flush(TcpBufferedOutputStream.java:115)
	at java.io.DataOutputStream.flush(DataOutputStream.java:123)
	at org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:176)
	at org.apache.activemq.transport.AbstractInactivityMonitor.doOnewaySend(AbstractInactivityMonitor.java:335)
	at org.apache.activemq.transport.AbstractInactivityMonitor.oneway(AbstractInactivityMonitor.java:317)
	at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:85)
	at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:116)
	at org.apache.activemq.transport.failover.FailoverTransport.__AW_oneway(FailoverTransport.java:667)
	- locked <47e37945> (a java.lang.Object)
	at org.apache.activemq.transport.failover.FailoverTransport.oneway(FailoverTransport.java)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:68)
	at org.apache.activemq.transport.ResponseCorrelator.asyncRequest(ResponseCorrelator.java:81)
	at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceLocalCommand(DemandForwardingBridgeSupport.java:1008)
	at org.apache.activemq.network.DemandForwardingBridgeSupport$2.onCommand(DemandForwardingBridgeSupport.java:207)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
	at org.apache.activemq.transport.vm.VMTransport.doDispatch(VMTransport.java:162)
	at org.apache.activemq.transport.vm.VMTransport.dispatch(VMTransport.java:154)
	- locked <467f411f> (a java.util.concurrent.atomic.AtomicBoolean)
	at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:131)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:68)
	at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
	at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1457)
	at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:971)
	at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:1017)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:133)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:48)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748){code}
{code}""IOExceptionHandler: stopping BrokerService[amq10]"" - Thread t@201006
   java.lang.Thread.State: BLOCKED
	at org.apache.activemq.transport.failover.FailoverTransport.__AW_stop(FailoverTransport.java:380)
	- waiting to lock <47e37945> (a java.lang.Object) owned by ""ActiveMQ BrokerService[amq10] Task-147"" t@45016
	at org.apache.activemq.transport.failover.FailoverTransport.stop(FailoverTransport.java)
	at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:65)
	at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:65)
	at org.apache.activemq.transport.ResponseCorrelator.stop(ResponseCorrelator.java:132)
	at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)
	at org.apache.activemq.network.DemandForwardingBridgeSupport.__AW_stop(DemandForwardingBridgeSupport.java:307)
	at org.apache.activemq.network.DemandForwardingBridgeSupport.stop(DemandForwardingBridgeSupport.java)
	at org.apache.activemq.network.DiscoveryNetworkConnector.handleStop(DiscoveryNetworkConnector.java:223)
	at org.apache.activemq.network.NetworkConnector$1.doStop(NetworkConnector.java:65)
	at org.apache.activemq.util.ServiceSupport.__AW_stop(ServiceSupport.java:71)
	at org.apache.activemq.util.ServiceSupport.stop(ServiceSupport.java)
	at org.apache.activemq.network.NetworkConnector.stop(NetworkConnector.java:165)
	at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)
	at org.apache.activemq.broker.BrokerService.__AW_stopAllConnectors(BrokerService.java:2191)
	at org.apache.activemq.broker.BrokerService.stopAllConnectors(BrokerService.java)
	at org.apache.activemq.broker.BrokerService.__AW_stop(BrokerService.java:805)
	at org.apache.activemq.broker.BrokerService.stop(BrokerService.java)
	at org.apache.activemq.xbean.XBeanBrokerService.stop(XBeanBrokerService.java:122)
	at org.apache.activemq.util.DefaultIOExceptionHandler$2.run(DefaultIOExceptionHandler.java:181){code}
",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Sep 07 16:17:52 UTC 2017,,,,,,,,,,,"0|i3iown:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Aug/17 11:59;jira-bot;Commit 63f0b7e20d56837b4f159e83594a4e4fb906cd4a in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=63f0b7e ]

[AMQ-6792] fire the failover exception handler before stop to ensure blocked write does not block stop request
;;;","07/Sep/17 16:17;jira-bot;Commit 0924f983f874179af1aad2839fcdef53ef530bed in activemq's branch refs/heads/activemq-5.15.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=0924f98 ]

[AMQ-6792] fire the failover exception handler before stop to ensure blocked write does not block stop request

(cherry picked from commit 63f0b7e20d56837b4f159e83594a4e4fb906cd4a)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ClassNotFoundException PListStoreImpl when trying to start an embedded broker with memory persistence,AMQ-6788,13093097,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cschneider,cschneider,cschneider,08/Aug/17 09:07,07/Sep/17 16:17,14/Jul/23 05:44,09/Aug/17 07:52,5.15.0,,,,,,,,,5.15.1,,,,Broker,,,,,0,,,,,,"I try to start an embedded broker:
        broker = new BrokerService();
        broker.setPersistenceAdapter(new MemoryPersistenceAdapter());
        broker.start();

java.lang.RuntimeException: java.lang.ClassNotFoundException: org.apache.activemq.store.kahadb.plist.PListStoreImpl

For details see:
https://apaste.info/vIkj","Ubuntu Linux, ActiveMQ 5.15.0",cschneider,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Sep 07 16:17:47 UTC 2017,,,,,,,,,,,"0|i3ij1b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Aug/17 09:08;cschneider;As a workaround I found that I can do:
broker.setPersistent(false);

Still I think this is a bug.;;;","08/Aug/17 18:56;jira-bot;Commit 8646bb1010d2632f5d405fe1761c2b9c99a0a139 in activemq's branch refs/heads/master from [~chris@die-schneider.net]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=8646bb1 ]

[AMQ-6788] Explain how to fix the problem in the exception
;;;","07/Sep/17 16:17;jira-bot;Commit d5dfadd8d0280027bc4aee137870995f7f6b449c in activemq's branch refs/heads/activemq-5.15.x from [~chris@die-schneider.net]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=d5dfadd ]

[AMQ-6788] Explain how to fix the problem in the exception

(cherry picked from commit 8646bb1010d2632f5d405fe1761c2b9c99a0a139)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory leak - JaasAuthenticationBroker retaining instances of JaasAuthenticationBroker$JaasSecurityContext for connections that fail with InvalidClientIDException ,AMQ-6787,13092470,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,04/Aug/17 12:45,07/Sep/17 16:24,14/Jul/23 05:44,04/Aug/17 12:46,5.15.0,,,,,,,,,5.15.1,5.16.0,,,,,,,,0,,,,,,If a client can authenticate but subsequently fails to add a connection due to InvalidClientIDException - clientId already in use for example. The security context is retained by the JaasAuthenticationBroker in error.,,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Sep 07 16:17:44 UTC 2017,,,,,,,,,,,"0|i3if87:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Aug/17 12:46;jira-bot;Commit a15626193c8d3c099b0bcf1e605b892b533a4d3e in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=a156261 ]

[AMQ-6787] release securty context on failure to addConnection subsequent to auth, resolve leak. fix and test
;;;","07/Sep/17 16:17;jira-bot;Commit 035baf1722f79022c8af0a17158b2c418fa8c577 in activemq's branch refs/heads/activemq-5.15.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=035baf1 ]

[AMQ-6787] release securty context on failure to addConnection subsequent to auth, resolve leak. fix and test

(cherry picked from commit a15626193c8d3c099b0bcf1e605b892b533a4d3e)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
 Incorrect time conversion in timestampplugin example ,AMQ-6785,13092171,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,vkamble60,vkamble60,03/Aug/17 11:53,03/Aug/17 15:04,14/Jul/23 05:44,03/Aug/17 15:04,5.14.5,,,,,,,,,,,,,Documentation,,,,,0,,,,,,"Incorrect time conversion in [http://activemq.apache.org/timestampplugin.html] example. 

Example:
<plugins>
  <!-- 86,400ms = 1 day -->
  <timeStampingBrokerPlugin ttlCeiling=""86400"" zeroExpirationOverride=""86400""/>
</plugins>

 86,400ms is equal to 0.024 and not 1day. 
",,cshannon,vkamble60,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Aug 03 15:04:05 UTC 2017,,,,,,,,,,,"0|i3ide7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Aug/17 15:04;cshannon;Documentation has been fixed in the wiki.  The website link will update with the correct value soon.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Document about cursorMemoryHighWaterMark is misleading,AMQ-6782,13091770,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,alvinlin123,alvinlin123,02/Aug/17 03:49,03/Aug/17 11:11,14/Jul/23 05:44,03/Aug/17 11:11,5.15.0,,,,,,,,,,,,,Documentation,,,,,0,,,,,,"In http://activemq.apache.org/per-destination-policies.html the description for ""cursorMemoryHighWaterMark"" is kind of misleading; the description about that the threshold will apply to ""the destination's memoryLimit (when defined) "" made me think that it applies to TopicSubscription as well. 

I thought if I configure a topic with memoryLimit of 100MB and system memory limit of 1GB, then TopicSubscription (or more specifically the FilePendingMessageCurosr) uses cursorMemoryHighWaterMark against 100MB. But through testing, code reading, and http://blog.christianposta.com/activemq/activemq-understanding-memory-usage I found out the hard way this is not the case; only queues will use cursorMemoryHighWaterMark against the per destination memory limit. 

My suggestion is to add additional notes that the configured cursorMemoryHighWaterMark applies only to system memory in the case of topic.",,alvinlin123,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Aug 03 11:11:56 UTC 2017,,,,,,,,,,,"0|i3iaxj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Aug/17 11:11;gtully;Thanks for the feedback.

I split the description for cursorMemoryHighWaterMark into queue and topic variants.

https://cwiki.apache.org/confluence/display/ACTIVEMQ/Per+Destination+Policies;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The ActiveMQ Web Console doesn’t support a plus (+) sign in the ClientID,AMQ-6781,13091535,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,jbonofre,patrickv,patrickv,01/Aug/17 13:22,22/Mar/21 15:14,14/Jul/23 05:44,22/Mar/21 15:14,5.14.1,5.15.0,,,,,,,,5.15.15,5.16.2,5.17.0,,Web Console,,,,,1,,,,,,"I’m trying to use an ISO 8601 date/time as part of the ClientID. 

For example : connection.setClientID(""<my unique id>|2017-08-01T09:20:18.936+03:00""); 

!screenshot-1.png!

The following error is generated when clicked on the url in the Web Console | Connections page : 

!screenshot-2.png!

I see that the ‘+’ sign isn’t correct encoded in the URL. 

It is : *{color:red}+{color}* 
http://testactivemq:8161/admin/connection.jsp?connectionID=%3Cmy%20unique%20id%3E|2017-08-01T09:20:18.936{color:red}*+*{color}03:00 

And it should perhaps be : *{color:red}%2B {color}*
http://testactivemq:8161/admin/connection.jsp?connectionID=%3Cmy%20unique%20id%3E|2017-08-01T09:20:18.936{color:red}*%2B*{color}03:00 
",,githubbot,jira-bot,patrickv,zgl,,,,,,,,,,,,,,,,,,,,,,"lucastetreault commented on pull request #279:
URL: https://github.com/apache/activemq/pull/279#issuecomment-792580360


   Can one of the admins verify this patch?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/21 08:39;githubbot;600","lucastetreault removed a comment on pull request #279:
URL: https://github.com/apache/activemq/pull/279#issuecomment-792580360


   Can one of the admins verify this patch?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/21 09:07;githubbot;600","jbonofre merged pull request #279:
URL: https://github.com/apache/activemq/pull/279


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Mar/21 15:12;githubbot;600",,,,,,,,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Aug/17 13:26;patrickv;screenshot-1.png;https://issues.apache.org/jira/secure/attachment/12879826/screenshot-1.png","01/Aug/17 13:26;patrickv;screenshot-2.png;https://issues.apache.org/jira/secure/attachment/12879827/screenshot-2.png",,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Mar 22 15:13:34 UTC 2021,,,,,,,,,,,"0|i3i9hr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Mar/18 20:33;githubbot;Github user snurmine closed the pull request at:

    https://github.com/apache/activemq/pull/269
;;;","09/Mar/18 16:50;githubbot;GitHub user snurmine opened a pull request:

    https://github.com/apache/activemq/pull/279

    AMQ-6781 - The ActiveMQ Web Console doesn’t support a plus (+) sign i…

    …n the ClientID

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/snurmine/activemq AMQ-6781

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/279.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #279
    
----
commit 680b80aa22063e009b14ec59df54c60fdb17d975
Author: Sami Nurminen <snurmine@...>
Date:   2017-12-21T19:50:11Z

    AMQ-6781 - The ActiveMQ Web Console doesn’t support a plus (+) sign in the ClientID

----
;;;","22/Mar/21 15:12;jira-bot;Commit 680b80aa22063e009b14ec59df54c60fdb17d975 in activemq's branch refs/heads/master from Sami Nurminen
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=680b80a ]

AMQ-6781 - The ActiveMQ Web Console doesn’t support a plus (+) sign in the ClientID
;;;","22/Mar/21 15:12;jira-bot;Commit 5fcb388741aaa60554828316a4581b824b5693a3 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=5fcb388 ]

Merge pull request #279 from snurmine/AMQ-6781

AMQ-6781 - The ActiveMQ Web Console doesn’t support a plus (+) sign i…;;;","22/Mar/21 15:12;jira-bot;Commit 5fcb388741aaa60554828316a4581b824b5693a3 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=5fcb388 ]

Merge pull request #279 from snurmine/AMQ-6781

AMQ-6781 - The ActiveMQ Web Console doesn’t support a plus (+) sign i…;;;","22/Mar/21 15:13;jira-bot;Commit 31628a2a67fd4cd0844d80e75e7a4f1a30176c69 in activemq's branch refs/heads/activemq-5.16.x from Sami Nurminen
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=31628a2 ]

AMQ-6781 - The ActiveMQ Web Console doesn’t support a plus (+) sign in the ClientID

(cherry picked from commit 680b80aa22063e009b14ec59df54c60fdb17d975)
;;;","22/Mar/21 15:13;jira-bot;Commit 7e70e4c78c6042d86adb9d8f324c8d0f6092b645 in activemq's branch refs/heads/activemq-5.15.x from Sami Nurminen
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=7e70e4c ]

AMQ-6781 - The ActiveMQ Web Console doesn’t support a plus (+) sign in the ClientID

(cherry picked from commit 680b80aa22063e009b14ec59df54c60fdb17d975)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
New Postgres JDBC-Driver not recognized,AMQ-6780,13091503,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,chk.futura,chk.futura,01/Aug/17 10:40,19/Oct/18 05:18,14/Jul/23 05:44,19/Oct/18 05:18,5.15.0,,,,,,,,,5.15.7,5.16.0,,,JDBC,,,,,2,postgresql,,,,,"After our switch of the postgres-jdbc-driver from version 9.4-1201 to 42.1.3 the JDBCPersistenceAdapter does not recognize postgres any more. 
The log:

{code:title=new driver}
2017-07-31 19:35:52,733 [INFO ] 259-949-060 [JDBCPersistenceAdapter : loadAdapter] - Database adapter driver override not found for : [postgresql_jdbc_driver].  Will use default implementation.
2017-07-31 19:35:52,765 [WARN ] 259-949-060 [DefaultJDBCAdapter : executeStatement] - Could not create JDBC tables; they could already exist. Failure was: CREATE TABLE ACTIVEMQ_MSGS(ID BIGINT NOT NULL, CONTAINER VARCHAR(250) NOT NULL, MSGID_PROD VARCHAR(250), MSGID_SEQ BIGINT, EXPIRATION BIGINT, MSG BLOB, PRIMARY KEY ( ID ) ) Message: ERROR: type ""blob"" does not exist
  Position: 147 SQLState: 42704 Vendor code: 0
{code}

{code:title=old driver}
2017-07-31 19:37:21,021 [INFO ] 11b-e48-c83 [JDBCPersistenceAdapter : loadAdapter] - Database adapter driver override recognized for : [postgresql_native_driver] - adapter: class org.apache.activemq.store.jdbc.adapter.PostgresqlJDBCAdapter
{code}

The cause is the change of the name from ""postgres_native_driver"" to ""postgres_jdbc_driver"" (getDriverName() now returns ""PostgreSQL JDBC Driver""). The PostgresqlJDBCAdapter uses the name to find the class. 
Our workaround is to add a file ""postgres_jdbc_driver"" to ""META-INF/services/org/apache/activemq/store/jdbc"" in the ""activemq-jdbc-store-5.15.0.jar"".
",,chk.futura,davidedg,githubbot,jira-bot,netmikey,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Aug/17 11:07;chk.futura;postgresql_jdbc_driver;https://issues.apache.org/jira/secure/attachment/12879807/postgresql_jdbc_driver",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Oct 19 05:18:33 UTC 2018,,,,,,,,,,,"0|i3i9an:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/May/18 07:28;netmikey;This is biting us as well now.

Am I missing something, or is this major issue unresolved for about a year now?;;;","08/Jun/18 10:58;davidedg;Hello all,

I can confirm the issue (tested with AMQ 5.15.3 on Postgres 10.3 + postgresql-42.2.2.jar).

I can also confirm the solution provided by the file attached by the OP.

As far as I can see - this could be +_easily_+ closed - can we expect the fix to be included in the next version ?

 

Thank you.

Bye!;;;","19/Oct/18 04:15;githubbot;GitHub user jbonofre opened a pull request:

    https://github.com/apache/activemq/pull/311

    [AMQ-6780] Add PostgreSQL version JDBC driver name in jdbc store services

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/jbonofre/activemq AMQ-6780

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/311.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #311
    
----
commit 46f8deeb67623e095622debac18f53d736cb3bcc
Author: Jean-Baptiste Onofré <jbonofre@...>
Date:   2018-10-19T04:11:14Z

    [AMQ-6780] Add PostgreSQL version JDBC driver name in jdbc store services

----
;;;","19/Oct/18 05:18;jira-bot;Commit 46f8deeb67623e095622debac18f53d736cb3bcc in activemq's branch refs/heads/master from [~jb@nanthrax.net]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=46f8dee ]

[AMQ-6780] Add PostgreSQL version JDBC driver name in jdbc store services
;;;","19/Oct/18 05:18;jira-bot;Commit dc36c19c811dcaab07c27d6f2a0dcdd90f856d3f in activemq's branch refs/heads/master from [~jb@nanthrax.net]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=dc36c19 ]

[AMQ-6780] This closes #311
;;;","19/Oct/18 05:18;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/311
;;;","19/Oct/18 05:18;jira-bot;Commit ab41382b0e1627ab1a76b1a9f802810281ed955f in activemq's branch refs/heads/activemq-5.15.x from [~jb@nanthrax.net]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=ab41382 ]

[AMQ-6780] Add PostgreSQL version JDBC driver name in jdbc store services
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Advisories are dropped till broker is fully started in error,AMQ-6778,13089857,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,25/Jul/17 11:58,07/Sep/17 16:24,14/Jul/23 05:44,26/Jul/17 13:53,5.15.0,,,,,,,,,5.15.1,5.16.0,,,Broker,Network of Brokers,,,,0,,,,,,"The Advisory broker fire is conditional on the broker being fully started. This has been present for the longest time however the started flag has been modified to include a countDownLatch that is triggered on start completion.
This means that consumers that connect to the active transportConnectors do not result in advisories which can mean incoming networkConnectors can mis this advise in error which results in the demand being ignored.

From what I can see, the check for started does not add value and in the event of a failure to fire an advisory the error will be caught and logged rather than being ignored as it is now.",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Sep 07 16:17:43 UTC 2017,,,,,,,,,,,"0|i3hz6n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Jul/17 12:02;jira-bot;Commit ddfa96028c4c803467b0c074b8c1b4d3e5f9687d in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=ddfa960 ]

[AMQ-6778] fix and test - no longer gate firing advisory on broker start flag b/c consumers may be present once transport connectors have started
;;;","26/Jul/17 11:09;jira-bot;Commit 206f77adac24414751509195fd3b985d976573fd in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=206f77a ]

[AMQ-6778] - fix test regression that needs to account for presence of correct advisory dests
;;;","07/Sep/17 16:17;jira-bot;Commit 1bba73dcb65c0320dc21b606bccc28f21ad0752f in activemq's branch refs/heads/activemq-5.15.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=1bba73d ]

[AMQ-6778] fix and test - no longer gate firing advisory on broker start flag b/c consumers may be present once transport connectors have started

(cherry picked from commit ddfa96028c4c803467b0c074b8c1b4d3e5f9687d)
;;;","07/Sep/17 16:17;jira-bot;Commit 199f25ed93612d90b29cf8f7ebc6c27bb9005592 in activemq's branch refs/heads/activemq-5.15.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=199f25e ]

[AMQ-6778] - fix test regression that needs to account for presence of correct advisory dests

(cherry picked from commit 206f77adac24414751509195fd3b985d976573fd)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HttpClientTransport loses exception information,AMQ-6765,13085971,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,harmen.renkema,harmen.renkema,10/Jul/17 14:46,11/Jul/17 20:21,14/Jul/23 05:44,11/Jul/17 20:21,5.14.3,,,,,,,,,5.14.6,5.15.1,,,,,,,,0,,,,,,"In the exception handling in the doStart() method of the HttpClientTransport vital debugging information is lost.

On line 282, for any encountered exception an IOException is thrown with the following message: '""Failed to perform GET on: "" + remoteUrl + "" as response was: "" + e.getMessage()'. Where e.getMessage() usually returns null.

It would be nicer if at least he http status code was logged, and maybe the stacktrace when trace is enabled.",,harmen.renkema,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jul 11 20:19:58 UTC 2017,,,,,,,,,,,"0|i3hbnr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Jul/17 20:00;jira-bot;Commit 56bed30c6427a1cc6b41e0d289a97c3e5b4582c4 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=56bed30 ]

AMQ-6765 Add trace logging of start failure exception

Log the exception at trace level when start fails.
;;;","11/Jul/17 20:19;jira-bot;Commit 42e4a6cd9902e63db26f4edc22dfca123df01fc8 in activemq's branch refs/heads/activemq-5.14.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=42e4a6c ]

AMQ-6765 Add trace logging of start failure exception

Log the exception at trace level when start fails.

(cherry picked from commit 56bed30c6427a1cc6b41e0d289a97c3e5b4582c4)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
On ActiveMQ web site's Contributing page incorrect issue tracker URLs,AMQ-6711,13081532,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,,art.licis,art.licis,21/Jun/17 19:58,28/Jul/17 12:21,14/Jul/23 05:44,28/Jul/17 12:21,5.14.5,,,,,,,,,,,,,Documentation,,,,,0,,,,,,On a Community > Contributing page there are three 'issue tracker' links. The first two of them point to an obviously obsolete [https://issues.apache.org/activemq/browse/AMQ]. ,,art.licis,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jul 28 12:21:38 UTC 2017,,,,,,,,,,,"0|i3gkd3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Jun/17 20:09;tabish;should be correct on the next site sync;;;","22/Jun/17 16:17;art.licis;I can see the second link has been fixed, while the first one still points to the wrong location. It's on top, look for the text: _Try surfing the our issue tracker [...]_

On a side note - along with URL fix, would be great to remove article in this phrase, sounds incorrect.;;;","28/Jul/17 12:21;art.licis;I visited the page again, and noticed it's fixed now -- all three links point to a valid resource.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JDBC XA: Could not remove prepared transaction state from message,AMQ-6707,13080790,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,gtully,ragnor84,ragnor84,19/Jun/17 11:29,18/May/18 15:33,14/Jul/23 05:44,18/May/18 15:33,5.14.5,,,,,,,,,5.16.0,,,,JDBC,XA,,,,1,,,,,,"When ActiveMQ 5.14.5 is configured with jdbc persistence storage (postgres) from time to time below error occurs:
{code}
2017-06-15 01:41:37,418 | ERROR | enerContainer-21 | CommitTask                       | 67 - org.apache.aries.transaction.manager - 1.3.1 | Unexpected exception committing org.apache.geronimo.transaction.manager.WrapperNamedXAResource@34ac9d62; continuing to commit other RMs
javax.transaction.xa.XAException: STORE COMMIT FAILED: Transaction rolled back xaErrorCode:104
	at org.apache.activemq.TransactionContext.toXAException(TransactionContext.java:793)
	at org.apache.activemq.TransactionContext.commit(TransactionContext.java:622)
	at org.apache.geronimo.transaction.manager.WrapperNamedXAResource.commit(WrapperNamedXAResource.java:54)
	at org.apache.geronimo.transaction.manager.CommitTask.run(CommitTask.java:64)
	at org.apache.geronimo.transaction.manager.TransactionImpl.commitResources(TransactionImpl.java:688)
	at org.apache.geronimo.transaction.manager.TransactionImpl.commit(TransactionImpl.java:327)
	at org.apache.geronimo.transaction.manager.TransactionManagerImpl.commit(TransactionManagerImpl.java:252)
	at org.springframework.transaction.jta.JtaTransactionManager.doCommit(JtaTransactionManager.java:1020)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:761)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:730)
	at org.apache.aries.transaction.internal.AriesPlatformTransactionManager.commit(AriesPlatformTransactionManager.java:75)
	at sun.reflect.GeneratedMethodAccessor180.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)[:1.8.0_131]
	at java.lang.reflect.Method.invoke(Method.java:498)[:1.8.0_131]
	at com.ectsp.spring.osgi.PlatformTransactionManagerFactoryBean$ProxyTxManagerHandler.invoke(PlatformTransactionManagerFactoryBean.java:115)[169:ectsp-spring-osgi:1.0.0.SNAPSHOT]
	at com.sun.proxy.$Proxy68.commit(Unknown Source)[100:org.apache.servicemix.bundles.spring-tx:4.2.8.RELEASE_1]
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:245)[97:org.apache.servicemix.bundles.spring-jms:4.2.8.RELEASE_1]
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1164)[97:org.apache.servicemix.bundles.spring-jms:4.2.8.RELEASE_1]
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1156)[97:org.apache.servicemix.bundles.spring-jms:4.2.8.RELEASE_1]
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1053)[97:org.apache.servicemix.bundles.spring-jms:4.2.8.RELEASE_1]
	at java.lang.Thread.run(Thread.java:748)[:1.8.0_131]
Caused by: javax.transaction.xa.XAException: STORE COMMIT FAILED: Transaction rolled back xaErrorCode:104
	at org.apache.activemq.transaction.Transaction.newXAException(Transaction.java:212)
	at org.apache.activemq.transaction.XATransaction.storeCommit(XATransaction.java:93)
	at org.apache.activemq.transaction.XATransaction.commit(XATransaction.java:76)
	at org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:252)
	at org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:118)
	at org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:118)
	at org.apache.activemq.broker.TransportConnection.processCommitTransactionTwoPhase(TransportConnection.java:547)
	at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:102)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:336)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:200)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:125)
	at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:301)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:233)[47:org.apache.activemq.activemq-osgi:5.14.5]
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:215)[47:org.apache.activemq.activemq-osgi:5.14.5]
	at java.lang.Thread.run(Thread.java:745)[:1.8.0_131]
Caused by: java.io.IOException: Could not remove prepared transaction state from message add for sequenceId: 4025171
	at org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.doCommitAddOp(DefaultJDBCAdapter.java:1031)
	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.commitAdd(JDBCPersistenceAdapter.java:780)
	at org.apache.activemq.store.jdbc.JdbcMemoryTransactionStore$CommitAddOutcome.run(JdbcMemoryTransactionStore.java:146)
	at org.apache.activemq.store.memory.MemoryTransactionStore$Tx.commit(MemoryTransactionStore.java:101)
	at org.apache.activemq.store.memory.MemoryTransactionStore.commit(MemoryTransactionStore.java:270)
	at org.apache.activemq.transaction.XATransaction.storeCommit(XATransaction.java:86)
	... 15 more
{code}
It seams that it the same issue as in https://issues.apache.org/jira/browse/AMQ-5567.",,gtully,jira-bot,ragnor84,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri May 18 15:33:30 UTC 2018,,,,,,,,,,,"0|i3gfs7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Apr/18 13:38;gtully;I think the issue is that the callbacks can be be invoked twice on recovery. 
I have been writing more tests for xa completion with the jdbc store under various error conditions. This has resulted in a few different fixes related to recovery and message dispatch stalling post recovery due to the cursor and store being out fo sync. I recall seeing a similar stack trace during test and fix development.;;;","26/Apr/18 13:59;jira-bot;Commit ea70e827c049cee9d455303a8cdb31a64b23763d in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=ea70e82 ]

AMQ-6707 - JDBC XA recovery and completion.

ensure pending transactions are visible for recovery without restart
sync store and cursor size during and after completion
ensure pending messages are not visible to browsers
retain transaction state on jdbc error
a bunch of new tests around xa completion
;;;","27/Apr/18 12:49;jira-bot;Commit ceb97f6baa471006cf176f298e763224f8d1b58f in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=ceb97f6 ]

AMQ-6707 - mKahadb, track recovered tx per store for completion, resolve test regression
;;;","27/Apr/18 13:06;jira-bot;Commit 314d5a51688186bf1a21bae0137b3e6cee407f43 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=314d5a5 ]

AMQ-6707 - skip tracked ack dependent test for leveldb
;;;","03/May/18 10:45;gtully;This is also relevant:
 AMQ-6906 tidy up cleanup on jdbc error and combine updates in single completion to avoid prepared sequence update on non transacted add with error. More jdbc error related tests

commit bd45d931ba273be4d94bf213c6befd116f99dcc8

[ [https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=bd45d93] ];;;","09/May/18 11:18;jira-bot;Commit c1e7dbd53bfefd8fad42d397800386048701e61d in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=c1e7dbd ]

AMQ-6707 - fix trace log reporting in error
;;;","15/May/18 11:00;jira-bot;Commit 09bf8f89b882fc71fff1dc46ea4991df6a23f64d in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=09bf8f8 ]

AMQ-6707 - ensure trace logging does not flip cacheEnabled flag outside required sync
;;;","15/May/18 13:56;jira-bot;Commit 8d3674be3dca57761bee85ba286419f5d339d418 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=8d3674b ]

AMQ-6707 - remove duplicated started state flag
;;;","18/May/18 09:32;jira-bot;Commit 72613aaba6d2641b8635e54e2fb4a28c14da2021 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=72613aa ]

AMQ-6707 - ensure entryLocator is used for rollback of prepared add to avoid NPE, relates to AMQ-5567
;;;","18/May/18 13:44;jira-bot;Commit 01384c714dbe0405d876b93849e6fff5ec048bff in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=01384c7 ]

AMQ-6707 - fix destination filter delegate param, refactor-auto-gen method; jees
;;;","18/May/18 15:33;gtully;I think this should be sorted on trunk now. The XACompletionTest is the place to add more scenarios as they arise;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMX purge needs to clear the message audit,AMQ-6703,13080038,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,15/Jun/17 09:44,18/May/18 10:37,14/Jul/23 05:44,15/Jun/17 09:50,5.14.0,,,,,,,,,5.15.0,,,,Broker,JMX,,,,0,,,,,,"JMX purge clears a queue of messages but does not reset the message audit. Doing a X.copyTo(Y), X.purge() Y.copyYo(X) results in duplicate detection and messages going to the DLQ in error.
JMX purge needs to clear the message audit such that the queue is free of old state.",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri May 18 10:37:55 UTC 2018,,,,,,,,,,,"0|i3gb5j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Jun/17 09:50;jira-bot;Commit 99f3d4c5054bbf401c6460d99574873b604e4b49 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=99f3d4c ]

[AMQ-6703] have jmx purge clear the audit such that messages can be copied back, fix and test
;;;","15/Jun/17 10:22;jira-bot;Commit df3bd83c0d851c2aa043d1d3cd3aa1d909561694 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=df3bd83 ]

[AMQ-6703] check for enable audit false
;;;","18/May/18 10:37;jira-bot;Commit 2eff835ee23138c31b01e2f560afe96e9094eb87 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=2eff835 ]

AMQ-6703 - fix regression in MBeanTest - StoreQueueCursor not sharing its audit - have purge use rollback and delegate to both cursors
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Leak of ""ActiveMQ Connection Executor"" threads and ActiveMQConnection objects in JCA",AMQ-6700,13079131,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tmielke,tmielke,tmielke,12/Jun/17 07:29,12/Jun/17 08:14,14/Jul/23 05:44,12/Jun/17 08:14,5.14.5,,,,,,,,,5.14.6,,,,JCA Container,RAR,,,,0,jca,,,,,"The ActiveMQ JCA layer may leak threads of name {{""ActiveMQ Connection Executor""}} and instances of {{org.apache.activemq.ActiveMQConnection}} when there are problems with establishing the connection. 
If the initial openwire connection cannot be established, it may run an ""ActiveMQ Connection Executor"" thread to deal with the error leading to a code path that does not close the connection and does not clear up the ""ActiveMQ Connection Executor"" thread.
Low level details in further comments.
 
This problem can be reproduced by running {{ActiveMQResourceAdapter.TransactionContext.recover()}} but potentially other code paths in the resource adapter are effected as well.
",JCA,jira-bot,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Patch,,,,,,,,,9223372036854775807,,,Mon Jun 12 08:14:59 UTC 2017,,,,,,,Patch Available,,,,"0|i3g5k7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Jun/17 07:30;tmielke;Here are the low level details that will lead to leaking ActiveMQConnection objects and threads:

The Arjuna transaction manager of JBoss EAP runs a periodic recovery and calls {{ActiveMQResourceAdapter.TransactionContext.recover()}}
{code}
try {
  original = setConnection(newConnection());
  ...
{code}

Note around the same code path would be executed when Arjuna calls {{commit()}} or {{rollback()}} on the resource adapter.
The call to {{ActiveMQResourceAdapter.newConnection()}} is implemented as

{code}
                        private ActiveMQConnection newConnection() throws JMSException {
                            ActiveMQConnection connection = makeConnection();
                            connection.start();
                            return connection;
                        }
{code}

Method {{makeConnection()}} calls into {{ActiveMQConnectionFacotry.createActiveMQConnection()}} which contains

{code}
        try {
            connection = createActiveMQConnection(transport, factoryStats);
...
            transport.start();

...
            return connection;
        } catch (JMSException e) {
            // Clean up!
            try {
                connection.close();
            } catch (Throwable ignore) {
            }
            throw e;
        } catch (Exception e) {
            // Clean up!
            try {
                connection.close();
            } catch (Throwable ignore) {
            }
            throw JMSExceptionSupport.create(""Could not connect to broker URL: "" + brokerURL + "". Reason: "" + e, e);
        }
{code}

Now if transport.start() raises an errror, this may not result in an exception in this method. Instead the ""ActiveMQ Connection Executor"" thread is used to call {{ActiveMQConnection.transportFailed()}}. So the handling of the error happens in a different thread. Meanwhile above method {{ActiveMQConnectionFacotry.createActiveMQConnection()}} finishes (without exceptions) and we are back in {{ActiveMQResourceAdapter.$2.newConnection()}} where we call {{connection.start()}} (See code sample above). 

In the meantime the ""ActiveMQ Connection Executor"" thread has most likely finished and marked the connection as failed (ActiveMQConnection.transportFailed = true).
{{ActiveMQConnection.start()}} calls method {{ActiveMQConnectioncheckClosedOrFailed()}} which checks for the value of property {{transportFailed}}, which will be true by now and an exception will be raised.

That exception is only caught in {{ActiveMQResourceAdapter.recover()}} which in its {{finally}} clause calls 

{code}
                            } finally {
                                closeConnection(original);
                            }
{code}

but original is null at this stage, so the ActiveMQConnection instance does not get closed and the ""ActiveMQ Connection Executor"" thread is not shut down! Both, the thread and the instance are leaked!
;;;","12/Jun/17 07:31;tmielke;A fix for this bug is to catch and deal with these Exceptions in method {{ActiveMQResourceAdapter.$2.newConnection()}}

{code:java}
                        private ActiveMQConnection newConnection() throws JMSException {
                            ActiveMQConnection connection = null;
                            try {
                                connection = makeConnection();
                                connection.start();
                            } catch (JMSException ex) {
                                if (connection != null) {
                                    try {
                                        connection.close();
                                    } catch (JMSException ignore) { }
                                }
                                throw ex;
                            }
                            return connection;
                        }
{code};;;","12/Jun/17 08:09;jira-bot;Commit a1e595c18fbfb8a21e632b665f180005f1daf053 in activemq's branch refs/heads/AMQ-6700 from [~tmielke]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=a1e595c ]

[AMQ-6700] Leak of ActiveMQ Connection Executor threads and ActiveMQConnection objects in JCA layer
;;;","12/Jun/17 08:10;jira-bot;Commit a1e595c18fbfb8a21e632b665f180005f1daf053 in activemq's branch refs/heads/master from [~tmielke]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=a1e595c ]

[AMQ-6700] Leak of ActiveMQ Connection Executor threads and ActiveMQConnection objects in JCA layer
;;;","12/Jun/17 08:14;tmielke;Fixed with commit [a1e595c18fbfb8a21e632b665f180005f1daf053|https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=blobdiff;f=activemq-ra/src/main/java/org/apache/activemq/ra/ActiveMQResourceAdapter.java;h=b17674e88a9cec7ea5c95dd229dad5c143215833;hp=fd16603865d90c8f2ded3cfaa268056bca1a3731;hb=a1e595c18fbfb8a21e632b665f180005f1daf053;hpb=a6782443c1695f54176afecfda6c5c423bc18a84].;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
STOMP headers are not escaped when using WebSocket,AMQ-6699,13078578,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,thezbyg,thezbyg,09/Jun/17 10:31,14/Jun/17 20:05,14/Jul/23 05:44,14/Jun/17 19:18,5.14.5,,,,,,,,,5.14.6,5.15.0,,,STOMP,,,,,0,,,,,,"When using STOMP over WebSockets, STOMP header values are not escaped in frames sent by ActiveMQ.

When the following frame is sent:
{quote}
SEND
destination:/queue/test
escaped-header:one\ntwo\cthree

Hello World
{quote}
ActiveMQ interprets escaped headers correctly, but does not escape them when sending own frames:
{quote}
MESSAGE
expires:0
destination:/queue/test
subscription:12345
priority:4
escaped-header:one
two:three
message-id:ID:-50091-1497003246573-3:1:-1:1:1
timestamp:1497003247783

Hello World
{quote}
Correctly escaped frame should look like this:
{quote}
MESSAGE
expires:0
destination:/queue/test
subscription:12345
priority:4
escaped-header:one\ntwo\cthree
message-id:ID\c-50091-1497003246573-3\c1\c-1\c1\c1
timestamp:1497003247783

Hello World
{quote}",Java SE Runtime Environment (build 1.8.0_102-b14),jira-bot,tabish,thezbyg,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Jun/17 11:27;thezbyg;stomp-over-websocket-escape-2.patch;https://issues.apache.org/jira/secure/attachment/12872245/stomp-over-websocket-escape-2.patch","09/Jun/17 11:19;thezbyg;stomp-over-websocket-escape.patch;https://issues.apache.org/jira/secure/attachment/12872244/stomp-over-websocket-escape.patch",,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jun 14 20:05:06 UTC 2017,,,,,,,,,,,"0|i3g307:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Jun/17 11:19;thezbyg;Patch with test and fix.;;;","09/Jun/17 11:27;thezbyg;Sorry, previous patch does not append NULL octet at the end of the frame if there is no content.;;;","14/Jun/17 19:15;jira-bot;Commit 2490c85fc5cc27cb32f01553784ef6bc63cd15f0 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=2490c85 ]

AMQ-6699 Fix STOMP over WS not encoding header values

When sending STOMP frames out over WS the marshal isn't doing a proper
encode based on the STOMP version in use and so header values can be
transmitted without proper escaping.  ;;;","14/Jun/17 19:16;jira-bot;Commit 6613b8f1f64b07e98efc6bb3487ac2ef6f0ad60d in activemq's branch refs/heads/activemq-5.14.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=6613b8f ]

AMQ-6699 Fix STOMP over WS not encoding header values

When sending STOMP frames out over WS the marshal isn't doing a proper
encode based on the STOMP version in use and so header values can be
transmitted without proper escaping.
(cherry picked from commit 2490c85fc5cc27cb32f01553784ef6bc63cd15f0)
;;;","14/Jun/17 19:18;tabish;Patch applied with a few modifications. ;;;","14/Jun/17 20:05;thezbyg;Thank you.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
auto+nio+ssl protocolDetectionTimeout does not work if SSL handshake is not finished,AMQ-6698,13078370,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,cshannon,cshannon,cshannon,08/Jun/17 16:23,08/Jun/17 16:35,14/Jul/23 05:44,08/Jun/17 16:35,5.14.5,,,,,,,,,5.14.6,5.15.0,,,Broker,Transport,,,,0,,,,,,"The protocolDetectionTimeout value is supposed to define how long a connection attempt has to detect the protocol type before failing.  However there is a small issue where the initial SSL handshake is being done outside of the async task that times out.  This means that if the SSL handshake isn't finished because the client never sends enough bytes (such as if a client opens a normal TCP socket) then the socket will just hang open and not be closed.  The handshake should be moved inside of the task that times out to fix this.

Also, I'm going to change the default protocolDetectionTimeout to 30 seconds instead of 15 seconds as 30 is the default for the TcpTransport connectionTimeout value and also the default for the InactivityMonitor.",,cshannon,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jun 08 16:34:55 UTC 2017,,,,,,,,,,,"0|i3g1pz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Jun/17 16:34;jira-bot;Commit 2a0b785a041f35aa668d2371c9374eb0fd02063c in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=2a0b785 ]

AMQ-6698 - Allow timeout of SSL handshake for auto+nio+ssl

The handshake now takes place inside of the async task that timesout so
that if the SSL handshake takes too long the connection attempt will
honor protocolDetectionTimeout and actually timeout.  Also, change the
default of protocolDetectionTimeout to 30 seconds so it matches the rest
of the broker's default connection timeout settings.
;;;","08/Jun/17 16:34;jira-bot;Commit 4b4d1defe525e203c9f83f4eb6144a42634b7eb8 in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=4b4d1de ]

AMQ-6698 - Allow timeout of SSL handshake for auto+nio+ssl

The handshake now takes place inside of the async task that timesout so
that if the SSL handshake takes too long the connection attempt will
honor protocolDetectionTimeout and actually timeout.  Also, change the
default of protocolDetectionTimeout to 30 seconds so it matches the rest
of the broker's default connection timeout settings.

(cherry picked from commit 2a0b785a041f35aa668d2371c9374eb0fd02063c)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Aborting a STOMP 1.1 transaction after ACK/NACK leads to invalid state,AMQ-6697,13076830,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,mgerstel,mgerstel,02/Jun/17 12:22,05/Jun/17 07:05,14/Jul/23 05:44,02/Jun/17 18:23,5.14.5,,,,,,,,,5.14.6,5.15.0,,,STOMP,,,,,0,,,,,,"Reproducing the problem:
* Receive a message via STOMP (+EDIT: on a subscription with ack:client-individual+)
* Start a transaction
* ACK -(or NACK)- the message within the transaction
* Abort the transaction
* ACK (or NACK) the message

Expected behaviour:
* The message is according to step #5 either ACKed or NACKed.

Observed behaviour:
* The message is neither ACKed nor NACKed, but stays in unacknowledged state
* An exception is raised:
 org.apache.activemq.transport.stomp.ProtocolException: Unexpected ACK received for message-id [ID:(...)]
        at org.apache.activemq.transport.stomp.ProtocolConverter.onStompAck(ProtocolConverter.java:475)
        at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommand(ProtocolConverter.java:250)
        at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:85)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:233)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:215)
        at java.lang.Thread.run(Thread.java:745)
* an ERROR message is sent to the client

As far as I can tell this is caused by code in both onStompAck() and onStompNack():
https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=blob;f=activemq-stomp/src/main/java/org/apache/activemq/transport/stomp/ProtocolConverter.java;h=b25860bf6895240c33a8643b6fcc731af126d32e;hb=refs/heads/master#l440

With a STOMP 1.1 ACK/NACK, ackId == null, so the message entry is taken out of this.pedingAcks (sic!).
When the transaction is aborted the message entry is then not put back into this.pedingAcks, so any subsequent ACK/NACK will find pendingAck==null, therefore acked==false, raising an exception.",,jira-bot,mgerstel,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Jun 05 07:05:48 UTC 2017,,,,,,,,,,,"0|i3ft07:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Jun/17 15:47;tabish;This test seems to indicate that all is working as designed.

{code}
    @Test(timeout = 60000)
    public void testTransactionRollback() throws Exception {
        MessageProducer producer = session.createProducer(queue);
        producer.send(session.createTextMessage(""Hello""));
        producer.close();

        String frame = ""STOMP\n"" + ""login:system\n"" + ""passcode:manager\n"" +
            ""accept-version:1.1\n"" + ""host:localhost\n"" + ""client-id:test\n"" + ""\n"" + Stomp.NULL;
        stompConnection.sendFrame(frame);

        String f = stompConnection.receiveFrame();
        assertTrue(f.startsWith(""CONNECTED""));

        QueueViewMBean queueView = getProxyToQueue(getQueueName());
        assertEquals(1, queueView.getQueueSize());

        frame = ""BEGIN\n"" + ""transaction: tx1\n"" + ""\n\n"" + Stomp.NULL;
        stompConnection.sendFrame(frame);

        frame = ""SUBSCRIBE\n"" + ""destination:/queue/"" + getQueueName() + ""\n"" +
            ""id:12345\n"" + ""ack:client\n\n"" + Stomp.NULL;
        stompConnection.sendFrame(frame);

        StompFrame received = stompConnection.receive();
        assertTrue(received.getAction().equals(""MESSAGE""));

        // ack it
        frame = ""ACK\n"" + ""transaction: tx1\n"" + ""subscription:12345\n"" + ""message-id:"" +
                received.getHeaders().get(""message-id"") + ""\n\n"" + Stomp.NULL;
        stompConnection.sendFrame(frame);

        // rollback first message
        frame = ""ABORT\n"" + ""transaction: tx1\n"" + ""\n\n"" + Stomp.NULL;
        stompConnection.sendFrame(frame);

        assertEquals(1, queueView.getQueueSize());

        // ack it
        frame = ""ACK\n"" + ""subscription:12345\n"" + ""message-id:"" +
                received.getHeaders().get(""message-id"") + ""\n\n"" + Stomp.NULL;
        stompConnection.sendFrame(frame);

        assertTrue(""Message not ack'd"", Wait.waitFor(new Wait.Condition() {

            @Override
            public boolean isSatisified() throws Exception {
                return queueView.getQueueSize() == 0;
            }
        }));

        String unsub = ""UNSUBSCRIBE\n"" + ""destination:/queue/"" + getQueueName() + ""\n"" +
            ""receipt:1\n"" + ""id:12345\n\n"" + Stomp.NULL;
        stompConnection.sendFrame(unsub);

        String receipt = stompConnection.receiveFrame();
        assertTrue(receipt.contains(""RECEIPT""));
    }
{code}

The first thing I see wrong here is that you cannot NACK a message in a TX so that will definitely fail if you try and do it a second time as you've already NACK'd the message.  My guess is that your first ACK is not including the TXID in the ACK an thereby just ACK'ing the message outside the TX.;;;","02/Jun/17 15:50;jira-bot;Commit bd8661796b190ef605458cdd7a0d90d9af4f51a0 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=bd86617 ]

AMQ-6697 Adds a test to show that the described case works

Correctly ACK inside a TX and then Abort and then ACK again outside a TX
to show that the broker will then mark the message as consumed.;;;","02/Jun/17 16:04;mgerstel;snipped the TCP traffic:

 => STOMP
 => accept-version:1.1
 => login:admin
 => passcode:password
 => 
<=  CONNECTED
<=  server:ActiveMQ/5.14.5
<=  heart-beat:0,0
<=  session:ID:internal.ac.uk-46456-1496419320010-3:1
<=  version:1.1
<=  
<=  
 => SEND
 => content-length:26
 => destination:/queue/some.queue
 => 
 => 2017-06-02 17:02:15.192632SUBSCRIBE
 => ack:client-individual
 => destination:/queue/some.queue
 => id:1
 => 
<=  MESSAGE
<=  content-length:26
<=  expires:0
<=  destination:/queue/some.queue
<=  subscription:1
<=  priority:4
<=  message-id:ID\cinternal.ac.uk-46456-1496419320010-3\c1\c-1\c1\c1
<=  timestamp:1496419335195
<=  
<=  2017-06-02 17:02:15.192632
 => BEGIN
 => transaction:1
 => 
 => ACK
 => message-id:ID\cinternal.ac.uk-46456-1496419320010-3\c1\c-1\c1\c1
 => subscription:1
 => transaction:1
 => 
 => ABORT
 => transaction:1
 => 
 => ACK
 => message-id:ID\cinternal.ac.uk-46456-1496419320010-3\c1\c-1\c1\c1
 => subscription:1
 => 
<=  ERROR
<=  content-type:text/plain
<=  message:Unexpected ACK received for message-id [ID\cinternal.ac.uk-46456-1496419320010-3\c1\c-1\c1\c1]
<=  
<=  org.apache.activemq.transport.stomp.ProtocolException: Unexpected ACK received for message-id [ID:internal.ac.uk-46456-1496419320010-3:1:-1:1:1]
<=  	at org.apache.activemq.transport.stomp.ProtocolConverter.onStompAck(ProtocolConverter.java:475)
<=  	at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommand(ProtocolConverter.java:250)
<=  	at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:85)
<=  	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
<=  	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:233)
<=  	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:215)
<=  	at java.lang.Thread.run(Thread.java:748)
<=  
 => ;;;","02/Jun/17 16:06;mgerstel;According to the spec both ACK and NACK can be used in transactions, so I wonder why you think otherwise. http://stomp.github.io/stomp-specification-1.1.html#NACK
Not relevant to the problem at hand though.
;;;","02/Jun/17 16:16;tabish;Yes, it can be optionally, I should have been more clear, it can't be used in a TX in ActiveMQ;;;","02/Jun/17 16:18;tabish;You will need to create a unit test that shows an issue, testing on the broker shows it works as expected.  I can think of a couple client's that would have issues if it didn't as they rely on this.  ;;;","02/Jun/17 16:23;mgerstel;Working on this now.;;;","02/Jun/17 16:36;mgerstel;Got it.

{code}
diff --git a/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp11Test.java b/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp11Test.java
index f61c899..f4ce712 100644
--- a/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp11Test.java
+++ b/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/Stomp11Test.java
@@ -1150,7 +1150,7 @@ public class Stomp11Test extends StompTestSupport {
         stompConnection.sendFrame(frame);
 
         frame = ""SUBSCRIBE\n"" + ""destination:/queue/"" + getQueueName() + ""\n"" +
-            ""id:12345\n"" + ""ack:client\n\n"" + Stomp.NULL;
+            ""id:12345\n"" + ""ack:client-individual\n\n"" + Stomp.NULL;
         stompConnection.sendFrame(frame);
 
         StompFrame received = stompConnection.receive();
{code}

leads to

{quote}
Tests run: 28, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 90.347 sec <<< FAILURE! - in org.apache.activemq.transport.stomp.Stomp11NIOSSLTest
testTransactionRollbackAllowsSecondAckOutsideTX(org.apache.activemq.transport.stomp.Stomp11NIOSSLTest)  Time elapsed: 30.193 sec  <<< FAILURE!
java.lang.AssertionError: Message not ack'd
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at org.apache.activemq.transport.stomp.Stomp11Test.testTransactionRollbackAllowsSecondAckOutsideTX(Stomp11Test.java:1175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:745)
{quote}
;;;","02/Jun/17 16:37;mgerstel;thanks for your clarification regarding NACK+TX;;;","02/Jun/17 18:19;jira-bot;Commit e83bb6dc38ed793ead919e5d7d6d9146816c66a5 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e83bb6d ]

AMQ-6697 Preserve dispatched state on client-individual tx ack

Need to preserve the messages in the dispatched list when a
client-individual ack comes in so that on abort the state remains
dispatched and the message can still be ack'd;;;","02/Jun/17 18:21;jira-bot;Commit 8417ce537b2cb96965827ebfb793f31814ba1ddd in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=8417ce5 ]

AMQ-6697 Make the MBean explicitly final for java 7 support

;;;","02/Jun/17 18:22;jira-bot;Commit 1c141eae409f87f5a2d8ffe1a5d8821882a614a0 in activemq's branch refs/heads/activemq-5.14.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=1c141ea ]

AMQ-6697 Adds a test to show that the described case works

Correctly ACK inside a TX and then Abort and then ACK again outside a TX
to show that the broker will then mark the message as consumed.
(cherry picked from commit bd8661796b190ef605458cdd7a0d90d9af4f51a0)
;;;","02/Jun/17 18:22;jira-bot;Commit 0be8b63fde120aff68248cf0b10869c83ae7d21c in activemq's branch refs/heads/activemq-5.14.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=0be8b63 ]

AMQ-6697 Preserve dispatched state on client-individual tx ack

Need to preserve the messages in the dispatched list when a
client-individual ack comes in so that on abort the state remains
dispatched and the message can still be ack'd
(cherry picked from commit e83bb6dc38ed793ead919e5d7d6d9146816c66a5)
;;;","02/Jun/17 18:22;jira-bot;Commit e38ac94a27347c89dddcd30c7a3e6063a69308dd in activemq's branch refs/heads/activemq-5.14.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e38ac94 ]

AMQ-6697 Make the MBean explicitly final for java 7 support

(cherry picked from commit 8417ce537b2cb96965827ebfb793f31814ba1ddd)
;;;","02/Jun/17 18:23;tabish;Fixed the individual ack case to not remove the dispatched message if it was in a TX when it was ack'd to preserve state on TX abort ;;;","05/Jun/17 07:05;mgerstel;Confirmed that this fixes my problems. Thank you very much ;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Memory Usage for composite destination increasing when concurrentSend is used,AMQ-6696,13076817,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,02/Jun/17 11:21,02/Jun/17 11:51,14/Jul/23 05:44,02/Jun/17 11:51,5.14.0,,,,,,,,,5.15.0,,,,,,,,,0,,,,,,"After message has been forwarded to the underlying queues MemoryUsageByteCount is increasing for the topic, would have expected it to return to zero.{code}
<destinationInterceptors>
		  <virtualDestinationInterceptor>
		    <virtualDestinations>
				<compositeTopic name=""target"" forwardOnly=""false"" concurrentSend=""true"" >
				         <forwardTo>
				            <queue physicalName=""queue.one"" />
				            <queue physicalName=""queue.two"" />
				            <queue physicalName=""queue.three"" />
			      </forwardTo>
		</compositeTopic>
           </virtualDestinations>
     </virtualDestinationInterceptor>
</destinationInterceptors>{code}",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jun 02 11:24:20 UTC 2017,,,,,,,,,,,"0|i3fsxb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Jun/17 11:24;jira-bot;Commit 7413ee00e1d19563cb0273df954ad71ef1433705 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=7413ee0 ]

[AMQ-6696] zero out usage for forwarded messages such that the original target is no longer referenced. fix and test
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Not possible to autowire connectionFactory in Spring Boot using SB starter,AMQ-6694,13076748,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,davsclaus,preben,preben,02/Jun/17 07:10,22/Jul/17 14:22,14/Jul/23 05:44,22/Jul/17 14:22,5.14.1,5.14.2,5.14.3,5.14.4,5.14.5,,,,,5.15.1,5.16.0,,,Camel,,,,,0,,,,,,"From version 5.14.1 it is not possible to autowire the ConnectionFactory on the activemq component due to the change introduced in this commit
https://github.com/apache/activemq/commit/4437393aa1a981a182142c255f76ae7cc50af183#diff-474de9fc51b7273d42a39c6327492388 

Im not really able to create a PR since I'm aware of the reasoning behind that camel activemq should not be allowed to autowire the sb connectionfactory whereas the camel jms component is  https://github.com/apache/camel/blob/master/components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsComponent.java#L184

Currently the SB autowirering as described here https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-messaging.html#boot-features-activemq seems broken.

The quickfix would be to allow autowirering again, but I wonder if there are other considerations that has to be taken into account.

See also discussion here 
http://camel.465427.n5.nabble.com/spring-activemq-broker-url-not-set-correct-on-Activemq-Spring-Boot-td5799927.html",,cshannon,davsclaus,jira-bot,preben,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Sat Jul 22 14:22:48 UTC 2017,,,,,,,,,,,"0|i3fshz:",9223372036854775807,Regression,,,,,,,,,,,,,,,,,,,,"24/Jun/17 13:10;cshannon;[~davsclaus] - Is it ok if we switch the flag isAllowAutoWiredConnectionFactory to return true inside org.apache.activemq.camel.component.ActiveMQComponent now that we have upgraded to Camel 2.19? The comment you added says it requires 2.18 so I assume it's ok to return true now.;;;","22/Jul/17 14:00;davsclaus;Yeah I think we should look into doing this, as IMHO camel on Spring Boot should be able to just use the configuration in application.properties.

For example this example in my book used to work
https://github.com/camelinaction/camelinaction2/blob/master/chapter7/prototype2/rules2-springboot/src/main/java/camelinaction/InventoryRoute.java#L23

But had to add this workaround.;;;","22/Jul/17 14:22;jira-bot;Commit ae66f964ec7d03e282d42fda3be8b59bedcfa773 in activemq's branch refs/heads/activemq-5.15.x from [~davsclaus]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=ae66f96 ]

AMQ-6694: Not possible to autowire connectionFactory in Spring Boot using SB starter
;;;","22/Jul/17 14:22;jira-bot;Commit bdad06fdca98f161aefbd23e2c983a0d8c60898f in activemq's branch refs/heads/master from [~davsclaus]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=bdad06f ]

AMQ-6694: Not possible to autowire connectionFactory in Spring Boot using SB starter
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SQLException when concurrently moving messages to DLQ,AMQ-6693,13076471,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,01/Jun/17 10:56,01/Jun/17 11:04,14/Jul/23 05:44,01/Jun/17 11:04,5.14.0,,,,,,,,,5.15.0,,,,JDBC,Message Store,,,,0,,,,,,"with the jdbc message store and the absence of a security context moving messages to the dlq on transaction rollback and exhausted redelivery is completed using the broker context.
However the long term connection associated with a jdbc context is not thread safe. It is typically associated with an incoming connection which is.
If multiple consumers poison ack concurrently the broker can step over itself using this shared context.
The long term connection context should be ignored for the broker.",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5141,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jun 01 11:00:15 UTC 2017,,,,,,,,,,,"0|i3fqsf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Jun/17 11:00;jira-bot;Commit c50dc6ff00aa864f22cf7527e733a36567214f0b in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=c50dc6f ]

[AMQ-6693] ignore the long term connection associated with the broker context, fix and test
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.activemq.broker.region.Queue.doMessageSend() future not completing,AMQ-6688,13075661,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,29/May/17 16:10,29/May/17 16:16,14/Jul/23 05:44,29/May/17 16:16,5.14.0,,,,,,,,,5.15.0,,,,Broker,KahaDB,Message Store,,,0,,,,,,"A case of a send thread blocked on the send future.get()...
{code}
ActiveMQ VMTransport: vm://XXXXXX"" #375 daemon prio=5 os_prio=0 tid=0x00007f9bdc2f0800 nid=0x4e2 waiting on condition [0x00007f9bc7e9e000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x00000000d8e65ef8> (a org.apache.activemq.store.kahadb.KahaDBStore$StoreQueueTask$InnerFutureTask)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
	at java.util.concurrent.FutureTask.awaitDone(FutureTask.java:429)
	at java.util.concurrent.FutureTask.get(FutureTask.java:191)
	at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:853)
	at org.apache.activemq.broker.region.Queue.send(Queue.java:727)
	at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:419)
	at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:468)
	at org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:296)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:152)
	at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)
	at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:293)
	at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:157)
	at org.apache.activemq.broker.util.LoggingBrokerPlugin.send(LoggingBrokerPlugin.java:275)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:152)
	at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:157)
	at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:571)
	at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:768)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:326)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:190)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
	at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:271)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:133)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:48)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)

{code}


It seems that the org.apache.activemq.store.kahadb.KahaDBStore.StoreQueueTask#run()  which should invoke complete on the future has been invoked but complete is not triggered. This can happen in the event that the add results in a Throwable!",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon May 29 16:14:26 UTC 2017,,,,,,,,,,,"0|i3flsf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/May/17 16:14;jira-bot;Commit f4c11f73bba4440fd976aa5a3db3b7ee119d4712 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=f4c11f7 ]

[AMQ-6688] catch throwable on add task such that result error result is not lost on failed async send, fix and test
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
destination memory usage incorrect after flow control (PFC) sendTimeout and rollback,AMQ-6687,13074810,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,25/May/17 11:14,25/May/17 15:58,14/Jul/23 05:44,25/May/17 15:58,5.14.0,,,,,,,,,5.15.0,,,,Broker,,,,,0,,,,,,"When using PFC, to block a producer on a memory limit and using a sendTimeout to error out after some timeout. If there is a send transaction the send completes in error even though the transaction has completed once usage allows.
Leaving a dangling send that shows up in the memory usage.",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4467,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu May 25 13:38:08 UTC 2017,,,,,,,,,,,"0|i3fgjb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/May/17 11:16;gtully;AMQ-4467 needed a revisit b/c that change prevented pfc from kicking in in this scenario in error.;;;","25/May/17 11:44;jira-bot;Commit 25f112c5c9a843f162296ad38eb79be47183e0be in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=25f112c ]

[AMQ-6687] ensure transacted sends blocked on pfc do not resume after tx completion. AMQ-4467 refine the fix such that PFC kicks in such that the cache will accept messsages that push it over it's limit while it is still under the limit
;;;","25/May/17 13:38;gtully;With transactions or concurrentStoreAndDispatch - memory is accounted for before it reaches the cache which typically means that the cursor cache stops accepting messages early. If we want the cache and PFC we have to let the cache consume >100% of memory. To achieve this we must set the cursorHighWaterMark>100% something like 120% such that it will still allow a message to be cached while is is <100 that will put it over the 100% (full) limit.
Ie: we check is full and we are at 99%, we accept another message that pushes us to 101%, without a cursorHighWaterMark > 101 the cursor won't cache and will stick at 99% and producer flow control (PFC) won't kick in.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.json is cat-x - needs to be removed,AMQ-6684,13074468,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,gtully,gtully,gtully,24/May/17 10:23,24/May/17 16:24,14/Jul/23 05:44,24/May/17 16:24,5.14.0,,,,,,,,,5.15.0,,,,LevelDB,,,,,0,,,,,,"org.json is cat-x and cannot be included as a compile dependency going forward.

org.linkedin:org.linkedin.zookeeper-impl:jar:1.4.0:compile
[INFO] |  \- org.linkedin:org.linkedin.util-groovy:jar:1.7.1:compile
[INFO] |     +- org.slf4j:jul-to-slf4j:jar:1.5.8:compile
[INFO] |     +- org.apache.ant:ant:jar:1.8.4:compile
[INFO] |     |  \- org.apache.ant:ant-launcher:jar:1.8.4:compile
[INFO] |     \- org.json:json:jar:20090211:compile

is used in activemq-leveldb-store and activemq-partition
using curator as a replacement may be a viable option for the zk client dependency.",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed May 24 16:24:54 UTC 2017,,,,,,,,,,,"0|i3fefb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/May/17 15:19;jira-bot;Commit 7cae60eae0e2835222783c770974d83323dd6a10 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=7cae60e ]

[AMQ-6684] exclude json cat-x transitive dep
;;;","24/May/17 16:24;gtully;resolved via exclusions in the pom.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MQTT over WebSocket doesn't work when WebSocket data frame contains partial or multiple MQTT control packets,AMQ-6680,13073792,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,tabish,grayra,grayra,22/May/17 09:01,22/May/17 16:29,14/Jul/23 05:44,22/May/17 16:29,5.14.5,,,,,,,,,5.14.6,5.15.0,,,MQTT,Transport,,,,0,mqtt,patch,websocket,,,"I tried to use the MQTT.js library in a browser but it didn't connect to ActiveMQ using MQTT-WebSocket transport.
Debugging MQTT.js and ActiveMQ I found that the org.apache.activemq.transport.ws.jetty9.MQTTSocket class (in activemq-http module) assumes that a single WebSocket data frame +always+ contains a single MQTT Control Packet.
This is the cause of MQTT.js failure because MQTT.js makes several send over WebSocket for a single MQTT Control Packet (header, length etc).

Accordingly to MQTT OASIS specification ( http://docs.oasis-open.org/mqtt/mqtt/v3.1.1/os/mqtt-v3.1.1-os.html#_Toc398718127 ):

??A single WebSocket data frame can contain multiple or partial MQTT Control Packets. The receiver MUST NOT assume that MQTT Control Packets are aligned on WebSocket frame boundaries.??

And RFC 6455 ( https://www.ietf.org/rfc/rfc6455.txt ): 

??The WebSocket message does not necessarily correspond to a particular network layer framing, as a fragmented message may be coalesced or split by an intermediary.??

So I think that ActiveMQ should be fixed to be compliant to the WebSocket and MQTT specifications.

I attached the diff patch file for MQTTSocket which fixes the problem and a new activemq-http module MQTT-WebSocket unit test for this issue (the same of MQTTWSTransportTest but which splits MQTT Frame Packet in multiple WebSocket frames):

MQTTWSPartialFrameConnection.java
MQTTWSPartialFrameTest.java

When writing the unit test I found also a bug in the class org.apache.activemq.transport.ws.MQTTWSConnection.java. 
All the occurrences of: 

{code:java}
ByteSequence payload = wireFormat.marshal(command.encode());
connection.getRemote().sendBytes(ByteBuffer.wrap(payload.data));
{code}
 
should be replaced with:

{code:java}
ByteSequence payload = wireFormat.marshal(command.encode());
connection.getRemote().sendBytes(ByteBuffer.wrap(payload.data, payload.offset, payload.length));
{code}

That is because of the payload.data bytes array buffer in ByteSequenze is bigger than the real MQTT frame packed bytes size, so sending all the payload.data bytes array, ActiveMQ receives much more extra zero-extra bytes. With the current implementation, those extra zero-bytes are ignored and this makes wrongly passes the test (while it should fail because there are ""extra bytes"" which doesn't respect the MQTT protocol).

I attached also the diff patch file for the MQTTWSConnection file.
",,grayra,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/May/17 09:03;grayra;MQTTSocket-patch.txt;https://issues.apache.org/jira/secure/attachment/12869219/MQTTSocket-patch.txt","22/May/17 09:03;grayra;MQTTWSConnection-patch.txt;https://issues.apache.org/jira/secure/attachment/12869222/MQTTWSConnection-patch.txt","22/May/17 09:03;grayra;MQTTWSPartialFrameConnection.java;https://issues.apache.org/jira/secure/attachment/12869220/MQTTWSPartialFrameConnection.java","22/May/17 09:03;grayra;MQTTWSPartialFrameTest.java;https://issues.apache.org/jira/secure/attachment/12869221/MQTTWSPartialFrameTest.java",,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Patch,,,,,,,,,9223372036854775807,,,Mon May 22 16:28:08 UTC 2017,,,,,,,Patch Available,,,,"0|i3fa93:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/May/17 09:03;grayra;Diff patch files and unit test;;;","22/May/17 16:27;jira-bot;Commit e69367fbc329aa66a90e33a917b0d4ccd86c015e in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e69367f ]

https://issues.apache.org/jira/browse/AMQ-6680

Fix handling of incoming MQTT binary data over WS.  The handler should
use the MQTTCodec to ensure that partial or packed frames are fully
processed;;;","22/May/17 16:28;jira-bot;Commit bf395fcdb3d63a3af48494cbec86734ed8867a90 in activemq's branch refs/heads/activemq-5.14.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=bf395fc ]

https://issues.apache.org/jira/browse/AMQ-6680

Fix handling of incoming MQTT binary data over WS.  The handler should
use the MQTTCodec to ensure that partial or packed frames are fully
processed
(cherry picked from commit e69367fbc329aa66a90e33a917b0d4ccd86c015e)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move/Retry (destructive) Queue JMX operations need synchronization,AMQ-6678,13073094,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,18/May/17 11:35,29/May/17 10:21,14/Jul/23 05:44,18/May/17 11:41,5.14.0,,,,,,,,,5.15.0,,,,Broker,JMX,,,,0,,,,,,"concurrent calls to move selector matching messages from one queue to another or any wildcard type destructive JMX operation can break on concurrent invocation.
The move results in duplicates in the journal (waste of space) and incorrect return counts due to inflight messages being visible in error.
Two jmx consoles is enough to cause problems.",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon May 29 10:21:20 UTC 2017,,,,,,,,,,,"0|i3f5xz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/May/17 11:40;jira-bot;Commit acab282d9cb348cfc608ee405de4f9d3566698cc in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=acab282 ]

[AMQ-6678] sync destructive queue view mbean (jmx) operations such that concurrent calls see consistent state
;;;","18/May/17 11:41;gtully;fix and test added.;;;","29/May/17 10:21;jira-bot;Commit 00ee9491d9e21b85f44f23e05bc1bd6fd82dc2cc in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=00ee949 ]

[AMQ-6678] sync destructive purge on queue view mbean (jmx) to prevent concurrent calls
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KahaDB - Inconsistent error handling on corrupt journal reads,AMQ-6670,13069467,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,05/May/17 14:28,10/May/17 10:30,14/Jul/23 05:44,05/May/17 14:46,5.14.0,,,,,,,,,5.15.0,,,,KahaDB,Message Store,,,,0,,,,,,"When the journal is corrupt, for example if it is overwritten with null or zero. The result of reading from corrupt locations is inconsistent. 
Errors occur but not all result in a trip to the IOExceptionHander where the option to stop the broker is available.
ClassCastExceptions and RuntimeExceptions can bubble up to the cursors in error.

{code}ERROR | Failed to page in more queue messages  | org.apache.activemq.broker.region.Queue | ActiveMQ BrokerService[XXXXX] Task-300
java.lang.RuntimeException: java.lang.RuntimeException: java.lang.ClassCastException: org.apache.activemq.store.kahadb.data.KahaTraceCommand cannot be cast to org.apache.activemq.store.kahadb.data.KahaAddMessageCommand
	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:145){code}

or {code}ERROR | Failed to load message at: 1084:12816246 | org.apache.activemq.store.kahadb.KahaDBStore | ActiveMQ BrokerService[XXXX] Task-702
org.apache.activemq.protobuf.InvalidProtocolBufferException: Protocol message contained an invalid tag (zero).
	at org.apache.activemq.protobuf.InvalidProtocolBufferException.invalidTag(InvalidProtocolBufferException.java:48)
	at org.apache.activemq.protobuf.CodedInputStream.readTag(CodedInputStream.java:75) {code}",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed May 10 10:30:44 UTC 2017,,,,,,,,,,,"0|i3ejmf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/May/17 14:45;jira-bot;Commit 2518bded67b765463bab7742708bcaf4f706b46d in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=2518bde ]

[AMQ-6670] - trap classcast and marshall errors on load message from journal such that errors are consistently propagated to the ioExceptionHandler
;;;","08/May/17 10:54;jira-bot;Commit 053c38f99f910872b16c29e7e145e584b3b0c081 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=053c38f ]

[AMQ-6670] - disable expiry processing that may page in and change the test
;;;","10/May/17 10:30;jira-bot;Commit eb1a3eb77bf0ce823ba5f4891ef7a546edce5321 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=eb1a3eb ]

[AMQ-6670] - harden the test to avoid ci failure
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQP: WS connections don't respect maxFrameSize value on transportConnection,AMQ-6669,13069271,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,04/May/17 20:36,04/May/17 20:55,14/Jul/23 05:44,04/May/17 20:55,5.14.5,,,,,,,,,5.14.6,5.15.0,,,AMQP,,,,,0,,,,,,For AMQP WebSocket connections the maxFrameSize setting on the ws Transport doesn't modify the sockets maxBinaryMessageSize option to allow packets larger than 65535 through leading to a dropped connection.  ,,jira-bot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu May 04 20:54:22 UTC 2017,,,,,,,,,,,"0|i3eiev:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/May/17 20:38;jira-bot;Commit 2e2d5ddd3de7d0fe36ce5eb3d4fe81e97fe990a4 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=2e2d5dd ]

https://issues.apache.org/jira/browse/AMQ-6669

Respect the wireFormat.maxFrameSize option on WS and WSS transports
allowing binary content larger than 65535;;;","04/May/17 20:54;jira-bot;Commit bc879d762ab4b5e32df9d4bd50c19c192a87a777 in activemq's branch refs/heads/activemq-5.14.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=bc879d7 ]

https://issues.apache.org/jira/browse/AMQ-6669

Respect the wireFormat.maxFrameSize option on WS and WSS transports
allowing binary content larger than 65535
(cherry picked from commit 2e2d5ddd3de7d0fe36ce5eb3d4fe81e97fe990a4)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Many instances of ""duplicate message ... from cursor"" redirecting to dlq",AMQ-6667,13068710,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,03/May/17 10:28,03/May/17 10:43,14/Jul/23 05:44,03/May/17 10:43,5.14.0,,,,,,,,,5.15.0,,,,KahaDB,,,,,0,,,,,,"In a high throughput scenario on a single destination there can be many warnings of this kind:

{code}
[2017-03-21 09:51:37,548] WARN ActiveMQ BrokerService[localhost] Task-5 Queue - queue://TEST, subscriptions=10, memory=102%, size=399, 
pending=0, duplicate message ActiveMQTextMessage {commandId = 72, responseRequired = true, 
messageId = ID:Mac.fritz.box-64479-1490086286066-183:1:1:1:68, originalDestination = null, originalTransactionId = null, 
producerId = ID:Mac.fritz.box-64479-1490086286066-183:1:1:1, destination = queue://TEST, transactionId = null, expiration = 0, 
timestamp = 1490086297427, arrival = 0, brokerInTime = 1490086297427, brokerOutTime = 1490086297427, correlationId = null, replyTo = null, persistent = true, 
type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, 
content = org.apache.activemq.util.ByteSequence@8672edc, marshalledProperties = null, dataStructure = null, redeliveryCounter = 0, size = 50216, properties = null, 
readOnlyProperties = false, readOnlyBody = false, droppable = false, jmsXGroupFirstForConsumer = false, text = ...XXXXXXXXXXXX} 
from cursor, is cursor audit disabled or too constrained? Redirecting to dlq
{code}

The broker loads messages twice into the cursor.",,gtully,jira-bot,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed May 03 10:36:31 UTC 2017,,,,,,,,,,,"0|i3eeyf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/May/17 10:32;gtully;increasing the audit capacity; policyEntry maxProducersToAudit=200 ensures the cursor audit tracks up to 200 producers and traps the duplicate from the store. In addition, disabling concurrentStoreAndDispatch avoids the issue.

The root cause is enabling the cursor cache when there are pending sends leaving a possible scenario where a sync send is lost behind sufficient async sends that fill the cache. Reverting to the store in this case results in duplicates.;;;","03/May/17 10:36;jira-bot;Commit a0ba0bf4c6beaf50ce5e021ef5e4d493119bb1ef in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=a0ba0bf ]

[AMQ-6667] gate cursor cache enablement on a single pending send and tidy up setbatch to always check outstanding async future list. Fix and test
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
certificate-based authentication on network bridge fails for nio+ssl protocol,AMQ-6665,13067325,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,27/Apr/17 10:57,05/May/17 09:46,14/Jul/23 05:44,27/Apr/17 11:10,5.14.0,,,,,,,,,5.15.0,,,,Network of Brokers,,,,,0,,,,,,"client certificate authentication works in the following scenario:
{code}
Broker A
    ...
    <jaasDualAuthenticationPlugin 
        configuration=""activemq""
        sslConfiguration=""CertLogin"" />
    ...
    <transportConnector name=""sslTransportConnector"" uri=""ssl://0.0.0.0:61618?needClientAuth=true&amp;wantClientAuth=true""/>
{code}
Broker B
{code}
    ...
    networkConnector uri=""static://(ssl://localhost:61618)"" name=""myNetworkConnector"" duplex=""true"" consumerTTL=""2"" messageTTL=""100"" dynamicOnly=""false"">
    ...
{code}

But if you change the transport to nio+ssl, the network connector fails with the following message:
{code}
INFO | Stopping vm://localhosta#0 because Failed with SecurityException: User name [null] or password is invalid.
{code}
",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri May 05 09:46:52 UTC 2017,,,,,,,,,,,"0|i3e6en:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Apr/17 11:07;jira-bot;Commit 57795bafcea290c6879bb288822435c480a9212d in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=57795ba ]

[AMQ-6665] - check for peercerts is now on tcp transport such that the bridge connection info can have the correct context
;;;","27/Apr/17 11:10;gtully;issue was nio+ssl transport not extending SslTtransport but since AMQ-6339 the relevant getPeerCerts is pushed back to tcpTransport. Now checking for that in the network bridge;;;","05/May/17 09:46;jira-bot;Commit b30ae4e8462f594488c95868aa99f89c82de5861 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b30ae4e ]

[AMQ-6665] - remove extranious import from test
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
XMLs in ActiveMQ admin panel are not generated properly,AMQ-6664,13067069,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,jacekk,jacekk,26/Apr/17 13:47,21/Jun/17 13:13,14/Jul/23 05:44,24/May/17 20:24,5.14.5,,,,,,,,,5.14.6,5.15.0,,,Web Console,,,,,0,,,,,,"Start ActiveMQ 5.14.5 and go to http://127.0.0.1:8161/admin/xml/queues.jsp

Instead of
{code}<queues></queues>{code}
you get raw template:
{code}
<queues>
<c:forEach items=""[]"" var=""row"">
<queue name=""<c:out value="""" />"">

  <stats size=""""
         consumerCount=""""
         enqueueCount=""""
         dequeueCount=""""/>


  <feed>
    <atom><c:out value=""queueBrowse/?view=rss&amp;feedType=atom_1.0""/></atom>
    <rss><c:out value=""queueBrowse/?view=rss&amp;feedType=rss_2.0""/></rss>
  </feed>
</queue>
</c:forEach>
</queues>{code}

This worked fine in AcitveMQ 5.14.4 and earlier.",,jacekk,jira-bot,libor.svehlak,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6685,AMQ-6710,,,,,,,,,AMQ-6656,AMQ-6620,,AMQ-6605,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed May 24 20:24:19 UTC 2017,,,,,,,,,,,"0|i3e4tr:",9223372036854775807,Regression,,,,,,,,,,,,,,,,,,,,"23/May/17 13:56;libor.svehlak;Caused by commit f651aa361f8d8428c94420d1f5713c70ed0baf07 (changes in file {{activemq-web-console\src\main\webapp\WEB-INF\web.xml}}).

Workaround/solution: Add {{<%@include file=""../WEB-INF/jspf/headertags.jspf"" %>}} to every JSP file in directory {{activemq-web-console/src/main/webapp/xml/}} similar way like for JSP pages in the commit mentioned above.;;;","24/May/17 20:23;jira-bot;Commit 04b60cb188932a91be9f59d6cda09290219d8a45 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=04b60cb ]

AMQ-6664 - Adding missing header tag to JSP files

Also fixing JSP comments.  This fix is a follow on to
AMQ-6620
;;;","24/May/17 20:24;jira-bot;Commit 908ef647289a80a6fec500a6d37dd59059dccfbd in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=908ef64 ]

AMQ-6664 - Adding missing header tag to JSP files

Also fixing JSP comments.  This fix is a follow on to
AMQ-6620

(cherry picked from commit 04b60cb188932a91be9f59d6cda09290219d8a45)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Auto transport with MQTT will fail for a long password,AMQ-6661,13066671,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,25/Apr/17 12:41,25/Apr/17 12:48,14/Jul/23 05:44,25/Apr/17 12:47,,,,,,,,,,5.14.6,5.15.0,,,MQTT,Transport,,,,0,,,,,,The issue is that there is a variable length header as part of the CONNECT packet.  The remaining length portion can be up to 4 bytes and that isn't being taken in to account.,,cshannon,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ARTEMIS-826,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Apr 25 12:48:50 UTC 2017,,,,,,,,,,,"0|i3e2db:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Apr/17 12:42;cshannon;This issue has the same root cause as ARTEMIS-826 as the protocol detection logic was re-used from Artemis.  The fix will be a port of the same fix that goes into Artemis.;;;","25/Apr/17 12:47;jira-bot;Commit 808a4c5c173bf789326d33ed6bbbc7a6544bf8e0 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=808a4c5 ]

AMQ-6661 - Fix Auto MQTT protocol detection

Protocol detection now takes into account the variable length header in
the CONNECT packet.
;;;","25/Apr/17 12:48;jira-bot;Commit 675729c204f0174a47953fceabec5b12c166e240 in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=675729c ]

AMQ-6661 - Fix Auto MQTT protocol detection

Protocol detection now takes into account the variable length header in
the CONNECT packet.

(cherry picked from commit 808a4c5c173bf789326d33ed6bbbc7a6544bf8e0)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deadlock closing a connection due to an exception,AMQ-6660,13066004,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,dgplexxi,dgplexxi,21/Apr/17 21:23,29/Jun/21 22:05,14/Jul/23 05:44,25/Jun/21 15:40,5.16.1,,,,,,,,,5.16.3,5.17.0,,,,,,,,0,,,,,,"While recovering from a period of network instability, our application deadlocked in ActiveMQ code.

{noformat}
Found one Java-level deadlock:
=============================
""ActiveMQ Connection Executor: tcp:///<ip address>:61616@51026"":
  waiting to lock monitor 0x00007f60fc0060b8 (object 0x0000000773f00308, a java.lang.Object),
  which is held by ""privateJmsInPriority.container-1""
""privateJmsInPriority.container-1"":
  waiting to lock monitor 0x00007f610840dbc8 (object 0x0000000773f99930, a org.apache.activemq.ActiveMQConnection),
  which is held by ""ActiveMQ Connection Executor: tcp:///<ip address>:61616@51026""

Java stack information for the threads listed above:
===================================================
""ActiveMQ Connection Executor: tcp:///<ip address>:61616@51026"":
        at org.apache.activemq.SimplePriorityMessageDispatchChannel.close(SimplePriorityMessageDispatchChannel.java:154)
        - waiting to lock <0x0000000773f00308> (a java.lang.Object)
        at org.apache.activemq.ActiveMQMessageConsumer.dispose(ActiveMQMessageConsumer.java:800)
        at org.apache.activemq.ActiveMQSession.dispose(ActiveMQSession.java:689)
        - locked <0x0000000773f003d8> (a org.apache.activemq.ActiveMQSession)
        at org.apache.activemq.ActiveMQConnection.close(ActiveMQConnection.java:659)
        - locked <0x0000000773f99930> (a org.apache.activemq.ActiveMQConnection)
        at org.springframework.jms.connection.SingleConnectionFactory.closeConnection(SingleConnectionFactory.java:456)
        at org.springframework.jms.connection.SingleConnectionFactory.resetConnection(SingleConnectionFactory.java:345)
        - locked <0x0000000773f9a590> (a java.lang.Object)
        at org.springframework.jms.connection.CachingConnectionFactory.resetConnection(CachingConnectionFactory.java:207)
        at org.springframework.jms.connection.SingleConnectionFactory.onException(SingleConnectionFactory.java:323)
        at org.springframework.jms.connection.SingleConnectionFactory$AggregatedExceptionListener.onException(SingleConnectionFactory.java:673)
        - locked <0x0000000773f9a590> (a java.lang.Object)
        at org.apache.activemq.ActiveMQConnection$5.run(ActiveMQConnection.java:1976)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
        at java.lang.Thread.run(Thread.java:745)
""privateJmsInPriority.container-1"":
        at org.apache.activemq.ActiveMQConnection.getScheduler(ActiveMQConnection.java:2519)
        - waiting to lock <0x0000000773f99930> (a org.apache.activemq.ActiveMQConnection)
        at org.apache.activemq.ActiveMQSession.getScheduler(ActiveMQSession.java:2074)
        at org.apache.activemq.ActiveMQMessageConsumer.rollback(ActiveMQMessageConsumer.java:1241)
        - locked <0x0000000773f01030> (a java.util.LinkedList)
        - locked <0x0000000773f00308> (a java.lang.Object)
        at org.apache.activemq.ActiveMQMessageConsumer$5.afterRollback(ActiveMQMessageConsumer.java:1032)
        at org.apache.activemq.TransactionContext.afterRollback(TransactionContext.java:157)
        at org.apache.activemq.TransactionContext.commit(TransactionContext.java:332)
        at org.apache.activemq.ActiveMQSession.commit(ActiveMQSession.java:561)
        at sun.reflect.GeneratedMethodAccessor897.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:498)
        at org.springframework.jms.connection.CachingConnectionFactory$CachedSessionInvocationHandler.invoke(CachingConnectionFactory.java:386)
        at com.sun.proxy.$Proxy49.commit(Unknown Source)
        at org.springframework.jms.support.JmsUtils.commitIfNecessary(JmsUtils.java:217)
        at org.springframework.jms.listener.AbstractMessageListenerContainer.commitIfNecessary(AbstractMessageListenerContainer.java:761)
        at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:665)
        at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:319)
        at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:257)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1166)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1158)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1055)
        at java.lang.Thread.run(Thread.java:745)

Found 1 deadlock.
{noformat}

",,aweinstein,cshannon,dgplexxi,jira-bot,juanavelez,mattrpav,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jun 29 22:05:16 UTC 2021,,,,,,,,,,,"0|i3dy9b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Apr/17 21:30;tabish;5.8.0 is rather ancient, have you tried with a current release?;;;","21/Apr/17 21:33;dgplexxi;No, I have not tried that yet.  ;;;","04/Dec/20 15:57;mattrpav;[~dgplexxi] This issue is being marked close-pending and will be closed in 30 days if there is no response. This issue is most likely resolved in more recent releases than 5.8.0.

Please test with a 5.15.14 or 5.16.0 release and report back if this is still an issue.;;;","15/Jan/21 15:40;mattrpav;Closing this issue due to inactivity. To re-open, please test with 5.16.1 or newer.;;;","01/Apr/21 21:51;aweinstein;Please re-open this ticket to investigate since we're seeing this deadlock again even after upgrading to 5.16.1:
{noformat}
""ActiveMQ Connection Executor: 
    tcp://********"":

      waiting to lock monitor 0x00007fb9ec008898 (object 0x000000008512c448, a java.lang.Object),
  which is held by ""DefaultMessageListenerContainer-502""
    

    ""DefaultMessageListenerContainer-502"":

      waiting to lock monitor 0x00007fba440325e8 (object 0x0000000085048718, a org.apache.activemq.ActiveMQConnection),
  which is held by ""ActiveMQ Connection Executor: tcp://********""

""ActiveMQ Connection Executor: 
    tcp://********"":

    	at org.apache.activemq.SimplePriorityMessageDispatchChannel.close(SimplePriorityMessageDispatchChannel.java:166)
	- waiting to lock <0x000000008512c448> (a java.lang.Object)
	at org.apache.activemq.ActiveMQMessageConsumer.dispose(ActiveMQMessageConsumer.java:859)
	at org.apache.activemq.ActiveMQSession.dispose(ActiveMQSession.java:729)
	- locked <0x000000008506fd50> (a org.apache.activemq.ActiveMQSession)
	at org.apache.activemq.ActiveMQConnection.close(ActiveMQConnection.java:671)
	- locked <0x0000000085048718> (a org.apache.activemq.ActiveMQConnection)
	at org.springframework.jms.connection.SingleConnectionFactory.closeConnection(SingleConnectionFactory.java:501)
	at org.springframework.jms.connection.SingleConnectionFactory.resetConnection(SingleConnectionFactory.java:389)
	- locked <0x000000008145d510> (a java.lang.Object)
	at org.springframework.jms.connection.CachingConnectionFactory.resetConnection(CachingConnectionFactory.java:205)
	at org.springframework.jms.connection.SingleConnectionFactory.onException(SingleConnectionFactory.java:367)
	at org.springframework.jms.connection.SingleConnectionFactory$AggregatedExceptionListener.onException(SingleConnectionFactory.java:721)
	at org.apache.activemq.ActiveMQConnection$5.run(ActiveMQConnection.java:1967)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
    

    ""DefaultMessageListenerContainer-502"":

    	at org.apache.activemq.ActiveMQConnection.getScheduler(ActiveMQConnection.java:2387)
	- waiting to lock <0x0000000085048718> (a org.apache.activemq.ActiveMQConnection)
	at org.apache.activemq.ActiveMQSession.getScheduler(ActiveMQSession.java:2250)
	at org.apache.activemq.ActiveMQMessageConsumer.rollback(ActiveMQMessageConsumer.java:1291)
	- locked <0x000000008512c5d0> (a java.util.LinkedList)
	- locked <0x000000008512c448> (a java.lang.Object)
	at org.apache.activemq.ActiveMQMessageConsumer$5.afterRollback(ActiveMQMessageConsumer.java:1094)
	at org.apache.activemq.TransactionContext.afterRollback(TransactionContext.java:162)
	at org.apache.activemq.TransactionContext.commit(TransactionContext.java:340)
	at org.apache.activemq.ActiveMQSession.commit(ActiveMQSession.java:582)
	at sun.reflect.GeneratedMethodAccessor101.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.jms.connection.CachingConnectionFactory$CachedSessionInvocationHandler.invoke(CachingConnectionFactory.java:383)
	at com.sun.proxy.$Proxy162.commit(Unknown Source)
	at org.springframework.jms.support.JmsUtils.commitIfNecessary(JmsUtils.java:218)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.commitIfNecessary(AbstractMessageListenerContainer.java:776)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:680)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:318)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:257)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1189)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1179)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1076)
	at java.lang.Thread.run(Thread.java:748)


{noformat}
Thanks.;;;","25/Jun/21 00:12;juanavelez;We are experiencing the same issue as above using 5.16.1. This is caused by network instability similar to what the original poster experienced. Any help is greatly appreciated. 

 
{code:java}
Found one Java-level deadlock:
=============================
""ActiveMQ Connection Executor: tcp://********"":
  waiting to lock monitor 0x00007f9de400c838 (object 0x00000000878f5188, a java.lang.Object),
  which is held by ""DefaultMessageListenerContainer-73""
""DefaultMessageListenerContainer-73"":
  waiting to lock monitor 0x00007f9de4010f18 (object 0x0000000084212820, a org.apache.activemq.ActiveMQConnection),
  which is held by ""ActiveMQ Connection Executor: tcp://********""Java stack information for the threads listed above:
===================================================
""ActiveMQ Connection Executor: tcp://********"":
	at org.apache.activemq.SimplePriorityMessageDispatchChannel.close(SimplePriorityMessageDispatchChannel.java:167)
	- waiting to lock <0x00000000878f5188> (a java.lang.Object)
	at org.apache.activemq.ActiveMQMessageConsumer.dispose(ActiveMQMessageConsumer.java:859)
	at org.apache.activemq.ActiveMQSession.dispose(ActiveMQSession.java:729)
	- locked <0x0000000084837318> (a org.apache.activemq.ActiveMQSession)
	at org.apache.activemq.ActiveMQConnection.close(ActiveMQConnection.java:671)
	- locked <0x0000000084212820> (a org.apache.activemq.ActiveMQConnection)
	at org.springframework.jms.connection.SingleConnectionFactory.closeConnection(SingleConnectionFactory.java:501)
	at org.springframework.jms.connection.SingleConnectionFactory.resetConnection(SingleConnectionFactory.java:389)
	- locked <0x0000000081768c60> (a java.lang.Object)
	at org.springframework.jms.connection.CachingConnectionFactory.resetConnection(CachingConnectionFactory.java:205)
	at org.springframework.jms.connection.SingleConnectionFactory.onException(SingleConnectionFactory.java:367)
	at org.springframework.jms.connection.SingleConnectionFactory$AggregatedExceptionListener.onException(SingleConnectionFactory.java:721)
	at org.apache.activemq.ActiveMQConnection$5.run(ActiveMQConnection.java:1967)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
""DefaultMessageListenerContainer-73"":
	at org.apache.activemq.ActiveMQConnection.getScheduler(ActiveMQConnection.java:2387)
	- waiting to lock <0x0000000084212820> (a org.apache.activemq.ActiveMQConnection)
	at org.apache.activemq.ActiveMQSession.getScheduler(ActiveMQSession.java:2250)
	at org.apache.activemq.ActiveMQMessageConsumer.rollback(ActiveMQMessageConsumer.java:1291)
	- locked <0x00000000878f5310> (a java.util.LinkedList)
	- locked <0x00000000878f5188> (a java.lang.Object)
	at org.apache.activemq.ActiveMQMessageConsumer$5.afterRollback(ActiveMQMessageConsumer.java:1094)
	at org.apache.activemq.TransactionContext.afterRollback(TransactionContext.java:162)
	at org.apache.activemq.TransactionContext.commit(TransactionContext.java:340)
	at org.apache.activemq.ActiveMQSession.commit(ActiveMQSession.java:582)
	at sun.reflect.GeneratedMethodAccessor180.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.jms.connection.CachingConnectionFactory$CachedSessionInvocationHandler.invoke(CachingConnectionFactory.java:383)
	at com.sun.proxy.$Proxy162.commit(Unknown Source)
	at org.springframework.jms.support.JmsUtils.commitIfNecessary(JmsUtils.java:218)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.commitIfNecessary(AbstractMessageListenerContainer.java:776)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:680)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:318)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:257)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1189)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1179)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1076)
	at java.lang.Thread.run(Thread.java:748)Found 1 deadlock.

{code};;;","25/Jun/21 13:24;mattrpav;Users reporting issues with 5.16.1;;;","25/Jun/21 14:42;cshannon;The culprit seems to be the synchronized block here: [https://github.com/apache/activemq/blob/activemq-5.16.1/activemq-client/src/main/java/org/apache/activemq/ActiveMQConnection.java#L2386]

The idea here seems to be to delay starting a new thread unless needed but the synchronized block is causing the issue. This could probably be fixed by creating the Scheduler object on connection creation to avoid needing to lock when calling getScheduler(). The call to start() could still be delayed until the first time it is needed because it's thread safe (uses compare/set) 

I can do a quick patch for this

 ;;;","25/Jun/21 14:49;cshannon;On second thought I'm going to probably just still delay object creation and use a different lock or CAS/Atomic to avoid locking on the connection because creating a Scheduler without any purpose would still create a fair amount of empty objects to clean up later for no reason;;;","25/Jun/21 15:37;jira-bot;Commit 3f5abd4433d3dca911ac418d899346e7dd675b7b in activemq's branch refs/heads/main from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=3f5abd4 ]

AMQ-6660 - Use a separate lock for lazy scheduler creation to prevent
deadlocks

Switch to using a dedicated lock to initialize the Scheduler object
inside of ActiveMQConnection to prevent a deadlock scenario that occurs
when using the intrinsic ActiveMQConnection lock. This is using double
checked locking so this lock will only be contended with during lazy
creation and then will rely on the volatile reference for future reads
and when stopping/closing.
;;;","25/Jun/21 15:39;jira-bot;Commit dc786edeccb55cc16facb73b48466b3ef55263fa in activemq's branch refs/heads/activemq-5.16.x from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=dc786ed ]

AMQ-6660 - Use a separate lock for lazy scheduler creation to prevent
deadlocks

Switch to using a dedicated lock to initialize the Scheduler object
inside of ActiveMQConnection to prevent a deadlock scenario that occurs
when using the intrinsic ActiveMQConnection lock. This is using double
checked locking so this lock will only be contended with during lazy
creation and then will rely on the volatile reference for future reads
and when stopping/closing.

(cherry picked from commit 3f5abd4433d3dca911ac418d899346e7dd675b7b)
;;;","25/Jun/21 15:40;cshannon;Resolved by using a dedicated scheduler lock for the double-checked locking implementation on the scheduler initialization which will break the deadlock as the Connection lock won't be acquired anymore;;;","29/Jun/21 22:05;juanavelez;Somehow I never got notifications about your posts/comments but I am glad to see that a fix took place. Thank you all for your help.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error at AMQ Admin Panel scheduled.jsp,AMQ-6656,13063726,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,msoplinski,msoplinski,13/Apr/17 08:39,01/Jun/17 15:35,14/Jul/23 05:44,01/Jun/17 15:35,5.13.4,,,,,,,,,5.14.6,5.15.0,,,,,,,,0,,,,,,"While accessing ActiveMQ Admin Panel section Scheduled I get the following error at web view:
{quote}
Exception occurred while processing this request, check the log for more information!
{quote}

Stacktrace from logs:
{code}
| WARN  |  | org.eclipse.jetty.servlet.ServletHandler | qtp1491860739-8662832
org.apache.jasper.JasperException: An exception occurred processing JSP page /scheduled.jsp at line 45

42:             </tr>
43:     </thead>
44:     <tbody>
45:             <c:forEach items=""${requestContext.brokerQuery.scheduledJobs}""
46:             var=""row"">
47:             <tr>
48:              <td><c:out value=""${row.jobId}""/></td>


Stacktrace:
        at org.apache.jasper.servlet.JspServletWrapper.handleJspException(JspServletWrapper.java:568)[apache-jsp-8.0.9.M3.jar:2.3]
        at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:470)[apache-jsp-8.0.9.M3.jar:2.3]
        at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:405)[apache-jsp-8.0.9.M3.jar:2.3]
        at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:349)[apache-jsp-8.0.9.M3.jar:2.3]
        at org.eclipse.jetty.jsp.JettyJspServlet.service(JettyJspServlet.java:107)[apache-jsp-9.2.13.v20150730.jar:9.2.13.v20150730]
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)[tomcat-servlet-api-8.0.24.jar:]
        at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:808)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)[spring-web-4.1.9.RELEASE.jar:4.1.9.RELEASE]
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)[spring-web-4.1.9.RELEASE.jar:4.1.9.RELEASE]
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.apache.activemq.web.SessionFilter.doFilter(SessionFilter.java:45)[activemq-web-5.13.4.jar:5.13.4]
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:102)[file:/opt/apache-activemq-5.13.4/webapps/admin/WEB-INF/classes/:]
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:542)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:542)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.server.Server.handle(Server.java:499)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at java.lang.Thread.run(Thread.java:745)[:1.8.0_60]
{code}",,msoplinski,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6605,AMQ-6664,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jun 01 15:35:21 UTC 2017,,,,,,,,,,,"0|i3dkt3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Jun/17 15:35;tabish;Appears to be fixed by fixes for AMQ-6664;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KahaDB checkpoint index page flush skips metadata page,AMQ-6652,13062938,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,10/Apr/17 16:13,11/Apr/17 14:28,14/Jul/23 05:44,10/Apr/17 16:19,5.14.0,,,,,,,,,5.14.5,5.15.0,,,KahaDB,,,,,0,,,,,,"Disk image of the metadata is one checkpoint behind. This can surface on restart after a kill -9 with the ackMessageFileMap referencing a deleted file in error.
{code} Exception on start: java.io.IOException: Detected missing journal files.{code}
",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Apr 11 14:28:16 UTC 2017,,,,,,,,,,,"0|i3dfyn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/Apr/17 16:15;jira-bot;Commit ca5e41bb7ab740207795d27ca341634f983f375e in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=ca5e41b ]

[AMQ-6652] ensure checkpoint pagefile flush includeds the checkpoint transaction
;;;","11/Apr/17 10:39;jira-bot;Commit af03ad467987fad7f1ee2d8382ed0acd17432a9b in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=af03ad4 ]

[AMQ-6652] add final modifier to test
;;;","11/Apr/17 14:28;jira-bot;Commit f3a34766a0bffe4db19988044c79fb6ecdf92fb9 in activemq's branch refs/heads/activemq-5.14.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=f3a3476 ]

[AMQ-6652] ensure checkpoint pagefile flush includeds the checkpoint transaction

(cherry picked from commit ca5e41bb7ab740207795d27ca341634f983f375e)
;;;","11/Apr/17 14:28;jira-bot;Commit b8a7aa80e524ee6d5d566b1236fd8431aa27c0d9 in activemq's branch refs/heads/activemq-5.14.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b8a7aa8 ]

[AMQ-6652] add final modifier to test

(cherry picked from commit af03ad467987fad7f1ee2d8382ed0acd17432a9b)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add support for MS SQL server JDBC driver 6.1,AMQ-6649,13062856,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,josef.broz,josef.broz,10/Apr/17 10:47,11/Apr/17 14:32,14/Jul/23 05:44,10/Apr/17 12:53,5.14.4,,,,,,,,,5.14.5,5.15.0,,,JDBC,,,,,0,,,,,,"activemq-jdbc-store-5.14.4.jar contains support of MS SQL JDBC driver 4.0.
Could you upgrade to java 8 compliant MS SQL Server JDBC driver 6.1 ?

As a workaround I have copied file META-INF\services\org\apache\activemq\store\jdbc\microsoft_jdbc_driver_4_0_for_sql_server  to META-INF\services\org\apache\activemq\store\jdbc\microsoft_jdbc_driver_6_1_for_sql_server 
This solution is based on AMQ-3914

",,jira-bot,josef.broz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Apr 11 14:32:15 UTC 2017,,,,,,,,,,,"0|i3dfgf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/Apr/17 12:52;jira-bot;Commit 58046194d02bdcfe74fc8717457229d571ac4627 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=5804619 ]

https://issues.apache.org/jira/browse/AMQ-6649

Adding MS SQL jdbc driver 6.1 support
;;;","11/Apr/17 14:32;jira-bot;Commit 0a46ffdb5aa030b0051c95d6014fde5552c29ea0 in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=0a46ffd ]

https://issues.apache.org/jira/browse/AMQ-6649

Adding MS SQL jdbc driver 6.1 support

(cherry picked from commit 58046194d02bdcfe74fc8717457229d571ac4627)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
default blob strategy error reporting should include url,AMQ-6646,13061473,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,gtully,gtully,04/Apr/17 16:29,05/Apr/17 10:02,14/Jul/23 05:44,05/Apr/17 10:02,5.14.0,,,,,,,,,5.15.0,,,,JMS client,,,,,0,,,,,,Default blob upload strategy can do a little better at reporting errors by including the url such that it is clear what url in in the mix.,,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Apr 04 16:33:11 UTC 2017,,,,,,,,,,,"0|i3d6xb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Apr/17 16:33;jira-bot;Commit b64ac1dd779e2eb62a8cda1775f2ab6491d05771 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b64ac1d ]

[AMQ-6646] improve error reporting to include url
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq:browse command does not display Header - OriginalDestination,AMQ-6645,13061439,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,gtully,gtully,04/Apr/17 14:02,04/Apr/17 14:09,14/Jul/23 05:44,04/Apr/17 14:09,5.14.0,,,,,,,,,5.15.0,,,,,,,,,0,,,,,,The jmx view correctly exposes the originaDestination attribute but the browse command does not map this property in error.,,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Apr 04 14:09:07 UTC 2017,,,,,,,,,,,"0|i3d6pr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Apr/17 14:09;gtully;https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=4a3d117d9693480c4a6564dc2c349317d16a14b3;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect logging from KahaDB cleanup task when enableAckCompaction=true,AMQ-6644,13061406,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,gtully,gtully,04/Apr/17 11:17,11/Apr/17 14:32,14/Jul/23 05:44,04/Apr/17 11:22,5.14.0,,,,,,,,,5.14.5,5.15.0,,,KahaDB,,,,,0,,,,,,"When KahaDB is configured for enableAckCompaction=true, it moves acks into a new journal file. Such journal file will only contains the compacted acks, it won't be used to hold messages. 

If the actual journal (to which new messages are written to) has a lower number than the journal files that were created during ack compaction, the periodic cleanup task will not delete any journals that are higher than the actual journal file. So multiple journal files may remain active on disk although there is no single unconsumed message on the broker. 
This in itself is okay, however when trace logging for the cleanup task is enabled, it reports differently, namely that it is going to delete these journals, where in fact it is not deleting them.

E.g. lets take the following example.
The KahaDB folder on disk consists of 
{code}
[kahadb]$ ls -alh
total 54M
drwxr-xr-x.  2 fuse fuse  128K Feb  1 15:50 .
drwxr-xr-x. 13 fuse fuse  4.0K Nov  4 13:14 ..
-rw-r--r--.  1 fuse fuse   32M Feb  1 16:26 db-65.log
-rw-r--r--.  1 fuse fuse  4.6M Feb  1 15:24 db-66.log
-rw-r--r--.  1 fuse fuse  4.5M Feb  1 15:29 db-67.log
-rw-r--r--.  1 fuse fuse  4.6M Feb  1 15:34 db-68.log
-rw-r--r--.  1 fuse fuse  4.5M Feb  1 15:39 db-69.log
-rw-r--r--.  1 fuse fuse  2.5M Feb  1 16:26 db.data
-rw-r--r--.  1 fuse fuse   32M Feb  1 14:51 db-log.template
-rw-r--r--.  1 fuse fuse 1002K Feb  1 16:26 db.redo
-rw-r--r--.  1 fuse fuse     8 Feb  1 14:51 lock
{code}

and the logging says:

{code}
Last update: 65:26636520, full gc candidates set: [65, 66, 67, 68, 69]
gc candidates after producerSequenceIdTrackerLocation:65, [66, 67, 68, 69]
gc candidates after ackMessageFileMapLocation:65, [66, 67, 68, 69]
...
gc candidates: [66, 67, 68, 69]
    ackMessageFileMap: {65=[65]}
Cleanup removing the data files: [66, 67, 68, 69]
{code}

In this example the actual journal file to which msgs are written is 65. The journal files 66-69 were created during ack compaction and have a higher number than 65.
So KahaDB won't delete the journals 66-69 until the actual journal file is moved to journal 70, despite that there are no unconsumed messages on the broker.
However the last log line suggests that it will remove the journals 66-69, but they will not get removed due to rule above. 

We should align the logging output with the logic used to determine which journals to delete.

",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Apr 11 14:32:12 UTC 2017,,,,,,,,,,,"0|i3d6if:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Apr/17 11:21;jira-bot;Commit c1cbf509da996ccbd522934d4a927d2164054c76 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=c1cbf50 ]

[AMQ-6644] - ensure journal files past last update are not included in the logged gc set in error
;;;","11/Apr/17 14:32;jira-bot;Commit 0bbb82e7e50754ca8d710677996b1af06c569887 in activemq's branch refs/heads/activemq-5.14.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=0bbb82e ]

[AMQ-6644] - ensure journal files past last update are not included in the logged gc set in error
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Shared virtual topic wildcard consumers receive spurious and duplicate messages,AMQ-6643,13061382,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,04/Apr/17 09:10,07/Sep/17 16:17,14/Jul/23 05:44,04/Apr/17 09:20,5.14.0,,,,,,,,,5.15.0,,,,Broker,,,,,0,,,,,,"Virtual topic wildcard subscriber queues are physical queues, however the matching of destinations to new subscriptions matches based on the wildcard destination in error. Causing subs to get subscribed in error and causing duplicate subscriptions.",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5594,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Sep 07 16:17:49 UTC 2017,,,,,,,,,,,"0|i3d6d3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Apr/17 09:12;gtully;The restrictions introduced in https://issues.apache.org/jira/browse/AMQ-5594 need to be more selective based on a more exact and consistent destination comparator.;;;","04/Apr/17 09:19;jira-bot;Commit 679db08db3dba27475b9e82c20d3dafeb155631f in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=679db08 ]

[AMQ-6643] ensure a wildcard virtual topic subscriber is restricted to the wildcard destination - avoid duplicate and spurious dispatch. fix and test
;;;","04/Apr/17 09:52;jira-bot;Commit 2a2cb3997fbb66ff4040175d70850c990701ab57 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=2a2cb39 ]

[AMQ-6643] final modifier for test
;;;","04/Apr/17 09:58;jira-bot;Commit 8b064889c68d092f7b0fd425d2b1f65f4da37e2b in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=8b06488 ]

[AMQ-6643] final modifier for test in the right place
;;;","08/Aug/17 15:38;jira-bot;Commit a67c75a9e15c9957aedc0bc8c4aa89952a4c5ea0 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=a67c75a ]

[AMQ-6643] refine fix to allow wildcard subs to non wildcard subscription queues, enable simple wildcard sub to drain all subscription queues
;;;","09/Aug/17 10:40;jira-bot;Commit 068b7946ce14a8b9d02fa49bd05b8f4113a8ad88 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=068b794 ]

[AMQ-6643][AMQ-5594] fix test regression to reflect match strategy
;;;","07/Sep/17 16:17;jira-bot;Commit 3b6ba778bdfa1b469d16b4b42f4556ffc1180118 in activemq's branch refs/heads/activemq-5.15.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=3b6ba77 ]

[AMQ-6643] refine fix to allow wildcard subs to non wildcard subscription queues, enable simple wildcard sub to drain all subscription queues

(cherry picked from commit a67c75a9e15c9957aedc0bc8c4aa89952a4c5ea0)
;;;","07/Sep/17 16:17;jira-bot;Commit f7185b992eb0f4c43f10507bf3687f10b73fa3ed in activemq's branch refs/heads/activemq-5.15.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=f7185b9 ]

[AMQ-6643][AMQ-5594] fix test regression to reflect match strategy

(cherry picked from commit 068b7946ce14a8b9d02fa49bd05b8f4113a8ad88)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MessageStore update message can encounter NPE with KahaDB,AMQ-6642,13060670,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,31/Mar/17 13:05,31/Mar/17 13:10,14/Jul/23 05:44,31/Mar/17 13:10,5.14.4,,,,,,,,,5.14.5,5.15.0,,,,,,,,0,kahaDB,,,,,If KahaDB subscription statistics have been enabled (off by default) then it's possible to get a null pointer exception if updateMessage() is called on the message store.  This occurs if the destination is a Queue as there is not a proper null pointer check done for ackPositions which only exists when using a Topic.,,cshannon,jira-bot,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Mar 31 13:09:38 UTC 2017,,,,,,,,,,,"0|i3d1yv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"31/Mar/17 13:07;jira-bot;Commit 2731f04f1ca81312d08ffc21c0ceb09513165b7c in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=2731f04 ]

AMQ-6642: Fix potential NPE on updateMessage

Fixing potential NPE when calling updateMessage on a Queue store in
KahaDB if subscription statistics are enabled.  Also reduced the
visibily from public to protected to subscription statistic related
methods that shouldn't be public and added null pointer checks there as
well.

https://issues.apache.org/jira/browse/AMQ-6642
;;;","31/Mar/17 13:07;jira-bot;Commit 2731f04f1ca81312d08ffc21c0ceb09513165b7c in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=2731f04 ]

AMQ-6642: Fix potential NPE on updateMessage

Fixing potential NPE when calling updateMessage on a Queue store in
KahaDB if subscription statistics are enabled.  Also reduced the
visibily from public to protected to subscription statistic related
methods that shouldn't be public and added null pointer checks there as
well.

https://issues.apache.org/jira/browse/AMQ-6642
;;;","31/Mar/17 13:09;jira-bot;Commit bd083623dfbe98d025c31afa8471ad680922ba65 in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=bd08362 ]

AMQ-6642: Fix potential NPE on updateMessage

Fixing potential NPE when calling updateMessage on a Queue store in
KahaDB if subscription statistics are enabled.  Also reduced the
visibily from public to protected to subscription statistic related
methods that shouldn't be public and added null pointer checks there as
well.

https://issues.apache.org/jira/browse/AMQ-6642
(cherry picked from commit 2731f04f1ca81312d08ffc21c0ceb09513165b7c)
;;;","31/Mar/17 13:09;jira-bot;Commit bd083623dfbe98d025c31afa8471ad680922ba65 in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=bd08362 ]

AMQ-6642: Fix potential NPE on updateMessage

Fixing potential NPE when calling updateMessage on a Queue store in
KahaDB if subscription statistics are enabled.  Also reduced the
visibily from public to protected to subscription statistic related
methods that shouldn't be public and added null pointer checks there as
well.

https://issues.apache.org/jira/browse/AMQ-6642
(cherry picked from commit 2731f04f1ca81312d08ffc21c0ceb09513165b7c)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"network of brokers, duplex connector, network consumers not registered on destination - hung bridge",AMQ-6640,13059734,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,28/Mar/17 13:43,30/Mar/17 11:33,14/Jul/23 05:44,30/Mar/17 09:24,5.14.0,,,,,,,,,5.15.0,,,,Network of Brokers,,,,,0,,,,,,"Occasional hang in a network bridge under heavy load with large pending backlog across multiple destinations.
Hung network bridge threads blocked through crosstalk between consumer demand and message forwarding traffic leading to blocked writes.

Stack traces of the form, Broker1
{code}

~~~
""ActiveMQ Transport: tcp:///XXXX:51460@61616"" daemon prio=10 tid=0x00007efbbc011000 nid=0x42be waiting on condition [0x00007efbb1a58000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x00000000c61a2118> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2043)
	at java.util.concurrent.ArrayBlockingQueue.take(ArrayBlockingQueue.java:374)
	at org.apache.activemq.transport.FutureResponse.getResult(FutureResponse.java:48)
	at org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:87)
	at org.apache.activemq.network.DemandForwardingBridgeSupport.addSubscription(DemandForwardingBridgeSupport.java:914)
	at org.apache.activemq.network.DemandForwardingBridgeSupport.addConsumerInfo(DemandForwardingBridgeSupport.java:1187)
	at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceRemoteConsumerAdvisory(DemandForwardingBridgeSupport.java:772)
	- locked <0x00000000c25ed058> (a java.net.URI)
	at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceRemoteCommand(DemandForwardingBridgeSupport.java:623)
	at org.apache.activemq.network.DemandForwardingBridgeSupport$3.onCommand(DemandForwardingBridgeSupport.java:225)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:125)
	at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:300)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)
	at java.lang.Thread.run(Thread.java:724)
~~~


~~~
Dump 1 : ""ActiveMQ VMTransport: vm://broker1#8-2"" daemon prio=10 tid=0x00007efbbc11b800 nid=0x42c4 runnable [0x00007efbb1554000]
    java.lang.Thread.State: RUNNABLE
    at java.net.SocketOutputStream.socketWrite0(Native Method)
    at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:109)
    at java.net.SocketOutputStream.write(SocketOutputStream.java:153)
    at org.apache.activemq.transport.tcp.TcpBufferedOutputStream.flush(TcpBufferedOutputStream.java:115)
    at java.io.DataOutputStream.flush(DataOutputStream.java:123)
    at org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:176)
    at org.apache.activemq.transport.AbstractInactivityMonitor.doOnewaySend(AbstractInactivityMonitor.java:334)
    at org.apache.activemq.transport.AbstractInactivityMonitor.oneway(AbstractInactivityMonitor.java:316)
    at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:85)
    at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:116)
    at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:68)
    at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
    at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceLocalCommand(DemandForwardingBridgeSupport.java:994)
    at org.apache.activemq.network.DemandForwardingBridgeSupport$2.onCommand(DemandForwardingBridgeSupport.java:207)
    at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)
    at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
    at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:271)
    at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:133)
    at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:48)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    at java.lang.Thread.run(Thread.java:724)
~~~
{code}

While the broker2 on the other side of the duplex network has threads in the following state:

{code}
~~~~
Thread 1:

""ActiveMQ Transport: tcp:XXXX:61616@51460"" prio=10 tid=0x00007f8a6055b000 nid=0x42bd waiting on condition [0x00007f8a40f8a000]
    java.lang.Thread.State: WAITING (parking)
    at sun.misc.Unsafe.park(Native Method)
    - parking to wait for  <0x00000000c8d5e000> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
    at java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)
    at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:834)
    at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:867)
    at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1197)
    at java.util.concurrent.locks.ReentrantLock$NonfairSync.lock(ReentrantLock.java:214)
    at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:290)
    at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:66)
    at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
    at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1457)
    at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:971)
    at org.apache.activemq.broker.TransportConnection.dispatchSync(TransportConnection.java:927)
    at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:192)
    at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)
    at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
    at org.apache.activemq.transport.vm.VMTransport.doDispatch(VMTransport.java:162)
    at org.apache.activemq.transport.vm.VMTransport.dispatch(VMTransport.java:154)
    - locked <0x00000000c8db5498> (a java.util.concurrent.atomic.AtomicBoolean)
    at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:131)
    at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:68)
    at org.apache.activemq.transport.ResponseCorrelator.asyncRequest(ResponseCorrelator.java:81)
    at org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:86)
    at org.apache.activemq.network.DemandForwardingBridgeSupport.addSubscription(DemandForwardingBridgeSupport.java:914)
    at org.apache.activemq.network.DemandForwardingBridgeSupport.addConsumerInfo(DemandForwardingBridgeSupport.java:1187)
    at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceRemoteConsumerAdvisory(DemandForwardingBridgeSupport.java:772)
    - locked <0x00000000c0715280> (a java.net.URI)
    at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceRemoteCommand(DemandForwardingBridgeSupport.java:623)
    at org.apache.activemq.network.DemandForwardingBridgeSupport$3.onCommand(DemandForwardingBridgeSupport.java:225)
    at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)
    at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
    at org.apache.activemq.transport.failover.FailoverTransport.processCommand(FailoverTransport.java:207)
    at org.apache.activemq.transport.failover.FailoverTransport.access$1100(FailoverTransport.java:72)
    at org.apache.activemq.transport.failover.FailoverTransport$3.onCommand(FailoverTransport.java:216)
    at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:125)
    at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:300)
    at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
    at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)
    at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)
    at java.lang.Thread.run(Thread.java:724)
~~~~

Thread 2:

~~~~
""ActiveMQ BrokerService[broker_2] Task-32137"" daemon prio=10 tid=0x00007f8a6067d800 nid=0x244f runnable [0x00007f8a4bbb9000]
    java.lang.Thread.State: RUNNABLE
    at java.net.SocketOutputStream.socketWrite0(Native Method)
    at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:109)
    at java.net.SocketOutputStream.write(SocketOutputStream.java:153)
    at org.apache.activemq.transport.tcp.TcpBufferedOutputStream.flush(TcpBufferedOutputStream.java:115)
    at java.io.DataOutputStream.flush(DataOutputStream.java:123)
    at org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:176)
    at org.apache.activemq.transport.AbstractInactivityMonitor.doOnewaySend(AbstractInactivityMonitor.java:334)
    at org.apache.activemq.transport.AbstractInactivityMonitor.oneway(AbstractInactivityMonitor.java:316)
    at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:85)
    at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:116)
    at org.apache.activemq.transport.failover.FailoverTransport.oneway(FailoverTransport.java:667)
    - locked <0x00000000c8d777e8> (a java.lang.Object)
    at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:68)
    at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
    at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceLocalCommand(DemandForwardingBridgeSupport.java:994)
    at org.apache.activemq.network.DemandForwardingBridgeSupport$2.onCommand(DemandForwardingBridgeSupport.java:207)
    at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)
    at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
    at org.apache.activemq.transport.vm.VMTransport.doDispatch(VMTransport.java:162)
    at org.apache.activemq.transport.vm.VMTransport.dispatch(VMTransport.java:154)
    - locked <0x00000000c8db54b8> (a java.util.concurrent.atomic.AtomicBoolean)
    at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:131)
    at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:68)
    at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
    at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1457)
    at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:971)
    at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:1017)
    at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:133)
    at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:48)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    at java.lang.Thread.run(Thread.java:724)

~~~~
{code}",,gtully,jira-bot,lukejackson,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-2198,,,,,,AMQ-4328,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Mar 30 11:33:55 UTC 2017,,,,,,,,,,,"0|i3cw73:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Mar/17 13:55;gtully;AMQ-4328 fix needed to be confined to the async side, the duplex responder side.;;;","28/Mar/17 13:56;jira-bot;Commit 8e00c6c2bc30e38cee585d9de97b511ed664951b in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=8e00c6c ]

[AMQ-6640] fix duplicate suppression sync request on responder end of duplex network connector only b/c that has the async local transport. Additional test. Ensure broker sync is conditional on the need for duplicate suppression which should only be necessary in ring topologies when properly configured
;;;","29/Mar/17 13:56;gtully;it is still not exactly right - need to rationalise the use of sync and async vm transports on either end of the duplex pipe, there is a need for some async processing because there is contention.;;;","29/Mar/17 22:51;jira-bot;Commit d84a58656c0b3fcb2aad04e47ef843bf379a25f0 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=d84a586 ]

[AMQ-6640] allign use of sync vm transport usage on duplex end of networkconnector with initiator end. only duplexinbound for forwarding is async to allow thread for responses. vm transport options applied in one place and test more deterministic w.r.t the hang scenario
;;;","30/Mar/17 09:16;jira-bot;Commit 5ac9657c123993e7f4bac16ed79e2c9763ea45d1 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=5ac9657 ]

[AMQ-6640] shrink test duration for ci boxes
;;;","30/Mar/17 09:24;gtully;network connector internal vm transports are a all sync with the exception of the duplex end forwarding transport such that the vm dispatch thread can compete with inbound responses for acks without blocking;;;","30/Mar/17 11:12;jira-bot;Commit 4ef1fc74cf8068b5c41cc1f4d1c97967658a465b in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=4ef1fc7 ]

[AMQ-6640] either broker dispatch to bridge or bridge dispatch to broker needs to be async - dispatchAsync network option is the trigger for the vm transport to be sync in line with the current defaults. original BacklogNetworkCrossTalkTest scenario exposed this. upshot is dispatchAsync=false is not compatible with duplicate subscription suppression which is fair.
;;;","30/Mar/17 11:33;gtully;network connector options suppressDuplicate[Queue|Topic]Subscriptions (which is used in ring topologies (not the norm)) requires the default true value for attribute dispatchAsync.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[doc] Add details on message groups dispatch delay,AMQ-6628,13056286,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,alt250,alt250,15/Mar/17 13:27,21/Mar/17 08:56,14/Jul/23 05:44,15/Mar/17 15:17,5.14.4,,,,,,,,,5.15.0,,,,Documentation,,,,,0,documentation,,,,,"On the message groups documentation page (http://activemq.apache.org/message-groups.html), please add the following text in the ""Adding New Consumers"" section:

{quote}
When both consumersBeforeDispatchStarts and timeBeforeDispatchStarts are set to a value greater than zero, the dispatching will start as soon as the required number of consumers are present or the timeBeforeDispatchStarts timeout expires.
If only consumersBeforeDispatchStarts is set then the timeout for consumers to connect is 1 second.

If all consumers disconnect then message dispatch delay will be applied again at the next consumer connection.
{quote}

By the way, the link under the ""As the appropriate test case"" text need to be fixed to point to a valid location like https://github.com/apache/activemq/blob/master/activemq-unit-tests/src/test/java/org/apache/activemq/usecases/MessageGroupDelayedTest.java",,alt250,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Mar 21 08:49:09 UTC 2017,,,,,,,Patch Available,,,,"0|i3cax3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Mar/17 15:17;gtully;update applied, thanks for the contribution.;;;","21/Mar/17 08:49;alt250;Thanks [~gtully]!

There is one important detail to add:

{quote}
The expireMessagesPeriod value must greater than or equal to timeBeforeDispatchStarts, otherwise messages will start to be dispatched after expireMessagesPeriod.
{quote}

The ""expireMessagesPeriod"" text should point to the documentation of this property and default value: http://activemq.apache.org/per-destination-policies.html ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IOException in kahaDB needs to pause pending IOExceptionHandler intervention,AMQ-6625,13050564,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,13/Mar/17 13:39,27/Jul/18 12:18,14/Jul/23 05:44,15/Jun/17 16:36,5.14.0,,,,,,,,,5.15.0,,,,KahaDB,,,,,0,,,,,,"KahaDB can recover from kill -9 by replaying the journal from the last checkpoint or by detecting and reapplying partial writes to the index.
However this activity is compromised if the journal or index accepts subsequent writes. It an lead to skipped write batches or skipped partial updates to the index.
The desirable behaviour of treating an IOException as fatal and stopping the broker in the knowledge that it will restart and fully recover needs to treat the first IO error as fatal and by default not accept any further writes.
A more advanced IOException handler can facilitate staying alive in more specific scenarios and reactivate kahadb.",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-7010,AMQ-2042,AMQ-3725,AMQ-6606,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jun 16 09:29:47 UTC 2017,,,,,,,,,,,"0|i3bblj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Mar/17 13:41;gtully;AMQ-3725 feature is better suited to the jdbc store which is internally consistent.
Kahadb is tolerant to a single write failure.;;;","13/Mar/17 13:47;gtully;If the broker needs to stay up, for sync traffic AMQ-6606 helps ensure the journal does not get corrupt batches.
KahaDBIOExceptionHandler allow this sort of behaviour by resetting kahadb after the first error. ;;;","13/Mar/17 13:50;jira-bot;Commit c5a8b2c8b11121f4999d9f05932cd040d8c9f2a7 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=c5a8b2c ]

[AMQ-6625] ensure kahadb stops operation on the first IOException to facilitate auto recovery from partial writes
;;;","13/Mar/17 14:07;gtully;Prior to the handIOException up-call the journal and index pause. The appender write thread won't get recreated and the index is marked unloaded.
This ensures that subsequent writes will fail allowing auto recovery from a partial write to kick in on restart.
The DefaultIOExceptionHandler implements a resume call on kahadb that allows the stopStartConnectors behaviour or ignore all errors behaviour to be chosen if necessary.;;;","15/Jun/17 16:27;gtully;The KahaDbIOExceptionHandler clashes with the use of the LeaseLockerIOExceptionHandler - need to push the allowIOResumption support into the persistence adapter.;;;","15/Jun/17 16:31;jira-bot;Commit b07821ab6494b43e1ae8877eaf740effc7896b84 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b07821a ]

[AMQ-6625] remove kahadbioexceptionhandler by pushing allowIOResumption into persistence adapter. This allows the lease locker to still be used with kahadb for stopStartConnectors support
;;;","15/Jun/17 16:38;gtully;The DefaultIOExceptionHandler implements a resume call on kahadb that allows the stopStartConnectors behaviour or ignore all errors behaviour to be chosen if necessary.;;;","16/Jun/17 09:29;jira-bot;Commit d70852eec8b61e4d847b0d191cd88131bc606e23 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=d70852e ]

[AMQ-6625] fix mock test expectation regression
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Creating queue and sending message don't work from Webconsole in Karaf,AMQ-6620,13049141,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cschneider,xldai,xldai,08/Mar/17 03:40,21/Jun/17 13:34,14/Jul/23 05:44,21/Jun/17 13:34,5.14.4,,,,,,,,,,,,,Web Console,,,,,0,,,,,,"Steps to reproduce this issue:

1) start Karaf 4.1.0 (also change ""127.0.0.1"" to ""0.0.0.0"" in the etc/org.apache.karaf.management.cfg to make sure remove JMX working)

2) install Activemq broker and webconsole into karaf
feature:repo-add activemq 5.14.4
feature:install activemq-broker

3) open http://localhost:8181/activemqweb/ from a Browser, try to create a Queue and send message to this queue from UI

Then the Name of the queue couldn't be shown on the page and consequently the ""Send To"" page doesn't work.

(The Standalong AMQ 5.14.4 Webconsle works well as expected)",Java 8,cschneider,cshannon,jira-bot,xldai,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6710,AMQ-6664,,,,,,,,,,"08/Mar/17 03:42;xldai;queue.png;https://issues.apache.org/jira/secure/attachment/12856732/queue.png",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jun 21 13:30:52 UTC 2017,,,,,,,,,,,"0|i3b3jj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Mar/17 05:46;xldai;Update:
The AMQ Webconsole works well in case of karaf 4.0.8 + AMQ 5.14.4. karaf 4.0.8 is using Jetty 9.2.19.v20160908 and Pax Web 4.3.0.;;;","09/Mar/17 12:04;cschneider;I just tested with pax web 6.0.3-SNAPSHOT to see if the issue is related to pax-web. It remains the same. So this issue should be purely in activemq. Maybe it is just some additonal missing tag libs. ;;;","10/Mar/17 15:09;cschneider;I found that the root of the ActiveMQ webconsole jsp issues is that the jspf/headertags.jspf is not prepended when running on karaf 4.1.0.

I created a sample bundle in pax web to reproduce the issue. The issue happens with the sample bundle in karaf too. Interestingly though I can not reproduce the issue in a pax web itest. There it simply works. So the issue must be related either to the deployment of pax web in karaf or karaf itself.

To provide a quick fix I commit a workaround in activemq by simply including the jspf into each jsp.;;;","10/Mar/17 15:19;jira-bot;Commit f651aa361f8d8428c94420d1f5713c70ed0baf07 in activemq's branch refs/heads/master from [~chris@die-schneider.net]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=f651aa3 ]

[AMQ-6620] Workaround until the actual issue is fixed in karaf
;;;","10/Mar/17 15:23;jira-bot;Commit dea1accb9882b2db45000da93f2506d07bd15089 in activemq's branch refs/heads/activemq-5.14.x from [~chris@die-schneider.net]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=dea1acc ]

[AMQ-6620] Workaround until the actual issue is fixed in karaf
;;;","24/May/17 20:23;jira-bot;Commit 04b60cb188932a91be9f59d6cda09290219d8a45 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=04b60cb ]

AMQ-6664 - Adding missing header tag to JSP files

Also fixing JSP comments.  This fix is a follow on to
AMQ-6620
;;;","24/May/17 20:24;jira-bot;Commit 908ef647289a80a6fec500a6d37dd59059dccfbd in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=908ef64 ]

AMQ-6664 - Adding missing header tag to JSP files

Also fixing JSP comments.  This fix is a follow on to
AMQ-6620

(cherry picked from commit 04b60cb188932a91be9f59d6cda09290219d8a45)
;;;","21/Jun/17 13:13;cshannon;[~chris@die-schneider.net], is this issue finished?;;;","21/Jun/17 13:18;cschneider;Yes .. This issue is finished but I can not resolve it. Probably not in the permission group for it.;;;","21/Jun/17 13:30;cshannon;[~chris@die-schneider.net] - I just gave you permissions that you should have already had as you are a committer.  You should be able to resolve it now so give it a shot.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JournalDiskSyncStrategy setting should be stored as an enum,AMQ-6619,13048885,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,07/Mar/17 13:15,07/Mar/17 13:18,14/Jul/23 05:44,07/Mar/17 13:17,5.14.4,,,,,,,,,5.14.5,5.15.0,,,,,,,,0,kahaDB,,,,,In MessageDatabase we should store JournalDiskSyncStrategy as its enum value and not as a String.  This is because this value needs to be checked on every write to the journal and using a String makes checking this value more expensive than it needs to be.,,cshannon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6377,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Mar 07 13:16:16 UTC 2017,,,,,,,,,,,"0|i3b1yn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Mar/17 13:16;cshannon;This was fixed in :
https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=0d824a8
https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e124f1d

Creating a new Jira so this can be tracked separately.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMX Queue attribute blockedSends not updated when a sync send hits flow control,AMQ-6614,13047721,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,02/Mar/17 16:58,04/Aug/17 13:14,14/Jul/23 05:44,02/Mar/17 17:05,5.14.0,,,,,,,,,5.15.0,,,,JMX,,,,,0,jmx,,,,,an async send that blocks waiting for space increments the blockedSends jmx attribute but with the producerwindow or a sync send it does not.,,cshannon,gtully,jira-bot,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3233,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Aug 04 13:14:24 UTC 2017,,,,,,,,,,,"0|i3auzb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Mar/17 17:00;jira-bot;Commit e67d48680f16061d0a5fbd09129ce8f0a7759255 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e67d486 ]

[AMQ-6614] fix up jmx blockedSendsCount and producer view blocking flag for async send case. fix and test
;;;","01/Aug/17 13:42;cshannon;[~gtully], I was looking at this commit and noticed something...

Should this line: https://github.com/apache/activemq/blob/activemq-5.15.0/activemq-broker/src/main/java/org/apache/activemq/broker/region/Queue.java#L707

be changed from {{producerExchangeCopy.blockingOnFlowControl(false);}} to {{producerExchange.blockingOnFlowControl(false);}} ?

The flag is set true later on line 713 on the original producerExchange so the copy would always have the flag be false already (unless I am missing something);;;","04/Aug/17 11:30;gtully;[~cshannon] thanks for the second pair of eyes. I think it will be ok. I modified the ProducerBrokerExchange.copy to share that state flag - flowControlInfo so both the copy and original will share it.

https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=blobdiff;f=activemq-broker/src/main/java/org/apache/activemq/broker/ProducerBrokerExchange.java;h=26652debe644977fa00fa37f5ec33a4acf279ca7;hp=bf1d21e80022765aeb7611e5b8363c7eeec79af6;hb=e67d486;hpb=eab9a0d05758fd0e8e83e7e482f4f0406cd9af5e;;;","04/Aug/17 13:14;cshannon;[~gtully], Ok, sounds good, just wanted to double check.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Runtime configuration - Network connector is not getting registred after the config change,AMQ-6610,13045858,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,thodimi,thodimi,24/Feb/17 02:02,03/Mar/17 10:14,14/Jul/23 05:44,24/Feb/17 19:14,5.14.3,,,,,,,,,5.14.4,5.15.0,,,Broker,,,,,0,,,,,,Runtime configuration - The network connectors reload is not registering the Network connector Mbean,Windows,cshannon,jira-bot,thodimi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Mar 03 10:14:49 UTC 2017,,,,,,,,,,,"0|i3ajw7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Feb/17 12:55;thodimi;[~cshannon] Hi Chris, I have fixed this in my local code. Here is the what needs to be changed. I also enhanced the unit tests in NetworkConnectorTest.java. 

The following change needs to happen in org.apache.activemq.plugin.NetworkConnectorProcessor.java file

  @Override
    public void addNew(Object o) {
        DtoNetworkConnector networkConnector = (DtoNetworkConnector) o;
        if (networkConnector.getUri() != null) {
            try {
                DiscoveryNetworkConnector nc = fromDto(networkConnector, new DiscoveryNetworkConnector());
                plugin.getBrokerService().addNetworkConnector(nc);
               if (plugin.getBrokerService().isUseJmx()) {
                	plugin.getBrokerService().registerNetworkConnectorMBean(nc);
                	
                } 
                nc.start();
                plugin.info(""started new network connector: "" + nc);
                
            } catch (Exception e) {
                plugin.info(""Failed to add new networkConnector "" + networkConnector, e);
            }
        }
    };;;","24/Feb/17 13:43;cshannon;[~thodimi], thanks for the heads up.  There's also a change needed for the JavaRuntimePlugin as well.  I will create a patch and test and merge it in for 5.14.4;;;","24/Feb/17 16:50;cshannon;This is actually a more complex patch because after looking at this there are a couple other things not being set quite right on the network connector when added/updated through the runtime plugin instead of on broker start.  Working on a patch and test now.;;;","24/Feb/17 19:07;jira-bot;Commit bab0887ed60907d4ccac1824d83371a592f94925 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=bab0887 ]

AMQ-6610 - Network connector mbean not registered on reload

On network connector add or update after broker start (such as the
runtime plugins) the mbean was not created.  There was also a couple of
other properties not set. Fixed the network connector start to be the
same for normal broker start and runtime reload.
;;;","24/Feb/17 19:13;jira-bot;Commit 0ee9420587043fb4f27be2315a09a85de66044c4 in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=0ee9420 ]

AMQ-6610 - Network connector mbean not registered on reload

On network connector add or update after broker start (such as the
runtime plugins) the mbean was not created.  There was also a couple of
other properties not set. Fixed the network connector start to be the
same for normal broker start and runtime reload.

(cherry picked from commit bab0887ed60907d4ccac1824d83371a592f94925)
;;;","24/Feb/17 19:14;cshannon;Turns out there were a couple of other properties like brokerName, brokerUrl, and durableDestinations which were not populated either.  Fixed those and the re-add of the mbean.;;;","27/Feb/17 12:35;jira-bot;Commit ef84db5e64b7a96a0c5c7271bd88642d940ba7a4 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=ef84db5 ]

AMQ-6610: Fixing JDBC test

Durable destinations need to always be loaded on connector start
;;;","27/Feb/17 12:40;jira-bot;Commit 16de69502f80210d857e9992096f9493e0a67e16 in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=16de695 ]

AMQ-6610: Fixing JDBC test

Durable destinations need to always be loaded on connector start

(cherry picked from commit ef84db5e64b7a96a0c5c7271bd88642d940ba7a4)
;;;","03/Mar/17 10:14;jira-bot;Commit 2809befff568f5f8c3c16f1a836c229ef4bf95eb in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=2809bef ]

[AMQ-6610] - fix up brittle jmock test
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Journal partial write can result in batch corruption on restart,AMQ-6606,13044893,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,21/Feb/17 17:02,13/Mar/17 13:47,14/Jul/23 05:44,07/Mar/17 12:34,5.14.0,,,,,,,,,5.14.4,5.14.5,5.15.0,,KahaDB,,,,,0,,,,,,"Recovery checking on kahadb will ignore a partial journal write at the end of the journal. However repeated write errors increment the write offset and if a subsequent write succeeds recovery fails reporting a corrupt block.
{code}
 MessageDatabase  | emq.store.kahadb.MessageDatabase | Detected corrupt journal files. [34:43883209 >= key < 34:47226069]
{code}
One scenario is write failure for no space followed by gc which allows subsequent writes to complete.
A failed write or sync should fail with an exception and should revert any offset increment such that a subsequent write reuses that offset, avoiding a partial write corruption. ",,cshannon,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-2042,AMQ-6625,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Mar 07 13:09:32 UTC 2017,,,,,,,,,,,"0|i3adyv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Feb/17 17:06;jira-bot;Commit d53b8f8d424e3cf51646b215007fc017717edf44 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=d53b8f8 ]

[AMQ-6606] avoid partial writes to the end of the journal - revert offset increment on ioexception, fix and test
;;;","23/Feb/17 15:22;jira-bot;Commit 79069598b1435cadaef504d8d3de31777b869c59 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=7906959 ]

AMQ-6606 - fix typo
;;;","23/Feb/17 15:22;jira-bot;Commit 7ca411feee1700e17d08529962197bbb4696ed78 in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=7ca411f ]

AMQ-6606 - fix typo

(cherry picked from commit 79069598b1435cadaef504d8d3de31777b869c59)
;;;","23/Feb/17 15:24;cshannon;Oops, the typo I fixed was supposed to be for AMQ-6602.  I put AMQ-6606 into the commit message by mistake.;;;","24/Feb/17 19:24;jira-bot;Commit 22d5b51a0c69b48665f32ea19bad5046d7237426 in activemq's branch refs/heads/activemq-5.14.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=22d5b51 ]

[AMQ-6606] avoid partial writes to the end of the journal - revert offset increment on ioexception, fix and test

(cherry picked from commit d53b8f8d424e3cf51646b215007fc017717edf44)
;;;","06/Mar/17 11:58;gtully;This needs more work.. readjustment of offset needs to terminate next pending write batch.;;;","07/Mar/17 12:29;jira-bot;Commit 21ae1ef2e658a14f89bde79a83a32af340fb351a in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=21ae1ef ]

[AMQ-6606] - reset next batch so it does not get reused after error and refine fix to sync write batches b/c async locations will already be in the index
;;;","07/Mar/17 12:34;gtully;the fix is refined to just sync batches such that index updates from async writes do not get reused. In the sync case, the index is not updated till completion.;;;","07/Mar/17 13:09;jira-bot;Commit 7e3f344ea7708650bac8452fa585e6125ebe083e in activemq's branch refs/heads/activemq-5.14.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=7e3f344 ]

[AMQ-6606] - reset next batch so it does not get reused after error and refine fix to sync write batches b/c async locations will already be in the index

(cherry picked from commit 21ae1ef2e658a14f89bde79a83a32af340fb351a)
;;;","07/Mar/17 13:09;cshannon;I'm not sure if there will be a 5.14.5 release or if we'll just do a 5.15.0 but I backported the new commit just in case.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Webconsole does not work in karaf 4.1.0 because of missing tag libs,AMQ-6605,13044038,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cschneider,cschneider,cschneider,17/Feb/17 17:09,26/Apr/17 13:51,14/Jul/23 05:44,17/Feb/17 17:13,5.12.3,5.13.5,5.14.3,,,,,,,5.13.6,5.14.4,5.15.0,5.x,Web Console,,,,,0,,,,,,"The tag libs do not seem to work in karaf 4.1.0.
So the pages show the raw <c:out> tags and similar.",,cschneider,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6664,AMQ-6656,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Feb 17 17:12:42 UTC 2017,,,,,,,,,,,"0|i3a8wn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Feb/17 17:11;jira-bot;Commit ff34668a2da0b0d3850f2a568b43218edbca62c7 in activemq's branch refs/heads/master from [~chris@die-schneider.net]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=ff34668 ]

[AMQ-6605] Properly specify the tag libs we use
;;;","17/Feb/17 17:12;jira-bot;Commit a85689d73c956fb121b924e1a451225e648593a2 in activemq's branch refs/heads/activemq-5.14.x from [~chris@die-schneider.net]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=a85689d ]

[AMQ-6605] Properly specify the tag libs we use
;;;","17/Feb/17 17:12;jira-bot;Commit e2f87c7f400ff31c0724128d57f98381082ce87c in activemq's branch refs/heads/activemq-5.13.x from [~chris@die-schneider.net]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e2f87c7 ]

[AMQ-6605] Properly specify the tag libs we use
;;;","17/Feb/17 17:12;jira-bot;Commit 72d5423940bde484c0bbf1be51cbeaddc028aad2 in activemq's branch refs/heads/activemq-5.12.x from [~chris@die-schneider.net]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=72d5423 ]

[AMQ-6605] Properly specify the tag libs we use
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Excessive number of consumers when used with PooledConnectionFactory and Failover transport,AMQ-6603,13043574,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,tadayosi,tadayosi,16/Feb/17 09:42,11/Apr/17 16:12,14/Jul/23 05:44,01/Mar/17 10:41,5.14.3,,,,,,,,,5.14.5,5.15.0,,,JMS client,,,,,0,,,,,,"When {{PooledConnectionFactory}} is used with Failover transport, insufficient access control settings on the broker result in an excessive number of consumer objects on the broker once the access control settings are properly set. 

Here is an example Spring XML configuration:

{code:xml}
<beans ...>

  <bean id=""jmsConnectionFactory"" class=""org.apache.activemq.ActiveMQConnectionFactory"">
    <property name=""brokerURL"" value=""failover:(tcp://localhost:61616)"" />
    <property name=""userName"" value=""test"" />
    <property name=""password"" value=""test"" />
  </bean>

  <bean id=""pooledConnectionFactory"" class=""org.apache.activemq.pool.PooledConnectionFactory"">
    <property name=""connectionFactory"" ref=""jmsConnectionFactory"" />
    <property name=""maxConnections"" value=""10"" />
  </bean>

  <bean id=""jmsContainer"" class=""org.springframework.jms.listener.DefaultMessageListenerContainer"">
    <property name=""connectionFactory"" ref=""pooledConnectionFactory"" />
    <property name=""destinationName"" value=""TEST"" />
    <property name=""messageListener"" ref=""messageListener"" />
    <property name=""concurrentConsumers"" value=""10"" />
  </bean>

  <bean id=""messageListener"" class=""com.redhat.issues.amq.SpringJmsConsumer"" />

</beans>
{code}

In this configuration we expect only one connection and 10 consumers for {{TEST}} queue, but after following the reproducer steps we see around 10 connections and 100 consumers for the queue on hawtio. In the above configuration Spring DMLC is used but we can reproduce the issue without Spring.",,cshannon,gtully,jira-bot,tabish,tadayosi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Feb/17 01:43;tadayosi;pooled-amq-client.zip;https://issues.apache.org/jira/secure/attachment/12855038/pooled-amq-client.zip","16/Feb/17 10:00;tadayosi;spring-amq-client.zip;https://issues.apache.org/jira/secure/attachment/12853020/spring-amq-client.zip",,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,https://issues.jboss.org/browse/ENTESB-6505,,,,,,,,,,,9223372036854775807,,,Wed Mar 01 16:45:22 UTC 2017,,,,,,,,,,,"0|i3a61j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Feb/17 10:00;tadayosi;Reproducer {{spring-amq-client.zip}} attached.

To reproduce the issue:

# Create broker {{sample-broker}}, apply the configurations: {{activemq.xml}}, {{users.properties}}, {{groups.properties}} and run it.
# Run this project:
{quote}
$ mvn spring-boot:run
{quote}
# Change {{groups.properties}} to make user {{test}} belong to {{users}} instead of {{guests}} and restart the broker (while keep the reproducer project running):
{quote}
admins=admin
users=test
#guests=test
{quote}
# Check the number of consumers connecting to queue {{TEST}}. ;;;","22/Feb/17 14:01;cshannon;I think the issue is with your configuration.  It usually doesn't make sense to use a connection pool with a DefaultMessageLIstenerContainer because you want to let the DefaultMessageListenerContainer do its own caching.  If you just pass a normal connection factory to the DefaultMessageListenerContainer then it should just create 1 connection and 10 consumers.

From the Spring docs:

""Note: Don't use Spring's CachingConnectionFactory in combination with dynamic scaling. Ideally, don't use it with a message listener container at all, since it is generally preferable to let the listener container itself handle appropriate caching within its lifecycle. Also, stopping and restarting a listener container will only work with an independent, locally cached Connection - not with an externally cached one."";;;","22/Feb/17 14:05;cshannon;Also you said you could reproduce it without using Spring DMLC.  What was your setup in that case?  Something needs to be detecting the failed consumer/connections and trying to create new ones on ACL change.;;;","28/Feb/17 02:45;tadayosi;Hi [~cshannon],

Thank you for your comments, and sorry for my late response.

{quote}
I think the issue is with your configuration. It usually doesn't make sense to use a connection pool with a DefaultMessageLIstenerContainer because you want to let the DefaultMessageListenerContainer do its own caching.
{quote}

I can see your point, but one itchy situation about it is that Apache Camel has long been promoting the combination of {{PooledConnectionFactory}} + DMLC as the best practice ({{camel-jms}} is effectively just a DMLC inside).
http://camel.apache.org/activemq.html#ActiveMQ-Usingconnectionpooling

We could say that Apache Camel has been wrong on this, but please note that the issue happens only when a {{failover:\(...)}} broker URL is used with {{ActiveMQConnectionFactory}} and for a plain {{tcp://...}} URL we see no issues even with the above combination. That's why I think there might be something that can be improved in ActiveMQ side (especially between {{PooledConnectionFactory}} and Failover transport).

Or we could instead argue that the specific combination of Failover transport + PooledConnectionFactory + DMLC is evil; in this case, what do you think would be the correct configuration if users need to use Failover transport?

{quote}
If you just pass a normal connection factory to the DefaultMessageListenerContainer then it should just create 1 connection and 10 consumers.
{quote}

Yes, but then doesn't the number of connection instances grow proportionately to the number of DMLC instances used?  I think that's why people want to use {{PooledConnectionFactory}} in combination with DMLC (or {{camel-jms}}).

{quote}
Also you said you could reproduce it without using Spring DMLC. What was your setup in that case? 
{quote}

Attached {{pooled-amq-client.zip}} is a reproducer that doesn't use DMLC. I admit it's rather a contrived example and mostly just mimics what's being done inside DMLC, but it still reproduces the issue with only ActiveMQ.;;;","28/Feb/17 14:46;cshannon;Right, if you really want to share connections across multiple DMLCs then you'd still need a pooled factory.  I wouldn't say using failover + pooled factory + DMLC is necessarily evil...just that there's a lot going on there that could cause problems and it would simply things if you didn't use a pooled connection factory (such as if you were only a small number of DMLCs) unless you really need it.  And yes Spring doesn't really recommend doing it that way so if you can get away with creating 1 connection per DMLC then that is usually the way to go.

The use case should still work however and there is probably some improvement here that needs to be done in order to properly handle the failover case in this set up so that an excessive number of consumers don't get created.;;;","28/Feb/17 16:16;gtully;I think there is something in this. The consumer creation failing with an exception is not being tracked by the failover transport and when it reconnects, b/c the session is still present b/c it was pooled, it gets recreated along with the failed consumer.
The connection state tracker needs to respond to the failure to create the consumer such that it is not recreated on reconnect. I think.
Will see if I can validate with that test code and peek at a possible fix.;;;","28/Feb/17 16:46;tabish;Creation of MessageProducer would likely also suffer from this issue as it can also fail for security exceptions when access control prevents writes.  ;;;","28/Feb/17 17:17;jira-bot;Commit 8641928553e0f1d97416fd010c2f7d6f165b3660 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=8641928 ]

[AMQ-6603] ensure failover does not track consumer creation that fails with an exception, fix and test. Thanks for the test Tadayoshi Sato
;;;","28/Feb/17 17:24;gtully;[~tabish121] need to check if producers are cached by the pool but yep, would have the same problem. may be able to make the logic to deal with exceptions more generic.
as as workaround for both, is it possible to have the connection pool not cache sessions in wonder?;;;","28/Feb/17 17:33;tabish;You can't currently cache sessions, and it'd probably be way more trouble than it's worth.  I believe there's two options for the producers in the pool, one cached anonymous producer or a cached producer for each destination that a producer is requested for.  ;;;","28/Feb/17 21:17;jira-bot;Commit 90b808ab98b760f06885a5f45628353c9d2224f2 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=90b808a ]

AMQ-6603 Stop tracking producer if creation failed

Track the message producer create and ensure it is not recreated on
failover if the creation resulted in an error response.  Add failover
level tests to cover consumer and producer failed create tracking.;;;","28/Feb/17 21:20;jira-bot;Commit 5a52bf2a51909bcb2b4a7e5301e4bddf5aadb0c4 in activemq's branch refs/heads/activemq-5.14.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=5a52bf2 ]

[AMQ-6603] ensure failover does not track consumer creation that fails with an exception, fix and test. Thanks for the test Tadayoshi Sato

(cherry picked from commit 8641928553e0f1d97416fd010c2f7d6f165b3660)
;;;","28/Feb/17 21:20;jira-bot;Commit 4c5a70421c2ed39d0faeb78593728ac170812343 in activemq's branch refs/heads/activemq-5.14.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=4c5a704 ]

AMQ-6603 Stop tracking producer if creation failed

Track the message producer create and ensure it is not recreated on
failover if the creation resulted in an error response.  Add failover
level tests to cover consumer and producer failed create tracking.
(cherry picked from commit 90b808ab98b760f06885a5f45628353c9d2224f2)
;;;","01/Mar/17 10:41;gtully;Thanks for the follow up [~tabish121] :-);;;","01/Mar/17 15:26;jira-bot;Commit eab9a0d05758fd0e8e83e7e482f4f0406cd9af5e in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=eab9a0d ]

[AMQ-6603] pull unnecessary guava dep from the new test
;;;","01/Mar/17 16:45;jira-bot;Commit 2dfe0c7c291b5e1beca7ab80d6eea8639f070d6f in activemq's branch refs/heads/activemq-5.14.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=2dfe0c7 ]

[AMQ-6603] pull unnecessary guava dep from the new test

(cherry picked from commit eab9a0d05758fd0e8e83e7e482f4f0406cd9af5e)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Memory leak when undeploying webapp with ActiveMQ client,AMQ-6602,13043532,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,cshannon,mykolamarkov,mykolamarkov,16/Feb/17 07:58,24/Feb/17 11:38,14/Jul/23 05:44,23/Feb/17 15:26,5.14.3,,,,,,,,,5.14.4,5.15.0,,,JMS client,,,,,0,leak,,,,,"I have a web app with an ActiveMQ client. When undeploying the app, Tomcat logs the following messages.
{code}
15-Feb-2017 17:53:31.760 WARNING [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [Engine] appears to have started a thread named [ActiveMQ
 Session: ID:comp-41144-1487186920452-1:1:3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.Object.wait(Object.java:502)
 org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:119)
 org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:42)
15-Feb-2017 17:53:31.761 WARNING [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [Engine] appears to have started a thread named [ActiveMQ
 Session: ID:comp-41144-1487186920452-1:1:2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.Object.wait(Object.java:502)
 org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:119)
 org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:42)
15-Feb-2017 17:53:31.762 WARNING [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [Engine] appears to have started a thread named [ActiveMQ
 Session: ID:comp-41144-1487186920452-1:1:4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.Object.wait(Object.java:502)
 org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:119)
 org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:42)
15-Feb-2017 17:53:31.762 WARNING [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [Engine] appears to have started a thread named [ActiveMQ
 Session: ID:comp-41144-1487186920452-1:1:10] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.Object.wait(Object.java:502)
 org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:119)
 org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:42)
15-Feb-2017 17:53:31.763 WARNING [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [Engine] appears to have started a thread named [ActiveMQ
 Session: ID:comp-41144-1487186920452-1:1:6] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.Object.wait(Object.java:502)
 org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:119)
 org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:42)
Feb 15, 2017 5:53:31 PM org.apache.catalina.core.ApplicationContext log
INFO: Closing Spring root WebApplicationContext
{code}",,cshannon,jira-bot,mykolamarkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3451,,,,,,,,,,,"16/Feb/17 08:01;mykolamarkov;AMQ-6602.patch;https://issues.apache.org/jira/secure/attachment/12853002/AMQ-6602.patch",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Feb 24 11:38:03 UTC 2017,,,,,,,,,,,"0|i3a5s7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Feb/17 08:01;mykolamarkov;Can be fixed with AMQ-6602.patch;;;","22/Feb/17 13:32;cshannon; From the stack trace it looks like a deadlock occurred on shutdown and after taking a quick glance at this I'm a little confused as to how adding that lock solves this issue.   There is an AtomicBoolean that gets checked to prevent the initialization from happening more than once.   Can you elaborate more?  One issue I do see is that the executor should probably be volatile or an AtomicReference when it is set so that it is visible to all threads on init.;;;","23/Feb/17 08:50;mykolamarkov;To show how it can impact, I had updated TaskRunnerFactory init function in this manner:
{code}
    public void init() {
    	int threadId = Thread.currentThread().hashCode();
    	try {
    		LOG.debug(""before init TaskRunnerFactory[{}-0x{}], executor:{}"", name, Integer.toHexString(threadId), executor);
//    		initLock.lock();
//    		LOG.debug(""after lock TaskRunnerFactory[{}-0x{}], executor:{}"", name, Integer.toHexString(threadId), executor);
    		if (initDone.compareAndSet(false, true)) {
    			// If your OS/JVM combination has a good thread model, you may want to
    			// avoid using a thread pool to run tasks and use a DedicatedTaskRunner instead.
    			if (dedicatedTaskRunner || ""true"".equalsIgnoreCase(System.getProperty(""org.apache.activemq.UseDedicatedTaskRunner""))) {
    				executor = null;
    			} else if (executor == null) {
    				executor = createDefaultExecutor();
    			}
    			LOG.debug(""Initialized TaskRunnerFactory[{}-0x{}] using ExecutorService: {}"", name, Integer.toHexString(threadId), executor);
    		}
    	} finally {
//    		initLock.unlock();
    		LOG.debug(""after unlock TaskRunnerFactory[{}-0x{}], executor:{}"", name, Integer.toHexString(threadId), executor);
    	}
    }
{code}

Initialization log
{code}
2017-02-15 17:02:57.614 [DEBUG] [colContainer-1] o.a.a.t.TaskRunnerFactory - before init TaskRunnerFactory[ActiveMQ Session Task-0x2bef0d82], executor:null
2017-02-15 17:02:57.615 [DEBUG] [clContainer-1] o.a.a.t.TaskRunnerFactory - before init TaskRunnerFactory[ActiveMQ Session Task-0x4b0e0ec5], executor:null
2017-02-15 17:02:57.615 [DEBUG] [clContainer-1] o.a.a.t.TaskRunnerFactory - after unlock TaskRunnerFactory[ActiveMQ Session Task-0x4b0e0ec5], executor:null
2017-02-15 17:02:57.615 [DEBUG] [rlContainer-1] o.a.a.t.TaskRunnerFactory - before init TaskRunnerFactory[ActiveMQ Session Task-0x28aeb65f], executor:null
2017-02-15 17:02:57.615 [DEBUG] [rlContainer-1] o.a.a.t.TaskRunnerFactory - after unlock TaskRunnerFactory[ActiveMQ Session Task-0x28aeb65f], executor:null
2017-02-15 17:02:57.615 [DEBUG] [polContainer-1] o.a.a.t.TaskRunnerFactory - before init TaskRunnerFactory[ActiveMQ Session Task-0x6e32598d], executor:null
2017-02-15 17:02:57.615 [DEBUG] [polContainer-1] o.a.a.t.TaskRunnerFactory - after unlock TaskRunnerFactory[ActiveMQ Session Task-0x6e32598d], executor:null
2017-02-15 17:02:57.621 [DEBUG] [rolContainer-1] o.a.a.t.TaskRunnerFactory - before init TaskRunnerFactory[ActiveMQ Session Task-0x75aef312], executor:null
2017-02-15 17:02:57.621 [DEBUG] [rolContainer-1] o.a.a.t.TaskRunnerFactory - after unlock TaskRunnerFactory[ActiveMQ Session Task-0x75aef312], executor:null
2017-02-15 17:02:57.621 [DEBUG] [org.springframework.jms.listener.DefaultMessageListenerContainer#0-1] o.a.a.t.TaskRunnerFactory - before init TaskRunnerFactory[ActiveMQ Session Task-0x20a020d9], executor:null
2017-02-15 17:02:57.621 [DEBUG] [org.springframework.jms.listener.DefaultMessageListenerContainer#0-1] o.a.a.t.TaskRunnerFactory - after unlock TaskRunnerFactory[ActiveMQ Session Task-0x20a020d9], executor:null
2017-02-15 17:02:57.636 [TRACE] [ActiveMQ Session: ID:comp-49411-1487206976940-1:1:1] o.a.a.t.DedicatedTaskRunner - Running task org.apache.activemq.ActiveMQSessionExecutor@7d4182f8
2017-02-15 17:02:57.637 [TRACE] [ActiveMQ Session: ID:comp-49411-1487206976940-1:1:6] o.a.a.t.DedicatedTaskRunner - Running task org.apache.activemq.ActiveMQSessionExecutor@1d3f4670
2017-02-15 17:02:57.639 [TRACE] [ActiveMQ Session: ID:comp-49411-1487206976940-1:1:2] o.a.a.t.DedicatedTaskRunner - Running task org.apache.activemq.ActiveMQSessionExecutor@51aef7dd
2017-02-15 17:02:57.641 [TRACE] [ActiveMQ Session: ID:comp-49411-1487206976940-1:1:5] o.a.a.t.DedicatedTaskRunner - Running task org.apache.activemq.ActiveMQSessionExecutor@2cd032c6
2017-02-15 17:02:57.642 [TRACE] [ActiveMQ Session: ID:comp-49411-1487206976940-1:1:12] o.a.a.t.DedicatedTaskRunner - Running task org.apache.activemq.ActiveMQSessionExecutor@6ab678f8
2017-02-15 17:02:57.649 [DEBUG] [colContainer-1] o.a.a.t.TaskRunnerFactory - Initialized TaskRunnerFactory[ActiveMQ Session Task-0x2bef0d82] using ExecutorService: java.util.concurrent.ThreadPoolExecutor@5b724860[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]
2017-02-15 17:02:57.650 [DEBUG] [colContainer-1] o.a.a.t.TaskRunnerFactory - after unlock TaskRunnerFactory[ActiveMQ Session Task-0x2bef0d82], executor:java.util.concurrent.ThreadPoolExecutor@5b724860[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]
2017-02-15 17:02:57.660 [TRACE] [colContainer-1] o.a.a.t.TaskRunnerFactory - Created thread[ActiveMQ Session Task-1]: Thread[ActiveMQ Session Task-1,7,main]
2017-02-15 17:02:57.813 [DEBUG] [DefaultMessageListenerContainer-2] o.a.a.t.TaskRunnerFactory - before init TaskRunnerFactory[ActiveMQ Session Task-0x789e8e89], executor:java.util.concurrent.ThreadPoolExecutor@5b724860[Running, pool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1]
2017-02-15 17:02:57.814 [DEBUG] [DefaultMessageListenerContainer-2] o.a.a.t.TaskRunnerFactory - after unlock TaskRunnerFactory[ActiveMQ Session Task-0x789e8e89], executor:java.util.concurrent.ThreadPoolExecutor@5b724860[Running, pool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1]
2017-02-15 17:02:57.815 [DEBUG] [DefaultMessageListenerContainer-3] o.a.a.t.TaskRunnerFactory - before init TaskRunnerFactory[ActiveMQ Session Task-0x5c3aee6b], executor:java.util.concurrent.ThreadPoolExecutor@5b724860[Running, pool size = 1, active threads = 0, queued tasks = 0, completed tasks = 2]
2017-02-15 17:02:57.816 [DEBUG] [DefaultMessageListenerContainer-3] o.a.a.t.TaskRunnerFactory - after unlock TaskRunnerFactory[ActiveMQ Session Task-0x5c3aee6b], executor:java.util.concurrent.ThreadPoolExecutor@5b724860[Running, pool size = 1, active threads = 0, queued tasks = 0, completed tasks = 2]
2017-02-15 17:02:57.815 [DEBUG] [DefaultMessageListenerContainer-4] o.a.a.t.TaskRunnerFactory - before init TaskRunnerFactory[ActiveMQ Session Task-0x11da4ceb], executor:java.util.concurrent.ThreadPoolExecutor@5b724860[Running, pool size = 1, active threads = 0, queued tasks = 0, completed tasks = 2]
2017-02-15 17:02:57.817 [DEBUG] [DefaultMessageListenerContainer-4] o.a.a.t.TaskRunnerFactory - after unlock TaskRunnerFactory[ActiveMQ Session Task-0x11da4ceb], executor:java.util.concurrent.ThreadPoolExecutor@5b724860[Running, pool size = 1, active threads = 0, queued tasks = 0, completed tasks = 3]
2017-02-15 17:02:57.813 [DEBUG] [DefaultMessageListenerContainer-5] o.a.a.t.TaskRunnerFactory - before init TaskRunnerFactory[ActiveMQ Session Task-0x5da5b756], executor:java.util.concurrent.ThreadPoolExecutor@5b724860[Running, pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 2]
2017-02-15 17:02:57.815 [DEBUG] [klContainer-1] o.a.a.t.TaskRunnerFactory - before init TaskRunnerFactory[ActiveMQ Session Task-0x36ebc2a0], executor:java.util.concurrent.ThreadPoolExecutor@5b724860[Running, pool size = 1, active threads = 0, queued tasks = 0, completed tasks = 3]
2017-02-15 17:02:57.817 [DEBUG] [klContainer-1] o.a.a.t.TaskRunnerFactory - after unlock TaskRunnerFactory[ActiveMQ Session Task-0x36ebc2a0], executor:java.util.concurrent.ThreadPoolExecutor@5b724860[Running, pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 3]
2017-02-15 17:02:57.817 [TRACE] [klContainer-1] o.a.a.t.TaskRunnerFactory - Created thread[ActiveMQ Session Task-2]: Thread[ActiveMQ Session Task-2,7,main]
2017-02-15 17:02:57.817 [DEBUG] [DefaultMessageListenerContainer-1] o.a.a.t.TaskRunnerFactory - before init TaskRunnerFactory[ActiveMQ Session Task-0x62922916], executor:java.util.concurrent.ThreadPoolExecutor@5b724860[Running, pool size = 1, active threads = 0, queued tasks = 0, completed tasks = 3]
2017-02-15 17:02:57.818 [DEBUG] [DefaultMessageListenerContainer-1] o.a.a.t.TaskRunnerFactory - after unlock TaskRunnerFactory[ActiveMQ Session Task-0x62922916], executor:java.util.concurrent.ThreadPoolExecutor@5b724860[Running, pool size = 2, active threads = 1, queued tasks = 0, completed tasks = 4]
2017-02-15 17:02:57.818 [DEBUG] [DefaultMessageListenerContainer-5] o.a.a.t.TaskRunnerFactory - after unlock TaskRunnerFactory[ActiveMQ Session Task-0x5da5b756], executor:java.util.concurrent.ThreadPoolExecutor@5b724860[Running, pool size = 2, active threads = 0, queued tasks = 0, completed tasks = 6]
{code}

Sample configuration:
{code}
	<bean id=""jmsFactory"" class=""org.apache.activemq.pool.PooledConnectionFactory""
		destroy-method=""stop"">
		<property name=""connectionFactory"">
			<bean class=""org.apache.activemq.ActiveMQConnectionFactory"" p:trustAllPackages=""true"">
				<property name=""brokerURL"">
					<value>${jms.host}</value>
				</property>
			</bean>
		</property>
	</bean>

.............
I have containers defined like this one
	<bean id=""polContainer""
		class=""org.springframework.jms.listener.DefaultMessageListenerContainer"">
		<property name=""connectionFactory"" ref=""jmsFactory"" />
		<property name=""destination"" ref=""poQueue"" />
		<property name=""messageListener"" ref=""psReceiver"" />
		<property name=""concurrentConsumers"" value=""1"" />
	</bean>

{code}

The problem is initDone.compareAndSet(false, true) set TRUE (Thread [ colContainer-1 ]), but executor still null when next Thread ( [ clContainer-1 ]) try to use this shared connection.
In my box it takes 30ms to create Executor after this all works fine. 
;;;","23/Feb/17 14:02;cshannon;Ah, I see the issue now, good catch.  I forgot that the init() method is invoked each time createTaskRunner() and execute() is called leading to this race condition where multiple TaskRunners get started when they shouldn't.  I will take a closer look at this for a fix, some variation of your patch will probably be the fix.;;;","23/Feb/17 15:20;jira-bot;Commit fe5164a404ebcb0879c1b769e16c00f475320419 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=fe5164a ]

AMQ-6602: Fix race condition in TaskRunnerFactory

Fixing a race condition in TaskRunnerFactory where if multiple threads
call createTaskRunner() at the same time some threads might see the
executor as null (if it hasn't finished initializing) leading to the
creation of extra DedicatedTaskRunner objects instead of sharing a
PooledTaskRunner.
;;;","23/Feb/17 15:21;jira-bot;Commit b6a8c188ff07a795399067ef6f6598a2f623a002 in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b6a8c18 ]

AMQ-6602: Fix race condition in TaskRunnerFactory

Fixing a race condition in TaskRunnerFactory where if multiple threads
call createTaskRunner() at the same time some threads might see the
executor as null (if it hasn't finished initializing) leading to the
creation of extra DedicatedTaskRunner objects instead of sharing a
PooledTaskRunner.

(cherry picked from commit fe5164a404ebcb0879c1b769e16c00f475320419)
;;;","23/Feb/17 15:26;cshannon;Resolved the issue by using a variation of double checked locking so that the synchronized penalty only occurs when initialization is first needed.  After initialization is complete threads will no longer need to synchronize every init() call.;;;","23/Feb/17 15:57;jira-bot;Commit 1f53b124bcdc41e6241c811f6854c42855deaf6a in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=1f53b12 ]

AMQ-6602 - Removing lambdas for java 7 compatibility
;;;","23/Feb/17 15:57;jira-bot;Commit 789f82b34bd4103448e25ae16f53d95946619809 in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=789f82b ]

AMQ-6602 - Removing lambdas for java 7 compatibility

(cherry picked from commit 1f53b124bcdc41e6241c811f6854c42855deaf6a)
;;;","23/Feb/17 16:42;mykolamarkov;Thanks Christopher for quick patch!;;;","24/Feb/17 11:37;jira-bot;Commit 0cf64783d2cbae684f6d2d3e6c46801070f7fd77 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=0cf6478 ]

AMQ-6602 - fix java 7 incompatibility
;;;","24/Feb/17 11:38;jira-bot;Commit e5751570936e335a59dfa7f124623f4b257be03d in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e575157 ]

AMQ-6602 - fix java 7 incompatibility

(cherry picked from commit 0cf64783d2cbae684f6d2d3e6c46801070f7fd77)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"AMQ with master and slave broker, shutting down slave causes dead-lock",AMQ-6601,13043292,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,hadrian,catull,catull,15/Feb/17 15:37,19/Dec/17 04:28,14/Jul/23 05:44,19/Dec/17 04:28,5.14.0,,,,,,,,,5.14.6,5.15.3,5.16.0,,Broker,,,,,1,,,,,,"We have 2 karaf instances configured to be activemq brokers, broker-amq (b1) and broker2-amq (b2).

They run on the same machine, use KahaDB with file locking.
It does not matter if b1 or b2 is started first, it becomes the master.

The other one, the slave, when shutting down - while the master is running - hits a dead-lock; it must be `kill -9`'d manually in the end.

We have a classic dead-lock scenario.  I have attached a `jstack` output when the slave broker is shutting down.

The race is on between thread #20 and thread #17.
Thread #17 is in 
{code:java}
ActiveMQServiceFactory.destroy(ActiveMQServiceFactory.java:173)
{code}

and thread #20 is in
{code:java}
ActiveMQServiceFactory.updated(ActiveMQServiceFactory.java:140)
{code}

{code}
""CM Configuration Updater (ManagedServiceFactory Update: factoryPid=[org.apache.activemq.server])"" #20 daemon prio=5 os_prio=0 tid=0x00007f793c160800 nid=0x7084 waiting on condition [0x00007f799819f000]
   java.lang.Thread.State: TIMED_WAITING (sleeping)
        at java.lang.Thread.sleep(Native Method)
        at java.lang.Thread.sleep(Thread.java:340)
        at java.util.concurrent.TimeUnit.sleep(TimeUnit.java:386)
        at org.apache.activemq.store.SharedFileLocker.doStart(SharedFileLocker.java:83)
        at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:55)
        at org.apache.activemq.broker.LockableServiceSupport.preStart(LockableServiceSupport.java:94)
        at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:54)
        at org.apache.activemq.broker.BrokerService.doStartPersistenceAdapter(BrokerService.java:674)
        at org.apache.activemq.broker.BrokerService.startPersistenceAdapter(BrokerService.java:658)
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:622)
        at org.apache.activemq.osgi.ActiveMQServiceFactory.updated(ActiveMQServiceFactory.java:140)
        - locked <0x000000072bd74db0> (a org.apache.activemq.osgi.ActiveMQServiceFactory)
        at Proxy8890d2d1_e3a3_4b71_a7a0_88810df56856.updated(Unknown Source)
        at org.apache.felix.cm.impl.helper.ManagedServiceFactoryTracker.updated(ManagedServiceFactoryTracker.java:159)
        at org.apache.felix.cm.impl.helper.ManagedServiceFactoryTracker.provideConfiguration(ManagedServiceFactoryTracker.java:93)
        at org.apache.felix.cm.impl.ConfigurationManager$ManagedServiceFactoryUpdate.provide(ConfigurationManager.java:1597)
        at org.apache.felix.cm.impl.ConfigurationManager$ManagedServiceFactoryUpdate.run(ConfigurationManager.java:1540)
        at org.apache.felix.cm.impl.UpdateThread.run(UpdateThread.java:103)
        at java.lang.Thread.run(Thread.java:745)
 
""Thread-4"" #19 daemon prio=5 os_prio=0 tid=0x00007f7940002800 nid=0x7081 runnable [0x00007f79984b4000]
   java.lang.Thread.State: RUNNABLE
        at java.net.PlainSocketImpl.socketAccept(Native Method)
        at java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:409)
        at java.net.ServerSocket.implAccept(ServerSocket.java:545)
        at java.net.ServerSocket.accept(ServerSocket.java:513)
        at org.apache.karaf.main.ShutdownSocketThread.run(ShutdownSocketThread.java:56)
 
""Thread-3"" #18 prio=5 os_prio=0 tid=0x00007f79d0c48800 nid=0x7080 waiting on condition [0x00007f79985b5000]
   java.lang.Thread.State: TIMED_WAITING (sleeping)
        at java.lang.Thread.sleep(Native Method)
        at org.apache.karaf.main.Main.doMonitor(Main.java:299)
        at org.apache.karaf.main.Main.access$100(Main.java:65)
        at org.apache.karaf.main.Main$1.run(Main.java:275)
 
""FelixStartLevel"" #17 daemon prio=5 os_prio=0 tid=0x00007f79d0c48000 nid=0x707f waiting for monitor entry [0x00007f79986b5000]
   java.lang.Thread.State: BLOCKED (on object monitor)
        at org.apache.activemq.osgi.ActiveMQServiceFactory.destroy(ActiveMQServiceFactory.java:173)
        - waiting to lock <0x000000072bd74db0> (a org.apache.activemq.osgi.ActiveMQServiceFactory)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:498)
        at org.apache.aries.blueprint.utils.ReflectionUtils.invoke(ReflectionUtils.java:299)
        at org.apache.aries.blueprint.container.BeanRecipe.invoke(BeanRecipe.java:980)
        at org.apache.aries.blueprint.container.BeanRecipe.destroy(BeanRecipe.java:887)
        at org.apache.aries.blueprint.container.BlueprintRepository.destroy(BlueprintRepository.java:329)
        at org.apache.aries.blueprint.container.BlueprintContainerImpl.destroyComponents(BlueprintContainerImpl.java:765)
        at org.apache.aries.blueprint.container.BlueprintContainerImpl.tidyupComponents(BlueprintContainerImpl.java:964)
        at org.apache.aries.blueprint.container.BlueprintContainerImpl.destroy(BlueprintContainerImpl.java:909)
        at org.apache.aries.blueprint.container.BlueprintExtender$3.run(BlueprintExtender.java:325)
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
        at java.util.concurrent.FutureTask.run(FutureTask.java:266)
        at org.apache.aries.blueprint.container.BlueprintExtender.destroyContainer(BlueprintExtender.java:346)
        at org.apache.aries.blueprint.container.BlueprintExtender.modifiedBundle(BlueprintExtender.java:238)
        at org.apache.aries.util.tracker.hook.BundleHookBundleTracker$Tracked.customizerModified(BundleHookBundleTracker.java:500)
        at org.apache.aries.util.tracker.hook.BundleHookBundleTracker$Tracked.customizerModified(BundleHookBundleTracker.java:433)
        at org.apache.aries.util.tracker.hook.BundleHookBundleTracker$AbstractTracked.track(BundleHookBundleTracker.java:725)
        at org.apache.aries.util.tracker.hook.BundleHookBundleTracker$Tracked.bundleChanged(BundleHookBundleTracker.java:463)
        at org.apache.aries.util.tracker.hook.BundleHookBundleTracker$BundleEventHook.event(BundleHookBundleTracker.java:422)
        at org.apache.felix.framework.util.SecureAction.invokeBundleEventHook(SecureAction.java:1103)
        at org.apache.felix.framework.util.EventDispatcher.createWhitelistFromHooks(EventDispatcher.java:695)
        at org.apache.felix.framework.util.EventDispatcher.fireBundleEvent(EventDispatcher.java:483)
        at org.apache.felix.framework.Felix.fireBundleEvent(Felix.java:4403)
        at org.apache.felix.framework.Felix.stopBundle(Felix.java:2520)
        at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1309)
        at org.apache.felix.framework.FrameworkStartLevelImpl.run(FrameworkStartLevelImpl.java:304)
        at java.lang.Thread.run(Thread.java:745)
{code}
",,catull,githubbot,hadrian,jira-bot,lichtin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Feb/17 15:59;catull;jstack-28657;https://issues.apache.org/jira/secure/attachment/12852842/jstack-28657",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Dec 19 04:28:34 UTC 2017,,,,,,,,,,,"0|i3a4av:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Feb/17 15:59;catull;jstack trace of slave shutdown;;;","27/Feb/17 20:33;lichtin;It could help if ActiveMQServiceFactory would do an async start.;;;","03/Mar/17 14:10;lichtin;My local fix for this issue is to start the the broker async and only wait in case it is the Master:

{noformat}
***************
*** 137,143 ****
--- 136,144 ----
        brokerContext.setApplicationContext(ctx);
        broker.setBrokerContext(brokerContext);

+       broker.setStartAsync(true);
        broker.start();
+       if (!broker.isSlave())
          broker.waitUntilStarted();
        brokers.put(pid, broker);
      } catch (Exception e) {
{noformat}
;;;","04/Mar/17 20:06;githubbot;GitHub user catull opened a pull request:

    https://github.com/apache/activemq/pull/228

    [AMQ-6601] AMQ with master and slave broker, shutting down slave causes a dead-lock

    This PR addresses the issue https://issues.apache.org/jira/browse/AMQ-6601.
    
    The proposed solution is to start the broker asynchronously, but only wait for its starting up if it is the master (i.e. non-slave).
    
    Closes / fixes issue #6601.
    
    Credit goes to @lichtin for coming up with the solution.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/catull/activemq fix-issue-6601-shutdown-slave-broker

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/228.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #228
    
----
commit 5de4f788d17f406c713d42a1bd77c15b973ac0de
Author: Carlo Dapor <catull@gmail.com>
Date:   2017-03-04T20:01:34Z

    [AMQ-6601] AMQ with master and slave broker, shutting down slave causes dead-lock.

----
;;;","04/Mar/17 20:10;catull;Created pull request https://github.com/apache/activemq/pull/228.;;;","30/May/17 13:50;lichtin;Upgrading to 5.14.5 I noticed the issue is still there. Can the change be included in the next release?
;;;","19/Dec/17 04:04;jira-bot;Commit b04b9716855d95eae0276cc56c464765d3fbd95e in activemq's branch refs/heads/activemq-5.15.x from [~catull]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b04b971 ]

[AMQ-6601] AMQ with master and slave broker, shutting down slave causes dead-lock.
;;;","19/Dec/17 04:08;jira-bot;Commit 30edca5b22d95e919f403c03b1c307914572ba65 in activemq's branch refs/heads/activemq-5.14.x from [~catull]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=30edca5 ]

[AMQ-6601] AMQ with master and slave broker, shutting down slave causes dead-lock.
;;;","19/Dec/17 04:12;jira-bot;Commit b40e5f93bdfdecad84f880edce23c4ae8af9a76d in activemq's branch refs/heads/master from [~catull]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b40e5f9 ]

[AMQ-6601] AMQ with master and slave broker, shutting down slave causes dead-lock.
;;;","19/Dec/17 04:13;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/228
;;;","19/Dec/17 04:28;hadrian;Merged. Many thanks for the contribution!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MQTT+NIO+SSL transport: transport.soTimeout is not applied during SSL handshake,AMQ-6599,13042895,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,thomas.winterhalder,thomas.winterhalder,14/Feb/17 10:26,17/Feb/17 23:23,14/Jul/23 05:44,17/Feb/17 13:07,5.14.3,,,,,,,,,5.14.4,5.15.0,,,Transport,,,,,0,,,,,,"Currently I have trouble with many established TCP connections and threads hanging in the NIO+SSL handshake step. The hardware devices I use often have problems during SSL handshake and do not respond any more. So I thought configuring a transport.soTimeout value should solve the problem of hanging connections, because something like the MQTT  transport.defaultKeepAlive check is not applicable in this step yet. But setting transport.soTimeout=30000 had no effect.
I made a remote debug session to the ActiveMQ broker and saw lots of threads waiting at NIOSSLTransport.java Line 430:

    int keyCount = selector.select(this.getSoTimeout());
    if (keyCount == 0 && this.getSoTimeout() > 0 && ((System.currentTimeMillis() - now) >= this.getSoTimeout())) {
        throw new SocketTimeoutException(""Timeout during handshake"");
    }

At this point this.getSoTimeout returns always 0, which results in infinite timeout.
I tried to figure out why the soTimeout setting works not as configured and found the code where the NIOSSLTransport object is created: TcpTransportServer.java function doHandleSocket(Socket socket). Here in line 580:

    options.putAll(transportOptions);

The soTimeout value is already removed from the transportOptions but it was apperantly not applied to the relevant object.

To solve my problem for now I tried if the transport.soTimeout configuration works in a MQTT+SSL Stack (without using NIO) and it worked.

May you please be so kind and solve this issue, so that the transport.soTimeout configurations works during SSL handshake and payload transfer as well for NIO.","Ubuntu 16.04
openjdk version ""1.8.0_121""
OpenJDK Runtime Environment (build 1.8.0_121-8u121-b13-0ubuntu1.16.04.2-b13)
OpenJDK 64-Bit Server VM (build 25.121-b13, mixed mode)",cshannon,jira-bot,thomas.winterhalder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Feb 17 23:23:10 UTC 2017,,,,,,,,,,,"0|i3a1un:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Feb/17 13:04;jira-bot;Commit f6bf823dedba54dea40b597f1762ac6d7308ffa6 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=f6bf823 ]

AMQ-6599 - Properly apply soTimeout value to TcpTransport

https://issues.apache.org/jira/browse/AMQ-6599

The soTimeout value needs to be applied to the TcpTransport as well as
the socket because the NIO transports use the value later on when
establishing a connection
;;;","17/Feb/17 13:04;jira-bot;Commit f6bf823dedba54dea40b597f1762ac6d7308ffa6 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=f6bf823 ]

AMQ-6599 - Properly apply soTimeout value to TcpTransport

https://issues.apache.org/jira/browse/AMQ-6599

The soTimeout value needs to be applied to the TcpTransport as well as
the socket because the NIO transports use the value later on when
establishing a connection
;;;","17/Feb/17 13:05;jira-bot;Commit 7c84aca59f89523c20daeced2b5f849d0fac0740 in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=7c84aca ]

AMQ-6599 - Properly apply soTimeout value to TcpTransport

The soTimeout value needs to be applied to the TcpTransport as well as
the socket because the NIO transports use the value later on when
establishing a connection

(cherry picked from commit f6bf823dedba54dea40b597f1762ac6d7308ffa6)
;;;","17/Feb/17 13:07;cshannon;The issue was the soTimeout value was being remove from the options map after being applied to the Socket so it was not applied on the TcpTransport itself.  For normal transports this is not a problem but for the NIO transports this causes the soTimeout value to always be 0 later on when it is used on selector.select(soTimeout) as you found.  I'm planning on working on the 5.14.4 release next week so the fix should be out soon.;;;","17/Feb/17 23:23;thomas.winterhalder;Thanks for fixing this issue so fast!
:-);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SQLException when moving messages to DLQ,AMQ-6598,13042616,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,domaier,domaier,13/Feb/17 17:17,01/Dec/17 09:36,14/Jul/23 05:44,01/Dec/17 09:36,5.12.0,5.14.3,,,,,,,,,,,,JDBC,,,,,0,,,,,,"ActiveMQ raises a SQLException when moving messages from two or more queues to the configured dead-letter-queue. It only happens with two or more queues and multiple messages. The exception is logged on level WARN and it seems that no messages are lost. First affected version is 5.12.0, but also happens with the current version 5.14.3.

{code}
java.io.IOException: Failed to broker message: ID:server-amq-46753-1486658241250-4:5:3:1:13 in container: java.sql.SQLException: org.apache.commons.dbcp2.DelegatingPreparedStatement with address: ""NULL"" is closed.
        at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:34) ~[activemq-client-5.14.3.jar:5.14.3]
        at org.apache.activemq.store.jdbc.JDBCMessageStore.addMessage(JDBCMessageStore.java:163) ~[activemq-jdbc-store-5.14.3.jar:5.14.3]
        at org.apache.activemq.store.memory.MemoryTransactionStore.addMessage(MemoryTransactionStore.java:352) ~[activemq-broker-5.14.3.jar:5.14.3]
        at org.apache.activemq.store.memory.MemoryTransactionStore$1.asyncAddQueueMessage(MemoryTransactionStore.java:159) ~[activemq-broker-5.14.3.jar:5.14.3]
        at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:837) ~[activemq-broker-5.14.3.jar:5.14.3]
        at org.apache.activemq.broker.region.Queue.send(Queue.java:727) ~[activemq-broker-5.14.3.jar:5.14.3]
        at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:503) ~[activemq-broker-5.14.3.jar:5.14.3]
        at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:468) ~[activemq-broker-5.14.3.jar:5.14.3]
        at org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:293) ~[activemq-broker-5.14.3.jar:5.14.3]
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:153) ~[activemq-broker-5.14.3.jar:5.14.3]
        at org.apache.activemq.broker.scheduler.SchedulerBroker.send(SchedulerBroker.java:195) ~[activemq-broker-5.14.3.jar:5.14.3]
        at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96) ~[activemq-broker-5.14.3.jar:5.14.3]
        at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:293) ~[activemq-broker-5.14.3.jar:5.14.3]
        at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:158) ~[activemq-broker-5.14.3.jar:5.14.3]
        at org.apache.activemq.broker.util.LoggingBrokerPlugin.send(LoggingBrokerPlugin.java:275) ~[activemq-broker-5.14.3.jar:5.14.3]
        at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:158) ~[activemq-broker-5.14.3.jar:5.14.3]
        at org.apache.activemq.util.BrokerSupport.doResend(BrokerSupport.java:69) ~[activemq-broker-5.14.3.jar:5.14.3]
        at org.apache.activemq.util.BrokerSupport.resendNoCopy(BrokerSupport.java:38) ~[activemq-broker-5.14.3.jar:5.14.3]
        at org.apache.activemq.broker.region.RegionBroker.sendToDeadLetterQueue(RegionBroker.java:799) [activemq-broker-5.14.3.jar:5.14.3]
        at org.apache.activemq.broker.BrokerFilter.sendToDeadLetterQueue(BrokerFilter.java:319) [activemq-broker-5.14.3.jar:5.14.3]
        at org.apache.activemq.broker.BrokerFilter.sendToDeadLetterQueue(BrokerFilter.java:319) [activemq-broker-5.14.3.jar:5.14.3]
        at org.apache.activemq.broker.BrokerFilter.sendToDeadLetterQueue(BrokerFilter.java:319) [activemq-broker-5.14.3.jar:5.14.3]
        at org.apache.activemq.broker.MutableBrokerFilter.sendToDeadLetterQueue(MutableBrokerFilter.java:331) [activemq-broker-5.14.3.jar:5.14.3]
        at org.apache.activemq.broker.util.LoggingBrokerPlugin.sendToDeadLetterQueue(LoggingBrokerPlugin.java:505) [activemq-broker-5.14.3.jar:5.14.3]
        at org.apache.activemq.broker.MutableBrokerFilter.sendToDeadLetterQueue(MutableBrokerFilter.java:331) [activemq-broker-5.14.3.jar:5.14.3]
        at org.apache.activemq.broker.region.PrefetchSubscription.sendToDLQ(PrefetchSubscription.java:535) [activemq-broker-5.14.3.jar:5.14.3]
        at org.apache.activemq.broker.region.PrefetchSubscription.acknowledge(PrefetchSubscription.java:394) [activemq-broker-5.14.3.jar:5.14.3]
        at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:526) [activemq-broker-5.14.3.jar:5.14.3]
        at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:484) [activemq-broker-5.14.3.jar:5.14.3]
        at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:88) [activemq-broker-5.14.3.jar:5.14.3]
        at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:88) [activemq-broker-5.14.3.jar:5.14.3]
        at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:276) [activemq-broker-5.14.3.jar:5.14.3]
        at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:98) [activemq-broker-5.14.3.jar:5.14.3]
        at org.apache.activemq.broker.util.LoggingBrokerPlugin.acknowledge(LoggingBrokerPlugin.java:162) [activemq-broker-5.14.3.jar:5.14.3]
        at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:98) [activemq-broker-5.14.3.jar:5.14.3]
        at org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:590) [activemq-broker-5.14.3.jar:5.14.3]
        at org.apache.activemq.command.MessageAck.visit(MessageAck.java:245) [activemq-client-5.14.3.jar:5.14.3]
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:336) [activemq-broker-5.14.3.jar:5.14.3]
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:200) [activemq-broker-5.14.3.jar:5.14.3]
        at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50) [activemq-client-5.14.3.jar:5.14.3]
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:125) [activemq-client-5.14.3.jar:5.14.3]
        at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:301) [activemq-client-5.14.3.jar:5.14.3]
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83) [activemq-client-5.14.3.jar:5.14.3]
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:233) [activemq-client-5.14.3.jar:5.14.3]
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:215) [activemq-client-5.14.3.jar:5.14.3]
        at java.lang.Thread.run(Thread.java:745) [?:1.8.0_121]
Caused by: java.sql.SQLException: org.apache.commons.dbcp2.DelegatingPreparedStatement with address: ""NULL"" is closed.
        at org.apache.commons.dbcp2.DelegatingStatement.checkOpen(DelegatingStatement.java:122) ~[commons-dbcp2-2.1.1.jar:2.1.1]
        at org.apache.commons.dbcp2.DelegatingPreparedStatement.setString(DelegatingPreparedStatement.java:143) ~[commons-dbcp2-2.1.1.jar:2.1.1]
        at org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.doAddMessage(DefaultJDBCAdapter.java:233) ~[activemq-jdbc-store-5.14.3.jar:5.14.3]
        at org.apache.activemq.store.jdbc.JDBCMessageStore.addMessage(JDBCMessageStore.java:159) ~[activemq-jdbc-store-5.14.3.jar:5.14.3]
        ... 44 more
{code}



h5. Setup to reproduce:
Configure jdbcPersistenceAdapter with a MySQL datasource and a individualDeadLetterStrategy:
{code}
...
<policyEntry queue="">"">
    <deadLetterStrategy>
        <individualDeadLetterStrategy queuePrefix=""DLQ."" useQueueForQueueMessages=""true""/>
    </deadLetterStrategy>
</policyEntry>
...
<persistenceAdapter>
   <jdbcPersistenceAdapter dataDirectory=""${activemq.data}"" cleanupPeriod=""0"" dataSource=""#mysql-ds""/>
</persistenceAdapter>
...
<bean id=""mysql-ds"" class=""org.apache.commons.dbcp2.BasicDataSource"" destroy-method=""close"">
  <property name=""driverClassName"" value=""com.mysql.jdbc.Driver""/>
  <property name=""url"" value=""jdbc:mysql://localhost/activemq?relaxAutoCommit=true""/>
  <property name=""username"" value=""user""/>
  <property name=""password"" value=""password""/>
  <property name=""poolPreparedStatements"" value=""true""/>
</bean>
...
{code}

Setup two consumers and producers for two different queues, e.g test.queue.1 and test.queue.2

The consumers should have no client-side redelivery and directly throw an exception when consuming the message to trigger the DLQ mechanism on the broker.

Send around 1000 messages with each producer in a loop.

After a few seconds you see the above mentioned SQLException in the ActiveMQ.log on level WARN.",,domaier,j.hedin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Dec 01 09:36:04 UTC 2017,,,,,,,,,,,"0|i3a04v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Nov/17 19:20;j.hedin;This one looks related to AMQ-6693;;;","01/Dec/17 09:36;domaier;I double checked, its fixed in [AMQ-6693|https://issues.apache.org/jira/browse/AMQ-6693], thanks. I close this issue;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq-camel does not work together with camel 2.18,AMQ-6597,13042534,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cschneider,cschneider,cschneider,13/Feb/17 10:28,24/Jun/17 11:29,14/Jul/23 05:44,15/Feb/17 13:28,5.13.5,5.14.3,,,,,,,,5.13.6,5.14.4,5.15.0,5.x,Camel,,,,,0,,,,,,"Start apache karaf 4.1.0 and execute these commands in the console:
feature:repo-add activemq 5.14.3
feature:repo-add spring-legacy 4.1.0
feature:repo-add camel 2.18.2
feature:install activemq-broker activemq-camel

The activemq-camel bundle sometimes does not resolve and we get a Uses constraint violation error:
http://apaste.info/3GSjx

I then deploy this blueprint into the deploy folder: http://apaste.info/i3Uhc
Strangely when I use the org.apache.activemq.camel.component.ActiveMQComponent in a blueprint I get a strange error like below 
http://apaste.info/d3f4s
This might be a dynamic package import thing again. Not sure though.
",,cschneider,cshannon,jira-bot,sobkowiak,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6268,AMQ-6241,,,,,,,,,,,,,,,CAMEL-10573,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Feb 23 17:38:53 UTC 2017,,,,,,,,,,,"0|i39zmn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Feb/17 13:26;jira-bot;Commit c0c9e9c0ab030a806ef085b08e9605c881fb8bdd in activemq's branch refs/heads/master from [~chris@die-schneider.net]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=c0c9e9c ]

[AMQ-6597] Do not add the camel component decriptors to activemq-osgi
;;;","15/Feb/17 13:26;jira-bot;Commit 2d4b13be3f701eaddbff68b6cc2c1ef17f7f5231 in activemq's branch refs/heads/activemq-5.14.x from [~chris@die-schneider.net]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=2d4b13b ]

[AMQ-6597] Do not add the camel component decriptors to activemq-osgi
;;;","15/Feb/17 13:27;jira-bot;Commit df3a81067c58cfa27cdc8f175ca9c31ee7f04496 in activemq's branch refs/heads/activemq-5.12.x from [~chris@die-schneider.net]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=df3a810 ]

[AMQ-6597] Do not add the camel component decriptors to activemq-osgi
;;;","15/Feb/17 13:28;jira-bot;Commit 208a577b0a578a64777e420c312cf4cea888370c in activemq's branch refs/heads/activemq-5.13.x from [~chris@die-schneider.net]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=208a577 ]

[AMQ-6597] Do not add the camel component decriptors to activemq-osgi
;;;","22/Feb/17 14:26;cshannon;[~chris@die-schneider.net],  I think this patch may be causing unit test issues in the 5.14.x build.  https://builds.apache.org/view/All/job/ActiveMQ-Java8-5.14.x/31/org.apache.activemq$activemq-karaf-itest/

Can you take a look? It might just be an issue with the Jenkins environment as I ran the tests locally and they seem to pass.;;;","23/Feb/17 15:51;cshannon;It looks like the issue is some snapshots can't be found during the build.  I think Pax exam needs to be configured to point to the write maven local when using CI, I'm taking a look now.;;;","23/Feb/17 17:38;cshannon;So the org.ops4j.pax.url.mvn.localRepository property is being set in a profile in the karaf-itest pom already so not sure what is wrong with it.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Overly restrictive file mode on lib/*.jar files,AMQ-6595,13041430,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,cshannon,pioto,pioto,08/Feb/17 16:54,08/Feb/17 18:23,14/Jul/23 05:44,08/Feb/17 18:19,5.14.3,,,,,,,,,5.14.4,5.15.0,,,Distribution,,,,,0,,,,,,"It seems that the default file mode on the JAR files in the the distribution is {{0600}}, which means that if you have the distribution files owned by, say, {{root}}, but are running as another used (with a separate {{ACTIVEMQ_HOME}} and {{ACTIVEMQ_BASE}}), then the application fails to start, as it cannot read its JAR files.

{noformat}
$ tar tzvf ~/Downloads/apache-activemq-5.14.3-bin.tar.gz | grep '^-rw-------'
-rw-------  0 cshannon domain users  2390 Dec 19 10:41 apache-activemq-5.14.3/examples/amqp/java/pom.xml
-rw-------  0 cshannon domain users  2250 Dec 19 10:41 apache-activemq-5.14.3/examples/mqtt/java/pom.xml
-rw-------  0 cshannon domain users  3251 Dec 19 10:41 apache-activemq-5.14.3/examples/openwire/advanced-scenarios/jms-example-composite-destinations/pom.xml
-rw-------  0 cshannon domain users  3244 Dec 19 10:41 apache-activemq-5.14.3/examples/openwire/advanced-scenarios/jms-example-durable-sub/pom.xml
-rw-------  0 cshannon domain users  3249 Dec 19 10:41 apache-activemq-5.14.3/examples/openwire/advanced-scenarios/jms-example-exclusive-consumer/pom.xml
-rw-------  0 cshannon domain users  3230 Dec 19 10:41 apache-activemq-5.14.3/examples/openwire/advanced-scenarios/jms-example-message-browser/pom.xml
-rw-------  0 cshannon domain users  3243 Dec 19 10:41 apache-activemq-5.14.3/examples/openwire/advanced-scenarios/jms-example-queue-selector/pom.xml
-rw-------  0 cshannon domain users  3216 Dec 19 10:41 apache-activemq-5.14.3/examples/openwire/advanced-scenarios/jms-example-queue/pom.xml
-rw-------  0 cshannon domain users  3246 Dec 19 10:41 apache-activemq-5.14.3/examples/openwire/advanced-scenarios/jms-example-temp-destinations/pom.xml
-rw-------  0 cshannon domain users  3224 Dec 19 10:41 apache-activemq-5.14.3/examples/openwire/advanced-scenarios/jms-example-topic/pom.xml
-rw-------  0 cshannon domain users  2300 Dec 19 10:41 apache-activemq-5.14.3/examples/openwire/advanced-scenarios/jms-example-transaction/pom.xml
-rw-------  0 cshannon domain users  2278 Dec 19 10:41 apache-activemq-5.14.3/examples/openwire/advanced-scenarios/jms-example-wildcard-consumer/pom.xml
-rw-------  0 cshannon domain users  2909 Dec 19 10:41 apache-activemq-5.14.3/examples/openwire/advanced-scenarios/pom.xml
-rw-------  0 cshannon domain users  2559 Dec 19 10:41 apache-activemq-5.14.3/examples/openwire/java/pom.xml
-rw-------  0 cshannon domain users  2418 Dec 19 10:41 apache-activemq-5.14.3/examples/stomp/java/pom.xml
-rw-------  0 cshannon domain users    33088 Feb  1  2016 apache-activemq-5.14.3/lib/slf4j-api-1.7.13.jar
-rw-------  0 cshannon domain users   170538 Dec 19 10:37 apache-activemq-5.14.3/lib/activemq-spring-5.14.3.jar
-rw-------  0 cshannon domain users  1169877 Dec 19 10:36 apache-activemq-5.14.3/lib/activemq-broker-5.14.3.jar
-rw-------  0 cshannon domain users  1424591 Dec 19 10:35 apache-activemq-5.14.3/lib/activemq-client-5.14.3.jar
-rw-------  0 cshannon domain users    32359 Feb  1  2016 apache-activemq-5.14.3/lib/geronimo-jms_1.1_spec-1.1.1.jar
-rw-------  0 cshannon domain users    50155 Feb  1  2016 apache-activemq-5.14.3/lib/hawtbuf-1.11.jar
-rw-------  0 cshannon domain users    20220 Feb  1  2016 apache-activemq-5.14.3/lib/geronimo-j2ee-management_1.1_spec-1.0.1.jar
-rw-------  0 cshannon domain users   685732 Dec 19 10:35 apache-activemq-5.14.3/lib/activemq-openwire-legacy-5.14.3.jar
-rw-------  0 cshannon domain users    14637 Feb  1  2016 apache-activemq-5.14.3/lib/geronimo-jta_1.0.1B_spec-1.0.1.jar
-rw-------  0 cshannon domain users   665405 Dec 19 10:36 apache-activemq-5.14.3/lib/activemq-kahadb-store-5.14.3.jar
-rw-------  0 cshannon domain users   147874 Apr 28  2016 apache-activemq-5.14.3/lib/activemq-protobuf-1.1.jar
-rw-------  0 cshannon domain users   194851 Dec 19 10:37 apache-activemq-5.14.3/lib/activemq-console-5.14.3.jar
-rw-------  0 cshannon domain users    37292 Dec 19 10:35 apache-activemq-5.14.3/lib/activemq-jaas-5.14.3.jar
-rw-------  0 cshannon domain users   115649 Dec 19 10:40 apache-activemq-5.14.3/lib/activemq-web-5.14.3.jar
-rw-------  0 cshannon domain users    16430 Feb  1  2016 apache-activemq-5.14.3/lib/jcl-over-slf4j-1.7.13.jar
-rw-------  0 cshannon domain users    76321 Dec 19 10:39 apache-activemq-5.14.3/lib/camel/activemq-camel-5.14.3.jar
-rw-------  0 cshannon domain users  1009602 Feb  1  2016 apache-activemq-5.14.3/lib/optional/spring-core-4.1.9.RELEASE.jar
-rw-------  0 cshannon domain users   359408 Feb  1  2016 apache-activemq-5.14.3/lib/optional/spring-aop-4.1.9.RELEASE.jar
-rw-------  0 cshannon domain users   712428 Feb  1  2016 apache-activemq-5.14.3/lib/optional/spring-beans-4.1.9.RELEASE.jar
-rw-------  0 cshannon domain users  1026909 Feb  1  2016 apache-activemq-5.14.3/lib/optional/spring-context-4.1.9.RELEASE.jar
-rw-------  0 cshannon domain users   259078 Feb  1  2016 apache-activemq-5.14.3/lib/optional/spring-expression-4.1.9.RELEASE.jar
-rw-------  0 cshannon domain users   252921 Feb  1  2016 apache-activemq-5.14.3/lib/optional/spring-tx-4.1.9.RELEASE.jar
-rw-------  0 cshannon domain users   269749 Feb  1  2016 apache-activemq-5.14.3/lib/optional/spring-jms-4.1.9.RELEASE.jar
-rw-------  0 cshannon domain users   131184 Nov 22 07:03 apache-activemq-5.14.3/lib/optional/xbean-spring-4.2.jar
-rw-------  0 cshannon domain users    20955 Dec 19 10:37 apache-activemq-5.14.3/lib/optional/activemq-pool-5.14.3.jar
-rw-------  0 cshannon domain users    52591 Dec 19 10:37 apache-activemq-5.14.3/lib/optional/activemq-jms-pool-5.14.3.jar
-rw-------  0 cshannon domain users   111969 Feb  1  2016 apache-activemq-5.14.3/lib/optional/commons-pool2-2.4.2.jar
-rw-------  0 cshannon domain users   102578 Apr 28  2016 apache-activemq-5.14.3/lib/optional/activeio-core-3.1.4.jar
-rw-------  0 cshannon domain users   179452 Dec 19 10:36 apache-activemq-5.14.3/lib/optional/activemq-jdbc-store-5.14.3.jar
-rw-------  0 cshannon domain users   303658 May 23  2016 apache-activemq-5.14.3/lib/optional/commons-net-3.5.jar
-rw-------  0 cshannon domain users   973038 Dec 19 10:37 apache-activemq-5.14.3/lib/optional/activemq-leveldb-store-5.14.3.jar
-rw-------  0 cshannon domain users  5577112 Feb  1  2016 apache-activemq-5.14.3/lib/optional/scala-library-2.11.0.jar
-rw-------  0 cshannon domain users    27253 Feb  1  2016 apache-activemq-5.14.3/lib/optional/hawtbuf-proto-1.11.jar
-rw-------  0 cshannon domain users    82869 Feb  1  2016 apache-activemq-5.14.3/lib/optional/hawtdispatch-scala-2.11-1.22.jar
-rw-------  0 cshannon domain users   119139 Feb  1  2016 apache-activemq-5.14.3/lib/optional/hawtdispatch-1.22.jar
-rw-------  0 cshannon domain users     9242 Feb  1  2016 apache-activemq-5.14.3/lib/optional/leveldb-api-0.6.jar
-rw-------  0 cshannon domain users   228800 Feb  1  2016 apache-activemq-5.14.3/lib/optional/leveldb-0.6.jar
-rw-------  0 cshannon domain users  1795936 Feb  1  2016 apache-activemq-5.14.3/lib/optional/guava-12.0.jar
-rw-------  0 cshannon domain users    56364 Feb  1  2016 apache-activemq-5.14.3/lib/optional/leveldbjni-1.8.jar
-rw-------  0 cshannon domain users    19705 Feb  1  2016 apache-activemq-5.14.3/lib/optional/hawtjni-runtime-1.9.jar
-rw-------  0 cshannon domain users   704708 Feb  1  2016 apache-activemq-5.14.3/lib/optional/snappy-java-1.1.2.jar
-rw-------  0 cshannon domain users    48720 Feb  1  2016 apache-activemq-5.14.3/lib/optional/snappy-0.2.jar
-rw-------  0 cshannon domain users   258875 Feb  1  2016 apache-activemq-5.14.3/lib/optional/jackson-core-2.6.3.jar
-rw-------  0 cshannon domain users    46989 Feb  1  2016 apache-activemq-5.14.3/lib/optional/jackson-annotations-2.6.3.jar
-rw-------  0 cshannon domain users  1170801 Feb  1  2016 apache-activemq-5.14.3/lib/optional/jackson-databind-2.6.3.jar
-rw-------  0 cshannon domain users   588337 Feb  1  2016 apache-activemq-5.14.3/lib/optional/commons-collections-3.2.2.jar
-rw-------  0 cshannon domain users   284220 Feb  1  2016 apache-activemq-5.14.3/lib/optional/commons-lang-2.6.jar
-rw-------  0 cshannon domain users   233859 May 23  2016 apache-activemq-5.14.3/lib/optional/commons-beanutils-1.9.2.jar
-rw-------  0 cshannon domain users   449505 Feb  1  2016 apache-activemq-5.14.3/lib/optional/velocity-1.7.jar
-rw-------  0 cshannon domain users   207408 Feb  1  2016 apache-activemq-5.14.3/lib/optional/org.apache.servicemix.bundles.josql-1.5_5.jar
-rw-------  0 cshannon domain users   129265 Feb  1  2016 apache-activemq-5.14.3/lib/optional/jasypt-1.9.2.jar
-rw-------  0 cshannon domain users   102718 Dec 19 10:36 apache-activemq-5.14.3/lib/optional/activemq-mqtt-5.14.3.jar
-rw-------  0 cshannon domain users   127821 Feb  1  2016 apache-activemq-5.14.3/lib/optional/hawtdispatch-transport-1.22.jar
-rw-------  0 cshannon domain users   108429 Dec 19 10:36 apache-activemq-5.14.3/lib/optional/activemq-stomp-5.14.3.jar
-rw-------  0 cshannon domain users    25348 Dec 19 10:38 apache-activemq-5.14.3/lib/optional/activemq-partition-5.14.3.jar
-rw-------  0 cshannon domain users    47974 Feb  1  2016 apache-activemq-5.14.3/lib/optional/org.linkedin.zookeeper-impl-1.4.0.jar
-rw-------  0 cshannon domain users   792964 Feb  1  2016 apache-activemq-5.14.3/lib/optional/zookeeper-3.4.6.jar
-rw-------  0 cshannon domain users   489884 Feb  1  2016 apache-activemq-5.14.3/lib/optional/log4j-1.2.17.jar
-rw-------  0 cshannon domain users   153425 Feb  1  2016 apache-activemq-5.14.3/lib/optional/org.linkedin.util-core-1.4.0.jar
-rw-------  0 cshannon domain users     8704 Feb  1  2016 apache-activemq-5.14.3/lib/optional/slf4j-log4j12-1.7.13.jar
-rw-------  0 cshannon domain users  1655658 Dec 19 10:38 apache-activemq-5.14.3/lib/optional/activemq-runtime-config-5.14.3.jar
-rw-------  0 cshannon domain users   128383 Feb  1  2016 apache-activemq-5.14.3/lib/optional/jaxb2-basics-runtime-0.6.4.jar
-rw-------  0 cshannon domain users   169534 Dec 19 10:38 apache-activemq-5.14.3/lib/optional/activemq-amqp-5.14.3.jar
-rw-------  0 cshannon domain users   717280 Dec 15 14:37 apache-activemq-5.14.3/lib/optional/proton-j-0.16.0.jar
-rw-------  0 cshannon domain users    14136 Dec 19 10:39 apache-activemq-5.14.3/lib/optional/activemq-log4j-appender-5.14.3.jar
-rw-------  0 cshannon domain users   105051 Dec 19 10:38 apache-activemq-5.14.3/lib/optional/activemq-http-5.14.3.jar
-rw-------  0 cshannon domain users   736658 Nov 14 07:36 apache-activemq-5.14.3/lib/optional/httpclient-4.5.2.jar
-rw-------  0 cshannon domain users   327373 Nov 14 07:36 apache-activemq-5.14.3/lib/optional/httpcore-4.4.5.jar
-rw-------  0 cshannon domain users   263965 Feb  1  2016 apache-activemq-5.14.3/lib/optional/commons-codec-1.9.jar
-rw-------  0 cshannon domain users   549133 Nov 14 07:36 apache-activemq-5.14.3/lib/optional/xstream-1.4.9.jar
-rw-------  0 cshannon domain users   120069 Feb  1  2016 apache-activemq-5.14.3/lib/optional/xpp3-1.1.4c.jar
-rw-------  0 cshannon domain users    44303 Dec 19 10:39 apache-activemq-5.14.3/lib/optional/activemq-shiro-5.14.3.jar
-rw-------  0 cshannon domain users   379541 Feb  1  2016 apache-activemq-5.14.3/lib/optional/shiro-core-1.2.4.jar
-rw-------  0 cshannon domain users    25565 Feb  1  2016 apache-activemq-5.14.3/lib/optional/shiro-spring-1.2.4.jar
-rw-------  0 cshannon domain users   174167 Feb  1  2016 apache-activemq-5.14.3/lib/optional/commons-dbcp2-2.1.1.jar
-rw-------  0 cshannon domain users   204950 Feb  1  2016 apache-activemq-5.14.3/lib/optional/jmdns-3.4.1.jar
-rw-------  0 cshannon domain users    37477 Feb  1  2016 apache-activemq-5.14.3/lib/optional/geronimo-j2ee-connector_1.5_spec-2.0.0.jar
-rw-------  0 cshannon domain users    82930 Feb  1  2016 apache-activemq-5.14.3/lib/optional/spring-oxm-4.1.9.RELEASE.jar
-rw-------  0 cshannon domain users    87770 Nov 14 07:36 apache-activemq-5.14.3/lib/optional/jettison-1.3.8.jar
-rw-------  0 cshannon domain users    48057 Feb  1  2016 apache-activemq-5.14.3/lib/optional/jasypt-spring31-1.9.2.jar
-rw-------  0 cshannon domain users    22488 Feb  1  2016 apache-activemq-5.14.3/lib/optional/insight-log-core-1.2.0.Beta4.jar
-rw-------  0 cshannon domain users   115489 Feb  1  2016 apache-activemq-5.14.3/lib/optional/insight-log4j-1.2.0.Beta4.jar
-rw-------  0 cshannon domain users   126960 Sep 12 08:04 apache-activemq-5.14.3/lib/extra/mqtt-client-1.14.jar
-rw-------  0 cshannon domain users  2803647 Feb  1  2016 apache-activemq-5.14.3/lib/web/jetty-all-9.2.13.v20150730.jar
-rw-------  0 cshannon domain users   219683 Feb  1  2016 apache-activemq-5.14.3/lib/web/rome-1.0.jar
-rw-------  0 cshannon domain users   153253 Feb  1  2016 apache-activemq-5.14.3/lib/web/jdom-1.0.jar
-rw-------  0 cshannon domain users   786528 Feb  1  2016 apache-activemq-5.14.3/lib/web/spring-webmvc-4.1.9.RELEASE.jar
-rw-------  0 cshannon domain users   722282 Feb  1  2016 apache-activemq-5.14.3/lib/web/spring-web-4.1.9.RELEASE.jar
-rw-------  0 cshannon domain users   244274 Feb  1  2016 apache-activemq-5.14.3/lib/web/tomcat-servlet-api-8.0.24.jar
-rw-------  0 cshannon domain users    36603 Feb  1  2016 apache-activemq-5.14.3/lib/web/tomcat-websocket-api-8.0.24.jar
-rw-------  0 cshannon domain users    12452 Feb  1  2016 apache-activemq-5.14.3/lib/web/geronimo-annotation_1.0_spec-1.1.1.jar
-rw-------  0 cshannon domain users    53297 Feb  1  2016 apache-activemq-5.14.3/lib/web/asm-5.0.4.jar
-rw-------  0 cshannon domain users    10701 Feb  1  2016 apache-activemq-5.14.3/lib/web/apache-jsp-9.2.13.v20150730.jar
-rw-------  0 cshannon domain users   955429 Feb  1  2016 apache-activemq-5.14.3/lib/web/apache-jsp-8.0.9.M3.jar
-rw-------  0 cshannon domain users   237638 Feb  1  2016 apache-activemq-5.14.3/lib/web/apache-el-8.0.9.M3.jar
-rw-------  0 cshannon domain users  1764622 Feb  1  2016 apache-activemq-5.14.3/lib/web/org.eclipse.jdt.core-3.8.2.v20130121.jar
-rw-------  0 cshannon domain users     3236 Feb  1  2016 apache-activemq-5.14.3/lib/web/apache-jstl-9.2.13.v20150730.jar
-rw-------  0 cshannon domain users    40153 Nov 14 07:36 apache-activemq-5.14.3/lib/web/taglibs-standard-spec-1.2.5.jar
-rw-------  0 cshannon domain users   206430 Nov 14 07:36 apache-activemq-5.14.3/lib/web/taglibs-standard-impl-1.2.5.jar
-rw-------  0 cshannon domain users   326745 Feb 22  2016 apache-activemq-5.14.3/lib/web/jolokia-core-1.3.3.jar
-rw-------  0 cshannon domain users    23931 Feb  1  2016 apache-activemq-5.14.3/lib/web/json-simple-1.1.1.jar
{noformat}",Linux,jira-bot,pioto,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6511,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Feb 08 18:18:35 UTC 2017,,,,,,,,,,,"0|i39stj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Feb/17 18:17;jira-bot;Commit 1d15908e71942ced7e4987273846976753a028f6 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=1d15908 ]

https://issues.apache.org/jira/browse/AMQ-6595

Fixing tar permissions so that everything is 0755 or 0644 as it should
be
;;;","08/Feb/17 18:18;jira-bot;Commit 3e66eccb551e15ad90d5d41db444ca736269c220 in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=3e66ecc ]

https://issues.apache.org/jira/browse/AMQ-6595

Fixing tar permissions so that everything is 0755 or 0644 as it should
be

(cherry picked from commit 1d15908e71942ced7e4987273846976753a028f6)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE from PooledConnectionFactory on client reconnect after broker restart,AMQ-6594,13041007,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,darek1,darek1,07/Feb/17 15:29,21/Feb/17 15:19,14/Jul/23 05:44,21/Feb/17 15:19,5.12.0,5.12.1,5.12.2,5.13.0,5.13.1,5.13.3,5.13.4,5.14.0,5.14.1,AGING_TO_DIE,,,,Pool,,,,,0,,,,,,"I'm upgrading my activemq from 5.10.2 to 5.13.4, but I've run into an issue
with PooledConnectionFactory. It works fine at first, but when the broker is
restarted and clients try to reconnect the factory throws
NullPointerExceptions and clients cannot connect. For regular clients I had
to switch to regular factory, and it works fine, but for my camel clients I
need the pooled factory.
When I replace activemq-jms-pool-5.13.4.jar with 5.10.2, it works fine again
every time.
I have not seen any related bugs reported anywhere except for camel forum:http://camel.465427.n5.nabble.com/NullPointer-org-apache-camel-component-jms-DefaultJmsMessageListenerContainer-td5788071.html
I've done binary search on releases replacing activemq-jms-pool jars and it seens that it works in all releases from 5.10.2 to 5.11.4, and throws NPEs in all releases after 5.12.0.
Traceback:
2017-01-27 15:44:58,875 [Service.uplinkCommsHubConfig.queue]] WARN  ultJmsMessageListenerContainer - Could not refresh JMS Connection for destination 'CommsHubConfigService.uplinkCommsHubConfig.queue?consumer.prefetchSize=0' - retrying in 5000 ms. Cause: Error while attempting to add new Connection to the pool
javax.jms.JMSException: Error while attempting to add new Connection to the pool
        at org.apache.activemq.jms.pool.PooledConnectionFactory.createJmsException(PooledConnectionFactory.java:266)
        at org.apache.activemq.jms.pool.PooledConnectionFactory.createConnection(PooledConnectionFactory.java:225)
        at org.apache.activemq.jms.pool.PooledConnectionFactory.createConnection(PooledConnectionFactory.java:204)
        at org.springframework.jms.support.JmsAccessor.createConnection(JmsAccessor.java:184)
        at org.springframework.jms.listener.AbstractJmsListeningContainer.createSharedConnection(AbstractJmsListeningContainer.java:404)
        at org.springframework.jms.listener.AbstractJmsListeningContainer.refreshSharedConnection(AbstractJmsListeningContainer.java:389)
        at org.springframework.jms.listener.DefaultMessageListenerContainer.refreshConnectionUntilSuccessful(DefaultMessageListenerContainer.java:869)
        at org.springframework.jms.listener.DefaultMessageListenerContainer.recoverAfterListenerSetupFailure(DefaultMessageListenerContainer.java:851)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:982)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
        at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.NullPointerException
        at org.apache.activemq.jms.pool.PooledConnectionFactory.createConnection(PooledConnectionFactory.java:223)
        ... 10 more 

","Red Hat Enterprise Linux Server release 6.8 (Santiago)
openjdk version ""1.8.0_121""
camel - 2.14.0
activemq-5.13.4
spring-3.1.2",darek1,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Feb 21 15:19:25 UTC 2017,,,,,,,,,,,"0|i39q7j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Feb/17 15:40;tabish;Recommend you create a unit test that can reproduce your issue and attach.;;;","07/Feb/17 16:18;darek1;I will do that, thank you.;;;","21/Feb/17 15:19;darek1;Me bad. My commons pool2 was out of wack.
Changing to version 2.4.2 fixed the issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Webconsole does not start in karaf 4.1.0 as an import is missing,AMQ-6591,13039827,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cschneider,cschneider,cschneider,02/Feb/17 13:22,02/Nov/19 05:28,14/Jul/23 05:44,27/Feb/17 12:43,5.14.3,,,,,,,,,5.13.6,5.14.4,5.15.0,,OSGi/Karaf,,,,,0,,,,,,"2017-02-02 14:08:55,435 | ERROR | pool-3-thread-1  | WebObserver                      | 131 - org.ops4j.pax.web.pax-web-extender-war - 6.0.2 | Error scanning web bundle org.apache.activemq.activemq-web-console [64]: javax.servlet.annotation.HandlesTypes not found by org.apache.activemq.activemq-web-console [64]
java.lang.ClassNotFoundException: javax.servlet.annotation.HandlesTypes not found by org.apache.activemq.activemq-web-console [64]
	at org.apache.felix.framework.BundleWiringImpl.findClassOrResourceByDelegation(BundleWiringImpl.java:1574) ~[?:?]
	at org.apache.felix.framework.BundleWiringImpl.access$400(BundleWiringImpl.java:79) ~[?:?]
	at org.apache.felix.framework.BundleWiringImpl$BundleClassLoader.loadClass(BundleWiringImpl.java:2018) ~[?:?]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[?:?]
	at org.apache.felix.framework.Felix.loadBundleClass(Felix.java:1925) ~[?:?]
	at org.apache.felix.framework.BundleImpl.loadClass(BundleImpl.java:978) ~[?:?]
	at org.ops4j.pax.web.extender.war.internal.parser.WebAppParser.servletContainerInitializerScan(WebAppParser.java:354) ~[?:?]
	at org.ops4j.pax.web.extender.war.internal.parser.WebAppParser.parse(WebAppParser.java:109) ~[?:?]
	at org.ops4j.pax.web.extender.war.internal.WebObserver.createExtension(WebObserver.java:145) ~[?:?]
	at org.ops4j.pax.web.extender.war.internal.Activator.doCreateExtension(Activator.java:82) ~[?:?]
	at org.ops4j.pax.web.extender.war.internal.extender.AbstractExtender.createExtension(AbstractExtender.java:259) ~[?:?]
	at org.ops4j.pax.web.extender.war.internal.extender.AbstractExtender.modifiedBundle(AbstractExtender.java:242) ~[?:?]
	at org.ops4j.pax.web.extender.war.internal.extender.AbstractExtender.modifiedBundle(AbstractExtender.java:54) ~[?:?]
	at org.osgi.util.tracker.BundleTracker$Tracked.customizerModified(BundleTracker.java:482) ~[?:?]
	at org.osgi.util.tracker.BundleTracker$Tracked.customizerModified(BundleTracker.java:415) ~[?:?]
",,cschneider,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Feb 02 14:08:15 UTC 2017,,,,,,,,,,,"0|i39izz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Feb/17 13:23;jira-bot;Commit e4efa6f47adafeeb6e12c6e62f210b3016544252 in activemq's branch refs/heads/master from [~chris@die-schneider.net]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e4efa6f ]

[AMQ-6591] Add missing import
;;;","02/Feb/17 13:59;jira-bot;Commit fb2063d177dd3c337f19060de2591454334c53a7 in activemq's branch refs/heads/activemq-5.14.x from [~chris@die-schneider.net]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=fb2063d ]

[AMQ-6591] Add missing import
;;;","02/Feb/17 14:08;jira-bot;Commit 4ffbcb95d6a9afcbf7ca9aac6af9f7888c38090b in activemq's branch refs/heads/activemq-5.13.x from [~chris@die-schneider.net]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=4ffbcb9 ]

[AMQ-6591] Add missing import
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KahaDB index loses track of free pages on unclean shutdown,AMQ-6590,13039809,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,02/Feb/17 12:01,21/Oct/18 17:29,14/Jul/23 05:44,02/Feb/17 12:09,5.14.3,,,,,,,,,5.14.4,5.15.0,5.15.7,5.16.0,Broker,,,,,0,,,,,,"I have discovered an issue with the KahaDB index recovery after an unclean shutdown (OOM error, kill -9, etc) that leads to excessive disk space usage. 

Normally on clean shutdown the index stores the known set of free pages to db.free and reads that in on start up to know which pages can be re-used.  On an unclean shutdown this is not written to disk so on start up the index is supposed to scan the page file to figure out all of the free pages.

Unfortunately it turns out that this scan of the page file is being done before the total page count value has been set so when the iterator is created it always thinks there are 0 pages to scan.

The end result is that every time an unclean shutdown occurs all known free pages are lost and no longer tracked.  This of course means new free pages have to be allocated and all of the existing space is now lost which will lead to excessive index file growth over time.",,alanprot,cshannon,gtully,jgenender,jgoodyear,jira-bot,lichtin,rwagg,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-7082,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Sun Oct 21 17:29:22 UTC 2018,,,,,,,,,,,"0|i39ivz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Feb/17 12:06;jira-bot;Commit 38d85be476a06fe9a1f60b4f38232d64a6d0398a in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=38d85be ]

https://issues.apache.org/jira/browse/AMQ-6590

Fix KahaDB index free page recovery on unclean shutdown so that existing
free pages will be tracked and not lost.
;;;","02/Feb/17 12:07;jira-bot;Commit 6a87e13eb3d6f819b0d05ee8d16f6d955442425e in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=6a87e13 ]

https://issues.apache.org/jira/browse/AMQ-6590

Fix KahaDB index free page recovery on unclean shutdown so that existing
free pages will be tracked and not lost.

(cherry picked from commit 38d85be476a06fe9a1f60b4f38232d64a6d0398a)
;;;","02/Feb/17 12:10;jira-bot;Commit 83511c96e5cf91f348a81ecc3c4439aa345548dd in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=83511c9 ]

https://issues.apache.org/jira/browse/AMQ-6590

Removing un-needed imports
;;;","02/Feb/17 12:10;jira-bot;Commit cc28f5dc3905e411b3e5ce39240baf21ccedb0af in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=cc28f5d ]

https://issues.apache.org/jira/browse/AMQ-6590

Removing un-needed imports

(cherry picked from commit 83511c96e5cf91f348a81ecc3c4439aa345548dd)
;;;","02/Feb/17 12:13;cshannon;[~gtully], Can you do a quick sanity check on this?  I believe this is the correct fix.;;;","02/Feb/17 14:50;gtully;[~cshannon] sure. that fix does look correct and is a great catch. ;;;","02/Feb/17 15:25;cshannon;Thanks for taking a look.;;;","17/Oct/18 10:43;gtully;It turns out that this change, while good, means that we take a hit on start in the normal failover case where the primary dies uncleanly.

There have been reports of more than 2mins to start and the threads are stuck in sequence.set add. AMQ-7055 helps a good bit, but the problem is we are trading off availability for disk usage and taking the hit during restart.

I am thinking it may be better to do a checkpoint of the feeList when we do gc, the cleanup phase, and accept that information on restart. 

If the restart is unclean, we remember that and do a freeList recovery when we next do an orderly shutdown. In that way, we can still restart fast, lose some disk space to some missed free pages and gracefully recover when we are stopping.

[~cshannon] I wonder if that will hold together? The other approach is do have the option to do this offline, offline work has always been on the todo.;;;","17/Oct/18 10:53;gtully;The checkpoint won't help, it will not be possible to work with a stale free list b/c one of those may now be occupied, hense the index file will have to grow, however we can still do the full and necessary free recovery on shutdown rather than on start. ;;;","17/Oct/18 11:32;jira-bot;Commit 5d3a3fcca7fbc04e60a146e42fb1f65b94e4ea7b in activemq's branch refs/heads/master from gtully
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=5d3a3fc ]

AMQ-6590 - rework fix to take the recovery hit on clean shutdown rather than on restart, trade off availability for short term disk usage
;;;","17/Oct/18 11:35;gtully;[~cshannon] I have moved this fix to the shutdown phase b/c the recovery work can be significant on very large stores. The down side is temporary disk space usage by the index which is a better trade off IMHO. 

I also added an info log message to indicate that the some recovery is going on.;;;","17/Oct/18 13:29;jgoodyear;Can we back port this change to the 5.15.x line as well?;;;","17/Oct/18 14:22;jira-bot;Commit cee7f014fa4afca04681066946e5a2b6811141af in activemq's branch refs/heads/activemq-5.15.x from gtully
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=cee7f01 ]

AMQ-6590 - rework fix to take the recovery hit on clean shutdown rather than on restart, trade off availability for short term disk usage
;;;","17/Oct/18 14:24;jgenender;Nice [~gtully].  I pushed this to 5.15.x (5.15.7) as this was supposed to be in the 5.15 line as well.  Probably should have been a new improvement JIRA.  Updated the versions above as well.  Thank you!;;;","17/Oct/18 16:42;cshannon;Nice catch [~gtully] , I agree that it is fine to temporarily take the space hit as it will get cleaned up on the next clean shutdown.

My only question is will there now be a large delay on shutdown instead? So are we just moving the 2 minute lag time to having to wait on shutdown instead of startup? In that case it doesn’t seem to be much different on a restart case as you have to wait the 2 minutes either way;;;","17/Oct/18 16:48;jgenender;[~cshannon], I think the criticality of this is restart on a failed broker.  It could cause slowness in failover that delays startup of the broker.  In a clean shut down, yes the delay moved to the back, but its a known delay when you are shutting it down in a clean fashion.  Thus you can plan it.  This makes sense as during a failover, you likely need availability immediately since that generally is not planned.;;;","17/Oct/18 17:06;cshannon;[~jgenender] , ah yeah that makes sense, on the failover case on a shared store you want to resume as fast as possible 

So yeah for sure this is a good change as it helps that failover case and then you can plan later when to take that hit on a clean restart or shutdown.;;;","17/Oct/18 17:07;gtully;[~cshannon] sure, the recovery penalty needs to be taken at some stage.

The ~2mins is not ideal, AMQ-7055  helps, but also for the really large index cases, being able to set the index page size may help. That is currently not exposed in kahadb and defaults to 4k, which means loads of small seek/reads of the index file. Exposing that may help.

 ;;;","18/Oct/18 05:30;alanprot;Hum....

I dont really think that this is solving the all problem.... Of course in the case of a crash (unclean shutdown) the fail over will be faster....

But after that, let's imagine that we wanna do a normal restart. Well the broker will have a long shutdown and while doing that it will still hold the lock making the failover slow the same way.

And maybe now is worst... Imagine that the shutdown is taking 2 minutes and the ACTIVEMQ_KILL_MAXSECONDS is set to 30 secs...

In this case all the shutdown will be unclean (so lots of dangling free pages - larger index file on each restart) until we delete the index file and perform a full recovery.

Why don't we save the free page in every checkpoint + keep track of it's hash or fingerPrint (SequenceSetHash) in the metadata (the page size is already saved there).

[https://github.com/apache/activemq/blob/5d3a3fcca7fbc04e60a146e42fb1f65b94e4ea7b/activemq-kahadb-store/src/main/java/org/apache/activemq/store/kahadb/disk/page/PageFile.java#L468]

Now, in the load method, we can check if the fingerprint of the metadata is equal to the saved free list... if it's equal we can load this list, if it's not, we can recover it (read the whole index file as before).

So in each checkpoint we should:

Calculate freeList hash (or this can be pre calculated changing it every time that this list is modified) 
 Save the free list 
 Save this information in the metadata

Now, on the load we can check if the hash of the loaded free list is the equal to the metadata... if it is we are good.

This is a rough draft of what I meant and seems to be working.

[https://github.com/alanprot/activemq/commit/18036ef7214ef0eaa25c8650f40644dd8b4632a5]

Is important to note that in the Pagefile#load method we need to rebuild the index in the same way it was in the checkpoint (the recovery will be performed after to replay the time btw the checkpoint and the crash)

So...

Imagine the timeline:

T0 -> P1, P2 and P3 are free.

T1 -> Checkpoint

T2 -> P1 got occupied.

T3 -> Crash

In the current scenario after the  Pagefile#load the P1 will be free and then the replay will mark P1 as occupied...

My change only make sure that db.data and db.free are in sync and showing the reality in T1 (checkpoint), If they are in sync i can use the db.free.

 In this case we will only perform a full read if the crash is btw saving the db.free and db.data... This is very unlikely 

[~gtully] [~jgenender] [~cshannon] Does this make sense?

If you think that this makes sense i can create a Jira to try to implement this..

 

 

 ;;;","18/Oct/18 05:38;alanprot;Actually this fixed the failover speed, but my proposal I just makes it more streamlined;;;","18/Oct/18 05:48;jgenender;Hi Alan... that's awesome!  That would totally work in cutting down the potential for the recovery. May I suggest that you open a new Jira to track this since this one is resolved.  Right now parts of this are in multiple releases, so its own Jira may help ensure we know what release it would be a part of.   Your code looks pretty clear and I think it deserves its own JIRA  Please reference this one in the new JIRA.;;;","18/Oct/18 13:37;jgenender;One more small comment, I would change from using Random as the fingerprint and perhaps use a time stamp or something.  The Random could potentially have a clash and possibly could have a collision which would cause corruption.  Perhaps use a Time function or time based UUID as your finger print.  Since this will not be doing 2 checkpoints in under a millisecond, I think that would be the safest.;;;","18/Oct/18 14:05;alanprot;Yep...

Or we can change the fingerprint for freePageTxId or something like that and be a single increment (freePageTxId++) on every time i save db.free;;;","18/Oct/18 15:20;jgenender;Also, add a unit test.  The unit test can show a normal checkpoint, and you can also exercise the failure by force calling brokerService.getPersistenceAdapter().checkpoint() and then changing the db.data or db.free fingerprint with some file I/O using the File object, then restarting and testing that it did a full recovery.  Should be straight forward. Open a new Jira on this :);;;","18/Oct/18 16:12;cshannon;The ACTIVEMQ_KILL_MAXSECONDS actually occurred to me as well a bit after I responded to this. I use a custom start up script but still have something similar where if the broker hangs it will be killed which obviously breaks in this case.  So that case needs to be handled.;;;","18/Oct/18 16:29;alanprot;[~cshannon] What about saving the free pages in the check point? Do you think that make sense?

I was talking other guys and the only concern seems to be that we will increase the Checkpoint timings (as we are writing one more file);;;","18/Oct/18 16:38;cshannon;I'm good with the checkpoint but want to see what [~gtully] thinks as he brought up some concerns about checkpointing the free list.  As Jeff said we can continue the conversation against the PR in a new jira.;;;","18/Oct/18 18:51;alanprot;Thanks!

 

Just created a new Jira for that: https://issues.apache.org/jira/browse/AMQ-7080;;;","19/Oct/18 15:00;jira-bot;Commit 79c74998dc1efb72b05d32f920052a1df4b6dd8e in activemq's branch refs/heads/master from gtully
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=79c7499 ]

AMQ-7082 - recover index free pages in parallel with start, merge in flush, clean shutdown if complete. follow up on AMQ-6590
;;;","21/Oct/18 17:29;jira-bot;Commit c6103415b9a185776ebc16343c6574f7ff884806 in activemq's branch refs/heads/activemq-5.15.x from gtully
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=c610341 ]

AMQ-7082 - recover index free pages in parallel with start, merge in flush, clean shutdown if complete. follow up on AMQ-6590
;;;",,,,,,,,,,,
Failed to remove inactive destination Topic: Destination still has an active subscription,AMQ-6587,13039432,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,01/Feb/17 11:13,10/Feb/17 17:05,14/Jul/23 05:44,07/Feb/17 13:57,5.14.0,,,,,,,,,5.14.4,5.15.0,,,Broker,,,,,0,,,,,,"broker setSchedulePeriodForDestinationPurge, wildcard topic subscriber and anonymous publishers to new destinations. 
Race between addDestination and markForGc and canGc

{code}
ERROR region.RegionBroker: Failed to remove inactive destination Topic: destination=A.4725, subscriptions=1
javax.jms.JMSException: Destination still has an active subscription: topic://A.4725
	at org.apache.activemq.broker.region.AbstractRegion.removeDestination(AbstractRegion.java:271)
	at org.apache.activemq.broker.region.RegionBroker.removeDestination(RegionBroker.java:354)
	at org.apache.activemq.broker.BrokerFilter.removeDestination(BrokerFilter.java:179)
	at org.apache.activemq.broker.BrokerFilter.removeDestination(BrokerFilter.java:179)
	at org.apache.activemq.broker.BrokerFilter.removeDestination(BrokerFilter.java:179)
	at org.apache.activemq.broker.region.RegionBroker.purgeInactiveDestinations(RegionBroker.java:897)
	at org.apache.activemq.broker.region.RegionBroker$1.run(RegionBroker.java:118)
	at org.apache.activemq.thread.SchedulerTimerTask.run(SchedulerTimerTask.java:33)
	at java.util.TimerThread.mainLoop(Timer.java:555)
	at java.util.TimerThread.run(Timer.java:505)
{code}",,cshannon,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6188,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Feb 10 17:05:54 UTC 2017,,,,,,,,,,,"0|i39gk7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Feb/17 11:22;gtully;There is some locking in RegionBroker using inactiveDestinationsPurgeLock. This does not cover addDestination which is probably intentional b/c it uses the shared destination map which allows for concurrent access. However new destinations are added to the map before matching subs are added. Which causes a race between gc and the addition of wildcard subscriptions. Adding subs before adding to the destination map looks like the simplest fix.
;;;","01/Feb/17 11:23;gtully;The fix for AMQ-6188  which resets lastActiveTime on publish/send helps mitigate the problem but does not fully resolve it.;;;","01/Feb/17 15:10;jira-bot;Commit e415d2921ec7eabeccdf7db4d1850caa68486de3 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e415d29 ]

[AMQ-6587] ensure subs added to new destination before destination is exposed in the destination map. sort gc contention with wildcard subs and anonymous publish. fix and test
;;;","01/Feb/17 16:43;jira-bot;Commit 64b3203713161ee0dd5d8d1dbd74f4c4602f546c in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=64b3203 ]

[AMQ-6587] - fix typo in test that needs 1.7 final
;;;","06/Feb/17 14:08;jira-bot;Commit 95dc0eba2b93232c60a1f4aa7ed319eff69d6a1d in activemq's branch refs/heads/activemq-5.14.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=95dc0eb ]

[AMQ-6587] ensure subs added to new destination before destination is exposed in the destination map. sort gc contention with wildcard subs and anonymous publish. fix and test

(cherry picked from commit e415d2921ec7eabeccdf7db4d1850caa68486de3)
;;;","06/Feb/17 14:08;jira-bot;Commit 8af72c2157dd570172acb744c56602b8b0a786ef in activemq's branch refs/heads/activemq-5.14.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=8af72c2 ]

[AMQ-6587] - fix typo in test that needs 1.7 final

(cherry picked from commit 64b3203713161ee0dd5d8d1dbd74f4c4602f546c)
;;;","07/Feb/17 13:54;gtully;This warn/error can also appear when a wildcard sub arrives during the gc process;;;","07/Feb/17 13:56;jira-bot;Commit 0ee4f5b84302daf8901363556d038e274c2defd5 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=0ee4f5b ]

[AMQ-6587] additional contention window with new sub while gc is in progress - need to verify new sub is actually subscribed to the candidate for deletion. Fix and test
;;;","07/Feb/17 13:57;gtully;[~cshannon] note the additional fix for a second variant of this problem;;;","07/Feb/17 15:04;jira-bot;Commit 2d4fb4cbabb27f7fbb9ef5a86fa310d9741393c3 in activemq's branch refs/heads/activemq-5.14.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=2d4fb4c ]

[AMQ-6587] additional contention window with new sub while gc is in progress - need to verify new sub is actually subscribed to the candidate for deletion. Fix and test

(cherry picked from commit 0ee4f5b84302daf8901363556d038e274c2defd5)
;;;","07/Feb/17 15:05;cshannon;[~gtully], got it, thanks for the heads up.;;;","10/Feb/17 11:41;jira-bot;Commit d86c98a68772aaa879e6a573fed1ab8382568c9e in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=d86c98a ]

[AMQ-6587] - fix root cause of deletion candidate seeing sub. contention between adding sub to dests and adding dests to sub, also removing sub from dests twice could leave dest stat negative allowing invalid candidate for gc
;;;","10/Feb/17 13:06;jira-bot;Commit 727000f112b81aa3ca34087ee44a641b1d5088f6 in activemq's branch refs/heads/activemq-5.14.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=727000f ]

[AMQ-6587] - fix root cause of deletion candidate seeing sub. contention between adding sub to dests and adding dests to sub, also removing sub from dests twice could leave dest stat negative allowing invalid candidate for gc

(cherry picked from commit d86c98a68772aaa879e6a573fed1ab8382568c9e)
;;;","10/Feb/17 17:05;gtully;note: the root cause could result in a wildcard sub missing a newly created destination, one created by an *anonymous* publish that coincides with the subscription creation. the check in destination gc exposed this window.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Compilation of activemq-unit-test fails,AMQ-6586,13039275,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,sobkowiak,sobkowiak,31/Jan/17 19:35,31/Jan/17 20:47,14/Jul/23 05:44,31/Jan/17 20:36,5.14.4,,,,,,,,,5.14.4,,,,Test Cases,,,,,0,,,,,,"Compilation of {{activemq-unit-tests}} in {{activemq-5.14.x}} branch fails with following error

{noformat}
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.3:testCompile (default-testCompile) on project activemq-unit-tests: Compilation failure
[ERROR] /home/kso/work/projects/asf/smx/workspace/activemq/activemq-unit-tests/src/test/java/org/apache/activemq/transport/tcp/TcpTransportCloseSocketTest.java:[128,24] local variable server is accessed from within inner class; needs to be declared final
{noformat}

The problem is caused by cherry pick from master where it worked due to source target 1.8, but {{activemq-5.14.x}} branch has source target 1.7 and the final keyword is still necessary.",,cshannon,githubbot,jira-bot,sobkowiak,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6561,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jan 31 20:47:13 UTC 2017,,,,,,,,,,,"0|i39flb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"31/Jan/17 19:38;githubbot;GitHub user sobkowiak opened a pull request:

    https://github.com/apache/activemq/pull/225

    [AMQ-6586] Compilation of activemq-unit-test fails

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/sobkowiak/activemq AMQ-6586

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/225.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #225
    
----
commit 659d1f6ba545dd283e80489425b616c75fee973d
Author: Krzysztof Sobkowiak <krzys.sobkowiak@gmail.com>
Date:   2017-01-31T19:36:13Z

    [AMQ-6586] Compilation of activemq-unit-test fails

----
;;;","31/Jan/17 20:35;jira-bot;Commit 659d1f6ba545dd283e80489425b616c75fee973d in activemq's branch refs/heads/activemq-5.14.x from [~sobkowiak]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=659d1f6 ]

[AMQ-6586] Compilation of activemq-unit-test fails
;;;","31/Jan/17 20:35;jira-bot;Commit cd82533f354213664a400c09eb2d9ec418d92120 in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=cd82533 ]

https://issues.apache.org/jira/browse/AMQ-6586

Merge branch 'AMQ-6586' into activemq-5.14.x

This closes #225
;;;","31/Jan/17 20:35;jira-bot;Commit cd82533f354213664a400c09eb2d9ec418d92120 in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=cd82533 ]

https://issues.apache.org/jira/browse/AMQ-6586

Merge branch 'AMQ-6586' into activemq-5.14.x

This closes #225
;;;","31/Jan/17 20:35;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/225
;;;","31/Jan/17 20:35;jira-bot;Commit f09493727f95afce417414f2b27b58c429ed4d1e in activemq's branch refs/heads/master from [~sobkowiak]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=f094937 ]

[AMQ-6586] Compilation of activemq-unit-test fails

(cherry picked from commit 659d1f6ba545dd283e80489425b616c75fee973d)
;;;","31/Jan/17 20:36;cshannon;Thanks, I merged this into 5.14.x.  I also went ahead and cherry-picked it to master just to keep things consistent in case a change is made in the future to the test.;;;","31/Jan/17 20:47;sobkowiak;Ok, thanks!!!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ does not work on karaf 4.1.0,AMQ-6584,13038844,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cschneider,cschneider,cschneider,30/Jan/17 09:11,02/Nov/19 05:27,14/Jul/23 05:44,27/Feb/17 12:43,,,,,,,,,,5.13.6,5.14.4,5.15.0,,OSGi/Karaf,,,,,0,,,,,,"feature:repo-add activemq 5.14.3
karaf@root()> feature:install activemq                                                                                              10:10:38
Error executing command: Unable to resolve root: missing requirement [root] osgi.identity; osgi.identity=activemq; type=karaf.feature; version=""[5.14.3,5.14.3]""; filter:=""(&(osgi.identity=activemq)(type=karaf.feature)(version>=5.14.3)(version<=5.14.3))"" [caused by: Unable to resolve activemq/5.14.3: missing requirement [activemq/5.14.3] osgi.identity; osgi.identity=activemq-client; type=karaf.feature; version=""[5.14.3,5.14.3]"" [caused by: Unable to resolve activemq-client/5.14.3: missing requirement [activemq-client/5.14.3] osgi.identity; osgi.identity=org.apache.activemq.activemq-osgi; type=osgi.bundle; version=""[5.14.3,5.14.3]""; resolution:=mandatory [caused by: Unable to resolve org.apache.activemq.activemq-osgi/5.14.3: missing requirement [org.apache.activemq.activemq-osgi/5.14.3] osgi.wiring.package; filter:=""(osgi.wiring.package=org.aopalliance.aop)""]]]

karaf@root()> feature:install activemq-client                                                                                       10:10:41
Error executing command: Unable to resolve root: missing requirement [root] osgi.identity; osgi.identity=activemq-client; type=karaf.feature; version=""[5.14.3,5.14.3]""; filter:=""(&(osgi.identity=activemq-client)(type=karaf.feature)(version>=5.14.3)(version<=5.14.3))"" [caused by: Unable to resolve activemq-client/5.14.3: missing requirement [activemq-client/5.14.3] osgi.identity; osgi.identity=spring; type=karaf.feature; version=""[3.2.0,4.0.0)""]
",,cschneider,cshannon,jira-bot,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Feb 27 22:57:03 UTC 2017,,,,,,,,,,,"0|i39cyn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"30/Jan/17 09:29;jira-bot;Commit f56ac06ef6c6711e328f511bb1b098420cb4f5e7 in activemq's branch refs/heads/master from [~chris@die-schneider.net]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=f56ac06 ]

[AMQ-6584] Fix feature to make it work for karaf 4.1.0
;;;","30/Jan/17 10:02;jira-bot;Commit 2e953d96a38446f3b193def9f2a8053ee76bf123 in activemq's branch refs/heads/master from [~chris@die-schneider.net]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=2e953d9 ]

[AMQ-6584] Remove spring-aspects as it works with just the range fix
;;;","30/Jan/17 14:28;jira-bot;Commit 10500ab6ee533db80f03587be16c75cecd3c430d in activemq's branch refs/heads/activemq-5.13.x from [~chris@die-schneider.net]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=10500ab ]

[AMQ-6584] Fix feature to make it work for karaf 4.1.0
;;;","30/Jan/17 14:28;jira-bot;Commit 6757300a0dcd5f3a324ffa379081083a7211d0e0 in activemq's branch refs/heads/activemq-5.13.x from [~chris@die-schneider.net]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=6757300 ]

[AMQ-6584] Remove spring-aspects as it works with just the range fix
;;;","30/Jan/17 14:31;jira-bot;Commit cd144e803b1370fda6b2d8d3005c424087c68e01 in activemq's branch refs/heads/activemq-5.14.x from [~chris@die-schneider.net]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=cd144e8 ]

[AMQ-6584] Fix feature to make it work for karaf 4.1.0
;;;","30/Jan/17 14:31;jira-bot;Commit 776418bae6c11d7ffe096558853953af5faf93ef in activemq's branch refs/heads/activemq-5.14.x from [~chris@die-schneider.net]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=776418b ]

[AMQ-6584] Remove spring-aspects as it works with just the range fix
;;;","30/Jan/17 14:35;jira-bot;Commit 618e166b29928d8570d72e222bb1c914ec53e9f4 in activemq's branch refs/heads/activemq-5.12.x from [~chris@die-schneider.net]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=618e166 ]

[AMQ-6584] Fix feature to make it work for karaf 4.1.0
;;;","27/Feb/17 12:44;cshannon;[~chris@die-schneider.net], I marked this issue and AMQ-6591 as resolved as they appear to be done and I am going to work on a 5.14.4 build.  Let me know if they should be reopened.;;;","27/Feb/17 22:57;cschneider;For 5.14 we are all clear. I just was looking into the test failures on 5.13.x but it is fine to resolve these issues.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Expired messages counting as Dispatched on TopicSubscription,AMQ-6579,13037703,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,vveloso,vveloso,25/Jan/17 13:55,25/Jan/17 16:19,14/Jul/23 05:44,25/Jan/17 16:19,5.14.3,5.15.0,,,,,,,,5.14.4,5.15.0,,,,,,,,0,,,,,,"When a TopicSubscription is configured with a limit on the number of pending messages, it will try to eagerly evict expired messages before dispatching them.

{code:title=TopicSubscription.java:169}
if (!matched.isEmpty() && matched.size() > max) {
  removeExpiredMessages();
}
{code}

When {{TopicSubscription#removeExpiredMessages}} detects an expired message, it will remove it but will increment the counter of dispatched messages as well.

{code:title=TopicSubscription.java:235}
if (node.isExpired()) {
  matched.remove();
  getSubscriptionStatistics().getDispatched().increment();
  node.decrementReferenceCount();
  if (broker.isExpired(node)) {
    ((Destination) node.getRegionDestination()).getDestinationStatistics().getExpired().increment();
    broker.messageExpired(getContext(), node, this);
  }
  break;
}
{code}

However this has the side effect of affecting the result of {{getDispatchedQueueSize()}} and therefore {{isFull()}}. These counters will now reflect a new dispatched message that has actually been dropped.

In the worst case scenario slow consumers will no longer receive messages because they are ""full"" when in fact they have nothing to process.

Am I correct in concluding that expired messages must not count towards the dispatched value?

I have made a quick change, removing the increment, and things look good so far. However I am worried that I may be missing some side effect or specification detail.",,cshannon,jira-bot,vveloso,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jan 25 16:18:27 UTC 2017,,,,,,,,,,,"0|i396s7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Jan/17 16:16;cshannon;Good catch, this is indeed a bug and the fix you suggest is correct.  The dispatched counter should only increment when messages are added to the dispatched list and not expired.;;;","25/Jan/17 16:17;jira-bot;Commit d0c95146c37f96ca69e1fe82c4b2fe9208f8184e in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=d0c9514 ]

https://issues.apache.org/jira/browse/AMQ-6579

Remove incorrect dispatch counter increment on message expiration in
TopicSubscription when a pending limit strategy is set
;;;","25/Jan/17 16:18;jira-bot;Commit 96f312ebe5c7820c06e3ceebdca1e70c5fd6b122 in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=96f312e ]

https://issues.apache.org/jira/browse/AMQ-6579

Remove incorrect dispatch counter increment on message expiration in
TopicSubscription when a pending limit strategy is set

(cherry picked from commit d0c95146c37f96ca69e1fe82c4b2fe9208f8184e)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TopicSubscription does not honor usePrefetchExtension,AMQ-6577,13037628,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,vveloso,vveloso,25/Jan/17 09:27,26/Sep/17 10:00,14/Jul/23 05:44,30/Jan/17 16:27,5.14.3,,,,,,,,,5.15.0,,,,,,,,,0,,,,,,"The current implementation of TopicSubscription always uses the prefetch extension feature, effectively ignoring any usePrefetchExtension option set in the configuration for the topic destination.",,cshannon,githubbot,jira-bot,vveloso,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6824,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Jan 30 16:27:21 UTC 2017,,,,,,,Patch Available,,,,"0|i396bj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Jan/17 11:33;githubbot;GitHub user vveloso opened a pull request:

    https://github.com/apache/activemq/pull/224

     AMQ-6577: honour usePrefetchExtension in TopicSubscription.

    The current implementation of TopicSubscription always uses the prefetch extension feature, effectively ignoring any usePrefetchExtension option set in the configuration for the topic destination.
    
    See: [AMQ-6577](https://issues.apache.org/jira/browse/AMQ-6577)


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/vveloso/activemq improve/AMQ-6577-prefetchExtension

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/224.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #224
    
----
commit df63daf39b62297fee22bfcd551a98d1900c9e77
Author: Vasco Veloso <vveloso@gmail.coom>
Date:   2017-01-25T10:08:37Z

     AMQ-6577: honour usePrefetchExtension in TopicSubscription.

----
;;;","26/Jan/17 15:04;cshannon;Thanks for the PR.  It makes sense to be able to apply usePrefetchExtension to TopicSubscription as well.

The PR looks pretty good, the only suggestion I have is that I think it makes sense to move the usePrefetchExtension variable and matching setter/getter from the PrefetchSubscription class to the AbstractSubscription class and then you can have it one location and PrefetchSubscription and TopicSubscription can inherit the property.;;;","27/Jan/17 08:07;vveloso;Thanks for your comments. I just updated the PR.

I had overlooked the fact that TopicSubscription and PrefetchSubscription shared a common base class.;;;","30/Jan/17 09:27;vveloso;[~cshannon], FYI the PR has failed a unit test, however the same unit test is also failing on master on my side.;;;","30/Jan/17 16:12;cshannon;I suspect it is an inconsistent test that just needs to be fixed, I ran the test locally and it is ok for me.;;;","30/Jan/17 16:25;jira-bot;Commit 687badb4fdd1b738103ab409f4342a82fb0e42fd in activemq's branch refs/heads/master from [~vveloso]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=687badb ]

 AMQ-6577: honour usePrefetchExtension in TopicSubscription.

 AMQ-6577: move usePrefetchExtension flag to AbstractSubscription to promote reuse.
;;;","30/Jan/17 16:25;jira-bot;Commit 687badb4fdd1b738103ab409f4342a82fb0e42fd in activemq's branch refs/heads/master from [~vveloso]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=687badb ]

 AMQ-6577: honour usePrefetchExtension in TopicSubscription.

 AMQ-6577: move usePrefetchExtension flag to AbstractSubscription to promote reuse.
;;;","30/Jan/17 16:25;jira-bot;Commit b51e0bf40c88bd8c0c96c6b5e27c3682faac25a2 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b51e0bf ]

https://issues.apache.org/jira/browse/AMQ-6577

Merging AMQ-6577

This closes #224
;;;","30/Jan/17 16:25;jira-bot;Commit b51e0bf40c88bd8c0c96c6b5e27c3682faac25a2 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b51e0bf ]

https://issues.apache.org/jira/browse/AMQ-6577

Merging AMQ-6577

This closes #224
;;;","30/Jan/17 16:26;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/224
;;;","30/Jan/17 16:27;cshannon;Thanks for the patch, I have merged it in.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Problem while installing activemq-camel with Camel 2.17.x or 2.18.x,AMQ-6576,13037222,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,sobkowiak,sobkowiak,23/Jan/17 23:56,02/Nov/19 05:27,14/Jul/23 05:44,25/Jan/17 12:39,5.14.3,5.15.0,,,,,,,,5.14.4,5.15.0,,,OSGi/Karaf,,,,,0,,,,,,"After installing ActiveMQ with Camel 2.17.x or 2.18.x an error occurs after restart and the broker is no more available. The problem can be simply reproduced by following minimal installation

{noformat}
karaf@root()> feature:repo-add camel 2.17.5
Adding feature url mvn:org.apache.camel.karaf/apache-camel/2.17.5/xml/features
karaf@root()> feature:repo-add activemq 5.14.3
Adding feature url mvn:org.apache.activemq/activemq-karaf/5.14.3/xml/features
karaf@root()> feature:install -v activemq-camel
{noformat}

After restart following error can be found in log

{noformat}
Caused by: java.lang.ClassNotFoundException: org.apache.xbean.spring.context.v2.XBeanNamespaceHandler not found by org.apache.activemq.activemq-osgi [53]
{noformat}
 
This problem has been described and analysed in Karaf dev mailing list http://karaf.922171.n3.nabble.com/ActiveMQ-and-Camel-2-17-x-on-Karaf-td4046427.html (see my last post)",Karaf 4.0.8,cshannon,githubbot,jira-bot,lichtin,sobkowiak,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jan 25 12:38:52 UTC 2017,,,,,,,,,,,"0|i393tj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Jan/17 23:59;sobkowiak;Embedding {{xbean-spring}} bundle into {{activemq-osgi}} solves the problem with Camel 2.17.x and 2.18.x. I'll prepare a pull request for master. Please backport it to 2.14.x too.;;;","24/Jan/17 00:01;githubbot;GitHub user sobkowiak opened a pull request:

    https://github.com/apache/activemq/pull/223

    [AMQ-6576] Problem while installing activemq-camel with Camel 2.17.x or 2.18.x

    Please backport this to 2.14.x too

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/sobkowiak/activemq AMQ-6576

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/223.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #223
    
----
commit 6534a83c40e07fc5f9edb1b6a89ae58dd6908456
Author: Krzysztof Sobkowiak <krzys.sobkowiak@gmail.com>
Date:   2017-01-23T23:57:03Z

    [AMQ-6576] Problem while installing activemq-camel with Camel 2.17.x or 2.18.x

----
;;;","25/Jan/17 12:35;cshannon;Thanks for the PR, I will merge this for 5.14.4 and 5.15.0;;;","25/Jan/17 12:37;jira-bot;Commit 6534a83c40e07fc5f9edb1b6a89ae58dd6908456 in activemq's branch refs/heads/master from [~sobkowiak]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=6534a83 ]

[AMQ-6576] Problem while installing activemq-camel with Camel 2.17.x or 2.18.x
;;;","25/Jan/17 12:37;jira-bot;Commit 5c035fac223517d5e6e3d5d511d32cd0b892a213 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=5c035fa ]

https://issues.apache.org/jira/browse/AMQ-6576

This closes #233
;;;","25/Jan/17 12:37;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/223
;;;","25/Jan/17 12:38;jira-bot;Commit a579023e78d434de6aaa05f64a3c1fa95bd6fe78 in activemq's branch refs/heads/activemq-5.14.x from [~sobkowiak]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=a579023 ]

[AMQ-6576] Problem while installing activemq-camel with Camel 2.17.x or 2.18.x

(cherry picked from commit 6534a83c40e07fc5f9edb1b6a89ae58dd6908456)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KahaDB journal may not handle max file length changes correctly,AMQ-6572,13036612,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,cshannon,jahlborn,jahlborn,20/Jan/17 16:44,24/Jan/17 14:03,14/Jul/23 05:44,23/Jan/17 16:05,5.14.3,,,,,,,,,5.14.4,5.15.0,,,KahaDB,,,,,0,,,,,,"I was exploring the idea of changing the kahadb journal file length on an activemq instance which already has existing data (during a system restart).  Initial response from activemq insiders was that this was a supported action, but while examining the Journal source, i stumbled on code which would seem to indicate that it isn't handled correctly

Source thread: http://activemq.2283324.n4.nabble.com/Can-you-change-the-kahadb-journal-file-size-between-broker-starts-td4721155.html#a4721252

Potential problem areas (from forum post):

https://fisheye.apache.org/browse/activemq-6/activemq-kahadb-store/src/main/java/org/apache/activemq/store/kahadb/disk/journal/Journal.java?hb=true#to310

This is the startup code.  it attempts to adjust the total length by shaving off an unused portion of the final data file.  if you have made the maxFileLength smaller since the last run, and you have actual data in the last journal file which is _after_ the new maxFileLength, then this computation will incorrectly return a negative value.  my suspicion is that the length of the last data file should be used here instead of maxFileLength.

https://fisheye.apache.org/browse/activemq-6/activemq-kahadb-store/src/main/java/org/apache/activemq/store/kahadb/disk/journal/Journal.java?hb=true#to867

likewise, this code attempts to handle adjustments to maxFileLength since the journal file was created, but i think it again fails.  if the maxFileLength has been increased since the data file was created, this would seem to be setting an offset which is past the length of the current data file.  again, it seems like the length of the data file should be used directly.

in general, in order for this to work correctly, the maxFileLength should only be used for code which is creating new files.  all the other code should be solely relying on the size of the existing file, right? 
",,cshannon,jahlborn,jira-bot,lichtin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jan 24 14:03:06 UTC 2017,,,,,,,,,,,"0|i3901z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Jan/17 15:49;cshannon;After analyzing the two potential areas I found there is only an issue with the first case (where the journal file shrinks) in that the reported journal length will be wrong.

In the first case, as suggested, the last data file length needs to be used or the totalLength reported by the Journal will be wrong as the wrong value is used when computing the unused space.  In the second case (where the journal file grows) it is ok because if the detected length is less than the offset value the journal will reset the cursor to the next file and the correct starting value here: https://fisheye.apache.org/browse/~tag=activemq-5.14.3/activemq-6/activemq-kahadb-store/src/main/java/org/apache/activemq/store/kahadb/disk/journal/Journal.java?hb=true#to843

Overall I would consider the issue minor because there is no message loss and the journal still works except for reported length being slightly wrong.  I will push up a patch shortly.;;;","23/Jan/17 16:04;jira-bot;Commit 0ad62f722fef6c2123ef7acb116a80574a43c250 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=0ad62f7 ]

https://issues.apache.org/jira/browse/AMQ-6572

On journal start use lastFileLength instead of maxFileLength when
checking for unused space in the last journal file as it is possible the
length of the last journal file is not the same length as maxFileLength
;;;","23/Jan/17 16:05;jira-bot;Commit f947a74f4acd1a60d6a2bac94b8515a50a82564b in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=f947a74 ]

https://issues.apache.org/jira/browse/AMQ-6572

On journal start use lastFileLength instead of maxFileLength when
checking for unused space in the last journal file as it is possible the
length of the last journal file is not the same length as maxFileLength

(cherry picked from commit 0ad62f722fef6c2123ef7acb116a80574a43c250)
;;;","24/Jan/17 14:03;jahlborn;Thanks for checking these out!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broker failure when deleting files in gc can cause missing journal errors on restart,AMQ-6567,13035546,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,17/Jan/17 14:01,24/Feb/17 19:25,14/Jul/23 05:44,18/Jan/17 11:39,5.14.0,,,,,,,,,5.14.4,5.15.0,,,KahaDB,,,,,0,,,,,,"A broker stop or failure while deleting journal data files or archiving data files can result in partial deletion and no index updates. 
Leading to errors on restart of the form: 
java.io.IOException: Detected missing journal files.
{code}ERROR BrokerService                  - Failed to start Apache ActiveMQ (localhost, null)
java.io.IOException: Detected missing journal files. [1, 2, 3, 4]
	at org.apache.activemq.store.kahadb.MessageDatabase.recoverIndex(MessageDatabase.java:978)
	at org.apache.activemq.store.kahadb.MessageDatabase$5.execute(MessageDatabase.java:714)
	at org.apache.activemq.store.kahadb.disk.page.Transaction.execute(Transaction.java:779)
	at org.apache.activemq.store.kahadb.MessageDatabase.recover(MessageDatabase.java:711)
	at org.apache.activemq.store.kahadb.MessageDatabase.open(MessageDatabase.java:464)
	at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:483)
	at org.apache.activemq.store.kahadb.MessageDatabase.doStart(MessageDatabase.java:297)
	at org.apache.activemq.store.kahadb.KahaDBStore.doStart(KahaDBStore.java:218)
	at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:55)
	at org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter.doStart(KahaDBPersistenceAdapter.java:226)
	at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:55)
	at org.apache.activemq.broker.BrokerService.doStartPersistenceAdapter(BrokerService.java:674)
	at org.apache.activemq.broker.BrokerService.startPersistenceAdapter(BrokerService.java:658)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:622){code}

The file deletion of the gc candidates is part of the index transaction, so partial deletion can occur but the index does not get updated.
For gc, the index updates need to complete to remove references to the data files first. Only after a successful update to the index should the removal proceed. If the removal fails, on restart the orphaned data files will get gc ed.",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Feb 24 19:24:28 UTC 2017,,,,,,,,,,,"0|i38th3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Jan/17 14:08;jira-bot;Commit 20522394cc747e64bd9f87e2e0b64d886c4dec62 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=2052239 ]

[AMQ-6567] ensure gc file removal/move is completed after index updates to avoid dangling index referenced on partial failure. Fix and test
;;;","24/Feb/17 19:24;jira-bot;Commit 1a67318fe97b1339ea1fbbd74cc7232c46e8f27c in activemq's branch refs/heads/activemq-5.14.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=1a67318 ]

[AMQ-6567] ensure gc file removal/move is completed after index updates to avoid dangling index referenced on partial failure. Fix and test

(cherry picked from commit 20522394cc747e64bd9f87e2e0b64d886c4dec62)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MessageDatabase.load could leave writeLock incorrectly locked,AMQ-6563,13034654,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,jahlborn,jahlborn,13/Jan/17 13:53,13/Jan/17 16:49,14/Jul/23 05:44,13/Jan/17 16:49,5.14.3,,,,,,,,,5.14.4,5.15.0,,,KahaDB,,,,,0,,,,,,"MessageDatabase.load in the kahadb store implementation makes a call to ""IOHelper.mkdirs(directory);"" after acquiring the writeLock, but _outside_ of the try/finally which releases the writeLock.  if that method call fails, the writeLock would be left incorrectly locked.",,jahlborn,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jan 13 16:49:08 UTC 2017,,,,,,,,,,,"0|i38nzj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Jan/17 16:48;jira-bot;Commit 281d600ae2f9ba6c6bc7bee0e8025698b9a76563 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=281d600 ]

https://issues.apache.org/jira/browse/AMQ-6563

ensure that the lock is always released in the load method.;;;","13/Jan/17 16:49;jira-bot;Commit cab6f73c9dd5354295f0b292774da9c846447f4b in activemq's branch refs/heads/activemq-5.14.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=cab6f73 ]

https://issues.apache.org/jira/browse/AMQ-6563

ensure that the lock is always released in the load method.
(cherry picked from commit 281d600ae2f9ba6c6bc7bee0e8025698b9a76563)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WARN TopicStorePrefetch cursor got duplicate from store,AMQ-6562,13034590,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,13/Jan/17 10:46,13/Jan/17 11:12,14/Jul/23 05:44,13/Jan/17 11:08,5.14.0,,,,,,,,,5.15.0,,,,Broker,Message Store,,,,0,,,,,,"Intermittent WARN in the log for durable topic subs:
{code}17/01/13 10:45:35 WARN cursors.AbstractStoreCursor: TopicStorePrefetch(CONNECTION-my_sub_1,my_sub_1,storeHasMessages=false) ID:localhost-49595-1484304335002-6:1:1:1 - org.apache.activemq.broker.region.cursors.TopicStorePrefetch@37e3cc57:T1,batchResetNeeded=false,size=14,cacheEnabled=false,maxBatchSize:200,hasSpace:true,pendingCachedIds.size:0,lastSyncCachedId:null,lastSyncCachedId-seq:null,lastAsyncCachedId:null,lastAsyncCachedId-seq:null - cursor got duplicate from store ID:localhost-49595-1484304335002-4:1:1:1:1 seq: null
{code}",,gtully,jira-bot,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5249,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jan 13 11:07:48 UTC 2017,,,,,,,,,,,"0|i38nlb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Jan/17 10:50;gtully;The WARN is expected when the cache is exhausted and page-in begins at the last ack location. Irrespective of the last cached message id in the cursor.
Any message that has not been acked will get replayed and the audit will trap it as a duplicate. However this scenario should not result in messaged going to the DLQ or any warn messages in the log.
In addition there is a leak of message references b/c the duplicates detected are not resolved by the TopicStorePrefetch cursor.;;;","13/Jan/17 11:07;jira-bot;Commit 511b9b642a198fe98409e1f1aac6176b9420d951 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=511b9b6 ]

[AMQ-6562] - suppress warn of durable sub duplicate from the store on cache exhaustion - expected in the absense of ordered sequenceid and setBatch. Fix leak of duplicates pending processing on batch fill for the durable sub case and remove eager page in for prefetch=0
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broker does not close connection for all connection attempt errors,AMQ-6561,13034391,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,12/Jan/17 15:17,22/Feb/21 13:52,14/Jul/23 05:44,12/Jan/17 15:23,5.14.3,,,,,,,,,5.14.4,5.15.0,,,Broker,,,,,0,,,,,,"When a client connects to the broker the connection gets added inside the processAddConnection method in TransportConnection.  Right now if there is an exception the socket is only shutdown if the type of exception is SecurityException.  However the connection should really be closed if any error occurs when trying to add the connection.  

For example if an InvalidClientIDException occurs then the connection is no longer tracked by the broker but the socket stays open until the client actually closes it on their end. This should be fixed so that the error terminates the socket connection since the connection attempt failed.",,cshannon,jira-bot,nauman.hameed@enghouse.com,xabhi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-7217,AMQ-6586,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Feb 22 13:52:17 UTC 2021,,,,,,,,,,,"0|i38n33:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Jan/17 15:22;jira-bot;Commit d9c74d7317677725a52466349f7ed91911664d3d in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=d9c74d7 ]

https://issues.apache.org/jira/browse/AMQ-6561

Stop connections on all connection attempt errors, not just security
exceptions, to prevent dangling open sockets.
;;;","12/Jan/17 15:22;jira-bot;Commit df7aa6e892853fd442739a49417ecdf34a6cac63 in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=df7aa6e ]

https://issues.apache.org/jira/browse/AMQ-6561

Stop connections on all connection attempt errors, not just security
exceptions, to prevent dangling open sockets.

(cherry picked from commit d9c74d7317677725a52466349f7ed91911664d3d)
;;;","16/Jan/17 11:19;xabhi;Hi Christopher,

I am looking to upgrade my ActiveMQ version (v5.11.1 to v5.14.x) and I just saw this bug. Can this bug cause file descriptor leakage? When do you guys plan to release v5.14.4? Are there any other bugs which i should wait for them to be fixed in 5.14.4? ;;;","16/Jan/17 13:36;cshannon;Yes this bug can cause file descriptors to be leaked if the client does not close the connection.  I'm not entirely sure when 5.14.4 will be released (I guess when we determine there is enough bugs fixed) but if you update to 5.14.3 now then the update to 5.14.4 later would be pretty easy.  

This bug has existed for a long time and is not new so I wouldn't necessarily hold off upgrading.  The affects version should probably be updated to show that it actually goes back quite a while.  I just listed the latest version but I believe this issue goes back several versions.;;;","17/Jan/17 08:18;xabhi;I see that the code that you fixed is present in v5.11.1. Can you explain a little more on how this bug will manifest  - like do we see sockets in close_wait state? what is the behavior when this bug happens?;;;","17/Jan/17 12:06;cshannon;The sockets will stay in established state if they stay open.  The issue occurs if a new connection from a client fails for a reason other than a security reason (such as invalid clientId) and then the client doesn't close the socket on their end.  So if the client calls close() on their connection after they get an error or if they shutdown the JVM then the socket would close and it would be fine.  As far as the behavior, you just end up with a bunch of open sockets that won't be closed.  This of course is bad as you can run out of file descriptors, etc.

If you want to see the behavior in action take a look at the unit test I committed: https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=blob;f=activemq-unit-tests/src/test/java/org/apache/activemq/transport/tcp/TcpTransportCloseSocketTest.java;h=ad2080beaea2a21c24a37003cbab6c7a63344aa1;hb=df7aa6e

This test shows that after the fix there is only 1 socket open instead of 2 because the second connection attempt fails.  If you run this test against an older version such as 5.14.3 then there will be 2 sockets open even though the second connection attempt failed with an InvalidClientIDException because both the broker and client didn't close the socket.;;;","14/Mar/17 11:59;jira-bot;Commit 36689beff755fd6391c3a8291d1e89fc782eac0d in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=36689be ]

[AMQ-6561] fix up unit test that expects socket to remain open after InvalidClientIDException, dubious expectation in the test that wants to verify broker is ok
;;;","22/Feb/21 13:52;nauman.hameed@enghouse.com; I am facing a similar issue using ActiveMQ 5.13.2. I have 2 ActiveMQ nodes where one acts as publisher and other is subscriber. Subscriber is attempting to make a connection with publisher after publisher re-start but it is failing with error mentioned in this case.

{code}
2021-02-16 19:31:26,837 | DEBUG | Setting up new connection id: AON-CUAC01-AMS1->AON-CUAC01-LON1-49164-1611665757700-28:1, address: vm://AON-CUAC01-AMS1#76, info: ConnectionInfo {commandId = 1, responseRequired = true, connectionId = AON-CUAC01-AMS1->AON-CUAC01-LON1-49164-1611665757700-28:1, clientId = Broker12Bridge_AON-CUAC01-LON1_inbound_AON-CUAC01-AMS1, clientIp = null, userName = amqsystem, password = *****, brokerPath = null, brokerMasterConnector = false, manageable = false, clientMaster = true, faultTolerant = false, failoverReconnect = false} | org.apache.activemq.broker.TransportConnection | triggerStartAsyncNetworkBridgeCreation: remoteBroker=tcp://AON-CUAC01-LON1/10.250.242.29:61616@58562, localBroker= vm://AON-CUAC01-AMS1#76
2021-02-16 19:31:26,837 | INFO  | Adding Connection: ConnectionInfo {commandId = 1, responseRequired = true, connectionId = AON-CUAC01-AMS1->AON-CUAC01-LON1-49164-1611665757700-28:1, clientId = Broker12Bridge_AON-CUAC01-LON1_inbound_AON-CUAC01-AMS1, clientIp = vm://AON-CUAC01-AMS1#76, userName = amqsystem, password = *****, brokerPath = null, brokerMasterConnector = false, manageable = false, clientMaster = true, faultTolerant = false, failoverReconnect = false} | org.apache.activemq.broker.util.LoggingBrokerPlugin | triggerStartAsyncNetworkBridgeCreation: remoteBroker=tcp://AON-CUAC01-LON1/10.250.242.29:61616@58562, localBroker= vm://AON-CUAC01-AMS1#76
2021-02-16 19:31:26,838 | WARN  | Failed to add Connection AON-CUAC01-AMS1->AON-CUAC01-LON1-49164-1611665757700-28:1 due to javax.jms.InvalidClientIDException: Broker: AON-CUAC01-AMS1 - Client: Broker12Bridge_AON-CUAC01-LON1_inbound_AON-CUAC01-AMS1 already connected from vm://AON-CUAC01-AMS1#60 | org.apache.activemq.broker.TransportConnection | triggerStartAsyncNetworkBridgeCreation: remoteBroker=tcp://AON-CUAC01-LON1/10.250.242.29:61616@58562, localBroker= vm://AON-CUAC01-AMS1#76
2021-02-16 19:31:26,838 | DEBUG | Error occured while processing sync command: ConnectionInfo {commandId = 1, responseRequired = true, connectionId = AON-CUAC01-AMS1->AON-CUAC01-LON1-49164-1611665757700-28:1, clientId = Broker12Bridge_AON-CUAC01-LON1_inbound_AON-CUAC01-AMS1, clientIp = vm://AON-CUAC01-AMS1#76, userName = amqsystem, password = *****, brokerPath = null, brokerMasterConnector = false, manageable = false, clientMaster = true, faultTolerant = false, failoverReconnect = false}, exception: javax.jms.InvalidClientIDException: Broker: AON-CUAC01-AMS1 - Client: Broker12Bridge_AON-CUAC01-LON1_inbound_AON-CUAC01-AMS1 already connected from vm://AON-CUAC01-AMS1#60 | org.apache.activemq.broker.TransportConnection.Service | triggerStartAsyncNetworkBridgeCreation: remoteBroker=tcp://AON-CUAC01-LON1/10.250.242.29:61616@58562, localBroker= vm://AON-CUAC01-AMS1#76
javax.jms.InvalidClientIDException: Broker: AON-CUAC01-AMS1 - Client: Broker12Bridge_AON-CUAC01-LON1_inbound_AON-CUAC01-AMS1 already connected from vm://AON-CUAC01-AMS1#60
	at org.apache.activemq.broker.region.RegionBroker.addConnection(RegionBroker.java:255)
	at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:98)
	at org.apache.activemq.advisory.AdvisoryBroker.addConnection(AdvisoryBroker.java:116)
	at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:98)
	at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:98)
	at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:98)
	at org.apache.activemq.broker.MutableBrokerFilter.addConnection(MutableBrokerFilter.java:103)
	at org.apache.activemq.broker.util.LoggingBrokerPlugin.addConnection(LoggingBrokerPlugin.java:178)
	at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:98)
	at org.apache.activemq.security.SimpleAuthenticationBroker.addConnection(SimpleAuthenticationBroker.java:77)
	at org.apache.activemq.broker.MutableBrokerFilter.addConnection(MutableBrokerFilter.java:103)
	at org.apache.activemq.broker.TransportConnection.processAddConnection(TransportConnection.java:817)
	at org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:139)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:338)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:188)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
	at org.apache.activemq.transport.vm.VMTransport.doDispatch(VMTransport.java:162)
	at org.apache.activemq.transport.vm.VMTransport.dispatch(VMTransport.java:154)
	at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:131)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:68)
	at org.apache.activemq.transport.ResponseCorrelator.asyncRequest(ResponseCorrelator.java:81)
	at org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:86)
	at org.apache.activemq.network.DemandForwardingBridgeSupport.startLocalBridge(DemandForwardingBridgeSupport.java:468)
	at org.apache.activemq.network.DemandForwardingBridgeSupport.doStartLocalAndRemoteBridges(DemandForwardingBridgeSupport.java:421)
	at org.apache.activemq.network.DemandForwardingBridgeSupport.access$500(DemandForwardingBridgeSupport.java:105)
	at org.apache.activemq.network.DemandForwardingBridgeSupport$5.run(DemandForwardingBridgeSupport.java:336)
	at java.lang.Thread.run(Thread.java:748)
2021-02-16 19:31:26,838 | INFO  | Network connection between vm://AON-CUAC01-AMS1#76 and tcp://AON-CUAC01-LON1/10.250.242.29:61616@58562 shutdown due to a local error: javax.jms.InvalidClientIDException: Broker: AON-CUAC01-AMS1 - Client: Broker12Bridge_AON-CUAC01-LON1_inbound_AON-CUAC01-AMS1 already connected from vm://AON-CUAC01-AMS1#60 | org.apache.activemq.network.DemandForwardingBridgeSupport | triggerStartAsyncNetworkBridgeCreation: remoteBroker=tcp://AON-CUAC01-LON1/10.250.242.29:61616@58562, localBroker= vm://AON-CUAC01-AMS1#76
2021-02-16 19:31:26,838 | DEBUG | The local Exception was: javax.jms.InvalidClientIDException: Broker: AON-CUAC01-AMS1 - Client: Broker12Bridge_AON-CUAC01-LON1_inbound_AON-CUAC01-AMS1 already connected from vm://AON-CUAC01-AMS1#60 | org.apache.activemq.network.DemandForwardingBridgeSupport | triggerStartAsyncNetworkBridgeCreation: remoteBroker=tcp://AON-CUAC01-LON1/10.250.242.29:61616@58562, localBroker= vm://AON-CUAC01-AMS1#76
javax.jms.InvalidClientIDException: Broker: AON-CUAC01-AMS1 - Client: Broker12Bridge_AON-CUAC01-LON1_inbound_AON-CUAC01-AMS1 already connected from vm://AON-CUAC01-AMS1#60
	at org.apache.activemq.broker.region.RegionBroker.addConnection(RegionBroker.java:255)
	at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:98)
	at org.apache.activemq.advisory.AdvisoryBroker.addConnection(AdvisoryBroker.java:116)
	at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:98)
	at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:98)
	at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:98)
	at org.apache.activemq.broker.MutableBrokerFilter.addConnection(MutableBrokerFilter.java:103)
	at org.apache.activemq.broker.util.LoggingBrokerPlugin.addConnection(LoggingBrokerPlugin.java:178)
	at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:98)
	at org.apache.activemq.security.SimpleAuthenticationBroker.addConnection(SimpleAuthenticationBroker.java:77)
	at org.apache.activemq.broker.MutableBrokerFilter.addConnection(MutableBrokerFilter.java:103)
	at org.apache.activemq.broker.TransportConnection.processAddConnection(TransportConnection.java:817)
	at org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:139)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:338)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:188)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
	at org.apache.activemq.transport.vm.VMTransport.doDispatch(VMTransport.java:162)
	at org.apache.activemq.transport.vm.VMTransport.dispatch(VMTransport.java:154)
	at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:131)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:68)
	at org.apache.activemq.transport.ResponseCorrelator.asyncRequest(ResponseCorrelator.java:81)
	at org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:86)
	at org.apache.activemq.network.DemandForwardingBridgeSupport.startLocalBridge(DemandForwardingBridgeSupport.java:468)
	at org.apache.activemq.network.DemandForwardingBridgeSupport.doStartLocalAndRemoteBridges(DemandForwardingBridgeSupport.java:421)
	at org.apache.activemq.network.DemandForwardingBridgeSupport.access$500(DemandForwardingBridgeSupport.java:105)
	at org.apache.activemq.network.DemandForwardingBridgeSupport$5.run(DemandForwardingBridgeSupport.java:336)
	at java.lang.Thread.run(Thread.java:748)
2021-02-16 19:31:26,838 | DEBUG |  stopping AON-CUAC01-AMS1 bridge to AON-CUAC01-LON1 | org.apache.activemq.network.DemandForwardingBridgeSupport | ActiveMQ BrokerService[AON-CUAC01-AMS1] Task-112
2021-02-16 19:31:26,839 | DEBUG | Failure occurred soon after the discovery event was generated.  It will be classified as a connection failure: [tcp://AON-CUAC01-LON1:61616, failed:true, connectionFailures:2] | org.apache.activemq.transport.discovery.simple.SimpleDiscoveryAgent | Simple Discovery Agent-20
2021-02-16 19:31:26,839 | DEBUG | Waiting 4000 ms before attempting to reconnect. | org.apache.activemq.transport.discovery.simple.SimpleDiscoveryAgent | Simple Discovery Agent-20
2021-02-16 19:31:26,839 | DEBUG | Stopping connection: vm://AON-CUAC01-AMS1#76 | org.apache.activemq.broker.TransportConnection | ActiveMQ BrokerService[AON-CUAC01-AMS1] Task-114
2021-02-16 19:31:26,839 | DEBUG | Stopped transport: vm://AON-CUAC01-AMS1#76 | org.apache.activemq.broker.TransportConnection | ActiveMQ BrokerService[AON-CUAC01-AMS1] Task-114
2021-02-16 19:31:26,839 | DEBUG | Stopping transport tcp://AON-CUAC01-LON1/10.250.242.29:61616@58562 | org.apache.activemq.transport.tcp.TcpTransport | ActiveMQ BrokerService[AON-CUAC01-AMS1] Task-112
2021-02-16 19:31:26,840 | DEBUG | Connection Stopped: vm://AON-CUAC01-AMS1#76 | org.apache.activemq.broker.TransportConnection | ActiveMQ BrokerService[AON-CUAC01-AMS1] Task-114
2021-02-16 19:31:26,840 | DEBUG | Initialized TaskRunnerFactory[ActiveMQ Task] using ExecutorService: null | org.apache.activemq.thread.TaskRunnerFactory | ActiveMQ BrokerService[AON-CUAC01-AMS1] Task-112
2021-02-16 19:31:26,840 | DEBUG | Closed socket Socket[addr=AON-CUAC01-LON1/10.250.242.29,port=61616,localport=58562] | org.apache.activemq.transport.tcp.TcpTransport | ActiveMQ Task-1
2021-02-16 19:31:26,840 | DEBUG | Shutting down VM connectors for broker: AON-CUAC01-AMS1 | org.apache.activemq.transport.vm.VMTransportFactory | ActiveMQ BrokerService[AON-CUAC01-AMS1] Task-112
2021-02-16 19:31:26,841 | DEBUG | Stopping connection: vm://AON-CUAC01-AMS1#78 | org.apache.activemq.broker.TransportConnection | ActiveMQ BrokerService[AON-CUAC01-AMS1] Task-115
2021-02-16 19:31:26,841 | DEBUG | Stopped transport: vm://AON-CUAC01-AMS1#78 | org.apache.activemq.broker.TransportConnection | ActiveMQ BrokerService[AON-CUAC01-AMS1] Task-115
2021-02-16 19:31:26,841 | DEBUG | Connection Stopped: vm://AON-CUAC01-AMS1#78 | org.apache.activemq.broker.TransportConnection | ActiveMQ BrokerService[AON-CUAC01-AMS1] Task-115
2021-02-16 19:31:26,841 | INFO  | Connector vm://AON-CUAC01-AMS1 stopped | org.apache.activemq.broker.TransportConnector | ActiveMQ BrokerService[AON-CUAC01-AMS1] Task-112
2021-02-16 19:31:26,841 | INFO  | AON-CUAC01-AMS1 bridge to AON-CUAC01-LON1 stopped | org.apache.activemq.network.DemandForwardingBridgeSupport | ActiveMQ BrokerService[AON-CUAC01-AMS1] Task-112
{code}

I am not sure if this is exactly same issue as yours. Can you please comment?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve thread safety of pendingStop flag in TransportConnection,AMQ-6560,13034305,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,cshannon,cshannon,cshannon,12/Jan/17 12:35,12/Jan/17 12:42,14/Jul/23 05:44,12/Jan/17 12:42,5.14.3,,,,,,,,,5.14.4,5.15.0,,,Broker,,,,,0,,,,,,I was looking at TransportConnection and I noticed that the {{pendingStop}} flag was a normal boolean but not always accessed inside of a synchronized block.  This is an issue because multiple threads might be checking this flag (such as when the inactivity monitor runs).  The {{starting}} flag has the same issue.  Both of these booleans can be converted to AtomicBoolean which will simplify things and guarantee thread visibility on change.,,cshannon,jira-bot,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jan 12 12:41:55 UTC 2017,,,,,,,,,,,"0|i38mjz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Jan/17 12:37;jira-bot;Commit bdec3f6ddb7f1417690f3c89d07ea77f0d6d96e5 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=bdec3f6 ]

https://issues.apache.org/jira/browse/AMQ-6560

Converting flags in TransportConnection to AtomicBoolean to reduce
synchronization and improve thread safety
;;;","12/Jan/17 12:41;jira-bot;Commit 161ba22f61a8d1d9d0380e75ec6d02353b88aca9 in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=161ba22 ]

https://issues.apache.org/jira/browse/AMQ-6560

Converting flags in TransportConnection to AtomicBoolean to reduce
synchronization and improve thread safety

(cherry picked from commit bdec3f6ddb7f1417690f3c89d07ea77f0d6d96e5)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Constant reconnecting after ActiveMQ restart with HTTP Layer,AMQ-6557,13033838,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,jiri.formanek@atos.net,jiri.formanek@atos.net,11/Jan/17 16:53,02/Dec/19 15:40,14/Jul/23 05:44,02/Dec/19 15:40,5.14.1,,,,,,,,,,,,,Broker,Network of Brokers,,,,2,,,,,,"The ActiveMQ broker reconnects constantly to other brokers after restart, when HTTP is used as transport layer.

Let's consider following simple broker network, where machine A connects to machine B...

Machine A config:
{code}
<networkConnector duplex=""true"" uri=""static:(http://machineB:61617)"" name=""bridgeToB"" />
{code}

Machine B config:
{code}
<transportConnector name=""http"" uri=""http://0.0.0.0:61617?maximumConnections=1000&wireFormat.maxFrameSize=104857600""/>
{code}

When ActiveMQ on machine A is restarted, then the connection to machine B is successfully re-established after restart, but after 30 seconds, when keep-alive mechanism sends a HTTP GET request on machine B, then this fails with some java.io.IOException. Then the connection breaks up. It's established new connection to machine B and after 30 seconds again fails the keep-alive GET request. And so on over and over till ActiveMQ on machine B is restarted.

See logs:

{noformat}
2017-01-11 14:32:19,005 | INFO  | Establishing network connection from vm://localhost?async=false&create=false to http://machineB:61617 | org.apache.activemq.network.DiscoveryNetworkConnector
| ActiveMQ Task-1017
2017-01-11 14:32:20,726 | INFO  | Broker Servlet supports GZip compression. | org.apache.activemq.transport.http.HttpClientTransport | ActiveMQ Task-1017
2017-01-11 14:32:20,923 | INFO  | Network connection between vm://localhost#9512 and HTTP Reader http://machineB:61617 (localhost) has been established. | org.apache.activemq.network.DemandFor
wardingBridgeSupport | triggerStartAsyncNetworkBridgeCreation: remoteBroker=HTTP Reader http://machineB:61617, localBroker= vm://localhost#9512
2017-01-11 14:32:54,912 | WARN  | Network connection between vm://localhost#9512 and HTTP Reader http://machineB:61617 shutdown due to a remote error: java.io.IOException: Failed to perform GE
T on: http://machineB:61617 Reason: Read timed out | org.apache.activemq.network.DemandForwardingBridgeSupport | ActiveMQ Transport: HTTP Reader http://machineB:61617
2017-01-11 14:32:54,917 | INFO  | localhost bridge to localhost stopped | org.apache.activemq.network.DemandForwardingBridgeSupport | ActiveMQ BrokerService[localhost] Task-4377
2017-01-11 14:32:55,913 | INFO  | Establishing network connection from vm://localhost?async=false&create=false to http://machineB:61617 | org.apache.activemq.network.DiscoveryNetworkConnector
| ActiveMQ Task-1018
2017-01-11 14:32:57,642 | INFO  | Broker Servlet supports GZip compression. | org.apache.activemq.transport.http.HttpClientTransport | ActiveMQ Task-1018
2017-01-11 14:32:57,841 | INFO  | Network connection between vm://localhost#9516 and HTTP Reader http://machineB:61617 (localhost) has been established. | org.apache.activemq.network.DemandFor
wardingBridgeSupport | triggerStartAsyncNetworkBridgeCreation: remoteBroker=HTTP Reader http://machineB:61617, localBroker= vm://localhost#9516
2017-01-11 14:33:31,429 | WARN  | Network connection between vm://localhost#9516 and HTTP Reader http://machineB:61617 shutdown due to a remote error: java.io.IOException: Failed to perform GE
T on: http://machineB:61617 Reason: Read timed out | org.apache.activemq.network.DemandForwardingBridgeSupport | ActiveMQ Transport: HTTP Reader http://machineB:61617
2017-01-11 14:33:31,433 | INFO  | localhost bridge to localhost stopped | org.apache.activemq.network.DemandForwardingBridgeSupport | ActiveMQ BrokerService[localhost] Task-4390
2017-01-11 14:33:32,430 | INFO  | Establishing network connection from vm://localhost?async=false&create=false to http://machineB:61617 | org.apache.activemq.network.DiscoveryNetworkConnector
| ActiveMQ Task-1019
2017-01-11 14:33:34,157 | INFO  | Broker Servlet supports GZip compression. | org.apache.activemq.transport.http.HttpClientTransport | ActiveMQ Task-1019
2017-01-11 14:33:34,355 | INFO  | Network connection between vm://localhost#9520 and HTTP Reader http://machineB:61617 (localhost) has been established. | org.apache.activemq.network.DemandFor
wardingBridgeSupport | triggerStartAsyncNetworkBridgeCreation: remoteBroker=HTTP Reader http://machineB:61617, localBroker= vm://localhost#9520
2017-01-11 14:34:07,169 | WARN  | Network connection between vm://localhost#9520 and HTTP Reader http://machineB:61617 shutdown due to a remote error: java.io.IOException: Failed to perform GE
T on: http://machineB:61617 Reason: Read timed out | org.apache.activemq.network.DemandForwardingBridgeSupport | ActiveMQ Transport: HTTP Reader http://machineB:61617
2017-01-11 14:34:07,175 | INFO  | localhost bridge to localhost stopped | org.apache.activemq.network.DemandForwardingBridgeSupport | ActiveMQ BrokerService[localhost] Task-4400
2017-01-11 14:34:08,170 | INFO  | Establishing network connection from vm://localhost?async=false&create=false to http://machineB:61617 | org.apache.activemq.network.DiscoveryNetworkConnector
| ActiveMQ Task-1020
2017-01-11 14:34:09,898 | INFO  | Broker Servlet supports GZip compression. | org.apache.activemq.transport.http.HttpClientTransport | ActiveMQ Task-1020
2017-01-11 14:34:10,095 | INFO  | Network connection between vm://localhost#9524 and HTTP Reader http://machineB:61617 (localhost) has been established. | org.apache.activemq.network.DemandFor
wardingBridgeSupport | triggerStartAsyncNetworkBridgeCreation: remoteBroker=HTTP Reader http://machineB:61617, localBroker= vm://localhost#9524
2017-01-11 14:34:42,505 | WARN  | Network connection between vm://localhost#9524 and HTTP Reader http://machineB:61617 shutdown due to a remote error: java.io.IOException: Failed to perform GE
T on: http://machineB:61617 Reason: Read timed out | org.apache.activemq.network.DemandForwardingBridgeSupport | ActiveMQ Transport: HTTP Reader http://machineB:61617
2017-01-11 14:34:42,508 | INFO  | localhost bridge to localhost stopped | org.apache.activemq.network.DemandForwardingBridgeSupport | ActiveMQ BrokerService[localhost] Task-4407
2017-01-11 14:34:43,506 | INFO  | Establishing network connection from vm://localhost?async=false&create=false to http://machineB:61617 | org.apache.activemq.network.DiscoveryNetworkConnector
| ActiveMQ Task-1021
2017-01-11 14:34:45,221 | INFO  | Broker Servlet supports GZip compression. | org.apache.activemq.transport.http.HttpClientTransport | ActiveMQ Task-1021
2017-01-11 14:34:45,419 | INFO  | Network connection between vm://localhost#9528 and HTTP Reader http://machineB:61617 (localhost) has been established. | org.apache.activemq.network.DemandFor
wardingBridgeSupport | triggerStartAsyncNetworkBridgeCreation: remoteBroker=HTTP Reader http://machineB:61617, localBroker= vm://localhost#9528
2017-01-11 14:35:19,002 | WARN  | Network connection between vm://localhost#9528 and HTTP Reader http://machineB:61617 shutdown due to a remote error: java.io.IOException: Failed to perform GE
T on: http://machineB:61617 Reason: Read timed out | org.apache.activemq.network.DemandForwardingBridgeSupport | ActiveMQ Transport: HTTP Reader http://machineB:61617
2017-01-11 14:35:19,006 | INFO  | localhost bridge to localhost stopped | org.apache.activemq.network.DemandForwardingBridgeSupport | ActiveMQ BrokerService[localhost] Task-4415
2017-01-11 14:35:20,003 | INFO  | Establishing network connection from vm://localhost?async=false&create=false to http://machineB:61617 | org.apache.activemq.network.DiscoveryNetworkConnector
| ActiveMQ Task-1022
2017-01-11 14:35:21,751 | INFO  | Broker Servlet supports GZip compression. | org.apache.activemq.transport.http.HttpClientTransport | ActiveMQ Task-1022
2017-01-11 14:35:21,949 | INFO  | Network connection between vm://localhost#9532 and HTTP Reader http://machineB:61617 (localhost) has been established. | org.apache.activemq.network.DemandFor
wardingBridgeSupport | triggerStartAsyncNetworkBridgeCreation: remoteBroker=HTTP Reader http://machineB:61617, localBroker= vm://localhost#9532
2017-01-11 14:35:55,973 | WARN  | Network connection between vm://localhost#9532 and HTTP Reader http://machineB:61617 shutdown due to a remote error: java.io.IOException: Failed to perform GE 
{noformat}

We have installed currently 5.14.1, but I suppose, that newest version has the same behavior.",Linux openSuse,jiri.formanek@atos.net,samuel.ueltschi@bsi-software.com,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6558,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Dec 02 15:40:29 UTC 2019,,,,,,,,,,,"0|i38ke7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Dec/19 15:40;jiri.formanek@atos.net;For more details see:

https://issues.apache.org/jira/browse/AMQ-6949;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failed to browse topic warnings caused by orphaned expire message tasks in Sceduler,AMQ-6555,13033359,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,kapowie,kapowie,10/Jan/17 12:08,11/Jan/17 11:36,14/Jul/23 05:44,10/Jan/17 15:28,5.14.1,,,,,,,,,5.14.4,5.15.0,,,,,,,,0,,,,,,"When using a FixedCountSubscriptionRecoveryPolicy on a topic I get millions of warnings when the topic is gc'd after inactivity. The impact is that warn logging has to be turned off which is not ideal. Looking in detail it seems this is caused by a couple of things. Firstly the Topic start method can be invoked twice, once when adding the destination to the RegionBroker and second when the regionBroker is started. 

That causes the same expireMessagesTask to get scheduled twice which reveals the crux of the problem. The Scheduler allows the same task to be scheduled again in new TimerTasks, even though it will use the same key and ophan any existing (and running) TimerTasks. This is what's happening here. When the topic gets stopped, the orphaned tasks continue to run causing these spurious warnings that clog up the logs.

My suggestion would be for the scheduler to check if the task has already been registered using a putIfAbsent and fail if it already exists:
https://github.com/apache/activemq/blob/d9350912984f12356e9d51b0f00b5a28f5cfa58d/activemq-client/src/main/java/org/apache/activemq/thread/Scheduler.java#L42

These are the warnings we see:

2017-01-10 11:36:13,885 [host] Scheduler] - WARN  Topic                          - Failed to browse Topic: myTopic
java.lang.NullPointerException
	at org.apache.activemq.broker.region.policy.FixedCountSubscriptionRecoveryPolicy.browse(FixedCountSubscriptionRecoveryPolicy.java:103)
	at org.apache.activemq.broker.region.policy.RetainedMessageSubscriptionRecoveryPolicy.browse(RetainedMessageSubscriptionRecoveryPolicy.java:111)
	at org.apache.activemq.broker.region.Topic.doBrowse(Topic.java:677)
	at org.apache.activemq.broker.region.Topic.access$1(Topic.java:639)
	at org.apache.activemq.broker.region.Topic$2.run(Topic.java:791)
	at org.apache.activemq.thread.SchedulerTimerTask.run(SchedulerTimerTask.java:33)
	at java.util.TimerThread.mainLoop(Timer.java:555)
	at java.util.TimerThread.run(Timer.java:505",,cshannon,jira-bot,kapowie,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jan 11 11:36:12 UTC 2017,,,,,,,,,,,"0|i38hs7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/Jan/17 13:32;cshannon;I think the main fix here is to prevent the start method from being called a second time and a check can also be added to the Scheduler as a precaution as well.  However instead of a put if absent it might be better to cancel the old task and then start/add the new one in case the period has changed.  We can log a warning as well.  I can't really think of any current use cases where this would/should happen but figure it's worth putting the check in there as a precaution.;;;","10/Jan/17 15:27;jira-bot;Commit 2769298cf64a10cd74320ad132b3677bac20a6cc in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=2769298 ]

https://issues.apache.org/jira/browse/AMQ-6555

Fixing Scheduler so that a rescheduled task will first cancel the
existing task so it does not get orphaned from the task map.  Also
fixing Topic start so that it will only start once and not twice.
;;;","10/Jan/17 15:27;jira-bot;Commit e4da98bd790566ba2208246541f71a28b4a00c0f in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e4da98b ]

https://issues.apache.org/jira/browse/AMQ-6555

Fixing Scheduler so that a rescheduled task will first cancel the
existing task so it does not get orphaned from the task map.  Also
fixing Topic start so that it will only start once and not twice.

(cherry picked from commit 2769298cf64a10cd74320ad132b3677bac20a6cc)
;;;","11/Jan/17 11:36;kapowie;Thanks Christopher for the swift action to resolve this! It encourages me to report more :);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Logger message,AMQ-6549,13029727,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,,Kris_1,Kris_1,21/Dec/16 12:09,03/Jan/17 15:02,14/Jul/23 05:44,03/Jan/17 15:02,5.14.2,,,,,,,,,5.15.0,,,,Broker,,,,,0,,,,,,Wrong logging message,,jira-bot,Kris_1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Dec/16 12:09;Kris_1;logger.patch;https://issues.apache.org/jira/secure/attachment/12844239/logger.patch",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Patch,,,,,,,,,9223372036854775807,,,Tue Jan 03 14:57:36 UTC 2017,,,,,,,Patch Available,,,,"0|i37vdz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Jan/17 14:57;jira-bot;Commit 56917c07ec1c52e6588091eb5d48c76bfbb71b19 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=56917c0 ]

https://issues.apache.org/jira/browse/AMQ-6549

Fix bad logger output;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Commit messages on exception,AMQ-6548,13029726,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,Kris_1,Kris_1,21/Dec/16 12:04,17/Jan/17 16:53,14/Jul/23 05:44,17/Jan/17 16:53,5.14.2,,,,,,,,,5.15.0,,,,RAR,,,,,0,,,,,,"At ear stop jsm connection consumes messages, although there occured exception
{noformat}
2016-12-15 16:12:58,831 ERROR [org.jboss.as.ejb3.invocation.processInvocation] (default-threads - 23) WFLYEJB0034: EJB Invocation failed on component test.test.mdb for method public void test.test.onMessage(javax.jms.Message): org.jboss.as.ejb3.component.EJBComponentUnavailableException: WFLYEJB0421: Invocation cannot proceed as component is shutting down
        at org.jboss.as.ejb3.component.interceptors.ShutDownInterceptorFactory$1.processInvocation(ShutDownInterceptorFactory.java:59)
        at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
        at org.jboss.as.ejb3.deployment.processors.EjbSuspendInterceptor.processInvocation(EjbSuspendInterceptor.java:53)
        at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
        at org.jboss.as.ejb3.component.interceptors.LoggingInterceptor.processInvocation(LoggingInterceptor.java:66)
        at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
        at org.jboss.as.ee.component.NamespaceContextInterceptor.processInvocation(NamespaceContextInterceptor.java:50)
        at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
        at org.jboss.as.ejb3.component.interceptors.AdditionalSetupInterceptor.processInvocation(AdditionalSetupInterceptor.java:54)
        at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
        at org.jboss.as.ejb3.component.messagedriven.MessageDrivenComponentDescription$5$1.processInvocation(MessageDrivenComponentDescription.java:213)
        at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
        at org.jboss.invocation.ContextClassLoaderInterceptor.processInvocation(ContextClassLoaderInterceptor.java:64)
        at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
        at org.jboss.invocation.InterceptorContext.run(InterceptorContext.java:356)
        at org.wildfly.security.manager.WildFlySecurityManager.doChecked(WildFlySecurityManager.java:634)
        at org.jboss.invocation.AccessCheckingInterceptor.processInvocation(AccessCheckingInterceptor.java:61)
        at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
        at org.jboss.invocation.InterceptorContext.run(InterceptorContext.java:356)
        at org.jboss.invocation.PrivilegedWithCombinerInterceptor.processInvocation(PrivilegedWithCombinerInterceptor.java:80)
        at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
        at org.jboss.invocation.ChainedInterceptor.processInvocation(ChainedInterceptor.java:61)
        at org.jboss.as.ee.component.ViewService$View.invoke(ViewService.java:195)
        at org.jboss.as.ee.component.ViewDescription$1.processInvocation(ViewDescription.java:185)
        at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)
        at org.jboss.invocation.ChainedInterceptor.processInvocation(ChainedInterceptor.java:61)
        at org.jboss.as.ee.component.ProxyInvocationHandler.invoke(ProxyInvocationHandler.java:73)
        at test.test$$$view19.onMessage(Unknown Source)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:498)
        at org.jboss.as.ejb3.inflow.MessageEndpointInvocationHandler.doInvoke(MessageEndpointInvocationHandler.java:139)
        at org.jboss.as.ejb3.inflow.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:73)
        at test.test$$$endpoint12.onMessage(Unknown Source)
        at org.apache.activemq.ra.MessageEndpointProxy$MessageEndpointAlive.onMessage(MessageEndpointProxy.java:123)
        at org.apache.activemq.ra.MessageEndpointProxy.onMessage(MessageEndpointProxy.java:64)
        at org.apache.activemq.ActiveMQSession.run(ActiveMQSession.java:1041)
        at org.apache.activemq.ra.ServerSessionImpl.run(ServerSessionImpl.java:169)
        at org.jboss.jca.core.workmanager.WorkWrapper.run(WorkWrapper.java:226)
        at org.jboss.threads.SimpleDirectExecutor.execute(SimpleDirectExecutor.java:33)
        at org.jboss.threads.QueueExecutor.runTask(QueueExecutor.java:808)
        at org.jboss.threads.QueueExecutor.access$100(QueueExecutor.java:45)
        at org.jboss.threads.QueueExecutor$Worker.run(QueueExecutor.java:828)
        at java.lang.Thread.run(Thread.java:745)
        at org.jboss.threads.JBossThread.run(JBossThread.java:320)
{noformat}","Wildfly 9.0.2.Final
XA Transaction",gtully,jira-bot,Kris_1,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Dec/16 12:06;Kris_1;commit-at-stop.patch;https://issues.apache.org/jira/secure/attachment/12844238/commit-at-stop.patch",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Patch,,,,,,,,,9223372036854775807,,,Tue Jan 17 16:53:29 UTC 2017,,,,,,,Patch Available,,,,"0|i37vdr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Jan/17 12:28;Kris_1;Is anyone read this task?

It's not possible to stop wildfly if activeMq is not stopped. Some messages are gone without processing.;;;","16/Jan/17 12:34;gtully;would it be possible to build a test case or unit test that will demonstrate the problem and protect the fix?;;;","17/Jan/17 16:51;jira-bot;Commit 85181d630c94c7ca7a47cbb40fc55e3f9e27b574 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=85181d6 ]

[AMQ-6548] ensure any pending xa transaction is marked rollback only on delivery failure exception from on message, before delegating to potential clientInternalExceptionListener. Variant of patch applied with additional test - thanks to Andrey Dyachikhin for the patch inspiration
;;;","17/Jan/17 16:53;gtully;it makes sense to force rollbackOnly on delivery failure due to an exception.  Thanks for the patch [~Kris_1];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deadlock can occur during journal file rotation,AMQ-6545,13028734,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,16/Dec/16 18:39,20/Jul/18 19:06,14/Jul/23 05:44,16/Dec/16 18:49,5.14.2,,,,,,,,,5.14.3,5.15.0,,,Broker,KahaDB,,,,0,,,,,,"There is an issue in the KahaDB Journal that can cause a deadlock.  I saw the issue occur today when an Ack compaction was running while another thread retrieved the current data file and a rotation was required.

https://issues.apache.org/jira/browse/AMQ-5603 introduced async preallocation and part of that commit introduced two locks instead of 1...dataFileIdLock and currentDataFile.

The issue is that most of the time dataFileIdLock is acquired first and then currentDataFile.  However, when calling the getCurrentDataFile() method if a rotation is needed then the currentDataFile lock is acquired before dataFileIdLock leading to a potential deadlock situation.

The fix is to make sure that the two locks are always acquired in the same order.",,cshannon,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-7016,,,,,,,,,,,,,AMQ-5603,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jan 18 11:53:40 UTC 2017,,,,,,,,,,,"0|i37p9j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Dec/16 18:46;jira-bot;Commit 5fd63a0e4ee71bb93843ab6bfbba6f93b023a3c3 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=5fd63a0 ]

https://issues.apache.org/jira/browse/AMQ-6545

Fixing the order of locks acquired in the KahaDB journal to prevent a
deadlock during file rotation
;;;","16/Dec/16 18:48;jira-bot;Commit fc3897af67dc7d17255869d13aecba352f366b2f in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=fc3897a ]

https://issues.apache.org/jira/browse/AMQ-6545

Fixing the order of locks acquired in the KahaDB journal to prevent a
deadlock during file rotation

(cherry picked from commit 5fd63a0e4ee71bb93843ab6bfbba6f93b023a3c3)
;;;","18/Jan/17 11:53;gtully;nice catch [~cshannon] :-);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ does not start up on karaf if offline (SAXParseException),AMQ-6544,13028447,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cschneider,cschneider,cschneider,15/Dec/16 17:38,06/Aug/19 12:29,14/Jul/23 05:44,19/Dec/16 14:21,5.14.2,,,,,,,,,5.14.3,5.15.0,,,OSGi/Karaf,,,,,0,,,,,,"To reproduce:

- Download, unpack and start karaf 4.0.8

    feature:repo-add activemq 5.14.2
    feature:install activemq-broker

ActiveMQ start succesfully.
Now stop karaf, go offline and start karaf again.

This time the exception below can be found in the log and ActiveMQ fails to start.
org.osgi.service.cm.ConfigurationException: null : Cannot start the broker
Caused by: org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException: Line 24 in XML document from URL [file:/home/cschneider/java/apache-karaf-4.0.8/etc/activemq.xml] is invalid; nested exception is org.xml.sax.SAXParseException: cvc-elt.1.a: Cannot find the declaration of element 'beans'.
Caused by: org.xml.sax.SAXParseException: cvc-elt.1.a: Cannot find the declaration of element 'beans'.

Full stack trace can be found here http://apaste.info/PQSHZ

The reason for this problem seems to be that the xsd can not be found. So I assume we lack the correct mapping from urls to embedded xsds.

I will work on a fix.
","Karaf, Offline",cschneider,cshannon,githubbot,ilazebny,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-7258,,,,AMQ-6668,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Important,,,,,,,,,9223372036854775807,,,Mon Dec 19 14:21:25 UTC 2016,,,,,,,,,,,"0|i37nhr:",9223372036854775807,Regression,,,,,,,,,,,,,,,,,,,,"19/Dec/16 12:54;githubbot;GitHub user cschneider opened a pull request:

    https://github.com/apache/activemq/pull/222

    [AMQ-6544] Create spring.schemas with schemas of activemq and spring

    As spring is embedded now we also need to define the spring schema mappings to make them available when being offline. Downside is that this needs to be maintained. So the better way would be to join the files from activemq-spring and spring. 
    Does anyone know how to do this?


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/cschneider/activemq AMQ-6544

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/222.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #222
    
----
commit 50dae26788400cef745932535f1c933abdd56637
Author: Christian Schneider <chris@die-schneider.net>
Date:   2016-12-19T12:51:58Z

    [AMQ-6544] Create spring.schemas with schemas of activemq and spring

----
;;;","19/Dec/16 14:15;cshannon;I think this is ok for now and I will update the release guide to make sure the new schemas file is maintained with new versions unless someone has a better way.;;;","19/Dec/16 14:20;jira-bot;Commit 50dae26788400cef745932535f1c933abdd56637 in activemq's branch refs/heads/master from [~chris@die-schneider.net]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=50dae26 ]

[AMQ-6544] Create spring.schemas with schemas of activemq and spring
;;;","19/Dec/16 14:20;jira-bot;Commit 21955e2ea558f00be148767a1ce36d47c1f63aec in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=21955e2 ]

https://issues.apache.org/jira/browse/AMQ-6544

Merge branch 'AMQ-6544'

This closes #222
;;;","19/Dec/16 14:20;jira-bot;Commit 21955e2ea558f00be148767a1ce36d47c1f63aec in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=21955e2 ]

https://issues.apache.org/jira/browse/AMQ-6544

Merge branch 'AMQ-6544'

This closes #222
;;;","19/Dec/16 14:21;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/222
;;;","19/Dec/16 14:21;jira-bot;Commit 3998cd636793e04edfd688107c7e0dd051965a73 in activemq's branch refs/heads/activemq-5.14.x from [~chris@die-schneider.net]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=3998cd6 ]

[AMQ-6544] Create spring.schemas with schemas of activemq and spring

(cherry picked from commit 50dae26788400cef745932535f1c933abdd56637)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to add a second network bridge when syncDurableSubs is enabled,AMQ-6538,13027839,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,13/Dec/16 16:58,13/Dec/16 17:01,14/Jul/23 05:44,13/Dec/16 17:01,5.14.2,,,,,,,,,5.14.3,5.15.0,,,Broker,Network of Brokers,,,,0,,,,,,"There is an issue with the syncDurableSubs feature that causes multiple network bridges added between two brokers to fail (except the first one) if the dynamically included destinations are different.

The cause of the failure is that on sync when trying to cleanup un-needed network durable subscriptions only the subscription name is taken into account and not the clientId so invalid subscription removal commands get generated which lead to a bridge failure. (they are generated with the wrong localClientId)",,cshannon,jira-bot,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Dec 13 17:00:50 UTC 2016,,,,,,,,,,,"0|i37jqn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Dec/16 17:00;jira-bot;Commit 25703fbd1f27b65a7410acd7df0bfaf7c16845d8 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=25703fb ]

https://issues.apache.org/jira/browse/AMQ-6538

Fixing an issue with syncDurableSubs that cause a bridge failure when
adding multiple bridges between the same brokers
;;;","13/Dec/16 17:00;jira-bot;Commit 0225edb47143684a9ae80185d2981eb688cb768f in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=0225edb ]

https://issues.apache.org/jira/browse/AMQ-6538

Fixing an issue with syncDurableSubs that cause a bridge failure when
adding multiple bridges between the same brokers

(cherry picked from commit 25703fbd1f27b65a7410acd7df0bfaf7c16845d8)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
auto+nio+ssl transport protocol detection task doesn't always terminate,AMQ-6535,13027489,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,12/Dec/16 16:14,12/Dec/16 16:27,14/Jul/23 05:44,12/Dec/16 16:27,5.14.2,,,,,,,,,5.14.3,5.15.0,,,Broker,,,,,0,,,,,,"There's an issue with the auto+nio+ssl transport where the task that runs to read enough byets to detect the protocol can continue to run even after the timeout period.  This ends up eating up cpu and the task will never stop.

This can happen if there's a repeated exception when trying to read from the protocol or when the client connects but doesn't send enough bytes.",,cshannon,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Dec 12 16:27:42 UTC 2016,,,,,,,,,,,"0|i37hl3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Dec/16 16:18;jira-bot;Commit 27238b2dd790cea38d95da46b23ed141f5847782 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=27238b2 ]

https://issues.apache.org/jira/browse/AMQ-6535

Fixing the auto+nio+ssl transport so that the protocol detection task
will properly terminate on timeout and not continue to run. Also
lowered the default detection timeout to 15 seconds instead of 30
seconds to match the InactivityMonitor default.
;;;","12/Dec/16 16:26;jira-bot;Commit ae30662fbdc2bc263e7c7c2e3cda3f8bbb063907 in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=ae30662 ]

https://issues.apache.org/jira/browse/AMQ-6535

Fixing the auto+nio+ssl transport so that the protocol detection task
will properly terminate on timeout and not continue to run. Also
lowered the default detection timeout to 15 seconds instead of 30
seconds to match the InactivityMonitor default.

(cherry picked from commit 27238b2dd790cea38d95da46b23ed141f5847782)
;;;","12/Dec/16 16:27;cshannon;Fixed by allowing the task to check if the thread was interrupted.  Also lowered the default timeout to 15 seconds.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CachedLDAPAuthorizationMap may be queried prior to loading ACL's,AMQ-6529,13026427,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dkulp,dkulp,dkulp,07/Dec/16 18:21,14/Dec/16 18:22,14/Jul/23 05:44,08/Dec/16 14:40,5.14.1,,,,,,,,,5.13.5,5.14.3,,,Security/JAAS,,,,,0,,,,,,"
When not using spring, nothing calls the query method (or afterPropertiesSet method) until the first update call which could occur several seconds or longer after startup.  Thus, early calls to check ACL's could cause denials for requests that shouldn't be denied.
",,dkulp,edwardost,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Dec 14 18:11:09 UTC 2016,,,,,,,,,,,"0|i37b13:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Dec/16 19:41;jira-bot;Commit 1a2e3eb0c76b0a44244f8f4bd69b3dfe1331741b in activemq's branch refs/heads/master from [~dkulp]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=1a2e3eb ]

[AMQ-6529] Make sure the LDAP ACL's are definitely loaded when needed.
;;;","08/Dec/16 14:39;jira-bot;Commit d3c5e8188d0e6ab693be4ff681c143b0bdcd7828 in activemq's branch refs/heads/activemq-5.14.x from [~dkulp]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=d3c5e81 ]

[AMQ-6529] Make sure the LDAP ACL's are definitely loaded when needed.
;;;","14/Dec/16 18:11;jira-bot;Commit f83bfef6e3252071184e2d3d80a33c294f012e2b in activemq's branch refs/heads/activemq-5.13.x from [~dkulp]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=f83bfef ]

[AMQ-6529] Make sure the LDAP ACL's are definitely loaded when needed.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Exception occurred processing: <Unknown> -> org.apache.activemq.transport.stomp.ProtocolException: The maximum data length was exceeded,AMQ-6526,13025957,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tmielke,tmielke,tmielke,06/Dec/16 13:23,07/Dec/16 18:33,14/Jul/23 05:44,06/Dec/16 13:53,5.14.1,,,,,,,,,5.15.0,,,,Broker,STOMP,,,,0,,,,,,"When sending a Stomp message whose payload is bigger than wireFormat.maxDataLength, it results in this error 

{code}
Exception occurred processing: <Unknown> -> org.apache.activemq.transport.stomp.ProtocolException: The maximum data length was exceeded
{code}

The problem is the {{<Unknown>}} which should get replaced with the proper Stomp operation that was used.


",Stomp,githubbot,jira-bot,tmielke,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Dec 07 18:33:55 UTC 2016,,,,,,,,,,,"0|i3784n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Dec/16 13:24;tmielke;Fix in https://github.com/apache/activemq/pull/217;;;","06/Dec/16 13:35;githubbot;GitHub user tmielke opened a pull request:

    https://github.com/apache/activemq/pull/217

    https://issues.apache.org/jira/browse/AMQ-6526 - fix <Unknown> Stomp …

    …operation in ProtocolException.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/tmielke/activemq StompProtocolErrorUnknown

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/217.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #217
    
----
commit 0348bfeea52dcdbc6538cad94599db2af867c67d
Author: Torsten Mielke <tmielke@redhat.com>
Date:   2016-12-06T13:32:47Z

    https://issues.apache.org/jira/browse/AMQ-6526 - fix <Unknown> Stomp operation in ProtocolException.

----
;;;","06/Dec/16 13:52;jira-bot;Commit 9e3577894327d8c78bc52bb5f77650af0ceb095b in activemq's branch refs/heads/master from [~tmielke]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=9e35778 ]

https://issues.apache.org/jira/browse/AMQ-6526 - fix <Unknown> Stomp operation in ProtocolException.
closes #217
;;;","06/Dec/16 13:53;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/217
;;;","07/Dec/16 18:33;jira-bot;Commit 4b3f07e90ea497164aaf9cc00591e8e0f868f83b in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=4b3f07e ]

https://issues.apache.org/jira/browse/AMQ-6441
https://issues.apache.org/jira/browse/AMQ-6526

Adding missing license headers
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The MemoryUsage tracker can get out of sync when using concurrentStoreAndDispatch,AMQ-6524,13025614,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,05/Dec/16 12:07,05/Dec/16 12:14,14/Jul/23 05:44,05/Dec/16 12:14,5.14.1,,,,,,,,,5.14.2,5.15.0,,,Broker,,,,,0,,,,,,"There is a rare issue with memoryUsage when using concurrentStoreAndDispatch that causes memory usage to get out of sync and go negative or stay too high.  It is hard to reproduce and only occurs on brokers under high load in my testing.

I have finally tracked down the issue to the InnerFutureTask inside of KahaDB that gets used to fire the PendingMarshalUsageTracker on completion.  This task is not thread safe and causes the following 2 problems:
    
    1) Sometimes the listener is never fired and the usage isn't decremented. This case seems to be caused by the listener not being visible to the thread when run.  (volatile or atomic reference need to be used)
    
    2) Sometimes the listener can run twice. This seems to be because of a lack of synchronization between the if(isDone()) check and the done() method call.  This can also be fixed by using an atomic reference.

I have a patch that solves both of these problems and I have not seen the issue reoccur in my testing.",,cshannon,jira-bot,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Dec 05 12:13:14 UTC 2016,,,,,,,,,,,"0|i3760f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Dec/16 12:12;jira-bot;Commit 0f0bdb21ef97c39ec7d54d164e07921611c1de08 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=0f0bdb2 ]

https://issues.apache.org/jira/browse/AMQ-6524

Fixing a thread safety issue with memoryUsage when using concurrentStoreAndDispatch
that was causing memory usage to get out of sync.

The InnerFutureTask class inside KahaDB was not thread safe which was
the root cause of the problem.
;;;","05/Dec/16 12:13;jira-bot;Commit 3542657541e3581d77282654eb19ebae42014dbf in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=3542657 ]

https://issues.apache.org/jira/browse/AMQ-6524

Fixing a thread safety issue with memoryUsage when using concurrentStoreAndDispatch
that was causing memory usage to get out of sync.

The InnerFutureTask class inside KahaDB was not thread safe which was
the root cause of the problem.

(cherry picked from commit 0f0bdb21ef97c39ec7d54d164e07921611c1de08)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KahaDB - checkForCorruptJournalFiles has hard coded 32k batch size limit in error ,AMQ-6522,13024048,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,29/Nov/16 11:24,05/Dec/16 13:50,14/Jul/23 05:44,29/Nov/16 11:35,5.14.0,,,,,,,,,5.14.2,5.15.0,,,KahaDB,Message Store,,,,0,,,,,,"Using setCheckForCorruptJournalFiles=true, there is a sanity check of the journal at startup - skipping through each of the journal files validating batch record checksums and magic in an effort to detect corruption early and drop the relevant messages or error out.
There is an error in the check logic that assumes a batch record must be < 32k which is not the case if a message is > 32k

Tidy up this check and add some more detail to the error messages.",,gtully,jira-bot,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Dec 05 13:49:58 UTC 2016,,,,,,,,,,,"0|i36wcf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/Nov/16 11:33;jira-bot;Commit dad629e889b2116a778fd4f77680a1b2944b400f in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=dad629e ]

[AMQ-6522] - remove hardcoded 32k batch limit from recovery check of the journal, fix and test
;;;","29/Nov/16 11:34;gtully;symptom with a message > 32k in size{code}
14:23:16,374 | ERROR | AMQ-1-thread-1   | ActiveMQServiceFactory | Exception on start: java.io.IOException: Detected missing/corrupt journal files referenced by:[xxx] 1 messages affected.
java.io.IOException: Detected missing/corrupt journal files referenced by:[xxx] 1 messages affected.
{code};;;","05/Dec/16 13:49;jira-bot;Commit 89209d320cf5bf0c6e0755f6ba4dd33d73da5398 in activemq's branch refs/heads/activemq-5.14.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=89209d3 ]

[AMQ-6522] - remove hardcoded 32k batch limit from recovery check of the journal, fix and test

(cherry picked from commit dad629e889b2116a778fd4f77680a1b2944b400f)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
compatibility issue with jetty 9.3.11 in org.apache.activemq.transport.http.HttpTransportServer,AMQ-6521,13023686,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,cshannon,chammer2,chammer2,28/Nov/16 10:09,09/Dec/16 15:27,14/Jul/23 05:44,09/Dec/16 14:51,5.14.1,,,,,,,,,5.14.3,5.15.0,,,,,,,,0,,,,,,"There is a instantiation of a class that does not exists, see org.apache.activemq.transport.http.HttpTransportServer.java:

 private void addGzipHandler(ServletContextHandler contextHandler) throws Exception {
        Handler handler = new GzipHandler();
        contextHandler.setHandler(handler);
    }

org.eclipse.jetty.servlets.gzip.GzipHandler does not exist. Instead there is a class org.eclipse.jetty.server.handler.gzip.GzipHandler.java
in https://mvnrepository.com/artifact/org.eclipse.jetty/jetty-server/9.3.13.v20161014
Because of this activemq is not compatible with jetty versions since 9.0",,chammer2,cshannon,jira-bot,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Dec 09 15:27:32 UTC 2016,,,,,,,,,,,"0|i36u3z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Nov/16 21:38;tabish;ActiveMQ 5.14.1 is built and tested against Jetty v9.2.13.v20150730 so we know it works there, newer versions of jetty may break.;;;","29/Nov/16 07:30;chammer2;Hi Timothy, thanks for the clarification! I think you are right regarding jetty9.2 and indeed jetty 9.3 does not work as explained. Does this mean that jetty 9.3.x support is currently not on the roadmap? I am on Java 8 and would like to use http2. jetty 9.2 is for java 7 and does not support http2. 
regards,
Carsten;;;","29/Nov/16 14:33;cshannon;We can target support for Jetty 9.3.x (and maybe Jetty 9.2.x backwards compatibility) with the 5.15.0 release as that is the first release that will require Java 8.  The 5.14.x release branch still supports Java 7 so we can't upgrade to Jetty 9.3.x in a 5.14.x release.;;;","29/Nov/16 14:36;chammer2;Thanks, that would be great!;;;","29/Nov/16 15:23;tabish;It might still be possible to let this work with jetty 9.3 on 5.14.x but we'll need test out a few changes to see for sure.;;;","29/Nov/16 16:39;jira-bot;Commit 80f46a80560b2b2ed9fb418c33df75136bc3dc52 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=80f46a8 ]

https://issues.apache.org/jira/browse/AMQ-6521

Adding support for Jetty 9.3 by re-adding in the logic to dynamically
load the correct GzipHandler depending on the version
;;;","29/Nov/16 16:39;jira-bot;Commit 4cdd188ef22524391d8801e865a4c9eed8c8eb06 in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=4cdd188 ]

https://issues.apache.org/jira/browse/AMQ-6521

Adding support for Jetty 9.3 by re-adding in the logic to dynamically
load the correct GzipHandler depending on the version

(cherry picked from commit 80f46a80560b2b2ed9fb418c33df75136bc3dc52)
;;;","29/Nov/16 16:40;cshannon;I was able to make this work for 9.3 by using reflection to search for the correct GzipHandler.  It will go into the 5.14.2 release.;;;","29/Nov/16 19:07;chammer2;Great, I would like to try it out with the next release but I did not find a planned release date for the 5.14.2 release in jira. Seems the Roadmap Gadget in the Jira Dashboard is not used in ActiveMQ. Do you know when the next release is available?;;;","29/Nov/16 19:28;cshannon;Soon, I plan on doing a release either this week or next week if no blocking issues come up.;;;","09/Dec/16 13:33;chammer2;Unfortunately the fix is wrong. This issue should be reopened. The code now looks like that:

private void addGzipHandler(ServletContextHandler contextHandler) throws Exception {
        Handler handler = null;
        try {
            handler = (Handler) forName(""org.eclipse.jetty.server.handler.GzipHandler"").newInstance();
        } catch (Throwable t) {
            handler = (Handler) forName(""org.eclipse.jetty.servlets.gzip.GzipHandler"").newInstance();
        }
        contextHandler.setHandler(handler);
    }

But the real class name seems to be (as is written in this issues description)

org.eclipse.jetty.server.handler.gzip.GzipHandler

and not one of these

org.eclipse.jetty.server.handler.GzipHandler
org.eclipse.jetty.servlets.gzip.GzipHandler

I guess it is difficult to provide a test for this, right?;;;","09/Dec/16 13:58;chammer2;I am sorry that I did not find this earlier, but it is very difficult for me to push snapshot versions into my test environment;;;","09/Dec/16 14:45;cshannon;Oops, I thought I had tested this properly but apparently not. Looks like when I reverted the previous commit it had restored the check for Jetty 8.x and Jetty 9.2 but not Jetty 9.3.  I retested this again and there is actually one more change that is needed for this to work with Jetty 9.3.  I will push a new commit with the changes.

Yes it is difficult to test right now because our broker pulls in only Jetty 9.2.x.  So our tests just run against 9.2.x as that is the main version supported in 5.14.x.  In 5.15.x I am planning to upgrade to 9.3 so that will get all the tests run against it then.  

To run tests against both 9.2 and 9.3 we'd probably need to create another subproject and override the Jetty dependency to be 9.3 and re-run the Http tests. That is something that could be looked at in 5.15.0 if we decide to provide support for more than one version of Jetty besides just 9.3.0;;;","09/Dec/16 14:47;jira-bot;Commit 29b4db5c34fbb7087bc6a08f3e393da32b39ce66 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=29b4db5 ]

https://issues.apache.org/jira/browse/AMQ-6521

Fixing support for Jetty 9.3 and Jetty 9.2.  The previous attempt at a
fix had the wrong class instance.
;;;","09/Dec/16 14:48;jira-bot;Commit 80b5fdcf2ff48f4ac55cabd86addc0267478573e in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=80b5fdc ]

https://issues.apache.org/jira/browse/AMQ-6521

Fixing support for Jetty 9.3 and Jetty 9.2.  The previous attempt at a
fix had the wrong class instance.

(cherry picked from commit 29b4db5c34fbb7087bc6a08f3e393da32b39ce66)
;;;","09/Dec/16 14:51;cshannon;Ok I think this is fixed for real this time.  I know you said that it is difficult to test against snapshots so if you can't do that it would be helpful if you could at least verify that the commit looks ok with the correct class this time.;;;","09/Dec/16 15:27;chammer2;I would say it matches http://download.eclipse.org/jetty/9.3.12.v20160915/apidocs/org/eclipse/jetty/server/handler/gzip/GzipHandler.html. I hope I will be able to work on my ci build soon so that it will be easier to test with snapshot version. But I cannot promise that currently..;;;",,,,,,,,,,,,,,,,,,,,,,,,
support indexDirectory attribute via mKahaDB,AMQ-6520,13023425,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,25/Nov/16 16:41,25/Nov/16 16:46,14/Jul/23 05:44,25/Nov/16 16:46,5.14.0,,,,,,,,,5.15.0,,,,Message Store,,,,,0,,,,,,"AMQ-5072 added the index directory to kahadb such that the index can be on a different volume to the journal data.
With mKahadb, this information is lost when the perDestination option is used.

eg:
Start a standalone broker with the following mKahaDB configuration. 
{code}
<mKahaDB directory=""${data}/kahadb"">
  <filteredPersistenceAdapters>
   <filteredKahaDB perDestination=""true"">
	<persistenceAdapter>
	  <kahaDB journalMaxFileLength=""32mb"" indexDirectory=""/tmp/kindex""/>
	</persistenceAdapter>
  </filteredKahaDB>
 </filteredPersistenceAdapters>
</mKahaDB>
{code}

With the above cfg, the indices for each of the created queues reside in what would be the default location. For example, given a queue called FOOBAR, its corresponding index files will be found in ../data/amq/kahadb/queue#3a#2f#2fFOOBAR and not /tmp/kindex/queue#3a#2f#2fFOOBAR

With the cfg below, the indices for 'FOO.>' and 'BAR.>' are being created in their respective directories (i.e., under kindex1 and kindex2).  
{code}
<mKahaDB directory=""${data}/kahadb"">
 <filteredPersistenceAdapters>
   <filteredKahaDB queue=""FOO.>"">
    <persistenceAdapter>
      <kahaDB journalMaxFileLength=""32mb"" indexDirectory=""/tmp/kindex1""/>
    </persistenceAdapter>
   </filteredKahaDB>
   <filteredKahaDB queue=""BAR.>"">
    <persistenceAdapter>
      <kahaDB journalMaxFileLength=""32mb"" indexDirectory=""/tmp/kindex2""/>
    </persistenceAdapter>
   </filteredKahaDB>
 </filteredPersistenceAdapters>
</mKahaDB>
{code}


 ",,gtully,jira-bot,tmielke,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5072,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Nov 25 16:44:52 UTC 2016,,,,,,,,,,,"0|i36shz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Nov/16 16:44;jira-bot;Commit 0a29533ed7ef49798a3fb4fa8eed7fb78d0a868a in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=0a29533 ]

[AMQ-6520] respect kahadb indexDirectory for perDestination mKahaDB - fix and test
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"[doc] re-work section ""Pooled Consumers and Prefetch"" on prefetch documentation",AMQ-6519,13023385,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,tmielke,tmielke,tmielke,25/Nov/16 12:43,28/Nov/16 09:11,14/Jul/23 05:44,28/Nov/16 09:11,5.14.1,,,,,,,,,5.14.1,,,,Documentation,,,,,0,documentation,,,,,"The chapter ""Pooled Consumers and Prefetch"" on http://activemq.apache.org/what-is-the-prefetch-limit-for.html is partly incorrect.

I had a few customers getting uncertain about this section that I really think we need to correct this. 

While the first general part is correct:

{quote}
Consuming messages from a pool of consumers an be problematic due to prefetch. Unconsumed prefetched messages are only released when a consumer is closed, but with a pooled consumer the close is deferred (for reuse) till the consumer pool closes. This leaves prefetched messages unconsumed till the consumer is reused. This feature can be desirable from a performance perspective. However, it can lead to out-of-order message delivery when there is more than one consumer in the pool. For this reason, the org.apache.activemq.pool.PooledConnectionFactory does not pool consumers.
{quote}

the latter part is wrong:

{quote}
The problem is visible with the Spring DMLC when the cache level is set to CACHE_CONSUMER and there are multiple concurrent consumers. One solution to this problem is to use a prefetch of 0 for a pooled consumer, in this way, it will poll for messages on each call to receive(timeout). Another option is to enable the AbortSlowAckConsumerStrategy on the broker to disconnect consumers that have not acknowledged a Message after some configurable time period.
{quote}

Springs DMLC does not pool consumers in the sense that it uses its own pool of JMS consumers for which it grabs an instance when consuming the next message. If it did work that way, then it would fall under the above category and then it would be a problem.
However Spring DMLC caches the consumer, i.e. it re-uses the same JMS consumer object to receive all messages for the life time of the DMLC instance. So it behaves pretty much like properly hand written JMS code, where you create the JMS connection, session, consumer and then use this consumer instance to receive all your messages.
If you run Spring DMLC with multiple consumer threads, then each consumer thread creates its own JMS consumer instances and uses that to process messages. These JMS consumer instances are not mixed between threads. 
So there is no problem with prefetching messages to these consumers, since they are never placed into a pool of some sort.

On the contrary Springs CachingConnectionFactory allows to pool consumers (although off by default) and that kind of pooling of consumers would cause the problems outlined in the general section. 
",Documentation,gtully,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Nov 28 09:08:10 UTC 2016,,,,,,,Patch Available,,,,"0|i36s93:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Nov/16 12:47;tmielke;I forgot to mention, CACHE_CONSUMER is a very much desired configuration in most use cases. It cannot be used with XA transactions but works fine with local JMS transactions and non-transacted consumers. 
The reason is that without caching the consumer in Spring, it needs to re-create a new consumer for every single message it wants to consume.
The call to session.createConsumer() is a synchronous call against the broker, hence slows down your overall processing performance in the client. 

;;;","25/Nov/16 13:04;tmielke;Here is my suggestion to fix the docs.
I would like to leave the first general part as it is atm, since it is correct.

{quote}
Consuming messages from a pool of consumers can be problematic due to prefetch. Unconsumed prefetched messages are only released when a consumer is closed, but with a pooled consumer the call to close() is deferred (for reuse) till the consumer pool closes. This leaves prefetched messages unconsumed till the consumer is reused. This feature can be desirable from a performance perspective. However, it can lead to out-of-order message delivery when there is more than one consumer in the pool. For this reason, the org.apache.activemq.pool.PooledConnectionFactory does not pool consumers.
{quote}

Then re-write the second part to 

{quote}
Pooling consumers is supported by Springs CachingConnectionFactory (although turned off by default). In case you use the CachingConnectionFactory with multiple consumer threads configured in Springs DefaultMessageListenerContainer (DMLC) you either want to turn off consumer pooling in the  CachingConnectionFactory (its off by default) or you may want to use a prefetch of 0 when pooling consumers. In this way, the consumer will poll for messages on each call to receive(timeout). Its generally recommended to turn off consumer caching in Springs CachingConnectionFactory and any other frameworks that allow to pool JMS consumers.

Note that Springs DefaultMessageListenerContainer (DMLC) and its CACHE_CONSUMER cache level is not affected by this problem! Springs DMLC does not pool consumers in the sense that it does not use an internal pool with multiple consumer instances. Instead it caches the consumer, i.e. it re-uses the same JMS consumer object to receive all messages for the life time of the DMLC instance. So it behaves pretty much like properly hand written JMS code, where you create the JMS connection, session, consumer and then use this consumer instance to receive all your messages.
Hence there is no problem with using CACHE_CONSUMER in Spring DMLC, even with multiple consumer threads, unless you are using XA transactions. XA transactions do not work with CACHE_CONSUMER in Spring DMLC. However local JMS transactions and non-transacted consumers are just fine to use CACHE_CONSUMER in Springs DMLC.

Also note that Camel's JMS or ActiveMQ components use Springs DMLC internally. So everything said above about Springs DMLC and CACHE_CONSUMER applies to these two Camel components as well. 
{quote}

Any objections / corrections / opinions on this suggested documentation update? 
If I get some confirmation, I will update the docs accordingly.;;;","25/Nov/16 16:09;gtully;good update.

Cast your eyes over https://github.com/apache/activemq/blob/master/activemq-jms-pool/src/main/java/org/apache/activemq/jms/pool/PooledConnectionFactory.java where there is similar info but I think it is less detailed.;;;","28/Nov/16 09:08;tmielke;Thanks for confirming Gary,

I pushed this update to this page in this revision https://cwiki.apache.org/confluence/pages/viewpage.action?pageId=36183.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Statistics plugin shows wrong value for average message size,AMQ-6518,13023265,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,robert.huffman@gmail.com,robert.huffman@gmail.com,24/Nov/16 23:01,05/Dec/16 13:50,14/Jul/23 05:44,25/Nov/16 10:38,5.14.2,,,,,,,,,5.14.2,5.15.0,,,Broker,,,,,0,,,,,,"The statistics plugin reports the wrong value for average message size.

For messages on one of my topic JMX is reporting an average message size of 1242. The statistics plugin is reporting an average message size of 0.

Digging into this I found that StatisticsPlugin line 123 is the problem. It invokes stats.getMessageSize().getAveragePerSecond() instead of stats.getMessageSize().getAverageSize().

The result is that the plugin reports 1000 / averageMessageSize instead of averageMessageSize.
",Linux,gtully,jira-bot,robert.huffman@gmail.com,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Dec 05 13:49:59 UTC 2016,,,,,,,,,,,"0|i36rif:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Nov/16 10:38;jira-bot;Commit cfdff4edc529984deea27067578810498541321c in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=cfdff4e ]

[AMQ-6518] - fix up aveMessageSize dest stat and test
;;;","25/Nov/16 10:38;gtully;thanks for the report and fix identification.;;;","05/Dec/16 13:49;jira-bot;Commit 5b6ce12fc473569e7de3c307330ff11e158e49ad in activemq's branch refs/heads/activemq-5.14.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=5b6ce12 ]

[AMQ-6518] - fix up aveMessageSize dest stat and test

(cherry picked from commit cfdff4edc529984deea27067578810498541321c)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make redelivery policy preDispatch check optional,AMQ-6517,13023235,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,24/Nov/16 16:38,22/Feb/17 14:35,14/Jul/23 05:44,24/Nov/16 17:03,5.14.0,,,,,,,,,5.15.0,,,,JMS client,,,,,0,,,,,,"AMQ-5146 introduced a pre dispatch check on the redelivery policy to ensure that a consumer the repeatidly crashed with a redelivery limit would eventually fail the message to the dlq.
There are cases where this is not ideal. For example, if the redelivery policy denies redelivery, maxRedeliveries=0 and a message has been inflight on an aborted connection. Broker side the redelivery count will be incremented, because the broker knows it may have been delivered (on a connection abort, the consumer goes not get to supply accurate delivery status information). With the preemptive check, this message it won't get delivered and will instead go directly to the DLQ.

making the preDeliveryCheck optional allows maxRedeliveries=0 to work in this case.",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5146,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Feb 22 14:35:46 UTC 2017,,,,,,,,,,,"0|i36rbr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Nov/16 17:02;jira-bot;Commit b6bca3976c9dc18ff5a51c51c218b2f7f8825fbe in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b6bca39 ]

[AMQ-6517] make pre dispatch redelivery policy check optional jms.redeliveryPolicy.preDispatchCheck=false
;;;","22/Feb/17 14:35;jira-bot;Commit 816f81e605ab692ca48d22cce30cf3722f83013f in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=816f81e ]

[AMQ-6517] resolve intermittent test failure - wait for client connection to see broker disconnect
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Install of activemq-blueprint fails as javax.inject is missing,AMQ-6515,13022457,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,cschneider,cschneider,22/Nov/16 09:55,06/Dec/16 11:57,14/Jul/23 05:44,06/Dec/16 11:57,5.15.0,,,,,,,,,5.15.0,,,,OSGi/Karaf,,,,,0,,,,,,"When just installing activemq-blueprint in a plain karaf 4.0.7 the following error happens. It seems that javax.inject is missing in the feature activemq-client.

karaf@root()> feature:repo-add activemq 5.15.0-SNAPSHOT
Adding feature url mvn:org.apache.activemq/activemq-karaf/5.15.0-SNAPSHOT/xml/features
karaf@root()> feature:install activemq-blueprint 
Error executing command: Unable to resolve root: missing requirement [root] osgi.identity; osgi.identity=activemq-blueprint; type=karaf.feature; version=""[5.15.0.SNAPSHOT,5.15.0.SNAPSHOT]""; filter:=""(&(osgi.identity=activemq-blueprint)(type=karaf.feature)(version>=5.15.0.SNAPSHOT)(version<=5.15.0.SNAPSHOT))"" [caused by: Unable to resolve activemq-blueprint/5.15.0.SNAPSHOT: missing requirement [activemq-blueprint/5.15.0.SNAPSHOT] osgi.identity; osgi.identity=activemq; type=karaf.feature; version=""[5.15.0.SNAPSHOT,5.15.0.SNAPSHOT]"" [caused by: Unable to resolve activemq/5.15.0.SNAPSHOT: missing requirement [activemq/5.15.0.SNAPSHOT] osgi.identity; osgi.identity=activemq-karaf; type=osgi.bundle; version=""[5.15.0.SNAPSHOT,5.15.0.SNAPSHOT]""; resolution:=mandatory [caused by: Unable to resolve activemq-karaf/5.15.0.SNAPSHOT: missing requirement [activemq-karaf/5.15.0.SNAPSHOT] osgi.wiring.package; filter:=""(osgi.wiring.package=org.apache.activemq.console)"" [caused by: Unable to resolve org.apache.activemq.activemq-osgi/5.15.0.SNAPSHOT: missing requirement [org.apache.activemq.activemq-osgi/5.15.0.SNAPSHOT] osgi.wiring.package; filter:=""(osgi.wiring.package=javax.inject)""]]]]
",,cschneider,davsclaus,githubbot,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Dec 06 11:57:21 UTC 2016,,,,,,,Patch Available,,,,"0|i36miv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Nov/16 09:58;githubbot;GitHub user cschneider opened a pull request:

    https://github.com/apache/activemq/pull/215

    [AMQ-6515] Adding javax.inject bundle to fix the issue on feature ins…

    …tall

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/cschneider/activemq AMQ-6515

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/215.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #215
    
----
commit dbdaa40967a2ccbe15112299eaf3b0169ae8a0e3
Author: Christian Schneider <chris@die-schneider.net>
Date:   2016-11-22T09:57:20Z

    [AMQ-6515] Adding javax.inject bundle to fix the issue on feature install

----
;;;","22/Nov/16 11:09;jira-bot;Commit 00129837dedd010843fe19150adfbfb64e97ced8 in activemq's branch refs/heads/master from [~chris@die-schneider.net]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=0012983 ]

[AMQ-6515] Adding javax.inject bundle to fix the issue on feature install
;;;","22/Nov/16 11:12;davsclaus;Thanks for the PR;;;","22/Nov/16 11:56;cschneider;Btw. this issue will not be visible in pax exam tests as pax exam installs javax.inject itself. So there this always works;;;","22/Nov/16 12:01;cschneider;Just tested with 5.14.1. The issue does not happen there. So no backport needed.;;;","25/Nov/16 10:07;githubbot;Github user cschneider closed the pull request at:

    https://github.com/apache/activemq/pull/215
;;;","02/Dec/16 12:53;gtully;the root cause of this issue was a leaked export-package of inject from guava 14. With guava 18 the export is not present and the bnd plugin does not pull it in from the transitive dependencies and it no longer exists in the imports.
activemq-osgi has no need for the dependency.;;;","02/Dec/16 12:56;jira-bot;Commit 59bfffd2b45db4d85b278e6b9a6d1cd13e0f0902 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=59bfffd ]

Revert ""[AMQ-6515] Adding javax.inject bundle to fix the issue on feature install""
guava 14 was the culprit - activemq-osgi does not need to import javax.inject

This reverts commit 00129837dedd010843fe19150adfbfb64e97ced8.
;;;","06/Dec/16 11:01;gtully;with guava 18, activemq-osig gets another spurious import in error.

A workaround to avoid adding to the imports:{code}
+      !com.google.thirdparty.publicsuffix,
{code}

but I need to determine the root cause, b/c I don't see what exports com.google.thirdparty.publicsuffix or why bnd figures it is necessary.;;;","06/Dec/16 11:53;jira-bot;Commit e3d698b9d9c5cf97f5d462ee93f7027b97868da6 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e3d698b ]

[AMQ-6515] add explicit no import for ..thirdparty.publicsuffix which leaks from guava via bnd into the activemq-osgi module
;;;","06/Dec/16 11:57;gtully;the analysis via bnd pulls in the import from the dependent jar references unless there is some -noimport or negation or other explicit direction;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Property placeholders do not work in blueprint activemq config,AMQ-6514,13022441,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cschneider,cschneider,cschneider,22/Nov/16 09:08,19/Dec/16 13:06,14/Jul/23 05:44,22/Nov/16 11:12,5.14.1,,,,,,,,,5.14.2,5.15.0,,,OSGi/Karaf,,,,,0,,,,,,"User properties as a placeholder do not work in the blueprint activemq config.

<policyEntry topic="">"" optimizedDispatch=""true"" producerFlowControl=""false"" memoryLimit=""$example{perTopicMemoryLimit}"">


Java.lang.IllegalArgumentException: Could convert not to a memory size: $example
{perTopicMemoryLimit}
at org.apache.activemq.util.MemoryPropertyEditor.setAsText(MemoryPropertyEditor.java:63)[97:org.apache.activemq.activemq-osgi:5.10.0]

See http://apaste.info/nSw3h

This seems to be caused by an error in xbean-blueprint 3.x. Upgrading to 4.2 fixes the issue. I will create a PR for the change.","OSGi, blueprint",cschneider,davsclaus,edwardost,githubbot,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Dec 14 22:05:55 UTC 2016,,,,,,,Patch Available,,,,"0|i36mfb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Nov/16 09:58;githubbot;GitHub user cschneider opened a pull request:

    https://github.com/apache/activemq/pull/214

    [AMQ-6514] Upgrade xbean-blueprint to 4.2 to fix issue with placeholders

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/cschneider/activemq AMQ-6514

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/214.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #214
    
----
commit 0ba102b02d8615b79de718676b2dee2595af0a6e
Author: Christian Schneider <chris@die-schneider.net>
Date:   2016-11-22T09:49:10Z

    [AMQ-6514] Upgrade xbean-blueprint to 4.2 to fix issue with placeholders

----
;;;","22/Nov/16 10:36;gtully;it would be smashing to have an additional test in activemq-karaf-itest that validates and protects this sort of fix.;;;","22/Nov/16 10:41;cschneider;I will take care of that. ;;;","22/Nov/16 11:09;jira-bot;Commit 037f28de5a1bc3068973fe3464e2217aa378bb93 in activemq's branch refs/heads/master from [~chris@die-schneider.net]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=037f28d ]

[AMQ-6514] Upgrade xbean-blueprint to 4.2 to fix issue with placeholders
;;;","22/Nov/16 11:12;davsclaus;Thanks for the PR;;;","22/Nov/16 11:18;cschneider;Many thanks for applying the PR .. can you also backport to at least 5.14.x? 
;;;","22/Nov/16 11:23;davsclaus;That is a major upgrade of xbean from 3.x to 4.x - are you sure you have tested well on OSGi for this, eg build a local 5.14.x branch and test that - also manually in karaf;;;","22/Nov/16 11:55;cschneider;We tested this together with a customer that had the problem. We already shipped them a custom release with the changed features. ;;;","22/Nov/16 12:16;jira-bot;Commit 1fc93660c6da225b55e2fcf3dcd50a4e862617bd in activemq's branch refs/heads/activemq-5.14.x from [~chris@die-schneider.net]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=1fc9366 ]

[AMQ-6514] Upgrade xbean-blueprint to 4.2 to fix issue with placeholders
;;;","22/Nov/16 12:17;davsclaus;Okay backported to 5.14.x branch;;;","22/Nov/16 13:05;cschneider;Many thanks. Will also forward that to our TESB team. They will do some additional tests ;;;","25/Nov/16 10:08;githubbot;Github user cschneider closed the pull request at:

    https://github.com/apache/activemq/pull/214
;;;","14/Dec/16 16:41;githubbot;GitHub user cschneider opened a pull request:

    https://github.com/apache/activemq/pull/218

    [AMQ-6514] Adding test for activemq blueprint setup and xbean problem

    This pull request adds a test to create a broker using a blueprint.xml file.
    This test also covers the xbean problem of the above issue as it uses a config attribute in a bean.


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/cschneider/activemq AMQ-6514

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/218.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #218
    
----
commit bee0904b843129992b9dcbc035aa08f970728750
Author: Christian Schneider <chris@die-schneider.net>
Date:   2016-12-14T16:18:20Z

    [AMQ-6514] Adding test for activemq blueprint setup and xbean problem

----
;;;","14/Dec/16 22:05;jira-bot;Commit bee0904b843129992b9dcbc035aa08f970728750 in activemq's branch refs/heads/master from [~chris@die-schneider.net]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=bee0904 ]

[AMQ-6514] Adding test for activemq blueprint setup and xbean problem
;;;","14/Dec/16 22:05;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/218
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect specification of data dir in conf/log4j.properties ,AMQ-6510,13021860,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,scampbell,scampbell,18/Nov/16 21:44,21/Nov/16 20:42,14/Jul/23 05:44,21/Nov/16 20:42,,,,,,,,,,5.15.0,,,,,,,,,0,,,,,,"conf/log4j.properties specifies the data directory as {activemq.base}/data which doesn't work if the data directory has been moved elsewhere.

It should be specified as {activemq.data}",,jira-bot,scampbell,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Nov 21 20:42:37 UTC 2016,,,,,,,,,,,"0|i36iu7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Nov/16 20:42;jira-bot;Commit 043d1f29e4f857253b6ddf7d58e7fda90f5cca3f in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=043d1f2 ]

https://issues.apache.org/jira/browse/AMQ-6510

Use the ${activemq.data} directive for the logging output folder insead
of a synthesized value based on ${activemq.base}/data;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Auto transports can lead to high cpu usage and failed connections under high load,AMQ-6505,13020283,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,12/Nov/16 14:59,18/Nov/16 17:31,14/Jul/23 05:44,12/Nov/16 15:03,5.14.1,,,,,,,,,5.14.2,5.15.0,,,Broker,,,,,0,,,,,,"There's an issue with the auto transports that can cause failed connections and very high cpu usage when there is a high number of concurrent connections attempted at the same time.  I noticed this primarily under load testing the auto+nio+ssl transport.  After some debugging, it turns out the issue is the ByteBuffer that is used to capture the initial bytes for protocol detection. The buffer should be local per thread and not shared but by mistake it was made a class level variable so under high load and contention the buffer can be manipulated by more than one thread causing failures and high cpu load (especially under NIO)",,cshannon,jira-bot,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Nov 18 17:31:23 UTC 2016,,,,,,,,,,,"0|i3693r:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Nov/16 15:02;jira-bot;Commit 7e648d512d06508d85f6a4e111d9adbdb9e33a82 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=7e648d5 ]

https://issues.apache.org/jira/browse/AMQ-6505

Fixing the auto transport protocol detection so that the byte buffer
that captures the initial bytes for detection is not shared across
threads. This was causing failed connections under high load and high cpu
usage under NIO
;;;","12/Nov/16 15:03;jira-bot;Commit cc633e6913f36b63da6d3b2a2bda4f9cff8c6a66 in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=cc633e6 ]

https://issues.apache.org/jira/browse/AMQ-6505

Fixing the auto transport protocol detection so that the byte buffer
that captures the initial bytes for detection is not shared across
threads. This was causing failed connections under high load and high cpu
usage under NIO

(cherry picked from commit 7e648d512d06508d85f6a4e111d9adbdb9e33a82)
;;;","18/Nov/16 17:31;jira-bot;Commit 3903ea08ab699ab01d98a13524cdfc9fd01159b3 in activemq's branch refs/heads/activemq-5.14.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=3903ea0 ]

https://issues.apache.org/jira/browse/AMQ-6505

Fix compilation error on 5.14.x branch;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Scheduler store delivers message to early,AMQ-6504,13020186,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,11/Nov/16 19:47,21/Nov/16 17:38,14/Jul/23 05:44,11/Nov/16 20:12,5.14.1,,,,,,,,,5.14.2,5.15.0,,,Job Scheduler,,,,,0,,,,,,When calculating the time block to scheduler new Jobs in the store code truncates instead of rounds the time which leads jobs to get run early in many cases.  ,,jira-bot,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Nov 21 17:38:52 UTC 2016,,,,,,,,,,,"0|i368i7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Nov/16 19:49;jira-bot;Commit 980162233fd3693d1f83d3f95985ac33affa7a8f in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=9801622 ]

https://issues.apache.org/jira/browse/AMQ-6504

Round the start time value not truncate to ensure delay falls on the
correct side of the scheduling block.;;;","11/Nov/16 20:01;jira-bot;Commit 41ce86bd954708ecbba52e6550f00c95fe80a506 in activemq's branch refs/heads/activemq-5.14.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=41ce86b ]

https://issues.apache.org/jira/browse/AMQ-6504

Round the start time value not truncate to ensure delay falls on the
correct side of the scheduling block.
(cherry picked from commit 980162233fd3693d1f83d3f95985ac33affa7a8f)
;;;","21/Nov/16 17:38;jira-bot;Commit 2c828b23df991f1e86747d2bcf95329cf1696827 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=2c828b2 ]

https://issues.apache.org/jira/browse/AMQ-6504

Fix intermittent test failure;;;","21/Nov/16 17:38;jira-bot;Commit 3597fd96146ab05eeae50c23f72e360b438f0ee5 in activemq's branch refs/heads/activemq-5.14.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=3597fd9 ]

https://issues.apache.org/jira/browse/AMQ-6504

Fix intermittent test failure
(cherry picked from commit 2c828b23df991f1e86747d2bcf95329cf1696827)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Consuming problem with topics in ActiveMQ 5.14.1 with AMQP Qpid client,AMQ-6500,13019000,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,patrickv,patrickv,07/Nov/16 21:20,21/Nov/16 21:09,14/Jul/23 05:44,18/Nov/16 17:24,5.14.1,,,,,,,,,5.14.2,5.15.0,,,AMQP,,,,,0,,,,,,"There could only be 500 topic messages be consumed with the AMQP Qpid client with ActiveMQ 5.14.1.

Specific settings :
- No prefetch sizes are set in a policyEntry of the activemq.xml.
- No prefetch sizes are set in the brokerURL in the client code.

We get the following situation (subscriber info) at the moment a subscriber
connects with the Qpid client.
The Inflight value becomes -1000 what is very strange.

Pending Queue Size  | Inflight | Enqueued | Dequeued | Prefetch
0                                | -1000  | 0               | 0                | 0

We get the following situation when one topic message is published.
The Inflight value increased with 2.

Pending Queue Size  | Inflight | Enqueued | Dequeued | Prefetch
0                                | -998    | 1                | 1               | 0

We get the following situation when 500 topic messages are published.
The Inflight value is now 0 and the 500 messages are consumed.

Pending Queue Size  | Inflight | Enqueued | Dequeued | Prefetch
0                                | 0         | 500            | 500           | 0

At the moment message 501 is published increases the ""Pending Queue Size"" and the messages ""Enqueued"" as well. The ""Dequeued"" messages remains 500 and message 501 can't be consumed by the subscriber !

Pending Queue Size  | Inflight | Enqueued | Dequeued | Prefetch
1                                | 0          | 501          | 500            | 0

Do somebody know what happens ?  Do I something wrong or is it a real bug ?

Patrick",,jira-bot,patrickv,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Nov/16 10:30;patrickv;JmsClientUnitTest.java;https://issues.apache.org/jira/secure/attachment/12838337/JmsClientUnitTest.java","08/Nov/16 09:47;patrickv;activemq.xml;https://issues.apache.org/jira/secure/attachment/12837941/activemq.xml","16/Nov/16 13:18;patrickv;status when subscriber connects 5.14.0 and 5.14.1.png;https://issues.apache.org/jira/secure/attachment/12839168/status+when+subscriber+connects+5.14.0+and+5.14.1.png","08/Nov/16 09:58;patrickv;status when subscriber connects.png;https://issues.apache.org/jira/secure/attachment/12837944/status+when+subscriber+connects.png",,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Nov 21 21:09:27 UTC 2016,,,,,,,,,,,"0|i3616v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Nov/16 21:27;tabish;Please provide a reproducer for this, testing has not shown any of these issues.;;;","08/Nov/16 10:05;patrickv;Please find the activemq.xml config in attachment.

The used qpid client with his dependencies :
- qpid-jms-client-0.9.0.jar
- proton-j-0.12.2.jar
- netty-all-4.0.36.Final.jar

I get the following situation at the moment the consumer connects :
!status when subscriber connects.png!

Is that sufficient to reproduce the problem ?
;;;","08/Nov/16 14:38;tabish;Testing with latest Qpid JMS client and Broker I don't see this issue.  ;;;","08/Nov/16 15:28;patrickv;I have done the same test again with the latest qpid client that I know : 
- qpid-jms-client-0.11.1.jar
- proton-j-0.14.0.jar
- netty-all-4.0.41.Final.jar

And I experience the same problems.  
I hope that you are talking about the same version of the qpid client and his dependencies now ?;;;","08/Nov/16 15:45;tabish;Recommend you create a unit test that shows your usage that can reproduce the problem.;;;","10/Nov/16 10:34;patrickv;I have added a unit test that shows the issue : ""JmsClientUnitTest.java"".

The unit test sends 1000 topic messages and only 501 are received.;;;","16/Nov/16 13:23;patrickv;Hi Timothy,

I can tell you that the problem is started in ActiveMQ 5.14.1.  
I don't see the problem in ActiveMQ 5.13.3, 5.13.4 or 5.14.0.

Below you can see the difference between ActiveMQ 5.14.0 and ActiveMQ 5.14.1 at the moment a subscriber connects, before a message is consumed.

!status when subscriber connects 5.14.0 and 5.14.1.png!;;;","18/Nov/16 16:59;jira-bot;Commit e050519ff6ae8079c5183f6e6372ddb3d03e91c7 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e050519 ]

https://issues.apache.org/jira/browse/AMQ-6500

Better handle prefetch extension and pull consumers over Topics to avoid
the remote not receiving all the messages available based on the credit
it has issued. ;;;","18/Nov/16 17:19;jira-bot;Commit 65d789b4e1d59a196aa7f8f7e42aa99769352d8e in activemq's branch refs/heads/activemq-5.14.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=65d789b ]

https://issues.apache.org/jira/browse/AMQ-6500

Better handle prefetch extension and pull consumers over Topics to avoid
the remote not receiving all the messages available based on the credit
it has issued.
(cherry picked from commit e050519ff6ae8079c5183f6e6372ddb3d03e91c7)
;;;","21/Nov/16 21:09;patrickv;Dear Timothy,

Thank you very much for solving the problem. 
I appreciate it a lot !

Patrick

;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
update value of org.apache.activemq.SERIALIZABLE_PACKAGES in documentation,AMQ-6499,13018716,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,smoothreggae,smoothreggae,07/Nov/16 01:30,07/Nov/16 15:31,14/Jul/23 05:44,07/Nov/16 15:31,5.13.0,,,,,,,,,,,,,Documentation,,,,,0,,,,,,"The list of packages in the default value of the property `org.apache.activemq.SERIALIZABLE_PACKAGES` was updated to include {{javax.security}} for AMQ-6029 (see [this commit|https://github.com/apache/activemq/commit/d7a3b9406b8496c3f1508bebf3c7ff5367374b90]), but the documentation at http://activemq.apache.org/objectmessage.html was not updated.

Please update the documentation to reflect the set of packages required by the code so that someone overriding this property does not miss any of them.",,smoothreggae,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Nov 07 15:31:41 UTC 2016,,,,,,,,,,,"0|i35zfj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Nov/16 15:31;tabish;Page updated;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQP: Broker side receiver needs to take inbound backlog into account when deciding to grant credit,AMQ-6498,13018139,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,04/Nov/16 15:17,04/Nov/16 15:59,14/Jul/23 05:44,04/Nov/16 15:59,5.14.0,5.14.1,,,,,,,,5.14.2,5.15.0,,,AMQP,,,,,0,,,,,,When dealing with limits and activating producer flow control the AMQP receiver does not account for the backlog of message that may exist due to there being more credit on the link when flow control is being done by the actual destination due to memory limits.  A backlog can accumulate and on the first response after the flow control is stopped the broker grants more credit to the client before processing the current backlog lead to ever building backlog.,,jira-bot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Nov 04 15:56:07 UTC 2016,,,,,,,,,,,"0|i35vvj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Nov/16 15:55;jira-bot;Commit 7cf7fba7aab05ea9c41bf009325c63a6798f6cc8 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=7cf7fba ]

https://issues.apache.org/jira/browse/AMQ-6498

Include the already received backlog when deciding to grant additional
credit to avoid excessive backlogs of messages during producer flow
control.;;;","04/Nov/16 15:56;jira-bot;Commit fd3853c24d26c8fee34e17fd682f1fe89dc00fdc in activemq's branch refs/heads/activemq-5.14.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=fd3853c ]

https://issues.apache.org/jira/browse/AMQ-6498

Include the already received backlog when deciding to grant additional
credit to avoid excessive backlogs of messages during producer flow
control.
(cherry picked from commit 7cf7fba7aab05ea9c41bf009325c63a6798f6cc8)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Boolean state flags in Failover transport should be volatile,AMQ-6495,13017321,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,02/Nov/16 16:49,02/Nov/16 17:59,14/Jul/23 05:44,02/Nov/16 17:59,5.14.1,,,,,,,,,5.14.2,5.15.0,,,JMS client,,,,,0,,,,,,The Failover transport reconnect task looks at the started / disposed / shuttingDown flags to check if it should terminate but that value is read outside any locks and is not volatile leading to missing the not-started state.,,jira-bot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Nov 02 16:58:46 UTC 2016,,,,,,,,,,,"0|i35qtr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Nov/16 16:58;jira-bot;Commit 629ee285685b5f63315c8fcd6138a37bd17b958d in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=629ee28 ]

https://issues.apache.org/jira/browse/AMQ-6495

State variables shared across threads in the transport need to be marked
volatile. ;;;","02/Nov/16 16:58;jira-bot;Commit ba1eab20d2b3cc2c3bddcc34cf54ae6ea7cfbcc0 in activemq's branch refs/heads/activemq-5.14.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=ba1eab2 ]

https://issues.apache.org/jira/browse/AMQ-6495

State variables shared across threads in the transport need to be marked
volatile.
(cherry picked from commit 629ee285685b5f63315c8fcd6138a37bd17b958d)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Exceptions and timeouts during shutdown of connectors,AMQ-6494,13017249,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,hadrian,hadrian,hadrian,02/Nov/16 14:24,03/Oct/19 10:08,14/Jul/23 05:44,24/Jun/17 12:51,5.14.0,,,,,,,,,5.15.0,,,,Broker,,,,,0,,,,,,During shutdown there are a number of BrokerStoppedException(s) thrown unnecessarily and unnecessary timeouts.,,cshannon,githubbot,gtully,hadrian,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Oct 03 10:08:35 UTC 2019,,,,,,,,,,,"0|i35qdr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Nov/16 14:59;githubbot;GitHub user hzbarcea opened a pull request:

    https://github.com/apache/activemq/pull/208

    AMQ-6494 Process SHUTDOWN_INFO and REMOVE_INFO to avoid timeouts

    More details regarding this bug in jira.
    
    https://issues.apache.org/jira/browse/AMQ-6494

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/hzbarcea/activemq amq-6494

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/208.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #208
    
----
commit 197495c7fc954f187740fe59ffbc2c5a374d9b96
Author: Hadrian Zbarcea <hadrian@apache.org>
Date:   2016-11-02T14:56:37Z

    AMQ-6494 Process SHUTDOWN_INFO and REMOVE_INFO to avoid timeouts

----
;;;","02/Nov/16 16:04;hadrian;This issue is visible in tests such as DestinationBridgeAccessorsTest.

During shutdown, in BrokerService around line 2208 where JmsConnectors are stopped a few SHUTDOWN_INFO and REMOVE_INFO messages are sent. However, the transport listener in TransportConnection, checks for !brokerService.isStopping() (around line 192) and ignores and skips processing of those messages during shutdown. This causes the exceptions and 15 sec timeouts.

The PR above solves the problem. I didn't commit it just yet giving it a bit of time for review, if anybody could think of any edge case that could cause problems.

;;;","04/Nov/16 13:39;jira-bot;Commit dce2b61f870245a0c12b634d12cd0fa3a8a60daa in activemq's branch refs/heads/master from [~hadrian]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=dce2b61 ]

AMQ-6494 Return ExceptionResponse during broker service shutdown
;;;","04/Nov/16 13:39;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/208
;;;","04/Nov/16 13:46;hadrian;Thanks [~tabish121] for the feedback.;;;","08/Nov/16 13:20;jira-bot;Commit dca066287ebd7ffe465544f647e213e1c4d5744a in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=dca0662 ]

https://issues.apache.org/jira/browse/AMQ-6494

Ignoring test that currently fails. The parent test is already ignored
in the build so I'm adding this one to be ignored as well.  It
currently fails on exceptions that are expected and needs to be fixed.
;;;","08/Nov/16 13:21;cshannon;I ignored a test failure that seemed to be caused by this patch.  The test itself is the issue and needs to be fixed as it is failing on errors that are now expected so I went ahead and ignored the test for now.  It's just failing for level db as the parent test that runs on KahaDB has already been ignored.;;;","22/Feb/17 14:08;gtully;There are a few tests in the activemq.all set that fail (65+ runs) with this change. 
I peeked at one, org.apache.activemq.bugs.AMQ2149Test and the failure results in a brokerstopped jms exception bubbling up to the client with the changes. Without the changes the IOException from a disconnect is being handled under the covers by failover: which does a resend.

The fix is to have the app handle that JMS exception which is really a behaviour change. I wonder if there is some middle ground here that will solve the original problem but not change the behaviour and keep those existing failover tests working?
Fixing the test is accepting this new behaviour which may come as a surprise to existing users.

https://builds.apache.org/job/ActiveMQ-Java8-All-UnitTests/org.apache.activemq$activemq-unit-tests/633/testReport/;;;","24/Feb/17 19:16;cshannon;I agree with [~gtully] that this should probably be revisited so I'm reopening the issue.;;;","04/Apr/17 13:25;gtully;reverted https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=0f7561e85ab18912ce65120dde465aef5acda12a and added a fix to the vm transport such that it won't ignore exceptions. I think that is the root cause of the original test delay on stop via the shutdown hook.

https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=729766e4925ec05ec05410887df146dd27adbbf4
;;;","06/Apr/17 09:24;jira-bot;Commit 63b2e5c4eabfbdc54ff6ebb155092f7033e7bf22 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=63b2e5c ]

[AMQ-6494] fix check order of close state for  onException handler
;;;","24/Jun/17 12:51;cshannon;Resolving based off of Gary's commit;;;","03/Oct/19 10:08;jira-bot;Commit 4af6f4018656e01989136042a8ad4ec1ab64c137 in activemq's branch refs/heads/master from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=4af6f40 ]

AMQ-6494 is related, fix intermittent failure of RedeliveryPolicyTest related to vm transport server being shutdown while in use via async onException handler
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
"WebSocket tries to call default servlet, when default servlet not configured",AMQ-6491,13016886,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,cshannon,neilgreatorex,neilgreatorex,01/Nov/16 12:57,22/Nov/16 12:29,14/Jul/23 05:44,22/Nov/16 12:29,5.14.1,,,,,,,,,5.14.2,5.15.0,,,Transport,,,,,0,websocket,,,,,"With WebSocket connectors defined e.g.
{noformat}
<transportConnectors>
    <transportConnector name=""ws""
                        uri=""ws://0.0.0.0:61614?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600""/>
    <transportConnector name=""wss""
                        uri=""wss://0.0.0.0:61615?transport.wantClientAuth=true&amp;maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600""/>
</transportConnectors>
{noformat}

A request to https://127.0.0.1:61615/ gives HTTP 500 Internal Server Error with the following in the log:
{noformat}
 WARN | org.eclipse.jetty.servlet.ServletHandler | /
java.lang.NullPointerException
        at org.apache.activemq.transport.ws.jetty9.WSServlet.doGet(WSServlet.java:88)[activemq-http-5.14.1.jar:5.14.1]
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)[tomcat-servlet-api-8.0.24.jar:]
        at org.eclipse.jetty.websocket.servlet.WebSocketServlet.service(WebSocketServlet.java:167)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)[tomcat-servlet-api-8.0.24.jar:]
        at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:808)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:587)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1129)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.server.Server.handle(Server.java:499)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at java.lang.Thread.run(Thread.java:745)[:1.8.0_66-internal]
{noformat}

This occurs because no default servlet is defined. Either ActiveMQ should not attempt to forward GET requests to the default servlet, or the embedded Jetty instances should be configured with a proper default servlet.",,cshannon,jira-bot,neilgreatorex,Sp4rKy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6469,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Nov 22 12:29:01 UTC 2016,,,,,,,,,,,"0|i35o5j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Nov/16 14:51;cshannon;Why are you trying to make a GET request to the WebSocket servlet?

I'm not really sure what the best behavior is here. On one hand we could either return nothing for a response to a GET request (or register the default servlet and forward to it).  Or we could just have the WebSocket servlet not implement GET at all and throw an error because there's not really a good reason to make a GET request to the WebSocket servlet that I can think of.

My preference would probably be to just return an empty response if a GET request was made and no error.;;;","15/Nov/16 15:57;neilgreatorex;What I am attempting to do is use client certificates in order to authenticate connections from the web browser (Chrome in this case) to ActiveMQ. I've found that in order to get Chrome to pop up the box to allow the user to choose their client certificate, I need to first make a standard HTTPS request to the WSS endpoint. Once the user has chosen to present their certificate to this connection, the WebSocket connection will also present their certificate enabling the use of it for authentication. It could be argued that this is a ""feature"" in Chrome, but I equally think that passing the request on to the non-existent default servlet is not ideal.

My first preference would be to make it possible to define (somehow) a default servlet for the WebSocket servlet to pass the request onto. Failing that, I would prefer receiving an empty response over not implementing GET at all.;;;","17/Nov/16 14:06;Sp4rKy;Hi, just a comment as we also get this issue.

We have a lot of websocket (wss) connections from various customers , mobile or desktop, over mobile network or not etc etc ... We have ~ 7k connections , with a lot of connections dropping and initializing all the time (basically this is connected to a website , so every time a user switches to a new page => new connection). 

in the 20 minutes, I find not less than 350 NPE with the exact same stacktrace. If I check the ""qtpXXXXX"" id at the beginning of log line and grep for it, I usually find other lines like :

bq. User Agent: [unset] requested WebSocket version [-1], Jetty supports version: [13] | org.eclipse.jetty.websocket.server.WebSocketServerFactory

and the corresponding IP are likly to be behind some enterprise proxy that (I guess) doesn't support websocket. 
Also, most of the qtpXXX id don't have any log with the source IP. It would be good to have the source IP when an exception is raised.
;;;","17/Nov/16 14:22;cshannon;I think the simplest thing to do is just return an empty response (no exception).  I don't really see a benefit of redirecting to a default servlet in this case.;;;","22/Nov/16 12:28;jira-bot;Commit f40532a23d70639a027fcf87893de8683edf430f in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=f40532a ]

https://issues.apache.org/jira/browse/AMQ-6491

Changing the WebSocket servlet to return a succesful empty response
instead of an error when a GET request is made
;;;","22/Nov/16 12:29;jira-bot;Commit a50979e308ab97123cfcf058e1acabb2c2c6b9d9 in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=a50979e ]

https://issues.apache.org/jira/browse/AMQ-6491

Changing the WebSocket servlet to return a succesful empty response
instead of an error when a GET request is made

(cherry picked from commit f40532a23d70639a027fcf87893de8683edf430f)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQP: Native transformer makes message persistent when no header is present,AMQ-6486,13015615,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,26/Oct/16 22:58,26/Oct/16 23:05,14/Jul/23 05:44,26/Oct/16 23:05,5.14.1,,,,,,,,,5.14.2,5.15.0,,,AMQP,,,,,0,,,,,,When a message is received that does not have an AMQP Header Section the native transformer ends up setting the message persistent value to true instead of respecting the specification defined behavior. ,,jira-bot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Oct 26 23:05:17 UTC 2016,,,,,,,,,,,"0|i35gbj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Oct/16 23:04;jira-bot;Commit a2d92ef786ad6fd542afb82543784794321fd13d in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=a2d92ef ]

https://issues.apache.org/jira/browse/AMQ-6486

Ensure that message with no header is marked as non-persistent.;;;","26/Oct/16 23:05;jira-bot;Commit a2c7433e7dec82ae350e1e0cdb7838cce37cb422 in activemq's branch refs/heads/activemq-5.14.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=a2c7433 ]

https://issues.apache.org/jira/browse/AMQ-6486

Ensure that message with no header is marked as non-persistent.
(cherry picked from commit a2d92ef786ad6fd542afb82543784794321fd13d)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQP: Add ability to inspect deliveries and delivery updates to the test client.,AMQ-6485,13015537,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,26/Oct/16 19:08,26/Oct/16 19:32,14/Jul/23 05:44,26/Oct/16 19:32,5.14.1,,,,,,,,,5.14.2,5.15.0,,,AMQP,,,,,0,,,,,,Add additional event points to the validator to allow inspection of deliveries on a receiver and the delivery updates for a sender.,,jira-bot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Oct 26 19:30:35 UTC 2016,,,,,,,,,,,"0|i35fu7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Oct/16 19:29;jira-bot;Commit cec3245a9fd50ad1850bdf57d3935d42886cefe2 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=cec3245 ]

https://issues.apache.org/jira/browse/AMQ-6485

Allow for inspection of Deliveries on Receivers and Delivery updates on
Senders. ;;;","26/Oct/16 19:30;jira-bot;Commit d005e1a856f0b4f73596994e390c96cd0979dcc4 in activemq's branch refs/heads/activemq-5.14.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=d005e1a ]

https://issues.apache.org/jira/browse/AMQ-6485

Allow for inspection of Deliveries on Receivers and Delivery updates on
Senders.
(cherry picked from commit cec3245a9fd50ad1850bdf57d3935d42886cefe2)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQP test client validator classes not thread safe,AMQ-6484,13015526,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,26/Oct/16 18:48,27/Oct/16 13:05,14/Jul/23 05:44,26/Oct/16 18:49,5.14.1,,,,,,,,,5.14.2,5.15.0,,,AMQP,,,,,0,,,,,,The logic in the validators needs to be made thread safe,,jira-bot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ARTEMIS-827,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Oct 26 18:49:22 UTC 2016,,,,,,,,,,,"0|i35frr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Oct/16 18:48;jira-bot;Commit b34336cc0adeb8908580631f979715852458a69b in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b34336c ]

https://issues.apache.org/jira/browse/AMQ-6484

make the validators thread safe;;;","26/Oct/16 18:49;jira-bot;Commit 80f877a73454413af5ff57adf648ae64ce73f406 in activemq's branch refs/heads/activemq-5.14.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=80f877a ]

https://issues.apache.org/jira/browse/AMQ-6484

make the validators thread safe
(cherry picked from commit b34336cc0adeb8908580631f979715852458a69b)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KahaDBStore getMessageSize mistakenly uses int cast on value that should be long,AMQ-6483,13015496,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,26/Oct/16 17:25,26/Oct/16 17:32,14/Jul/23 05:44,26/Oct/16 17:32,,,,,,,,,,5.14.2,5.15.0,,,KahaDB,,,,,0,,,,,,Casting and argument typing on the execution in KahaDBStore getMessageSize results in casting a long down to int only to cast back up to long again.,,jira-bot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Oct 26 17:32:17 UTC 2016,,,,,,,,,,,"0|i35fl3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Oct/16 17:27;jira-bot;Commit 1a91decf9f6dd7305dd91ae6769df78cc4758c82 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=1a91dec ]

https://issues.apache.org/jira/browse/AMQ-6483

Fix conversion from long to int and back to long again. ;;;","26/Oct/16 17:32;jira-bot;Commit 941b861448d4bdf225b2f6945e50fca56c701a70 in activemq's branch refs/heads/activemq-5.14.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=941b861 ]

https://issues.apache.org/jira/browse/AMQ-6483

Fix conversion from long to int and back to long again.
(cherry picked from commit 1a91decf9f6dd7305dd91ae6769df78cc4758c82)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Possible thread leak ?,AMQ-6482,13015315,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,Sp4rKy,Sp4rKy,26/Oct/16 06:01,04/Nov/16 18:10,14/Jul/23 05:44,04/Nov/16 17:00,5.14.1,,,,,,,,,5.14.2,5.15.0,,,Broker,,,,,0,threading,,,,,"We have an activemq broker running for ~ 24 hours, handling ~ 100k topics and up to 8k connections (for ~ 24k consumers).

Looking at my graph, I see that I get a big increase of threads count happended (in 4 steps, ~ 500 more threads each time) as shown here : https://snapshot.raintank.io/dashboard/snapshot/ExUb4pgNYnmBo92JgbZrvJ6fiBm3PNrI

However, even if the traffic dropped in the night, the thread count never decreased and is still ~ 2500.

I checked a thread dump and it looks like (full dump attached) :

```
# grep  Thread.State thread_dump   |awk '{ print $2 }' |sort|uniq -c
     26 RUNNABLE
     70 TIMED_WAITING
   2446 WAITING
```

Mhh, so many WAITING threads, let's check why :

```
# grep   'parking to' thread_dump    |cut -d '>' -f 2 |sort |uniq -c
      1  (a java.util.concurrent.CountDownLatch$Sync)
   1308  (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
   1159  (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
     41  (a java.util.concurrent.SynchronousQueue$TransferStack)
```

I'm not a big java expert but seems a bit unexpected behavior to me.

For various reason (big number of topics etc ) we use custom GC config, here it is :

```
ACTIVEMQ_OPTS_MEMORY=""-Xms128M -Xmx10G -Xloggc:/home/log/activemq/gc.log -XX:+PrintGC -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+UseG1GC -XX:InitiatingHeapOccupancyPercent=75 -XX:NewRatio=4""
```

Maxence",,cshannon,jira-bot,Sp4rKy,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6474,,,,,,,,,,,,,,"26/Oct/16 06:05;Sp4rKy;thread_dump;https://issues.apache.org/jira/secure/attachment/12835269/thread_dump",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Nov 04 18:10:30 UTC 2016,,,,,,,,,,,"0|i35egv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Oct/16 06:05;Sp4rKy;Full thread dump;;;","26/Oct/16 18:05;Sp4rKy;This keeps increasing , ~ 400 thread every 4/5 hours. Right now, on the same instance :

   1873  (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
   1613  (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
;;;","02/Nov/16 19:13;cshannon;Are new websocket connections being created/destroyed often or do the connections come online and pretty much stay there?  I'm trying to get a better idea if this is something related to a websocket connection not being shutdown cleanly or maybe a deadlock with long running connections, etc.;;;","02/Nov/16 22:04;Sp4rKy;New websocket connections are definitively created quiet often. They are created every time a user log in to the website (or throug mobile app) or switch to a new page while being logged in. 

Something (maybe) interesting is that we had a bug in our code which was creating too many topics (~ 100k in a few seconds) by sending messages to lot of these new topics. 95% of them were never read. We fixed it and reduced to ~ 8000 topics (no GC of old destination right now), but the thread leak is still present and seems to grow at same speed than before (from ~ 300 right after start to ~ 1000 in 3 hours), so looks like this is not related to topics/messages. So the only remaining possibility is client side.  Moreover, looking at the graph, it seems that the number of thread increases by ""step"". For ex between 7.50 and 8.10 pm (utc+2) it only increase of 100threads,  then in 15 minutes I have a 500 thread bump, then almost stable for 10 minutes, then +400 threads in 5 minutes etc ... It seems that the number of threads increases faster when I have a lot of ""outgoing messages"", and slowly when I don't have much, maybe a hint.

Though this is a production service, we can accept small downtime (like for a restart, if config update is needed) and I'm available as Sp4rKy on freenode if you want some live debug (baiscally between 9 and 19 utc+2).;;;","03/Nov/16 12:42;cshannon;From what I can tell, the issue seems to be that the Websocket connections are hanging waiting for a response from the client when doing the inactivity check. There are tons of the below blocked threads:

{noformat}
""ActiveMQ InactivityMonitor Worker"" #40006 daemon prio=5 os_prio=0 tid=0x00007fc60cfd4800 nid=0x4c92 waiting on condition [0x00007fc4148c7000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x000000055a702d70> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
	at org.eclipse.jetty.util.SharedBlockingCallback$Blocker.block(SharedBlockingCallback.java:219)
	at org.eclipse.jetty.websocket.common.BlockingWriteCallback$WriteBlocker.block(BlockingWriteCallback.java:83)
	at org.eclipse.jetty.websocket.common.WebSocketRemoteEndpoint.blockingWrite(WebSocketRemoteEndpoint.java:107)
	at org.eclipse.jetty.websocket.common.WebSocketRemoteEndpoint.sendString(WebSocketRemoteEndpoint.java:387)
	at org.apache.activemq.transport.ws.jetty9.StompSocket.sendToStomp(StompSocket.java:47)
	at org.apache.activemq.transport.stomp.ProtocolConverter.onActiveMQCommand(ProtocolConverter.java:888)
	at org.apache.activemq.transport.ws.AbstractStompSocket.oneway(AbstractStompSocket.java:63)
	at org.apache.activemq.transport.AbstractInactivityMonitor.doOnewaySend(AbstractInactivityMonitor.java:334)
	at org.apache.activemq.transport.AbstractInactivityMonitor.access$800(AbstractInactivityMonitor.java:41)
	at org.apache.activemq.transport.AbstractInactivityMonitor$4.run(AbstractInactivityMonitor.java:200)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
{noformat}

There seems to me to be 2 issues here:

1) Jetty seems to have an issue where it gets stuck and never returns or times out the blocking send.  I found this issue here: https://github.com/eclipse/jetty.project/issues/272
2) The inactivity monitor is supposed to be doing a one way send anyways but the send is actually a blocking send so it can get stuck waiting for a response. 

I think under the old Jetty 8 websocket stuff we were doing async sends but under Jetty 9 that got switched to sync and it waits for the bytes to transfer.  I think, at least for the inactivity monitor and maybe all calls, we should be doing async sends and not blocking so that the lock can be released.  Or at least have some way to timeout.

[~tabish121], what do you think about something like this? https://github.com/cshannon/activemq/commit/915cc828b928268e18bb50b99247e78e77aa0d51;;;","03/Nov/16 20:26;tabish;Seems reasonable that these calls shouldn't block but we need to at least try and throw an error if the send can't complete to break the connection, so maybe something like:

{code}
    @Override
    public void sendToStomp(StompFrame command) throws IOException {
        try {
            session.getRemote().sendStringByFuture(command.format()).get(30, TimeUnit.SECONDS);
        } catch (Exception e) {
            throw IOExceptionSupport.create(e);
        }
    }
{code};;;","04/Nov/16 16:56;jira-bot;Commit 450cabe4ead1fb78eec2e94013d2868a5bf864da in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=450cabe ]

https://issues.apache.org/jira/browse/AMQ-6482

Adding a timeout for websocket sends to prevent the transport thread
from getting stuck and blocking.  The default is 30 seconds.
;;;","04/Nov/16 16:59;jira-bot;Commit fdf1537eb8c3bf08668d452f2c816cb28acd8f00 in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=fdf1537 ]

https://issues.apache.org/jira/browse/AMQ-6482

Adding a timeout for websocket sends to prevent the transport thread
from getting stuck and blocking.  The default is 30 seconds.

(cherry picked from commit 450cabe4ead1fb78eec2e94013d2868a5bf864da)
;;;","04/Nov/16 18:10;jira-bot;Commit 937b2acd4628fdbfe8165db5f97225dddab515e7 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=937b2ac ]

https://issues.apache.org/jira/browse/AMQ-6482

Adding websocket send timeout to AMQP over websockets
;;;","04/Nov/16 18:10;jira-bot;Commit e9489a45b382b292ed975331a0dd5233d250ac3f in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e9489a4 ]

https://issues.apache.org/jira/browse/AMQ-6482

Adding websocket send timeout to AMQP over websockets

(cherry picked from commit 937b2acd4628fdbfe8165db5f97225dddab515e7)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ReduceMemoryFootprint should apply to non-persistent messages and subscriptions,AMQ-6477,13014728,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,24/Oct/16 13:57,01/Nov/16 14:32,14/Jul/23 05:44,25/Oct/16 14:21,5.14.1,,,,,,,,,5.14.2,5.15.0,,,Broker,,,,,0,,,,,,"There is a flag called reduceMemoryFootprint which will clear out the unmarshalled state of a message after it is added to a queue/topic because that state isn't counted towards the size and can lead to OOM errors.

However, even setting this flag, I am still seeing some brokers run out of memory.  After analyzing the heap dumps I have found 2 reasons for this:

1) Non-persistent messages do not have their unmarshalled state cleared.  This was done because when a message is persisted it is guaranteed to have the marshalled state.  However we can still clear the memory for non-persistent messages as long as we check to make sure the marshalled state exists first, which it will for transports like TCP but won't exist for the VM transport.

2) When a message is added to a subscription the properties are needed to check which subscription messages can be dispatched to.  This causes the memory to be unmarshalled again.  

In the topic case, we should probably defer the clearing of the state until after the message is added to a subscription because messages are immediately dispatched to topic subs so we don't unnecessarily have to convert the data twice.  In the queue case it probably makes sense to clear memory on add to the queue and on add to the subscription.",,cshannon,gtully,jira-bot,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Nov 01 14:32:10 UTC 2016,,,,,,,,,,,"0|i35auf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Oct/16 14:06;cshannon;[~gtully],

Mind taking a quick look at this patch I created?  I haven't written tests yet but this should give you an idea the direction I am going with this and I wanted to see if you thought I was overlooking anything.

https://github.com/cshannon/activemq/commit/85efac7c2f5d95a8ae75f8daa4a9478186d25d31;;;","24/Oct/16 15:00;gtully;[~cshannon] looks good 


one thought: 
I guess it also means that on each dispatch, so when prefetched messages are redelivered, there will be an unmarshall/clear.
it makes me think that maybe doing something to ensure that properties in both states are part of the size. That would tackle directly the OOM.

However the non persistent case is valid and I guess the selector case is less common.

One important aspect is ensuring no sharing of a message when the destructive change to clear the state is made. With composite sends or virtual topics (mostly there is copy) but some care there may be needed. Also consumer that use a composite dest to subscribe to multiple dests. Recall the test that had us add/remove some sync in message in the past.

I think it will be fine, just be sure there is some existing sync point that will protect you in the case of sharing.
;;;","24/Oct/16 15:20;cshannon;That's a good point about not sharing the message while doing the clearing which I think could be an issue with topic subscriptions since the message will potentially be passed to multiple subs.

When doing the clear in the subscriptions maybe we need to do something like add a synchronize around the clear block:

{noformat}
if (isReduceMemoryFootprint()) {
  synchronized(node) {
    if (node.getMessage().isMarshalled()) {
      node.getMessage().clearUnMarshalledState();
    }
}
{noformat}

Ultimately, I agree about having the size count both states.  That would protect form OOM errors for when the message contains both of the states while also trying to save memory when it can.  The hard part is trying to estimate the size of the properties map.;;;","24/Oct/16 15:54;cshannon;May not need the sync after all since the dispatch happens in the same thread sequentially (the dispatch policy just iterates over each subscription 1 at a time)

Also, really it needs to clear out only after it finishes dispatching to all subscriptions that match.  Otherwise it will clear the memory and then the next call to matches() for the next consume there will be another unmarshal.

So I think I might need to think about this a little bit more to see if/where it makes sense to do this in the subscription.  At the very least we can make the change for non-persistent messages to start.;;;","25/Oct/16 13:34;cshannon;[~gtully],  I've decided to be slightly more conservative for this patch.  I don't feel super comfortable putting the memory clearing into the add method of the subscription like I did in my original patch because we would get into a state where we have to unmarshall/marshal the properties over and over again for each sub if there is a selector.  Plus there could be race condition issues at that point since the message has now been handed off to the different subscriptions.  So the new plan is to:

1) Still handle clearing the memory for non-persistent messages by checking if content and marshalledProperties are not null (or if both marshalledProperties and properties are null)
2) For topics, move the clear memory method call from doMessageSend to the dispatch method and put it after the subscriptionRecoveryPolicy check (which needs to use the properties and triggers and unmarshal) but before the dispatch itself.

This will at least fix non-persistent messages and it will also clear memory for topic subscriptions as long as there are no selectors (which is a less common case).  For the selector case where the dispatch policy triggers an unmarshall I would need to think about it a bit more or maybe we'd just need to do something like you mentioned earlier where we actually count the size of both objects in memory.;;;","25/Oct/16 14:19;jira-bot;Commit 7c3bb401007b4047c540287b53b435b20d3161c0 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=7c3bb40 ]

https://issues.apache.org/jira/browse/AMQ-6477

ReduceMemoryFootprint now applies to non-persistent messages if they
have been marshalled and topics now clear memory after the recovery
policy check
;;;","25/Oct/16 14:20;jira-bot;Commit e0116d0458769881396d9f848d63496421fd59d5 in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e0116d0 ]

https://issues.apache.org/jira/browse/AMQ-6477

ReduceMemoryFootprint now applies to non-persistent messages if they
have been marshalled and topics now clear memory after the recovery
policy check

(cherry picked from commit 7c3bb401007b4047c540287b53b435b20d3161c0)
;;;","27/Oct/16 19:53;jira-bot;Commit 0a80165a99bff33bfaeeb8fe1dc7b5a8e6f50830 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=0a80165 ]

https://issues.apache.org/jira/browse/AMQ-6477

simplifying isMarshalled method
;;;","27/Oct/16 19:54;jira-bot;Commit 4cbe692bccb5bb246a2099f8504e103ac90079be in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=4cbe692 ]

https://issues.apache.org/jira/browse/AMQ-6477

simplifying isMarshalled method

(cherry picked from commit 0a80165a99bff33bfaeeb8fe1dc7b5a8e6f50830)
;;;","01/Nov/16 14:31;jira-bot;Commit 5c80eda321e7edb5f34ffd62c71523310d26b2ca in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=5c80eda ]

https://issues.apache.org/jira/browse/AMQ-6477

Fixing potential concurrent modification exception
;;;","01/Nov/16 14:32;jira-bot;Commit fc3206864d895a469af39ec2f3f6808ad936b908 in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=fc32068 ]

https://issues.apache.org/jira/browse/AMQ-6477

Fixing potential concurrent modification exception

(cherry picked from commit 5c80eda321e7edb5f34ffd62c71523310d26b2ca)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enabling durable sync can deadlock a network bridge on start up,AMQ-6476,13014692,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,24/Oct/16 11:50,05/Dec/16 13:49,14/Jul/23 05:44,05/Dec/16 13:49,5.14.1,,,,,,,,,5.14.2,5.15.0,,,Broker,,,,,0,,,,,,"There is an issue with the processing of the new BrokerSubscriptionInfo command that is used for sync durables over a network bridge that can cause the brokers to get stuck starting up.  Depending on the timing of the BrokerSubscriptionInfo being sent, each broker can get stuck waiting to finish creating static destinations and not be able to finish because it's waiting for the other broker to respond.  The root of the problem is the new countDown latch that was added when processing the new BrokerSubscriptionInfo object.  The fix for this to prevent a deadlock is to move that processing into a new thread so the transport doesn't get blocked and can continue to process other commands.",,cshannon,jira-bot,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Oct 24 11:52:55 UTC 2016,,,,,,,,,,,"0|i35amf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Oct/16 11:52;jira-bot;Commit b9cb02ae54a27e6c2f3ff934a1f01b88b7af2f11 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b9cb02a ]

https://issues.apache.org/jira/browse/AMQ-6476

Moving BrokerSubscriptionInfo processing into a new thread to prevent a
deadlock of the network bridge on startup
;;;","24/Oct/16 11:52;jira-bot;Commit 2ea6b00eef2efc779783314c4e0c220c774997b5 in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=2ea6b00 ]

https://issues.apache.org/jira/browse/AMQ-6476

Moving BrokerSubscriptionInfo processing into a new thread to prevent a
deadlock of the network bridge on startup

(cherry picked from commit b9cb02ae54a27e6c2f3ff934a1f01b88b7af2f11)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory leak,AMQ-6474,13014262,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,skermani,skermani,21/Oct/16 14:59,02/Nov/16 16:57,14/Jul/23 05:44,02/Nov/16 16:46,5.12.0,5.13.0,5.14.1,,,,,,,5.14.2,5.15.0,,,,,,,,0,,,,,,"Hello,

when undeploying a Spring (4) webapp (JDK 1.8.101), we got a memory leak error message on a thread.


AVERTISSEMENT: The web application [venus] appears to have started a thread named [ActiveMQ InactivityMonitor Worker] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(Unknown Source)
 java.util.concurrent.SynchronousQueue$TransferStack.transfer(Unknown Source)
 java.util.concurrent.SynchronousQueue.poll(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
oct. 20, 2016 2:50:43 PM org.apache.catalina.loader.WebappClassLoaderBase clearReferencesThreads

when using an older version of active MQ 5.11.4 we don't get the error.

We notice the shutwon of factory thread pool is not made anymore ( 

inside class AbstractInactivityMonitor , method stopMonitorThreads 
this line has been removed: ThreadPoolUtils.shutdown(ASYNC_TASKS);

Could you fix it.

",Spring,jira-bot,skermani,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6482,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Important,,,,,,,,,9223372036854775807,,,Wed Nov 02 16:46:18 UTC 2016,,,,,,,,,,,"0|i357yv:",9223372036854775807,Regression,,,,,,,,,,,,,,,,,,,,"02/Nov/16 16:44;jira-bot;Commit d1f42bd01e90abe3fb171834efd46a3594ba2600 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=d1f42bd ]

https://issues.apache.org/jira/browse/AMQ-6474

ASYNC_TASKS executor not being shut down on stop with no other users in
service.  ;;;","02/Nov/16 16:46;jira-bot;Commit 3642ab1c1096fc84e2370c03a5507878ca658281 in activemq's branch refs/heads/activemq-5.14.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=3642ab1 ]

https://issues.apache.org/jira/browse/AMQ-6474

ASYNC_TASKS executor not being shut down on stop with no other users in
service.
(cherry picked from commit d1f42bd01e90abe3fb171834efd46a3594ba2600)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Runtime Configuration Plugin - groupClass on authorizationMap is lost on modification,AMQ-6471,13013824,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,20/Oct/16 11:27,20/Oct/16 11:33,14/Jul/23 05:44,20/Oct/16 11:33,5.14.0,,,,,,,,,5.15.0,,,,Plugin,,,,,0,,,,,,"in karaf - the activemq authorizationMap groupClass is specified to match the karaf login modules.
the runtime configuration plugin supports updates to that map but does not set the groupClass in error. The result is that all of entries are invalid after a modification.
A restart is required to rectify.",karaf osgi,gtully,jira-bot,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Oct 20 11:33:03 UTC 2016,,,,,,,,,,,"0|i3559j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Oct/16 11:33;jira-bot;Commit 52ab6ba09b0f58ab95ea24c501fff12488decc4e in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=52ab6ba ]

AMQ-6471 - map groupClass attribute on mod to authorization map. fix and test
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix JSTL tags in the WebConsole,AMQ-6468,13012847,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,17/Oct/16 12:39,14/Dec/16 18:23,14/Jul/23 05:44,17/Oct/16 12:41,5.14.1,,,,,,,,,5.13.5,5.14.2,5.15.0,,,,,,,0,,,,,,Some more places in the WebConsole do not use the correct JSTL tags to print out content and should be fixed.,,cshannon,jira-bot,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Dec 14 18:11:06 UTC 2016,,,,,,,,,,,"0|i34z9b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Oct/16 12:40;jira-bot;Commit c1157fe1f007ee2344a7f0badefa0794c98817cd in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=c1157fe ]

https://issues.apache.org/jira/browse/AMQ-6468

Fixing JSTL tags in JSP pages
;;;","17/Oct/16 12:41;jira-bot;Commit 77b827f46e5198f7db1b5885bda71cb2af84e04d in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=77b827f ]

https://issues.apache.org/jira/browse/AMQ-6468

Fixing JSTL tags in JSP pages

(cherry picked from commit c1157fe1f007ee2344a7f0badefa0794c98817cd)
;;;","14/Dec/16 18:11;jira-bot;Commit e16ed242b2319523608f6ff7e572668b36e6c813 in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e16ed24 ]

https://issues.apache.org/jira/browse/AMQ-6468

Fixing JSTL tags in JSP pages

(cherry picked from commit c1157fe1f007ee2344a7f0badefa0794c98817cd)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQP: When creating a dynamic node the returned source / target is incomplete,AMQ-6467,13012440,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,14/Oct/16 18:54,14/Oct/16 19:03,14/Jul/23 05:44,14/Oct/16 19:03,5.14.1,,,,,,,,,5.14.2,5.15.0,,,AMQP,,,,,0,,,,,,"When asked to create a sender / receiver that has a dynamic value in the source target we create a temporary destination in response, but we do not provide a source / target value that correctly describes the node we created.  ",,jira-bot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Oct 14 19:01:34 UTC 2016,,,,,,,,,,,"0|i34wtz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Oct/16 19:01;jira-bot;Commit 10fc397ab72bcd3c111b517af687ccf4c9372ced in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=10fc397 ]

https://issues.apache.org/jira/browse/AMQ-6467

Fill in the source / target created for the requested dynamic node with
the actual attributes we are going to support.;;;","14/Oct/16 19:01;jira-bot;Commit 335a490eac84680bab50350a2bb5894c0248f18c in activemq's branch refs/heads/activemq-5.14.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=335a490 ]

https://issues.apache.org/jira/browse/AMQ-6467

Fill in the source / target created for the requested dynamic node with
the actual attributes we are going to support.
(cherry picked from commit 10fc397ab72bcd3c111b517af687ccf4c9372ced)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory usage incorrectly increases when messages are forwarded over a bridge for a durable subscription,AMQ-6465,13012399,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,14/Oct/16 16:13,15/Aug/18 15:33,14/Jul/23 05:44,14/Oct/16 16:17,5.14.1,,,,,,,,,5.14.2,5.15.0,,,Broker,Network of Brokers,,,,0,,,,,,"There is an issue with duplicate message suppression for durable subscriptions over a network bridge that is causing the memory usage counter to grow and never shrink.  The issue is that when the message is checked against the network bridge filter, a reference to the message is incremented (which increases the memory usage counter) but then that reference is never decremented so the memory usage doesn't decrease as it should.  The actual memory is freed but the counter continues to grow until it reaches the configured maximum at which point the broker can't do any work because it thinks the memory is full.",,cshannon,jira-bot,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-7035,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Aug 15 15:33:10 UTC 2018,,,,,,,,,,,"0|i34wl3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Oct/16 16:16;jira-bot;Commit 406a34294befca4ba2de4b728c86f64b96a94945 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=406a342 ]

https://issues.apache.org/jira/browse/AMQ-6465

Properly decrementing the message reference count in
DemandForwardingBridgeSupport when messages supression is checked for
durable subscriptions
;;;","14/Oct/16 16:16;jira-bot;Commit b49df4848e81b58484644ab32f424b9c6bcb7243 in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b49df48 ]

https://issues.apache.org/jira/browse/AMQ-6465

Properly decrementing the message reference count in
DemandForwardingBridgeSupport when messages supression is checked for
durable subscriptions

(cherry picked from commit 406a34294befca4ba2de4b728c86f64b96a94945)
;;;","03/May/17 11:22;jira-bot;Commit c4a1346875dc40c1469e5b9625efe73eccb4b081 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=c4a1346 ]

[AMQ-6465] fix up test interplay - clean on start and consume what is produced
;;;","15/Aug/18 15:22;jira-bot;Commit 50d27e7e545d30bc0d35f8dd8baf15b33522c33a in activemq's branch refs/heads/master from gtully
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=50d27e7 ]

AMQ-7035 - use NonCachedMessageEvaluationContext in place of MessageEvaluationContext to avoid unnecessary reference count management and subsequent leaks. Rework AMQ-6465 with additional JMX related tests
;;;","15/Aug/18 15:33;jira-bot;Commit 4a99103e706653f395e44d4b43a545b80ef664d9 in activemq's branch refs/heads/activemq-5.15.x from gtully
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=4a99103 ]

AMQ-7035 - use NonCachedMessageEvaluationContext in place of MessageEvaluationContext to avoid unnecessary reference count management and subsequent leaks. Rework AMQ-6465 with additional JMX related tests

(cherry picked from commit 50d27e7e545d30bc0d35f8dd8baf15b33522c33a)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQP: Incorrect handling of Rejected Outcome on Delivery,AMQ-6464,13012179,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,13/Oct/16 22:46,14/Oct/16 13:38,14/Jul/23 05:44,14/Oct/16 13:38,5.14.1,,,,,,,,,5.14.2,5.15.0,,,AMQP,,,,,0,,,,,,"The Rejected outcome is meant to be a terminal outcome but we instead redeliver the message with an updated delivery counter instead of sending the message of to the DLQ to respect the expectation of the outcome that the message moves to the archived state.  

Outcomes are documented here:
http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-messaging-v1.0-os.html#section-distribution-nodes",,jira-bot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Oct 14 13:36:09 UTC 2016,,,,,,,,,,,"0|i34v87:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Oct/16 13:35;jira-bot;Commit a9f9d4a4d2ede752afa74b22394b80822052543d in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=a9f9d4a ]

https://issues.apache.org/jira/browse/AMQ-6464

Correct handling of rejected outcome to archive the message in the DLQ;;;","14/Oct/16 13:36;jira-bot;Commit d126afc8fe39cd4d0117790ce08bb543476bf601 in activemq's branch refs/heads/activemq-5.14.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=d126afc ]

https://issues.apache.org/jira/browse/AMQ-6464

Correct handling of rejected outcome to archive the message in the DLQ
(cherry picked from commit a9f9d4a4d2ede752afa74b22394b80822052543d)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE on scheduler send via blocked waiting for space task,AMQ-6463,13011304,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,gtully,gtully,11/Oct/16 09:55,11/Oct/16 11:03,14/Jul/23 05:44,11/Oct/16 11:03,5.14.0,,,,,,,,,5.15.0,,,,Job Scheduler,,,,,0,,,,,,"The response cannot be processed b/c there is no connection in the context provide by the scheduler plugin.
The reply is lost so there is no message loss in this case, just a worrying stack trace.

{code}
ERROR | Error in thread 'ActiveMQ BrokerService[ILP-B] Task-18534'
java.lang.NullPointerException
at org.apache.activemq.broker.region.Queue$4.run(Queue.java:688)[activemq-broker-5.14.0.jar:5.14.0]
at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1551)[activemq-broker-5.14.0.jar:5.14.0]
at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:133)[activemq-client-5.14.0.jar:5.14.0]
at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:48)[activemq-client-5.14.0.jar:5.14.0]
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)[:1.7.0_51]
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)[:1.7.0_51]
at java.lang.Thread.run(Thread.java:744)[:1.7.0_51]{code}",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Oct 11 11:03:05 UTC 2016,,,,,,,,,,,"0|i34puf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Oct/16 10:58;jira-bot;Commit 74a5381b9a79d2ee708345743bb128d06bd9d80b in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=74a5381 ]

AMQ-6463 - provide connection to scheduler context in case of deferred send or error
;;;","11/Oct/16 11:03;gtully;fix and test. Added connection that will warn on error responses to the send. this avoids adding null checks in the broker.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"link to manning publications is wrong, apache looses  money...",AMQ-6462,13011135,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,thst,thst,10/Oct/16 18:30,15/Feb/22 07:10,14/Jul/23 05:44,15/Feb/22 07:10,,,,,,,,,,,,,,Documentation,,,,,1,,,,,,"The link to the manning publications affiliate website is wrong. It points to the login page.

The bitly redirect on the page http://bit.ly/2je6cQ 
points to http://manning.postaffiliatepro.com/affiliates/index.php?id=1063_140

Which presents the login page of the manning affiliates program.",http://activemq.apache.org/books.html,thst,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Oct/16 20:56;thst;Unbenannt.png;https://issues.apache.org/jira/secure/attachment/12832538/Unbenannt.png",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Oct 10 20:56:30 UTC 2016,,,,,,,,,,,"0|i34ot3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/Oct/16 20:56;thst;Screenshot of Manning affiliate program login page;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMX broker view attribute tempPercentUsage does not decrease ,AMQ-6459,13010458,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,07/Oct/16 13:29,07/Oct/16 13:32,14/Jul/23 05:44,07/Oct/16 13:32,5.14.0,,,,,,,,,5.15.0,,,,Broker,JMX,,,,0,,,,,,"Using  this JMX value for monitoring, an alarm can be set to some threshold.
However when remedial action is taken to reduce usage, the value stays high.",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Oct 07 13:32:08 UTC 2016,,,,,,,,,,,"0|i34kmv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Oct/16 13:32;jira-bot;Commit 8493f6b4d79146509e554e2b640f486d79f40bbb in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=8493f6b ]

AMQ-6459 - store based % usage needs to poll the store for the current value on each access
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Preallocation strategy of zeros can leak file descriptors causing crash,AMQ-6451,13009280,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,gtully,cott@internetstaff.com,cott@internetstaff.com,03/Oct/16 17:09,08/Nov/16 14:09,14/Jul/23 05:44,08/Nov/16 14:09,5.14.0,,,,,,,,,5.15.0,,,,KahaDB,,,,,0,,,,,,"If the preallocationStrategy is set to 'zeros', ActiveMQ can intermittently become unable to allocate direct buffer memory with the default JVM settings. The exception isn't handled, and ends up both creating an empty journal file and, more importantly, leaking a file descriptor.

ActiveMQ eventually runs out of file descriptors and crashes.

In addition to handling this condition, perhaps the default ACTIVEMQ_OPTS_MEMORY settings should configure enough direct memory to allow some multiple of log files to be created near simultaneously, or at least this possibility documented in the KahaDB settings.

Relevant logs:

{noformat}
2016-10-03 12:47:24,154 | WARN  | Async error occurred: java.lang.OutOfMemoryError: Direct buffer memory | org.apache.activemq.broker.TransportConnection.Service | ActiveMQ Transport: ssl:///x.x.x.x:60805
2016-10-03 12:47:24,818 | WARN  | Async error occurred: java.lang.OutOfMemoryError: Direct buffer memory | org.apache.activemq.broker.TransportConnection.Service | ActiveMQ Transport: ssl:///x.x.x.x:60811
2016-10-03 12:47:25,477 | WARN  | Async error occurred: java.lang.OutOfMemoryError: Direct buffer memory | org.apache.activemq.broker.TransportConnection.Service | ActiveMQ Transport: ssl:///x.x.x.x:49830
2016-10-03 12:47:26,146 | WARN  | Store COMMIT FAILED:  | org.apache.activemq.transaction.LocalTransaction | ActiveMQ Transport: ssl:///x.x.x.x:65534
java.lang.OutOfMemoryError: Direct buffer memory
        at java.nio.Bits.reserveMemory(Bits.java:693)[:1.8.0_101]
        at java.nio.DirectByteBuffer.<init>(DirectByteBuffer.java:123)[:1.8.0_101]
        at java.nio.ByteBuffer.allocateDirect(ByteBuffer.java:311)[:1.8.0_101]
        at sun.nio.ch.Util.getTemporaryDirectBuffer(Util.java:174)[:1.8.0_101]
        at sun.nio.ch.IOUtil.write(IOUtil.java:58)[:1.8.0_101]
        at sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:211)[:1.8.0_101]
        at org.apache.activemq.store.kahadb.disk.journal.Journal.doPreallocationZeros(Journal.java:366)[activemq-kahadb-store-5.14.0.jar:5.14.0]
        at org.apache.activemq.store.kahadb.disk.journal.Journal.preallocateEntireJournalDataFile(Journal.java:333)[activemq-kahadb-store-5.14.0.jar:5.14.0]
        at org.apache.activemq.store.kahadb.disk.journal.Journal.newDataFile(Journal.java:631)[activemq-kahadb-store-5.14.0.jar:5.14.0]
        at org.apache.activemq.store.kahadb.disk.journal.Journal.rotateWriteFile(Journal.java:595)[activemq-kahadb-store-5.14.0.jar:5.14.0]
        at org.apache.activemq.store.kahadb.disk.journal.Journal.getCurrentDataFile(Journal.java:984)[activemq-kahadb-store-5.14.0.jar:5.14.0]
        at org.apache.activemq.store.kahadb.disk.journal.DataFileAppender.enqueue(DataFileAppender.java:189)[activemq-kahadb-store-5.14.0.jar:5.14.0]
        at org.apache.activemq.store.kahadb.disk.journal.DataFileAppender.storeItem(DataFileAppender.java:128)[activemq-kahadb-store-5.14.0.jar:5.14.0]
        at org.apache.activemq.store.kahadb.disk.journal.Journal.write(Journal.java:890)[activemq-kahadb-store-5.14.0.jar:5.14.0]
        at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:1108)[activemq-kahadb-store-5.14.0.jar:5.14.0]
        at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:1090)[activemq-kahadb-store-5.14.0.jar:5.14.0]
        at org.apache.activemq.store.kahadb.KahaDBTransactionStore.commit(KahaDBTransactionStore.java:301)[activemq-kahadb-store-5.14.0.jar:5.14.0]
        at org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:70)[activemq-broker-5.14.0.jar:5.14.0]
        at org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:252)[activemq-broker-5.14.0.jar:5.14.0]
        at org.apache.activemq.broker.BrokerFilter.commitTransaction(BrokerFilter.java:113)[activemq-broker-5.14.0.jar:5.14.0]
        at org.apache.activemq.broker.BrokerFilter.commitTransaction(BrokerFilter.java:113)[activemq-broker-5.14.0.jar:5.14.0]
        at org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:118)[activemq-broker-5.14.0.jar:5.14.0]
        at org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:535)[activemq-broker-5.14.0.jar:5.14.0]
        at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100)[activemq-client-5.14.0.jar:5.14.0]
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:333)[activemq-broker-5.14.0.jar:5.14.0]
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:197)[activemq-broker-5.14.0.jar:5.14.0]
        at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)[activemq-client-5.14.0.jar:5.14.0]
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:125)[activemq-client-5.14.0.jar:5.14.0]
        at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:300)[activemq-client-5.14.0.jar:5.14.0]
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)[activemq-client-5.14.0.jar:5.14.0]
        at org.apache.activemq.transport.tcp.SslTransport.doConsume(SslTransport.java:108)[activemq-client-5.14.0.jar:5.14.0]
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:233)[activemq-client-5.14.0.jar:5.14.0]
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:215)[activemq-client-5.14.0.jar:5.14.0]
        at java.lang.Thread.run(Thread.java:745)[:1.8.0_101]
{noformat}

Empty journal files:

{noformat}
-rw-r--r-- 1 activemq activemq         0 Oct  3 12:47 db-51425.log
-rw-r--r-- 1 activemq activemq         0 Oct  3 12:47 db-51426.log
-rw-r--r-- 1 activemq activemq         0 Oct  3 12:47 db-51427.log
-rw-r--r-- 1 activemq activemq         0 Oct  3 12:47 db-51428.log
-rw-r--r-- 1 activemq activemq         0 Oct  3 12:47 db-51429.log
{noformat}

lsof output:

{noformat}
java    29263 activemq  452u      REG             202,48         0       160 /activemq/kahadb/db-51425.log
java    29263 activemq  455u      REG             202,48         0       153 /activemq/kahadb/db-51426.log
java    29263 activemq  456u      REG             202,48         0       133 /activemq/kahadb/db-51427.log
java    29263 activemq  462u      REG             202,48         0       157 /activemq/kahadb/db-51428.log
{noformat}
",,cott@internetstaff.com,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Nov 08 14:09:13 UTC 2016,,,,,,,,,,,"0|i34ddb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Nov/16 14:06;jira-bot;Commit 3b7613d9300443898b608a52cb4e763821fdc163 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=3b7613d ]

AMQ-6451 - catch errors on preallocation. allocate direct buffer on start and reuse to ensure resource availability at runtime
;;;","08/Nov/16 14:09;gtully;moved that buffer allocation to the start method so that resource constraints are triggered at broker start. A single instance is now reused.
The code path that leads to the leak is now guarded with a try catch such that any error during preallocation is just logged. 
Fatal errors will bubble up again on journal write if they are important.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Disable doclint for JDK 8 builds but not for JDK 7,AMQ-6449,13009212,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,cshannon,cshannon,cshannon,03/Oct/16 11:36,03/Oct/16 11:39,14/Jul/23 05:44,03/Oct/16 11:39,5.14.1,,,,,,,,,5.14.2,5.15.0,,,Broker,,,,,0,,,,,,"I disabled doclint in 5.14.1 so that JDK 8 could be used to build as well as JDK 7.  However, turns out this flag needs to not be active for JDK 7 because it doesn't exist. Also, there were a couple spots the javadoc plugin is defined that I missed.",,cshannon,jira-bot,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Oct 03 11:38:50 UTC 2016,,,,,,,,,,,"0|i34cy7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Oct/16 11:37;cshannon;Part 1 of this fix is here: https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=02082b1aec97140dd62a418d68f2cc029082444e
;;;","03/Oct/16 11:38;jira-bot;Commit 72650a0b8b00f281ce6b2e300da2cb4015d25e81 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=72650a0 ]

https://issues.apache.org/jira/browse/AMQ-6449

Disabling doclint now only activates for JDK 8
;;;","03/Oct/16 11:38;jira-bot;Commit 991e97ad9436300b3266e6e0672bf9df65a3adc9 in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=991e97a ]

https://issues.apache.org/jira/browse/AMQ-6449

Disabling doclint now only activates for JDK 8

(cherry picked from commit 72650a0b8b00f281ce6b2e300da2cb4015d25e81)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
New org.slf4j.Logger instance created for every new connection but never cleared when transport listener is configured for trace=true,AMQ-6446,13008544,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,gtully,gtully,29/Sep/16 14:15,30/Sep/16 15:57,14/Jul/23 05:44,30/Sep/16 15:57,5.14.0,,,,,,,,,5.15.0,,,,Transport,,,,,0,,,,,,"Configuring the broker for transport trace:|{code}<transportConnectorname=""openwire""uri=""tcp://0.0.0.0:61616?trace=true""/>
</transportConnectors>{code}
makes the broker create a new SLF4J Logger instance for every single connection.
This Logger never get cleared not even when the connection is closed which can lead to OOM on load.

trace=true is a great diagnostic tool but cannot be left enabled on a broker long term because of this.",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Sep 30 13:05:56 UTC 2016,,,,,,,,,,,"0|i348uf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"30/Sep/16 13:05;jira-bot;Commit 5385fd1bb36abe5a123db039b63d30cefd594ba4 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=5385fd1 ]

https://issues.apache.org/jira/browse/AMQ-6446 - use shared logger and pepend statements with connection counter. Old behaviour or per connection logger can be obtained with trace=true&jmxPort=0
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RandomAccessFile is not closed properly,AMQ-6445,13008456,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,cshannon,kal0ian,kal0ian,29/Sep/16 07:07,29/Sep/16 10:18,14/Jul/23 05:44,29/Sep/16 10:18,5.13.3,,,,,,,,,5.15.0,,,,,,,,,0,,,,,,"In DiskBenchmark class at 303 line and in Journal class at 290 line there is RandomAccessFile created. After that this methods are called
XXXXXXX.setLength(size);
XXXXXXX.getChannel().force(true);
XXXXXXX.getChannel().transferTo(0, size, raf.getChannel());. 
If one of them throw an Exception then the stream will not be closed.",,jira-bot,kal0ian,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Sep 29 10:18:34 UTC 2016,,,,,,,,,,,"0|i348av:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/Sep/16 10:18;jira-bot;Commit 351faf26992f1406bf203b0cefd1238615baf88c in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=351faf2 ]

https://issues.apache.org/jira/browse/AMQ-6445

Fixing RandomAccessFile usage so that the file will be properly closed
even if there is an exception
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQP: Messages in a Transaction which aren't settled should be remain acquired for the receiver after rollback,AMQ-6444,13008311,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,28/Sep/16 17:39,06/Oct/16 19:04,14/Jul/23 05:44,28/Sep/16 19:45,5.14.0,,,,,,,,,5.14.2,5.15.0,,,AMQP,,,,,0,,,,,,"When a message is enlisted in a transaction by having an accepted disposition but is not settled, and the transaction is rolled back by the client, the broker should treat that message as still being acquired by the receiver and not redeliver it again and the receiver should be able to consume, modify, reject or release the delivery on its own afterwards.",,jira-bot,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Oct 06 19:04:12 UTC 2016,,,,,,,,,,,"0|i347en:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Sep/16 18:57;jira-bot;Commit 0dd806f43f3bee9372ee9b9481089d417c265dfe in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=0dd806f ]

https://issues.apache.org/jira/browse/AMQ-6444

Ensure that unsettled TX messages remain acquired and not redelivered to
the receiver.   Add several tests that demonstrate that a received
message can be released, rejected, accepted or modified after a TX
rollback if it was not settled.  ;;;","28/Sep/16 19:26;jira-bot;Commit aa32a0f7925c4981aca9a4369b5e95f3336cde94 in activemq's branch refs/heads/activemq-5.14.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=aa32a0f ]

https://issues.apache.org/jira/browse/AMQ-6444

Ensure that unsettled TX messages remain acquired and not redelivered to
the receiver.   Add several tests that demonstrate that a received
message can be released, rejected, accepted or modified after a TX
rollback if it was not settled.
(cherry picked from commit 0dd806f43f3bee9372ee9b9481089d417c265dfe)
;;;","06/Oct/16 18:20;jira-bot;Commit baef8f8ec20ed3057895f6ec1e02ca6ea75a33a1 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=baef8f8 ]

https://issues.apache.org/jira/browse/AMQ-6444

Remove some unneeded instance of checks and used cached values where
possible.;;;","06/Oct/16 18:21;jira-bot;Commit e2b1675a29fbe95f8084ebd078fe673bfcb5f629 in activemq's branch refs/heads/activemq-5.14.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e2b1675 ]

https://issues.apache.org/jira/browse/AMQ-6444

Remove some unneeded instance of checks and used cached values where
possible.
(cherry picked from commit baef8f8ec20ed3057895f6ec1e02ca6ea75a33a1)
;;;","06/Oct/16 19:03;jira-bot;Commit a2995b7614a6e15af7958f78bd412ccab00589bb in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=a2995b7 ]

https://issues.apache.org/jira/browse/AMQ-6444

Fix failing tests;;;","06/Oct/16 19:04;jira-bot;Commit 70432bf31c01d7d7b743d055f6c4c5b473ae27e8 in activemq's branch refs/heads/activemq-5.14.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=70432bf ]

https://issues.apache.org/jira/browse/AMQ-6444

Fix failing tests
(cherry picked from commit a2995b7614a6e15af7958f78bd412ccab00589bb)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect File System Size Reported with Amazon Elastic File System (EFS),AMQ-6441,13007166,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,visibilityltd,visibilityltd,23/Sep/16 14:26,27/Jan/18 20:32,14/Jul/23 05:44,08/Dec/16 11:18,5.11.1,,,,,,,,,5.15.0,,,,,,,,,1,,,,,,"I've set up Active MQ in production with a shared file system master/slave configuration (KahaDB). I've set everything up and mounted the EFS on both EC2 instances. 

When I check the disk free stats I get 8 exabytes for the shared file system: 

{code}
$ df -h 
eu-west-1a.***.efs.eu-west-1.amazonaws.com:/  8.0E     0  8.0E   0% /mnt/efs 
{code}

Unfortunately, ActiveMQ cannot interpret this number (8 exabytes). This may be due to integer truncation.

Here is a snippet of the log:

{code}
Store limit is 102400 mb (current store usage is 0 mb). The data directory: /mnt/efs/kahadb only has -8796093022208 mb of usable space - resetting to maximum available disk space: -8796093022207 mb 
Store limit is -8796093022207 mb, whilst the max journal file size for the store is: 32 mb, the store will not accept any data when used. 
{code}",,cshannon,davsclaus,githubbot,gtully,jira-bot,khokhani,tabish,tbain98,visibilityltd,william.crowell,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,CASSANDRA-13067,ARTEMIS-872,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Dec 08 11:18:21 UTC 2016,,,,,,,,,,,"0|i340bz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Sep/16 16:08;cshannon;I'm not really sure why it's doing that because all of the usage and limit calculations use a long.  Since none of the developers have anything near that size of disk space to test on you will probably have to do some more debugging on your end to see what the problem is.  The code where the limits are checked is here: https://github.com/apache/activemq/blob/master/activemq-broker/src/main/java/org/apache/activemq/broker/BrokerService.java#L2044

You could try setting up a remote debugger and some break points to see where the value is going bad.  The other option is you can add some logging statements to the code and rebuild it, etc. and deploy the rebuilt version.;;;","23/Sep/16 17:24;william.crowell;I have a theory that a long is not large enough to represent 8,796,093,022,208 megabytes, and we are running into an overflow issue.

Given that a long primitive type in Java 7 has a range of -2 to the 63rd power and a maximum value of 2 to the 63rd power -1.

This means that a long can have values -9,223,372,036,854,775,808 to 9,223,372,036,854,775,807.

If I convert 8796093022208 megabytes into bytes then that value is 9,223,372,036,854,780,000 which is 4,193 outside the maximum value of a long.

If you happen to be running Java 8, then a unsigned 64-bit long can have a maximum value of 18,446,744,073,709,500,000 which would be large enough.

This means that the call to Java's java.io.File.getTotalSpace() would overflow since it returns a long: https://docs.oracle.com/javase/7/docs/api/java/io/File.html#getTotalSpace()

In Java 8, this probably works fine.  Could I propose changing the variable on line 2050 of org.apache.activemq.broker.BrokerService to a double instead of a long?

...
double totalSpace = dir.getTotalSpace();
...                                                              
                                                                 
From the link: https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html

""The double data type is a double-precision 64-bit IEEE 754 floating point."";;;","23/Sep/16 17:57;cshannon;I think you are right, I was thinking that the value would still fit into a long but looks like it is just a bit too large as you pointed out to fit in a long value.

But I don't see how changing totalSpace to a double would do anything.  java.io.File.getTotalSpace() would still overflow and return a negative long value which would then just become a negative double.;;;","23/Sep/16 18:02;william.crowell;Unfortunately, I think you are right.  The user would need to move to JDK 1.8 so an unsigned long is returned.;;;","23/Sep/16 18:05;cshannon;Yep, nothing can really be done here because it's a JDK api method that returns a long.  The only real solution is to use something like the BigInteger class but that can't be done in this case since we don't control the method call.  So you probably will need to just configure a smaller partition for your broker.;;;","23/Sep/16 18:08;cshannon;Closing as not a problem as we use the Java File api and can't control if the value overflows a long.;;;","27/Sep/16 12:39;tbain98;An OpenJDK bug was opened about this issue: https://bugs.openjdk.java.net/browse/JDK-8162520.  Presumably that means that a fix would be part of HotSpot and other non-open JDKs as well.  But since it would require an API change, I suspect we wouldn't see it until Java 9, if they can convince the Java 9 people to include it there as well.;;;","27/Sep/16 12:48;tbain98;I don't agree that there's nothing we can do, and I think this bug should be reopened.

One option would be to explicitly work around this particular use case, by assuming that if the long we get back from getTotalSpace() is negative, that means the filesystem is plenty big enough to hold the broker's data files.  Obviously you can construct cases where the overflow will result in a small positive number and we'll still give the wrong answer, but the hack would still cover anyone with an 8EB filesystem (including the reporter of this bug).  16 EB or any multiple thereof, however, would be a problem.

Another option would be to provide a config flag that allows you to skip the filesystem free space check, eliminating the problem entirely for all filesystem sizes when the flag is used.  We should do this at a minimum, whether or not we try to do hacks based on negative return values from getTotalSpace().;;;","27/Sep/16 13:01;william.crowell;I agree with Tim.  I would like to see this fixed with the workaround Tim proposed.;;;","27/Sep/16 13:03;tabish;Contributions are always welcomed;;;","27/Sep/16 13:04;tbain98;Let's start with reopening the bug.  No one will contribute code for a bug with a Resolution of ""Not A Problem."";;;","27/Sep/16 13:08;cshannon;Reopening the issue so that a workaround can be done for too large of a filesystem size.;;;","27/Sep/16 19:18;william.crowell;I can work on this, but I do not have an 8 exabyte volume to test this on.  Does AWS provision volumes like this for no cost?  Or a trial?;;;","27/Sep/16 19:26;cshannon;This should be tested in a unit test regardless so my recommendation is to not worry about that and see if you could use something like mockito to mock/spy on the File api interface and then you can configure it to return whatever value you want (ie 8 EB) to test.  Off the top of my head maybe something like mocking out what the getPersistenceAdapter() method returns in BrokerService could work so that when the usage checks get the directory to check the size it will return your Directory/File mock etc.;;;","27/Sep/16 20:33;william.crowell;I am able to reproduce it like this:

import java.io.File;
import org.junit.Before;
import org.junit.Test;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

public class FileApiTest {
	private File mockFile;
	
    @Before
    public void setUp() {
        mockFile = mock(File.class);
    }

    @Test
    public void test1() {
        when(mockFile.getTotalSpace()).thenReturn(9223372036854775807L + 4193L);
        long totalSpace = mockFile.getTotalSpace();
        //totalSpace will be equal to -9223372036854771616
    }
};;;","28/Sep/16 10:16;cshannon;Right that's basically what I had in mind with mocking the File API, but you'll want to wire that in for a test with the BrokerService to test that a real Broker instance still starts up when the value is negative (if the new flag is set to disable the disk usage check, etc).  If you take a look at the unit test project you'll see a ton of examples of tests and how to configure a BrokerService to start a real broker in JUnit.

I'm not sure how familiar you are with the code base so if you can't figure out how to set up a test or don't have time then I should be able to do it when I get a chance.;;;","28/Sep/16 12:42;william.crowell;I think you might be referring to activemq-unit-tests' org.apache.activemq.broker.BrokerServiceTest.java.  I am also checking out BrokerTest.java and BrokerTestSupport.java in that same package.;;;","28/Sep/16 14:39;william.crowell;I am concerned that if I introduce this flag that skips the file system check, then users with smaller file systems will set this flag to true and not understand the repercussions.  This may cause problems with the store outgrowing the size of the file system and cause instability.;;;","28/Sep/16 19:05;khokhani;I think it should be whenever JDK call returns negative value for max file system size then BrokerService method set it to Long.MAX_VALUE will avoid any other side effects. 

If file system is small then it should do normal operation of resetting max size to actual file size.;;;","29/Sep/16 12:29;githubbot;GitHub user wcrowell opened a pull request:

    https://github.com/apache/activemq/pull/202

    Fixes AMQ-6441 where a negative value can be returned with large AWS EFS files systems when calling java.io.File.getTotalSpace()

    Fixes AMQ-6441
    
    A test, testLargeFileSystem(), was added to org.apache.activemq.broker.BrokerServiceTest for checking if the total space on a volume was too large to fit into a primitive long.  If this happens, then totalSpace is set to java.lang.Long.MAX_VALUE.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/wcrowell/activemq master

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/202.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #202
    
----
commit c94b1a2eec78a0fd15763b64dcdff455bfc66e52
Author: William Crowell <william.crowell@roguewave.com>
Date:   2016-09-29T12:22:46Z

    Fixes AMQ-6441 where a negative value can be returned with large AWS EFS files systems when calling java.io.File.getTotalSpace()

commit 0c98ecfa2b903ce1301802617b8c5152048364f4
Author: William Crowell <william.crowell@roguewave.com>
Date:   2016-09-29T12:24:41Z

    Fixes AMQ-6441 where a negative value can be returned with large AWS EFS files systems when calling java.io.File.getTotalSpace()

----
;;;","29/Sep/16 12:48;tbain98;This approach addresses the immediate problem, with an 8 EB volume.  It will do nothing for a 16EB volume, a 32 EB volume, or any other multiple of 16 EB, because those volumes will all show as small positively-sized volumes.  (If 8EB is 4193 bytes over half the range of a long, double that - 16 EB - will be 4193 * 2 = 8386 bytes over the full range of a long, and will mod down to the small but positive remainder: 8386 bytes.  And multiplying that number by anything will result in a volume that is 8386 bytes times the multiplier, which will probably be smaller than the KahaDB store.)  So the proposed (and implemented) algorithm fixes today's problem, but does nothing for the next problem.

The only safe way to allow people to not be bit by this in the future is to implement the flag.  It would be defaulted to false, and enabled only when they deem it necessary based on their own knowledge of their storage situation.  People don't go changing values randomly, so no one's going to make the change unless they believe they need it, and if they know about the setting to misconfigure it, they'll know what to set back when it causes them problems.

Based on the above, I recommend rejecting the pull request that was just made, and reworking the change to include a flag.  Otherwise, we're going to get to do this all over again whenever Amazon increases the default EFS volume size to 16EB.;;;","29/Sep/16 12:49;tbain98;I recommend rejecting this pull request, and reworking the change to include a flag.  See the details of my reasoning in my reply to the previous comment.;;;","29/Sep/16 13:06;william.crowell;So if totalSpace is negative do we just fail starting up the broker?  If we introduce the flag and set it to true and totalSpace is negative, then would that not have other consequences (e.g. looking strange in the JMX and web consoles and other issues)?;;;","29/Sep/16 13:59;cshannon;I would probably do a combination of the two things.

First, as Tim said, I would implement a flag (defaulting to false) that can be turned on that would disable the usage check altogether.  Also note that there is a task that gets scheduled to periodically check the usage and this flag should also make sure this task is not scheduled.

Second, as a sanity check, I see no harm in also adding a check for a negative value of totalSpace.  If the value is negative then I would think the safest thing to do is to throw an exception with a good error message that explains why the error most likely happened (probably an overflow) and how to fix it (enable the new flag to true to disable the check).  You could also just allow the broker to start up with the negative value and skip the check but I would think it's better to error to make sure the user is aware of the issue and can explicitly decide if they want to disable the check or use a smaller partition.;;;","29/Nov/16 18:06;davsclaus;Is anyone working on implementing the last suggestions from Christopher about that flag to turn on | off.;;;","29/Nov/16 18:13;cshannon;I don't think anything has been done since the original PR.  I haven't gotten around to it yet but if no one else does then it's something I can work on for a future 5.14.x or 5.15.0 release.;;;","29/Nov/16 18:15;william.crowell;I would love to take this on, but I am swamped.;;;","07/Dec/16 14:50;gtully;I had a peek at this and think maybe this can be recast as allowing the user to specify the quantity of disk that is available to the broker; i.e: allow the dependency on the file.getTotalSpace and getUsableSpace to be overridden.

The typical use case is to limit the brokers disk usage through flow control or blocking. 
In the case where the broker does not have exclusive access to a disk partition, or in the case of the partition giving bad information, it is useful to be able to specify the expected hard limit.

I am thinking that an StoreUsage.setTotalSpace(long v) option will suffice. Any value > 0 will be taken as the total available space and the filesystem will not be queried further.
Any limit will then be relative to the actual store usage (index and journal data files) as a portion of the totalSpace value. Irrespective of what the actual file system reports.
This feature then allows a user to partition a shared disk between brokers.
In the EFS case, it allows the user to specify the value of disk space that is to be used by the broker.
;;;","07/Dec/16 18:10;jira-bot;Commit f225120f61c9acfbe64b5f7590fbd72bb668525f in activemq's branch refs/heads/master from [~william.crowell]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=f225120 ]

Fixes AMQ-6441 where a negative value can be returned with large AWS EFS files systems when calling java.io.File.getTotalSpace()
;;;","07/Dec/16 18:10;jira-bot;Commit 41bec0d65814448d0495462a6eafe7cbd54b36e0 in activemq's branch refs/heads/master from [~william.crowell]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=41bec0d ]

Fixes AMQ-6441 where a negative value can be returned with large AWS EFS files systems when calling java.io.File.getTotalSpace()
;;;","07/Dec/16 18:10;jira-bot;Commit 8a28c065554750ea5063333e2ff479a84d689a51 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=8a28c06 ]

[AMQ-6441] add option to specify the hard limits on a usage such that spurious values from the file system can be overridden. this closes #202 thanks William Crowell for the patch with test
;;;","07/Dec/16 18:13;william.crowell;No problem.  Thank you!;;;","07/Dec/16 18:16;gtully;with the above changes a negative value from the filesystem will error out. To workaround the problem a user provides a hard limit via the  usage where there limit is specified via the total attribute. This value is then taken as the available space, negating the need to ask the file system.
Maybe a negative value should default, but I think if there are limits set then it is best to error out if they won't be respected.
feedback most welcome. 
[~william.crowell] I reused your mock and LargeFile - thanks!;;;","07/Dec/16 18:33;jira-bot;Commit 4b3f07e90ea497164aaf9cc00591e8e0f868f83b in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=4b3f07e ]

https://issues.apache.org/jira/browse/AMQ-6441
https://issues.apache.org/jira/browse/AMQ-6526

Adding missing license headers
;;;","07/Dec/16 18:35;cshannon;Looks good to me, 5.14.2 is under vote already but this can go into 5.14.3 (if there is one) and 5.15.0;;;","08/Dec/16 03:15;tbain98;The one downside to Gary's implementation is that if you use this option, we're no longer going to detect a disk that's nearly full and doesn't have enough space for the broker's data store.  As long as this is only used in cases where you've got exadata-scale storage where that's not a realistic concern, that's probably just an academic concern, but we need to make very clear in the wiki documentation that you should use Gary's setting only if you have storage on that scale; anyone whose storage is smaller than MAX_INT should not use it under any circumstances, and the documentation should say that explicitly to protect newbies from themselves.;;;","08/Dec/16 03:38;tabish;Sounds good, why don't you go ahead and add that to the Wiki;;;","08/Dec/16 11:18;gtully;I added a PercentUsage section at the end of[1] that covers the percentLimit and total attributes that are common to the Store and Temp Usage. With a note on the caveat.

[1] https://cwiki.apache.org/confluence/display/ACTIVEMQ/Producer+Flow+Control;;;",,,
AMQP: Performance improvements and fixes in the Message transformers,AMQ-6438,13006679,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,21/Sep/16 22:17,30/Sep/16 19:54,14/Jul/23 05:44,29/Sep/16 15:15,5.14.0,,,,,,,,,5.14.2,5.15.0,,,,,,,,0,,,,,,"The JMS Message Transformer seem to have several areas where performance can be improved.  

Performance numbers on master before updates were made

{noformat}

[jms] Total time for 1000000 cycles of transforms = 14209 ms  -> [testComplexQpidJMSMessage[Transformer->jms]]
[jms] Total time for 1000000 cycles of transforms = 4282 ms  -> [testTypicalQpidJMSMessageOutBoundOnly[Transformer->jms]]
[jms] Total time for 1000000 cycles of transforms = 7363 ms  -> [testTypicalQpidJMSMessage[Transformer->jms]]
[jms] Total time for 1000000 cycles of transforms = 4475 ms  -> [testMessageWithNoPropertiesOrAnnotations[Transformer->jms]]
[jms] Total time for 1000000 cycles of transforms = 2468 ms  -> [testTypicalQpidJMSMessageInBoundOnly[Transformer->jms]]
[jms] Total time for 1000000 cycles of transforms = 1613 ms  -> [testBodyOnlyMessage[Transformer->jms]]
[native] Total time for 1000000 cycles of transforms = 13861 ms  -> [testComplexQpidJMSMessage[Transformer->native]]
[native] Total time for 1000000 cycles of transforms = 5429 ms  -> [testTypicalQpidJMSMessageOutBoundOnly[Transformer->native]]
[native] Total time for 1000000 cycles of transforms = 8523 ms  -> [testTypicalQpidJMSMessage[Transformer->native]]
[native] Total time for 1000000 cycles of transforms = 4576 ms  -> [testMessageWithNoPropertiesOrAnnotations[Transformer->native]]
[native] Total time for 1000000 cycles of transforms = 2577 ms  -> [testTypicalQpidJMSMessageInBoundOnly[Transformer->native]]
[native] Total time for 1000000 cycles of transforms = 646 ms  -> [testBodyOnlyMessage[Transformer->native]]
[raw] Total time for 1000000 cycles of transforms = 523 ms  -> [testComplexQpidJMSMessage[Transformer->raw]]
[raw] Total time for 1000000 cycles of transforms = 215 ms  -> [testTypicalQpidJMSMessageOutBoundOnly[Transformer->raw]]
[raw] Total time for 1000000 cycles of transforms = 474 ms  -> [testTypicalQpidJMSMessage[Transformer->raw]]
[raw] Total time for 1000000 cycles of transforms = 468 ms  -> [testMessageWithNoPropertiesOrAnnotations[Transformer->raw]]
[raw] Total time for 1000000 cycles of transforms = 274 ms  -> [testTypicalQpidJMSMessageInBoundOnly[Transformer->raw]]
[raw] Total time for 1000000 cycles of transforms = 436 ms  -> [testBodyOnlyMessage[Transformer->raw]]

{noformat}

After updates and fixes.

{noformat}

[jms] Total time for 1000000 cycles of transforms = 10593 ms  -> [testComplexQpidJMSMessage[Transformer->jms]]
[jms] Total time for 1000000 cycles of transforms = 3571 ms  -> [testTypicalQpidJMSMessageOutBoundOnly[Transformer->jms]]
[jms] Total time for 1000000 cycles of transforms = 6172 ms  -> [testTypicalQpidJMSMessage[Transformer->jms]]
[jms] Total time for 1000000 cycles of transforms = 3725 ms  -> [testMessageWithNoPropertiesOrAnnotations[Transformer->jms]]
[jms] Total time for 1000000 cycles of transforms = 2202 ms  -> [testTypicalQpidJMSMessageInBoundOnly[Transformer->jms]]
[jms] Total time for 1000000 cycles of transforms = 837 ms  -> [testBodyOnlyMessage[Transformer->jms]]
[native] Total time for 1000000 cycles of transforms = 13193 ms  -> [testComplexQpidJMSMessage[Transformer->native]]
[native] Total time for 1000000 cycles of transforms = 5172 ms  -> [testTypicalQpidJMSMessageOutBoundOnly[Transformer->native]]
[native] Total time for 1000000 cycles of transforms = 7711 ms  -> [testTypicalQpidJMSMessage[Transformer->native]]
[native] Total time for 1000000 cycles of transforms = 4061 ms  -> [testMessageWithNoPropertiesOrAnnotations[Transformer->native]]
[native] Total time for 1000000 cycles of transforms = 2327 ms  -> [testTypicalQpidJMSMessageInBoundOnly[Transformer->native]]
[native] Total time for 1000000 cycles of transforms = 371 ms  -> [testBodyOnlyMessage[Transformer->native]]
[raw] Total time for 1000000 cycles of transforms = 212 ms  -> [testComplexQpidJMSMessage[Transformer->raw]]
[raw] Total time for 1000000 cycles of transforms = 19 ms  -> [testTypicalQpidJMSMessageOutBoundOnly[Transformer->raw]]
[raw] Total time for 1000000 cycles of transforms = 210 ms  -> [testTypicalQpidJMSMessage[Transformer->raw]]
[raw] Total time for 1000000 cycles of transforms = 205 ms  -> [testMessageWithNoPropertiesOrAnnotations[Transformer->raw]]
[raw] Total time for 1000000 cycles of transforms = 231 ms  -> [testTypicalQpidJMSMessageInBoundOnly[Transformer->raw]]
[raw] Total time for 1000000 cycles of transforms = 205 ms  -> [testBodyOnlyMessage[Transformer->raw]]

{noformat}",,jira-bot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Sep 30 19:54:40 UTC 2016,,,,,,,,,,,"0|i33xbz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Sep/16 22:19;jira-bot;Commit d4c7cce7d733df9fcdcd0daec4ce64fb3844ce64 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=d4c7cce ]

https://issues.apache.org/jira/browse/AMQ-6438

Makes some improvements to the profiling test for the transformers. ;;;","26/Sep/16 21:19;jira-bot;Commit 5702ec8d7ca330c94d6e4b59cea4606285b2c196 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=5702ec8 ]

https://issues.apache.org/jira/browse/AMQ-6438

Add additional test for larger more complex AMQP message;;;","26/Sep/16 22:45;jira-bot;Commit 63d62a71f59ec485ac79e1ce40e98316d37ca14a in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=63d62a7 ]

https://issues.apache.org/jira/browse/AMQ-6438

JMS Transformer performance improvements and bug fixes

Trim unnecessary code and improve overall performance of the JMS
Transformer codecs.  Remove legacy Qpid JMS client related code from the
transformer as these are no longer supported.  Fix outgoing message that
do not match the structure of the incoming message that created them such
as message with had only a body being sent out with Headers and message
Properties.
;;;","27/Sep/16 19:56;jira-bot;Commit b1a9a9382b837fb8cff7f9586c7f9516675bf78a in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b1a9a93 ]

https://issues.apache.org/jira/browse/AMQ-6438

Add a new test for encode / decode validation.  Fix issue where the
internal scheduled message properties were escaping into the outbound
message.;;;","27/Sep/16 21:08;jira-bot;Commit 45f60e4133f64603d5f1a5161c363eb185d2804d in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=45f60e4 ]

https://issues.apache.org/jira/browse/AMQ-6438

Remove redundant tests and clean up a few small nits.;;;","28/Sep/16 19:26;jira-bot;Commit 14c553a8ad10b6212d764a4b9f6d6e6175d638e3 in activemq's branch refs/heads/activemq-5.14.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=14c553a ]

https://issues.apache.org/jira/browse/AMQ-6438

Makes some improvements to the profiling test for the transformers.
(cherry picked from commit d4c7cce7d733df9fcdcd0daec4ce64fb3844ce64)
;;;","28/Sep/16 19:26;jira-bot;Commit 95faf0d87cf37715c5d163925fbab84c69576ee1 in activemq's branch refs/heads/activemq-5.14.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=95faf0d ]

https://issues.apache.org/jira/browse/AMQ-6438

Add additional test for larger more complex AMQP message
(cherry picked from commit 5702ec8d7ca330c94d6e4b59cea4606285b2c196)
;;;","28/Sep/16 19:26;jira-bot;Commit 9cb92a225fc1d93b8a8096cc6f11781e32623819 in activemq's branch refs/heads/activemq-5.14.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=9cb92a2 ]

https://issues.apache.org/jira/browse/AMQ-6438

JMS Transformer performance improvements and bug fixes

Trim unnecessary code and improve overall performance of the JMS
Transformer codecs.  Remove legacy Qpid JMS client related code from the
transformer as these are no longer supported.  Fix outgoing message that
do not match the structure of the incoming message that created them such
as message with had only a body being sent out with Headers and message
Properties.

(cherry picked from commit 63d62a71f59ec485ac79e1ce40e98316d37ca14a)
;;;","28/Sep/16 19:26;jira-bot;Commit 4575bee6708cfd8f024ff1e183e910ca622ce9c1 in activemq's branch refs/heads/activemq-5.14.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=4575bee ]

https://issues.apache.org/jira/browse/AMQ-6438

Add a new test for encode / decode validation.  Fix issue where the
internal scheduled message properties were escaping into the outbound
message.
(cherry picked from commit b1a9a9382b837fb8cff7f9586c7f9516675bf78a)
;;;","28/Sep/16 19:26;jira-bot;Commit aebb365ad438933dc72208ba19f6dc434ce0c3ef in activemq's branch refs/heads/activemq-5.14.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=aebb365 ]

https://issues.apache.org/jira/browse/AMQ-6438

Remove redundant tests and clean up a few small nits.
(cherry picked from commit 45f60e4133f64603d5f1a5161c363eb185d2804d)
;;;","29/Sep/16 14:59;tabish;Some additional interoperability fixes should be made.;;;","29/Sep/16 15:10;jira-bot;Commit d88c4e46ecffdba0040299df6efbcdc4171d1c3d in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=d88c4e4 ]

https://issues.apache.org/jira/browse/AMQ-6438

Better interop for MapMessage with Binary value in the entries of the
payload, should convert back and forth the byte to allow Message to be
treated as a MapMessage and not fall back to a BytesMessage encoding.;;;","29/Sep/16 15:12;jira-bot;Commit a6d2a16b4c03d75a013947c8d4b6c48bdf7a60f0 in activemq's branch refs/heads/activemq-5.14.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=a6d2a16 ]

https://issues.apache.org/jira/browse/AMQ-6438

Better interop for MapMessage with Binary value in the entries of the
payload, should convert back and forth the byte to allow Message to be
treated as a MapMessage and not fall back to a BytesMessage encoding.
(cherry picked from commit d88c4e46ecffdba0040299df6efbcdc4171d1c3d)
;;;","30/Sep/16 19:54;jira-bot;Commit ee9f316c20a991fcb3dcf3d89ef6e4011f708c72 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=ee9f316 ]

https://issues.apache.org/jira/browse/AMQ-6438

Add an additional test that accounts for the fallback transformer case.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
tmp_storage folder not cleaned on startup,AMQ-6436,13005944,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,reids,reids,19/Sep/16 15:03,23/Sep/16 19:50,14/Jul/23 05:44,23/Sep/16 19:50,5.13.3,,,,,,,,,5.14.1,5.15.0,,,Broker,,,,,0,,,,,,"saw this on our production servers, activemq failed to start due to no space on the mount where tmp_storage was located. Reproduced it on a local windows machine.

start a default activemq broker at the command line.
Run the attached code enough times to cause activemq to start writing to the the tmp_storage folder, in my case 10000 messages was enough to give me 513Mb in tmp_storage
restart activemq and note that the contents of the tmp_storage folder are still intact. ",Windows/RHEL 6.8 tested,cshannon,jira-bot,reids,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Sep/16 15:08;reids;JMSTmpStor.java;https://issues.apache.org/jira/secure/attachment/12829222/JMSTmpStor.java","19/Sep/16 15:08;reids;message.txt;https://issues.apache.org/jira/secure/attachment/12829223/message.txt",,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Sep 23 19:49:49 UTC 2016,,,,,,,,,,,"0|i33su7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/Sep/16 15:08;reids;sample and sample data. message.txt should go into c:\temp;;;","19/Sep/16 15:09;cshannon;This happens because the temporary store is lazily initialized the first time it is needed which is only after there are enough non-persistent messages to fill up memory so that the messages need to be dumped to disk.  So on restart the old directory isn't touched until initialization.  However, it probably wouldn't hurt to clear out the temp store directory on first start up.;;;","23/Sep/16 19:49;jira-bot;Commit a82c95cd29a6b06d2083b1869129b9e2addac7da in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=a82c95c ]

https://issues.apache.org/jira/browse/AMQ-6436

The temporary store will now delete the old temp directory on start up
if lazyInit is true instead of waiting for the store to initialize to
clear up space.  This prevents space on the disk from being wasted with
old data if the temp store isn't initialized
;;;","23/Sep/16 19:49;jira-bot;Commit b1c09d9a859c9caf6eccacdb23ca0b5f65f9b527 in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b1c09d9 ]

https://issues.apache.org/jira/browse/AMQ-6436

The temporary store will now delete the old temp directory on start up
if lazyInit is true instead of waiting for the store to initialize to
clear up space.  This prevents space on the disk from being wasted with
old data if the temp store isn't initialized

(cherry picked from commit a82c95cd29a6b06d2083b1869129b9e2addac7da)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Return inside finally,AMQ-6434,13005885,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,cshannon,kal0ian,kal0ian,19/Sep/16 11:52,23/Sep/16 12:05,14/Jul/23 05:44,23/Sep/16 12:05,,,,,,,,,,5.14.1,5.15.0,,,,,,,,0,,,,,,In runTask() method in PooledTaskRunner class there is an return statement in finally block. This will cause any exception that might be thrown in the try block to be discarded.,,jira-bot,kal0ian,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Sep 23 12:05:14 UTC 2016,,,,,,,,,,,"0|i33sh3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Sep/16 11:51;jira-bot;Commit f25e7ab47f1bed223e30fc85afbe43ba1f4c93e6 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=f25e7ab ]

https://issues.apache.org/jira/browse/AMQ-6434

Rewriting logic in finally block of PooledTaskRunner to avoid using a
return statement
;;;","23/Sep/16 12:05;jira-bot;Commit a80f7ccbe1c0e60c3aa668b33e4dbdc3dbb21128 in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=a80f7cc ]

https://issues.apache.org/jira/browse/AMQ-6434

Rewriting logic in finally block of PooledTaskRunner to avoid using a
return statement

(cherry picked from commit f25e7ab47f1bed223e30fc85afbe43ba1f4c93e6)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Missing check for null parameter in equals(),AMQ-6433,13005883,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,cshannon,kal0ian,kal0ian,19/Sep/16 11:35,23/Sep/16 12:05,14/Jul/23 05:44,23/Sep/16 12:05,,,,,,,,,,5.14.1,5.15.0,,,,,,,,0,,,,,,"In equals() method in TypeConversionSupport class there is missing check for null parameter.
According to javadoc of Object class: For any non-null reference value x, x.equals(null) should return false.",,jira-bot,kal0ian,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Sep 23 12:05:15 UTC 2016,,,,,,,,,,,"0|i33sgn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Sep/16 12:04;jira-bot;Commit 2b99ffcc22e8c982883ae553bd91d03acc68aaa2 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=2b99ffc ]

https://issues.apache.org/jira/browse/AMQ-6433

Generating a new equals method in TypeConversionSupport so the proper
null checks exist
;;;","23/Sep/16 12:05;jira-bot;Commit 8bde32a07c28500793924b183f2956e8cc6b13f4 in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=8bde32a ]

https://issues.apache.org/jira/browse/AMQ-6433

Generating a new equals method in TypeConversionSupport so the proper
null checks exist

(cherry picked from commit 2b99ffcc22e8c982883ae553bd91d03acc68aaa2)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve 'Failed to load next journal location: null' warning output,AMQ-6432,13005879,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,lichtin,lichtin,19/Sep/16 11:24,06/Feb/17 14:06,14/Jul/23 05:44,03/Feb/17 17:02,5.14.0,,,,,,,,,5.14.4,5.15.0,,,,,,,,1,,,,,,"Seeing

{noformat}
2016-09-19 15:11:30,270 | WARN  | ournal Checkpoint Worker | MessageDatabase                  | 
   emq.store.kahadb.MessageDatabase 2104 | 102 - org.apache.activemq.activemq-osgi - 5.14.0 | 
   Failed to load next journal location: null
{noformat}
it'd be great to improve the output in such a case (Journal Checkpoint Worker ).

Why not show the exception stack (it seems weird to only show the stack when debug level is enabled).
",,cshannon,gtully,isral1,jira-bot,khokhani,lichtin,northlander,rwagg,tabish,tmielke,windeyu,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6288,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Feb 06 14:05:45 UTC 2017,,,,,,,,,,,"0|i33sfr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/Sep/16 16:15;cshannon;That error message would only happen during an ack compaction (which is a new feature) so I guess the question is what happened that the location couldn't be read from the journal file during ack compaction. It is a bit annoying that the message form the exception is null so we don't have any idea what is up.  I think it would be fine to log the stack trace at the warning level here in case it happens again to try and track down the issue.;;;","19/Sep/16 18:35;lichtin;Agree with your thinking. A few reoccurences since:
{noformat}
2016-09-19 15:11:30,270 | WARN  | ournal Checkpoint Worker | MessageDatabase                  | emq.store.kahadb.MessageDatabase 2104 | 102 - org.apache.activemq.activemq-osgi - 5.14.0 | Failed to load next journal location: null
2016-09-19 15:36:32,156 | WARN  | ournal Checkpoint Worker | MessageDatabase                  | emq.store.kahadb.MessageDatabase 2104 | 102 - org.apache.activemq.activemq-osgi - 5.14.0 | Failed to load next journal location: null
2016-09-19 16:01:33,572 | WARN  | ournal Checkpoint Worker | MessageDatabase                  | emq.store.kahadb.MessageDatabase 2104 | 102 - org.apache.activemq.activemq-osgi - 5.14.0 | Failed to load next journal location: null
2016-09-19 17:08:07,707 | WARN  | ournal Checkpoint Worker | MessageDatabase                  | emq.store.kahadb.MessageDatabase 2104 | 102 - org.apache.activemq.activemq-osgi - 5.14.0 | Failed to load next journal location: null
{noformat}
Something's fishy with the system time on this machine. Could it be a result of the time being re-set? Eg. going back in time.;;;","20/Sep/16 15:35;cshannon;Time shouldn't have anything to do with it because a Location in the journal is essentially just 2 pieces of information, the file and the offset and time isn't involved.  Since this issue has happened a few more times can you enable debug logging for the MessageDatabase class to try and capture the stack trace?;;;","24/Sep/16 21:07;lichtin;Could capture it:
{noformat}
2016-09-21 09:50:37,188 | DEBUG | ournal Checkpoint Worker | MessageDatabase                  | emq.store.kahadb.MessageDatabase 1710 | 102 - org.apache.activemq.activemq-osgi - 5.14.0 | Checkpoint started.
2016-09-21 09:50:37,190 | DEBUG | ournal Checkpoint Worker | MessageDatabase                  | emq.store.kahadb.MessageDatabase 1943 | 102 - org.apache.activemq.activemq-osgi - 5.14.0 | Checkpoint done.
2016-09-21 09:50:40,269 | DEBUG | ournal Checkpoint Worker | MessageDatabase                  | emq.store.kahadb.MessageDatabase 1710 | 102 - org.apache.activemq.activemq-osgi - 5.14.0 | Checkpoint started.
2016-09-21 09:50:40,273 | DEBUG | ournal Checkpoint Worker | MessageDatabase                  | emq.store.kahadb.MessageDatabase 1943 | 102 - org.apache.activemq.activemq-osgi - 5.14.0 | Checkpoint done.
2016-09-21 09:50:40,800 | WARN  | ournal Checkpoint Worker | MessageDatabase                  | emq.store.kahadb.MessageDatabase 2104 | 102 - org.apache.activemq.activemq-osgi - 5.14.0 | Failed to load next journal location: null
2016-09-21 09:50:40,801 | DEBUG | ournal Checkpoint Worker | MessageDatabase                  | emq.store.kahadb.MessageDatabase 2106 | 102 - org.apache.activemq.activemq-osgi - 5.14.0 | Failed to load next journal location
java.io.EOFException
        at java.io.RandomAccessFile.readInt(RandomAccessFile.java:803)[:1.8.0_92]
        at org.apache.activemq.util.RecoverableRandomAccessFile.readInt(RecoverableRandomAccessFile.java:165)[102:org.apache.activemq.activemq-osgi:5.14.0]
        at org.apache.activemq.store.kahadb.disk.journal.DataFileAccessor.readLocationDetails(DataFileAccessor.java:113)[102:org.apache.activemq.activemq-osgi:5.14.0]
        at org.apache.activemq.store.kahadb.disk.journal.Journal.getNextLocation(Journal.java:853)[102:org.apache.activemq.activemq-osgi:5.14.0]
        at org.apache.activemq.store.kahadb.MessageDatabase.getNextLocationForAckForward(MessageDatabase.java:2102)[102:org.apache.activemq.activemq-osgi:5.14.0]
        at org.apache.activemq.store.kahadb.MessageDatabase.forwardAllAcks(MessageDatabase.java:2066)[102:org.apache.activemq.activemq-osgi:5.14.0]
        at org.apache.activemq.store.kahadb.MessageDatabase.access$600(MessageDatabase.java:121)[102:org.apache.activemq.activemq-osgi:5.14.0]
        at org.apache.activemq.store.kahadb.MessageDatabase$AckCompactionRunner.run(MessageDatabase.java:2005)[102:org.apache.activemq.activemq-osgi:5.14.0]
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)[:1.8.0_92]
        at java.util.concurrent.FutureTask.run(FutureTask.java:266)[:1.8.0_92]
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)[:1.8.0_92]
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)[:1.8.0_92]
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)[:1.8.0_92]
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)[:1.8.0_92]
        at java.lang.Thread.run(Thread.java:745)[:1.8.0_92]
2016-09-21 09:50:40,835 | DEBUG | ournal Checkpoint Worker | MessageDatabase                  | emq.store.kahadb.MessageDatabase 1710 | 102 - org.apache.activemq.activemq-osgi - 5.14.0 | Checkpoint started.
2016-09-21 09:50:40,835 | DEBUG | ournal Checkpoint Worker | MessageDatabase                  | emq.store.kahadb.MessageDatabase 1943 | 102 - org.apache.activemq.activemq-osgi - 5.14.0 | Checkpoint done.
2016-09-21 09:50:42,192 | DEBUG | ournal Checkpoint Worker | MessageDatabase                  | emq.store.kahadb.MessageDatabase 1710 | 102 - org.apache.activemq.activemq-osgi - 5.14.0 | Checkpoint started.
2016-09-21 09:50:42,193 | DEBUG | ournal Checkpoint Worker | MessageDatabase                  | emq.store.kahadb.MessageDatabase 1943 | 102 - org.apache.activemq.activemq-osgi - 5.14.0 | Checkpoint done.
{noformat};;;","26/Sep/16 13:37;cshannon;Essentially the ack compaction works by just sequentially scanning the journal file commands and rewriting any acknowledgements to a new journal file.  The fact that trying to find the next location is giving an EOFException would seem to indicate some kind of journal file corruption.

Are you seeing errors during any other times or just during the compaction task? I would think you'd see errors other times as well if the file was truly corrupted.  Also, do you have enableJournalDiskSyncs set to true?;;;","27/Sep/16 08:21;lichtin;Not seeing the errors all day long, likely just during compaction. We run with the default for enableJournalDiskSyncs (true).
One observation, it could be that the issue appears when we purge (via the MBean) and reset stats for all destinations.;;;","29/Jan/17 20:31;lichtin;Another pattern seen, it happened 6 times, every 20mins:

{noformat}
2017-01-27 14:29:48,147 | WARN  | ournal Checkpoint Worker | MessageDatabase                  | emq.store.kahadb.MessageDatabase 2104 | 98 - org.apache.activemq.activemq-osgi - 5.14.0 | Failed to load next journal location: null
2017-01-27 14:49:57,956 | WARN  | ournal Checkpoint Worker | MessageDatabase                  | emq.store.kahadb.MessageDatabase 2104 | 98 - org.apache.activemq.activemq-osgi - 5.14.0 | Failed to load next journal location: null
2017-01-27 15:10:07,635 | WARN  | ournal Checkpoint Worker | MessageDatabase                  | emq.store.kahadb.MessageDatabase 2104 | 98 - org.apache.activemq.activemq-osgi - 5.14.0 | Failed to load next journal location: null
2017-01-27 15:30:41,002 | WARN  | ournal Checkpoint Worker | MessageDatabase                  | emq.store.kahadb.MessageDatabase 2104 | 98 - org.apache.activemq.activemq-osgi - 5.14.0 | Failed to load next journal location: null
2017-01-27 15:50:50,964 | WARN  | ournal Checkpoint Worker | MessageDatabase                  | emq.store.kahadb.MessageDatabase 2104 | 98 - org.apache.activemq.activemq-osgi - 5.14.0 | Failed to load next journal location: null
2017-01-27 16:16:07,428 | WARN  | ournal Checkpoint Worker | MessageDatabase                  | emq.store.kahadb.MessageDatabase 2104 | 98 - org.apache.activemq.activemq-osgi - 5.14.0 | Failed to load next journal location: null
{noformat};;;","02/Feb/17 12:14;jira-bot;Commit e3b529129a490d760d21692736e7c0dda7e615e2 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e3b5291 ]

[AMQ-6432] improve the logging to see the current offset
;;;","02/Feb/17 12:18;gtully;I think this should only occur if there is no disk sync, and thinking more if sync is not disabled via enableJournalDiskSync=false then any non sync journal write could lead to this. However, the gc should never try an read the current journal file so it may have to coincide with a journal flip.
Having ack compaction force a sync before trying to scan may help here.
Getting better info out of the logging will be a first step, as would having a reproducer.;;;","02/Feb/17 12:21;gtully;if the trigger is a purge, it may be that the acks are not synced, and doing a sync write after a purge could sort this.;;;","03/Feb/17 16:59;jira-bot;Commit 9b64e188b59a395300a2f5d6022df9dbbae2f426 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=9b64e18 ]

[AMQ-6432] issue was journal scan on newly created ack file. I left the relevant braces from AMQ-6288 in place. Fix and test
;;;","03/Feb/17 17:02;gtully;issue was not related to syncs but doing a scan for acks that could venture into the newly created data file for the acks. 
Adding a limit to the getNextLocation scan provides the necessary restriction and avoids the EOF and warn.;;;","03/Feb/17 17:24;windeyu;Hi Gary, may I ask,  by setting enableAckCompaction=false, would I avoid this error in 5.14.x release?  We're considering going live with 5.14.3.  Thank you.;;;","03/Feb/17 17:35;tabish;Yes, turning off ack compaction will ensure you don't see this warning in you logs. ;;;","06/Feb/17 14:05;jira-bot;Commit 3a848971ff80540ae9af2b1008f90b7e4f3014ef in activemq's branch refs/heads/activemq-5.14.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=3a84897 ]

[AMQ-6432] improve the logging to see the current offset

(cherry picked from commit e3b529129a490d760d21692736e7c0dda7e615e2)
;;;","06/Feb/17 14:05;jira-bot;Commit 93715d1bd605bc61149505d4df2ebc223ae371af in activemq's branch refs/heads/activemq-5.14.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=93715d1 ]

[AMQ-6432] issue was journal scan on newly created ack file. I left the relevant braces from AMQ-6288 in place. Fix and test

(cherry picked from commit 9b64e188b59a395300a2f5d6022df9dbbae2f426)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,
BitArrayBin doesn't work well with index larger than Integer.MAX_VALUE,AMQ-6431,13005478,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,wangqinghuan,wangqinghuan,16/Sep/16 16:16,23/Sep/16 18:33,14/Jul/23 05:44,23/Sep/16 18:33,5.14.0,,,,,,,,,5.14.1,5.15.0,,,JMS client,,,,,0,,,,,,"I have a problem with ""messageid deplicate"". Then I found it's a bug(AMQ-5016) in activemq5.9.0 , so I download the activemq5.14.0. I run the BitArrayBinTest.java:

{code}
 public static void main(String[] args) {
       BitArrayBin toTest = new BitArrayBin(1024);
       long largeNum = Integer.MAX_VALUE*2L +100L;
       toTest.setBit(largeNum, true);
       System.out.println(toTest.getBit(largeNum));   
}
{code}

 I expect the results to be ""true"",but the result of running the above code is ""false"". 
I debug the code,and I  found a method 'getBin(long index)' in class BitArrayBin. Code as follows:

{code}
private int getBin(long index) {
        int answer = 0;
        if (longFirstIndex < 0) {
            longFirstIndex = (int) (index - (index % BitArray.LONG_SIZE));
        } else if (longFirstIndex >= 0) {
            answer = (int)((index - longFirstIndex) / BitArray.LONG_SIZE);
        }
        return answer;
    }
{code}

 I think the problem is in  code ‘longFirstIndex = (int) (index - (index % BitArray.LONG_SIZE))‘.  When  index is larger than Integer.MAX_VALUE, longFirstIndex will be negative.  I think this line of code should be modified to  ‘longFirstIndex = (long) (index - (index % BitArray.LONG_SIZE));’
   


    ",,jira-bot,tabish,wangqinghuan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Sep/16 13:44;wangqinghuan;BitArrayBinTest.java;https://issues.apache.org/jira/secure/attachment/12829058/BitArrayBinTest.java",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Sep 23 18:31:33 UTC 2016,,,,,,,,,,,"0|i33pyv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Sep/16 16:37;tabish;Suggest you add to or create a unit tests for this class that can demonstrate the issue.;;;","17/Sep/16 13:44;wangqinghuan;A unit test that expose the issue.;;;","23/Sep/16 18:31;jira-bot;Commit 09456480b838efd97297679840d33f7949449e21 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=0945648 ]

https://issues.apache.org/jira/browse/AMQ-6431

Fixing BitArrayBin to not overflow in certain cases with numbers larger
than Int max
;;;","23/Sep/16 18:31;jira-bot;Commit bf7a19eead5ed9fac08f4220a3ec82dc6abdb7e3 in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=bf7a19e ]

https://issues.apache.org/jira/browse/AMQ-6431

Fixing BitArrayBin to not overflow in certain cases with numbers larger
than Int max

(cherry picked from commit 09456480b838efd97297679840d33f7949449e21)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
noLocal=true in durable subscriptions is ignored after reconnect,AMQ-6430,13005198,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,daniel.faber@agiltech.de,daniel.faber@agiltech.de,15/Sep/16 15:57,23/Sep/16 15:26,14/Jul/23 05:44,21/Sep/16 13:36,5.13.4,5.14.0,,,,,,,,5.14.1,5.15.0,,,Broker,,,,,0,,,,,,"I create a connection to my local ActiveMQ and open two sessions. In the first session I create a durable topic subscriber with noLocal=true. In the second session I send a message to the same topic. Then I close both sessions and the connection. The first time I do this, everything works well, that means I send but do not receive the message. The second time I run the same application I send AND receive the message.

After removing all files and directories in ActiveMQ's data directory, not receiving my own message works again, but only once.","Ubuntu 14.04, OpenJDK 1.7.0_111 and Oracle JDK 1.8.0.74, other environments not testet",brianjohnson,cshannon,daniel.faber@agiltech.de,dbonn,jira-bot,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5996,,,,,,,,,,,"15/Sep/16 15:58;daniel.faber@agiltech.de;ActiveMQNoLocalTest.java;https://issues.apache.org/jira/secure/attachment/12828665/ActiveMQNoLocalTest.java","15/Sep/16 15:58;daniel.faber@agiltech.de;pom.xml;https://issues.apache.org/jira/secure/attachment/12828664/pom.xml",,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Sep 23 15:26:36 UTC 2016,,,,,,,,,,,"0|i33o8n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Sep/16 15:58;daniel.faber@agiltech.de;Attached sample application that reproduces the problem.;;;","15/Sep/16 16:10;daniel.faber@agiltech.de;Steps to reproduce:

1. start ActiveMQ: {{~/bin/apache-activemq-5.14.0 $ bin/activemq start}}

2. run attached test application, output is
{noformat}
message sent:     ID:hostname-44638-1473955333904-1:1:2:1:1; body: test-message
{noformat}
as expected.

3. run test application again, output is
{noformat}
message sent:     ID:hostname-55628-1473955434257-1:1:2:1:1; body: test-message
incoming message: ID:hostname-55628-1473955434257-1:1:2:1:1; body: test-message
{noformat}
but this time I receive my own message which I didn't expect.

4. stop ActiveMQ: {{~/bin/apache-activemq-5.14.0 $ bin/activemq stop}}

5. remove ActiveMQ's data files: {{~/bin/apache-activemq-5.14.0 $ rm -r data/*}}

6. start ActiveMQ: {{~/bin/apache-activemq-5.14.0 $ bin/activemq start}}

7. run test application, output is
{noformat}
message sent:     ID:hostname-46012-1473955651268-1:1:2:1:1; body: test-message
{noformat}
it seems to work, but..

8. run test application again, output is
{noformat}
message sent:     ID:hostname-56206-1473955682047-1:1:2:1:1; body: test-message
incoming message: ID:hostname-56206-1473955682047-1:1:2:1:1; body: test-message
{noformat}
again, I receive my own message which I didn't expect.
;;;","16/Sep/16 08:37;dbonn;Successfully tried to reproduce this Issue using ActiveMQ 5.13.3
;;;","21/Sep/16 12:25;cshannon;I took a look at this and there are actually two problems here with how noLocal is handled with durables.  The main issue you are seeing is that when the durable comes back online the new connectionId is not being captured for the NoLocal expression parser which means that when messages are sent after broker restart the logic thinks that the message isn't coming from the current subscription when it is.  The fix here is to make sure the connectionId is updated properly when the new consumer comes online.

The second issue is that the JMS spec says that 
{noformat}
A client can change an existing durable subscription by creating a durable
TopicSubscriber with the same name and a new topic and/or message selector,
or NoLocal attribute. Changing a durable subscription is equivalent to deleting
and recreating it.
{noformat}

Right now we aren't checking if that NoLocal attribute changes at all when a new consumer comes online.  Based on the spec I think we should update the activation check such that if the NoLocal attribute changes (ie goes from false to true or true to false) we treat it as a selector change and process it the same way (delete and recreate the sub)

I am working on a patch and fix now to go out with our 5.14.1 release.;;;","21/Sep/16 12:49;cshannon;Looks like there are two places where the NoLocal attribute needs to be checked, it is done in one location but not the other.;;;","21/Sep/16 13:35;jira-bot;Commit 7c293b661f22245ce21bf2b5aa1c5bf4192cb8c5 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=7c293b6 ]

https://issues.apache.org/jira/browse/AMQ-6430

When a nolocal durable consumer reconnects the new connectionId is properly captured for
the NoLocal expression so that nolocal works on reconnect.  Also fixed
the detection of the nolocal value changing on consumer connect.
;;;","21/Sep/16 13:35;jira-bot;Commit d3b86e77ddfe7d0185ff150520a0dddc9c6cf53e in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=d3b86e7 ]

https://issues.apache.org/jira/browse/AMQ-6430

When a nolocal durable consumer reconnects the new connectionId is properly captured for
the NoLocal expression so that nolocal works on reconnect.  Also fixed
the detection of the nolocal value changing on consumer connect.

(cherry picked from commit 7c293b661f22245ce21bf2b5aa1c5bf4192cb8c5)
;;;","23/Sep/16 14:58;cshannon;There are some test failures because JDBC and LevelDB don't support storing the noLocal flag.  Working on a fix now such that the noLocal flag only applies to stores that persist the flag (currently the memory store and kahadb/multikahadb when using openwire version >=11).  If JDBC and LevelDB are updated in the future such that this flag is stored then an update can be done so that this patch applies to those stores as well.;;;","23/Sep/16 15:26;jira-bot;Commit 18571ce09b6385d8560200928a353e9da1a1ffe4 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=18571ce ]

https://issues.apache.org/jira/browse/AMQ-6430

Modifying patch so that only stores that persist the noLocal flag will
check if this flag has changed to prevent a subscription from being
deleted by mistake
;;;","23/Sep/16 15:26;jira-bot;Commit e0c70b843fb963cfa5e3be322c0d271ba61709bb in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e0c70b8 ]

https://issues.apache.org/jira/browse/AMQ-6430

Modifying patch so that only stores that persist the noLocal flag will
check if this flag has changed to prevent a subscription from being
deleted by mistake

(cherry picked from commit 18571ce09b6385d8560200928a353e9da1a1ffe4)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQP - flow(1) without a dispositon can lead to blocked receive,AMQ-6422,13003301,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,07/Sep/16 16:26,26/Sep/17 10:02,14/Jul/23 05:44,21/Sep/16 13:00,,,,,,,,,,5.14.1,5.15.0,,,AMQP,,,,,0,,,,,,"Setting prefetch based on the credit can get in a knot if the credit is small and the dispositions are outstanding.
The prefetch gets set to 1, but with an inflight message, there is nothing dispatched b/c the sub looks full.",,gtully,jira-bot,robbie,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6824,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Sep 27 16:46:19 UTC 2016,,,,,,,,,,,"0|i33cjb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Sep/16 16:29;jira-bot;Commit 88daeec28f25266c6fce15e200ac6d2ca9d11eb6 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=88daeec ]

AMQ-6422 - include the inflight count in the prefetch for positive remote credit flows. Fix and test
;;;","07/Sep/16 16:31;gtully;I think this fix can be further refined by avoiding some updates to the prefetch. not done yet and maybe the tests will be sensitive to proton event production order.;;;","07/Sep/16 18:05;jira-bot;Commit ee271afe9041172df24b572231b394a7c6fec0ce in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=ee271af ]

https://issues.apache.org/jira/browse/AMQ-6422

I've made a few minor test changes and added a couple more cases.  Under
heavy CPU load I'm able to get test,
testReceiveMessageAndRefillCreditBeforeAcceptOnQueue to fail on the
second receive call where it should get the second message since it
granted credit.;;;","07/Sep/16 18:10;tabish;A couple things to note here, the unsettled count and the credit on the link aren't really tied to each other at all.  The remote can keep granting credit and not settle anything if it wishes and I don't think there's test that cover that case.  Also the remote could request that all deliveries are sent settled so there'd be no movement on that counter, which I don't think is tested much here so there could be issues yet to be discovered in that area.  ;;;","07/Sep/16 18:25;tabish;Also see failures in testDispatchOrderWithPrefetchOfOne test in repeated runs with varied CPU loads.;;;","08/Sep/16 09:17;gtully;[~tabish121] I have a variant of (added in some send threads)  org.apache.activemq.transport.amqp.interop.AmqpSendReceiveTest#testReceiveMessageAndRefillCreditBeforeAcceptOnQueue that can't get past 3 iterations.
optimizeDispatch=true sorts this one case, but that is too general a solution.
;;;","09/Sep/16 16:53;jira-bot;Commit 640289868e18e82b054be8aff5580d3665518f5c in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=6402898 ]

https://issues.apache.org/jira/browse/AMQ-6422

Add test for credit grants but no settles for a single receiver.;;;","09/Sep/16 17:02;jira-bot;Commit 2fdc2600ac37d11d2d660654b327dddd852eeef7 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=2fdc260 ]

https://issues.apache.org/jira/browse/AMQ-6422

Small fix to test and check for zero inflight on successive send to
destination that should have no credit on the registered receiver.;;;","09/Sep/16 22:34;jira-bot;Commit da9fedead4078cc82efb32e15d8d9cd53c8e82dc in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=da9fede ]

https://issues.apache.org/jira/browse/AMQ-6422

Adds a split consumer test that uses presettled receivers.;;;","21/Sep/16 09:33;jira-bot;Commit ffee8b442f57b38d57a59745b9062e8d963c65ba in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=ffee8b4 ]

https://issues.apache.org/jira/browse/AMQ-6422 - match proton sender view credit to prefetchExtension - tracking credit to dispatch delta to track additional flow requests. Proton sender layer is distinct from the transport layer - they mirror each other
;;;","21/Sep/16 11:32;robbie;The 'logicalDeliveryCount' increment added at the end of the 'delivery' method seems off since that method is called based on disposition activity, and may either never be called for a given message (if sent pre-settled) or be called multiple times for the same message (due to multiple dispositions).

For the purposes of credit tracking, the credit is used as soon as the message is finished being handed to proton, in this case in 'pumpOutbound' when the link is advanced to complete the current delivery, or the links 'current' incomplete delivery is settled (which must advance the link to complete the delivery).;;;","21/Sep/16 13:00;jira-bot;Commit 6c01b641b1850b384e57d74ad6471ea4c8fcf01f in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=6c01b64 ]

https://issues.apache.org/jira/browse/AMQ-6422 - move delivery tracking to pumpoutbound and additional test that shows how the presettle case breaks. Thanks to Robbie Gemmell for the feedback
;;;","21/Sep/16 13:03;gtully;Thanks [~gemmellr] for the quick review. I managed to build a test that showed the problem with using delivery in the successive flow case. When drained there is a flow with credit 0 that reset in the more normal case.;;;","27/Sep/16 16:46;jira-bot;Commit ca11674f37cf3a67a9215f341a8e8458ce7b0641 in activemq's branch refs/heads/activemq-5.14.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=ca11674 ]

https://issues.apache.org/jira/browse/AMQ-6422

Add test for credit grants but no settles for a single receiver.
;;;","27/Sep/16 16:46;jira-bot;Commit 566e82614aa3cb31c80d44d155debe0e63cc2a3c in activemq's branch refs/heads/activemq-5.14.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=566e826 ]

https://issues.apache.org/jira/browse/AMQ-6422

Small fix to test and check for zero inflight on successive send to
destination that should have no credit on the registered receiver.
;;;","27/Sep/16 16:46;jira-bot;Commit 14c5c5276c9f6bfa360c24d4e2b875483dc43888 in activemq's branch refs/heads/activemq-5.14.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=14c5c52 ]

https://issues.apache.org/jira/browse/AMQ-6422

Adds a split consumer test that uses presettled receivers.
;;;","27/Sep/16 16:46;jira-bot;Commit ebbb7ab437b3023be5afe731a0015fec58a51d57 in activemq's branch refs/heads/activemq-5.14.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=ebbb7ab ]

https://issues.apache.org/jira/browse/AMQ-6422 - match proton sender view credit to prefetchExtension - tracking credit to dispatch delta to track additional flow requests. Proton sender layer is distinct from the transport layer - they mirror each other
;;;",,,,,,,,,,,,,,,,,,,,,,,,
WireFormat options not applied for auto transports after first connection is created,AMQ-6420,13003198,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,07/Sep/16 11:40,04/Nov/16 17:44,14/Jul/23 05:44,07/Sep/16 11:45,5.13.4,5.14.0,,,,,,,,5.14.1,5.15.0,,,Broker,Transport,,,,0,,,,,,When doing some more testing with the auto transports I noticed that the wireFormat options are applied for the first created connection but new connections after that do not have the options applied.  This appears to be because the options map is not copied so after setting the options on the first created connection the map is emptied so future connections don't get the options applied.,,brudo,cshannon,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Nov 04 17:44:12 UTC 2016,,,,,,,,,,,"0|i33bwf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Sep/16 11:43;jira-bot;Commit 9ab94883a8ba88aeeb0a16e2310ab42a46de1d05 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=9ab9488 ]

https://issues.apache.org/jira/browse/AMQ-6420

Properly copying wire format options map before applying to the
transport when using auto transports so that the options do not get
cleared and will be used for all future connections
;;;","07/Sep/16 11:44;jira-bot;Commit c4bc626feac5b98a69c9a8577faf57585ce20d5d in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=c4bc626 ]

https://issues.apache.org/jira/browse/AMQ-6420

Properly copying wire format options map before applying to the
transport when using auto transports so that the options do not get
cleared and will be used for all future connections

(cherry picked from commit 9ab94883a8ba88aeeb0a16e2310ab42a46de1d05)
;;;","04/Nov/16 17:38;brudo;Judging from source code in the same files that were patched for 5.14.x, this would also affect ActiveMQ 5.13.x where the auto transport was introduced.;;;","04/Nov/16 17:44;cshannon;It would, I added 5.13.4 to the list of versions.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Peer certificates are not always set when using the auto transports with ssl,AMQ-6418,13002931,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,06/Sep/16 14:15,07/Sep/16 12:28,14/Jul/23 05:44,06/Sep/16 14:20,5.14.0,,,,,,,,,5.14.1,5.15.0,,,Broker,,,,,0,,,,,,"There are two problems with the auto ssl transport that is causing the peer certificates to not always be available and set on the ConnectionInfo object during connection.  First, for auto+nio+ssl, the auto init transport needs to have transport properties applied.  This is because the initialization transport does the SSL handshake so it needs to know whether or not transport.needClientAuth or transport.wantClientAuth is set.  Right now these properties are not processed so it never gets passed to the SSL socket which means none of the protocols have peer certs available over auto+nio+ssl.  Second, the Stomp transport is not properly setting the peer certs when using auto+ssl and not using NIO.",,cshannon,jira-bot,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Sep 07 12:28:47 UTC 2016,,,,,,,,,,,"0|i33a93:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Sep/16 14:17;jira-bot;Commit 98c5866c7534c1f26d2e41edbdb372fe21387fe4 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=98c5866 ]

https://issues.apache.org/jira/browse/AMQ-6418

Properly setting the transport properties on the
AutoNIOSSLTransportServer and fixing the Stomp protocol to set the peer
certs when using auto+ssl
;;;","06/Sep/16 14:19;jira-bot;Commit c99eb1d6005fd81a6ebd2486ecc79ef2e78fec9b in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=c99eb1d ]

https://issues.apache.org/jira/browse/AMQ-6418

Properly setting the transport properties on the
AutoNIOSSLTransportServer and fixing the Stomp protocol to set the peer
certs when using auto+ssl

(cherry picked from commit 98c5866c7534c1f26d2e41edbdb372fe21387fe4)
;;;","07/Sep/16 12:27;jira-bot;Commit 88af1c70d96d2df15a127ba02d73f205202fb5cc in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=88af1c7 ]

https://issues.apache.org/jira/browse/AMQ-6418

Fixing mqtt link stealing default setting for auto transport
;;;","07/Sep/16 12:28;jira-bot;Commit 4dbe61dd562040ec73df309527f92a918d3779ed in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=4dbe61d ]

https://issues.apache.org/jira/browse/AMQ-6418

Fixing mqtt link stealing default setting for auto transport

(cherry picked from commit 88af1c70d96d2df15a127ba02d73f205202fb5cc)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The nio+ssl transports can block and hang on connection in certain situations,AMQ-6414,13002097,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,01/Sep/16 15:38,28/Nov/18 15:06,14/Jul/23 05:44,06/Sep/16 14:19,5.14.0,,,,,,,,,5.14.1,5.15.0,,,Broker,Transport,,,,0,,,,,,"The nio+ssl transports can hang on initial connection and never read from the socket after the SSL handshake for certain conditions.  This behavior is most evident when using the auto+nio+ssl transport for a network bridge between 2 brokers, however I also saw the issue for the normal nio+ssl transport when running the NetworkAsyncStartTest and even the amqp+nio+ssl transport.

After debugging I found that the issue is that the onSelect method of the registered callback, which calls the serviceRead() method, is not always getting triggered.  I believe that the root of the problem is that even though a selector is registered with a SelectionKey.OP_READ, there is no guarantee that the selected set is correct which is what the SelectorWorker uses to detect if the operation is ready. The SelectionKey documentation specifically states that the ready set is a hint but not a guarantee that the channel is ready.  This seems to only effect the SSL transport (not normal NIO), probably because a read selection was already done once to unwrap the SSL transport

More info: https://docs.oracle.com/javase/8/docs/api/java/nio/channels/SelectionKey.html

The fix for this is to trigger the selectRead() after the transport finishes starting up.  (needs to be in a new thread specifically for OpenWire to allow the wireformat negotiation to not block on startup).  This will work for the SSL transport specifically since we know the transport is read to read from the the channel after starting up.  We know this because the SSL handshake already took place which means we've already read from the channel.

",,brianjohnson,brudo,cshannon,gtully,jira-bot,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-7115,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Feb 28 13:12:49 UTC 2017,,,,,,,,,,,"0|i33547:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Sep/16 15:42;jira-bot;Commit ed0e786b6002633411037923fb28a075489e442b in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=ed0e786 ]

https://issues.apache.org/jira/browse/AMQ-6414

Changing the nio+ssl transports to trigger a serviceRead after start up
to prevent blocking. The prevents the channels from not reading in
certain cases, most notably with the auto+nio+ssl transport when used
for a network bridge.  Also added a couple tests and changed a network
bridge test to test out auto+nio+ssl.
;;;","01/Sep/16 15:43;cshannon;I will let CI run and make sure all of the tests are still good and then close this out and backport the fix to 5.14.x.;;;","06/Sep/16 14:19;jira-bot;Commit 679f0cfd311c362aa7821763067d9c9fa9bdc801 in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=679f0cf ]

https://issues.apache.org/jira/browse/AMQ-6414

Changing the nio+ssl transports to trigger a serviceRead after start up
to prevent blocking. The prevents the channels from not reading in
certain cases, most notably with the auto+nio+ssl transport when used
for a network bridge.  Also added a couple tests and changed a network
bridge test to test out auto+nio+ssl.

(cherry picked from commit ed0e786b6002633411037923fb28a075489e442b)
;;;","05/Oct/16 17:24;brudo;Reviewing the changes in e.g. NIOSSLTransport.java, considering your description of why it occurs, and comparing to the 5.13.4 source code, it appears this bug could affect earlier versions as well - or did it surface only in 5.14.0 due to other changes elsewhere? (In other words, more to the point, if we're using 5.13.4 and nio+ssl, is it advisable to upgrade to 5.14.1?) Thanks!;;;","05/Oct/16 17:30;cshannon;It could happen for earlier versions also so upgrading is probably a good idea.  However, in my testing it seemed to happen pretty rarely and certain things (like using the auto transport) made it more likely so if you haven't seen it happen yet then it may not happen in your environment. ;;;","27/Feb/17 16:38;jira-bot;Commit a1f6261fb248fd2d39b78e7f2245352009394975 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=a1f6261 ]

[AMQ-6414] additional test that reproduces and validates
;;;","27/Feb/17 16:52;gtully;I was digging into this fix from another angle, hence the additional test.
The issue is that doing the ssl handshake reads the first openwire command, so there is some remaining data to read once the handshake completes. wireformat negotiation times out and the brokerInfo never gets sent and it hangs.

The async read in a different thread can be conditional on:
{code} if (inputBuffer.position() > 0 && inputBuffer.hasRemaining() && wireFormat instanceof OpenWireFormat) {code} however doing a blocking read is also fine for openwire because of the negotiation that will follow.
Turns out there is similar logic in mqtt and stomp (without the sync around negotiation): https://github.com/apache/activemq/blob/da9fedead4078cc82efb32e15d8d9cd53c8e82dc/activemq-mqtt/src/main/java/org/apache/activemq/transport/mqtt/MQTTNIOSSLTransport.java#L53

As an aside, the blocking around openwire negotiation relates to the need to send each sides preferred options with default format so that it will be properly marshalled/unmarshalled *before* options are applied.
;;;","27/Feb/17 17:01;jira-bot;Commit b6521e292b20788eef44f3a7810d8e4281b677dc in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b6521e2 ]

[AMQ-6414] additional logging that helped identify root cause
;;;","27/Feb/17 17:24;cshannon;[~gtully], thanks for digging deeper into this to see the root cause.  I had primarily noticed it with the auto+nio+ssl transport but then saw it happen in other cases which is when I discovered the need to trigger an extra read to finish reading the bytes.

I still think the async start is needed when using auto+nio+ssl otherwise it will get stuck.  For example, using NetworkReconnectSslNioTest that you added, If I change the doInit() method in NIOSSLTransport to the following it works fine:

{code:java}
    protected void doInit() throws Exception {
        if (inputBuffer.position() > 0 && inputBuffer.hasRemaining() && wireFormat instanceof OpenWireFormat) {
            taskRunnerFactory.execute(new Runnable() {

                @Override
                public void run() {
                    //Need to start in new thread to let startup finish first
                    //We can trigger a read because we know the channel is ready since the SSL handshake
                    //already happened
                    serviceRead();
                    initialized.countDown();
                }
            });
        } else {
            initialized.countDown();
        }
    }
{code}

However, if I then update your test to use the auto+nio+ssl transport it will no longer work anymore even with the above change at as it needs to be async so the detection doesn't get stuck.

So, we could either leave things the way they currently are now (with the async always scheduled) or update it so that async is only always scheduled for auto+nio+ssl and conditionally for regular nio+ssl transports.;;;","28/Feb/17 11:20;gtully;[~cshannon] I think it is ok as it is now, so long as we don't get a concurrent read which your initialized latch sorts.
If I get a chance to explore the auto scenario we can revisit.;;;","28/Feb/17 13:12;cshannon;[~gtully], sounds good.  I've been running the patch since September and it has been working well.  No more timeout issues on any of the nio+ssl transports and the countdown latch has prevented a concurrent read.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
kahadb concurrentStoreAndDispatch - producer audit managed by store is skipped,AMQ-6413,13002091,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,01/Sep/16 15:26,08/Sep/16 19:38,14/Jul/23 05:44,01/Sep/16 15:56,5.14.0,,,,,,,,,5.14.1,5.15.0,,,Message Store,,,,,0,,,,,,"failover replay or inflight sends are trapped by the producer audit that is backed by the persistence adapter audit.
The intent is to drop any resend that has made it into the store.
With concurrentStoreAndDispatch messages can skip the store but also can skip the audit.
A failover resend can get delivered to the store and replayed to the cursor. 
AMQ-6406 and the message will go the the DLQ or get dispatched if the cursor audit is disabled/exhausted.

Pre AMQ-6406 the message would not get dispatched till restart, holding up gc.",,gtully,jira-bot,tmielke,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6406,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Sep 08 19:37:45 UTC 2016,,,,,,,,,,,"0|i3352v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Sep/16 15:55;jira-bot;Commit f8bc19b96da752e216de2c5c543a7d8523512a03 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=f8bc19b ]

AMQ-6413 - ensure audit update on skipped store add for kahadb concurrentStoreAndDispatch. Fix and test
;;;","08/Sep/16 19:37;jira-bot;Commit cf004c205de6eb9b69ba85a3467c3798043c6460 in activemq's branch refs/heads/activemq-5.14.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=cf004c2 ]

AMQ-6413 - ensure audit update on skipped store add for kahadb concurrentStoreAndDispatch. Fix and test

(cherry picked from commit f8bc19b96da752e216de2c5c543a7d8523512a03)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
kahadb concurrentStoreAndDispatch - duplicate suppression in cursor needs to wait for possible store add,AMQ-6406,13000023,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,25/Aug/16 13:56,08/Sep/16 19:38,14/Jul/23 05:44,01/Sep/16 15:56,5.14.0,,,,,,,,,5.14.1,5.15.0,,,KahaDB,,,,,0,,,,,,"An inflight store add that is a duplicate may get suppressed by the index or may get added as a duplicate if the original has already been dispatched and acked.
If the cursor traps the duplicate message, it won't get dispatched so it needs to get removed from the store. 
Otherwise it will remain till restart and possibly get redispatched and/or hold up gc.
The store removal is only occurring for the jdbc store (that has no separate index to track duplicates). This needs fixing.",,gtully,jira-bot,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6413,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Sep 08 19:37:46 UTC 2016,,,,,,,,,,,"0|i32sbz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Aug/16 14:01;jira-bot;Commit 2b1cda196471280c4fc587d8664d6373e18c97ca in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=2b1cda1 ]

AMQ-6406 - ensure duplicates trapped by the cursor-add or queue-page-in are removed from the message store
;;;","08/Sep/16 19:37;jira-bot;Commit 1d1c9262fdd224dcca744b729bebe8cf4e13c3ef in activemq's branch refs/heads/activemq-5.14.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=1d1c926 ]

AMQ-6406 - ensure duplicates trapped by the cursor-add or queue-page-in are removed from the message store

(cherry picked from commit 2b1cda196471280c4fc587d8664d6373e18c97ca)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQP/JMS message transformation broken.,AMQ-6404,12999164,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,tabish,hakanj,hakanj,23/Aug/16 09:45,02/Sep/16 08:41,14/Jul/23 05:44,23/Aug/16 14:15,5.14.0,,,,,,,,,5.14.1,5.15.0,,,AMQP,,,,,0,,,,,,"The changes introduced by AMQ-6374 broke the transformation between AMQP and JMS for UTF-8 text messages.

I have enabled the JMS message transformer for the AMQP transport connector. If I send a UTF-8 text message over AMQP and then reads it back over AMQP I get an empty message body.

I have looked at the code and found the bad code. It is in the {{org.apache.activemq.transport.amqp.message.ActiveMQJMSVendor}} class.

When the inbound message arrives the {{createTextMessage(String)}} method is called. That method creates an {{ActiveMQTextMessage}} instance whose data is set with the {{setText}} method.

When the outbound message is to be sent the {{getBinaryFromMessageBody(TextMessage)}} method is called. This method tries to get the data with the {{getContent}} method, but that method always returns {{null}}. The {{getText}} method returns the correct data, but is not used here.
",,hakanj,jira-bot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6374,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Sep 02 08:41:08 UTC 2016,,,,,,,,,,,"0|i32n1j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Aug/16 13:37;tabish;Do you have a unit test that can reproduce this.  It's unusual that the content of the message on the broker has been unmarshaled.;;;","23/Aug/16 14:04;jira-bot;Commit 1030fb184216d00e3fd43a416931acd3b2fc6794 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=1030fb1 ]

https://issues.apache.org/jira/browse/AMQ-6404

Add check for unmarshalled text body and handle that case.;;;","23/Aug/16 14:07;jira-bot;Commit 680d082a179902d14cf38a8afde7c2c12a062106 in activemq's branch refs/heads/activemq-5.14.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=680d082 ]

https://issues.apache.org/jira/browse/AMQ-6404

Add check for unmarshalled text body and handle that case.
(cherry picked from commit 1030fb184216d00e3fd43a416931acd3b2fc6794)
;;;","23/Aug/16 14:08;hakanj;I tested this with a trivial program using the ""qpid_messaging"" api (from qpid-cpp).
I just wrote a simple ""hello"" message without any special attributes set and then read it back again.

I will try to create a unit test in the ""AmqpTransformerTest.java"" file and post it here when I am done.
;;;","23/Aug/16 14:15;tabish;I've added a small fix to check the text if the content is bare so it should now handle this case.  ;;;","23/Aug/16 14:43;hakanj;That was quick.
Thanks for your help.;;;","23/Aug/16 14:46;tabish;Still worth testing if you manage to create a Java reproducer to check that all cases are handled.;;;","02/Sep/16 08:41;hakanj;Do you know when the next release is planned?
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq-camel - Potential NPE in OriginalDestinationPropagateStrategy,AMQ-6402,12998671,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,davsclaus,davsclaus,davsclaus,20/Aug/16 09:48,20/Aug/16 10:16,14/Jul/23 05:44,20/Aug/16 10:16,5.14.0,,,,,,,,,5.14.1,5.15.0,,,Camel,,,,,0,,,,,,"java.lang.NullPointerException
	at org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy.onMessageCreated(OriginalDestinationPropagateStrategy.java:45) ~[activemq-camel-5.14.0.jar:5.14.0]
	at org.apache.camel.component.jms.JmsBinding.makeJmsMessage(JmsBinding.java:309) ~[camel-jms-2.18-SNAPSHOT.jar:2.18-SNAPSHOT]
	at org.apache.camel.component.jms.JmsProducer$2.createMessage(JmsProducer.java:301) ~[camel-jms-2.18-SNAPSHOT.jar:2.18-SNAPSHOT]",,davsclaus,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Sat Aug 20 10:16:45 UTC 2016,,,,,,,,,,,"0|i32jzz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Aug/16 10:16;jira-bot;Commit 853e80063bd51409ac646b034b99ac934e4d1870 in activemq's branch refs/heads/activemq-5.14.x from [~davsclaus]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=853e800 ]

AMQ-6402: Fixed potential NPE in OriginalDestinationPropagateStrategy
;;;","20/Aug/16 10:16;jira-bot;Commit 8447e1af2d45479fb602a6c16982e7b00b52a5b0 in activemq's branch refs/heads/master from [~davsclaus]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=8447e1a ]

AMQ-6402: Fixed potential NPE in OriginalDestinationPropagateStrategy
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Allow host name mapping with publishedAddressPolicy on a transportConnector,AMQ-6392,12995964,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,09/Aug/16 14:20,09/Aug/16 14:27,14/Jul/23 05:44,09/Aug/16 14:27,5.14.0,,,,,,,,,5.15.0,,,,Transport,,,,,0,,,,,,"The publishAddressPolicy allows resolution and plain text but does not allow replacement. There is an option to map ports, but not to map hosts.
Adding a simple hostMap option will allow hostnames to be easily substituted when published

relates to AMQ-4024",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4024,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Aug 09 14:22:45 UTC 2016,,,,,,,,,,,"0|i323av:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Aug/16 14:22;jira-bot;Commit 4800a7a1a46dd248b130b4289cf9f26787fe5612 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=4800a7a ]

AMQ-6392 - allow mapping of host names via the publish address strategy
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LoggingBrokerPlugin logs a message size equal to 0,AMQ-6389,12995681,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,gtully,gtully,08/Aug/16 15:43,08/Aug/16 15:47,14/Jul/23 05:44,08/Aug/16 15:47,5.14.0,,,,,,,,,5.15.0,,,,Broker,,,,,0,,,,,,"The size attribute is not initialised on the way into the broker, but is on the way out. Would be nice if this attribute was visible on the toString for this plugin.",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Aug 08 15:47:10 UTC 2016,,,,,,,,,,,"0|i321jz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Aug/16 15:47;jira-bot;Commit 9249315688e43aeb8f9b5f7a0ece71a5b08b6bda in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=9249315 ]

AMQ-6389 - init the size attribute prior to logging a message send in the logging plugin
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Messages delivered to durable subcriber are kept in broker,AMQ-6387,12995329,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,fn,fn,05/Aug/16 20:12,01/Sep/16 20:28,14/Jul/23 05:44,01/Sep/16 20:26,5.13.4,,,,,,,,,5.14.1,5.15.0,,,Broker,,,,,0,,,,,,"Given:
* broker with disabled persistence
* non-transactional sessions with {{AUTO_ACKNOWLEDGE}}
* topic

When: 
* there is inactive durable subscription
* messages are sent to that topic with {{DeliveryMode.PERSISTENT}}
* subscription becomes active and all messages are delivered to the durable consumer

Then:
* messages are kept in brokers memory (visible in {{memoryPercentUsage}}, on heap etc)

When: 
* messages expiration time or TTL is elapsed

Then:
* messages are still kept in brokers memory (visible in {{memoryPercentUsage}}, on heap etc)

-----
Messages are kept also when message selector of durable subscription does not match messages sent to topic. Changing {{DeliveryMode}} to {{NON_PERSISTENT}} makes the messages not kept. 
Attached test case.",jdk1.8.0_77,fn,jira-bot,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Aug/16 21:39;fn;ActiveMqTest.java;https://issues.apache.org/jira/secure/attachment/12822380/ActiveMqTest.java",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Sep 01 20:28:04 UTC 2016,,,,,,,,,,,"0|i31zdr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Sep/16 20:26;jira-bot;Commit bb8d32c04aa06735d0036963685a4bc41fcbaad7 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=bb8d32c ]

https://issues.apache.org/jira/browse/AMQ-6387

Fix up the Memory Store such that it removes the references it adds to
messages when they are placed into the memory durable topic subscription
store.;;;","01/Sep/16 20:28;jira-bot;Commit fb24b48b8a69c841ca86af073660247e53ebbd1e in activemq's branch refs/heads/activemq-5.14.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=fb24b48 ]

https://issues.apache.org/jira/browse/AMQ-6387

Fix up the Memory Store such that it removes the references it adds to
messages when they are placed into the memory durable topic subscription
store.
(cherry picked from commit bb8d32c04aa06735d0036963685a4bc41fcbaad7)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Durable network subscriptions don't update the forwards network statistic,AMQ-6381,12993626,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,cshannon,cshannon,cshannon,29/Jul/16 19:53,29/Jul/16 19:58,14/Jul/23 05:44,29/Jul/16 19:58,5.13.4,,,,,,,,,5.14.0,,,,Broker,,,,,0,,,,,,When messages are forwarded to a remote broker from a networked durable subscription the forwards stat which keeps a count of the number of forwarded messages is never incremented.  It does work properly for topic subscriptions.,,cshannon,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jul 29 19:58:35 UTC 2016,,,,,,,,,,,"0|i31ovj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/Jul/16 19:58;jira-bot;Commit 82295fd2c6dea96433d15e00e00d53c6d41f5c0b in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=82295fd ]

https://issues.apache.org/jira/browse/AMQ-6381

Fixing DurableTopicSubscription so that an ack will properly update the
forwards statistic on an ack
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KahaDb recover from corrupt metadata state locations that can be rebuilt,AMQ-6378,12992948,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,27/Jul/16 14:50,27/Jul/16 15:02,14/Jul/23 05:44,27/Jul/16 15:02,5.13.0,,,,,,,,,5.14.0,,,,Message Store,,,,,0,,,,,,"The index tracks producerAudit and ackMessageFileMap locations. Failure to recreate/read on startup can be replayed from the journal however if the locations are corrupt the broker errors out. In this case a replay can still recreate this information.

{code}
java.io.IOException: Invalid location: 7:4802, : java.lang.NegativeArraySizeException

	at org.apache.activemq.store.kahadb.disk.journal.DataFileAccessor.readRecord(DataFileAccessor.java:92)
	at org.apache.activemq.store.kahadb.disk.journal.Journal.read(Journal.java:867)
	at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:1123)
	at org.apache.activemq.store.kahadb.MessageDatabase.recoverProducerAudit(MessageDatabase.java:754)
	at org.apache.activemq.store.kahadb.MessageDatabase.recover(MessageDatabase.java:639)
	at org.apache.activemq.store.kahadb.MessageDatabase.open(MessageDatabase.java:439)
	at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:458)
	at org.apache.activemq.store.kahadb.MessageDatabase.doStart(MessageDatabase.java:291)
	at org.apache.activemq.store.kahadb.KahaDBStore.doStart(KahaDBStore.java:216)
	at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:55)
	at org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter.doStart(KahaDBPersistenceAdapter.java:223)
	at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:55)
	at org.apache.activemq.broker.BrokerService.doStartPersistenceAdapter(BrokerService.java:674)
	at org.apache.activemq.broker.BrokerService.startPersistenceAdapter(BrokerService.java:658)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:622)
Caused by: java.lang.NegativeArraySizeException
	at org.apache.activemq.store.kahadb.disk.journal.DataFileAccessor.readRecord(DataFileAccessor.java:87){code}
	",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jul 27 14:59:42 UTC 2016,,,,,,,,,,,"0|i31kov:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Jul/16 14:59;jira-bot;Commit 822e2be90e393a95cbdb998d2407b65e03bdd146 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=822e2be ]

AMQ-6378 force recovery on corrupt metadata location info, relates to AMQ-6376
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IOException on pageIn should involve IOExeceptionHandler,AMQ-6376,12992882,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,27/Jul/16 10:52,27/Jul/16 14:59,14/Jul/23 05:44,27/Jul/16 11:00,5.13.0,,,,,,,,,5.14.0,,,,Broker,Message Store,,,,0,,,,,,"This relates to AMQ-6372 where the broker was running out of file descriptors.
However if the IOException occurred for dispatch when the cache is disabled the broker carries on in error. The IOExceptionHandler is invoked on every store write failure, but should also be on the read error path.
This ensures a timely response to disk IO errors. 


{code}2016-07-27 11:50:26,292 [calhost] Task-1] - ERROR AbstractStoreCursor            - org.apache.activemq.broker.region.cursors.QueueStorePrefetch@7cd532ee:Test,batchResetNeeded=false,size=50,cacheEnabled=false,maxBatchSize:50,hasSpace:true,pendingCachedIds.size:0,lastSyncCachedId:null,lastSyncCachedId-seq:null,lastAsyncCachedId:null,lastAsyncCachedId-seq:null,store=permits:10000,sd=nextSeq:50,lastRet:MessageOrderCursor:[def:0, low:0, high:0],pending:0 - Failed to fill batch
java.io.EOFException
	at java.io.RandomAccessFile.readFully(RandomAccessFile.java:446)
	at java.io.RandomAccessFile.readFully(RandomAccessFile.java:424)
	at org.apache.activemq.util.RecoverableRandomAccessFile.readFully(RecoverableRandomAccessFile.java:75)
	at org.apache.activemq.store.kahadb.disk.journal.DataFileAccessor.readRecord(DataFileAccessor.java:88)
	at org.apache.activemq.store.kahadb.disk.journal.Journal.read(Journal.java:867)
	at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:1118)
	at org.apache.activemq.store.kahadb.KahaDBStore.loadMessage(KahaDBStore.java:1177)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$4.execute(KahaDBStore.java:584)
	at org.apache.activemq.store.kahadb.disk.page.Transaction.execute(Transaction.java:779)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.recoverNextMessages(KahaDBStore.java:573)
	at org.apache.activemq.store.ProxyMessageStore.recoverNextMessages(ProxyMessageStore.java:110)
	at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.doFillBatch(QueueStorePrefetch.java:120)
	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:406)
	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:149)
	at org.apache.activemq.broker.region.cursors.StoreQueueCursor.reset(StoreQueueCursor.java:169)
	at org.apache.activemq.broker.region.Queue.doPageInForDispatch(Queue.java:1935)
	at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:2160){code}",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6372,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jul 27 14:59:43 UTC 2016,,,,,,,,,,,"0|i31ka7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Jul/16 11:00;gtully;resolved with: 

Commit 6b8e743b083b9baf201f26b6f7d9a574638ba537 in activemq's branch refs/heads/master from Gary Tully
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=6b8e743 ]
AMQ-6372 - add IOExceptionHandler to kahadb read path to ensure fast shutdown on disk access errors

wrong jira number in the commit message!;;;","27/Jul/16 14:59;jira-bot;Commit 822e2be90e393a95cbdb998d2407b65e03bdd146 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=822e2be ]

AMQ-6378 force recovery on corrupt metadata location info, relates to AMQ-6376
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KahaDB reader pool not releasing unused open files till deletion - too many open files,AMQ-6372,12992257,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,25/Jul/16 12:32,30/Jul/16 17:01,14/Jul/23 05:44,25/Jul/16 12:35,5.13.0,,,,,,,,,5.14.0,,,,KahaDB,,,,,0,,,,,,"Leading to: 
{code}java.io.FileNotFoundException: .../kahadb/db-2300.log (Too many open files){code}
Kahadb has an accessor pool of random access files and a periodic cleanup. However the cleanup does not work as expected.
Only on journal gc does the pool get purged.
This issue can arise with very large amounts of journal files that are paging and on recovery when the entire journal needs to be replayed.
In essence, currently there needs to be fd per journal data file.
The workaround is to increase the nofiles (max open files) for the broker process.",,gtully,jira-bot,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6376,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Sat Jul 30 17:01:36 UTC 2016,,,,,,,,,,,"0|i31gfb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Jul/16 12:33;jira-bot;Commit d427952b19f1763d5128d8a6c145d61dcefd79d9 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=d427952 ]

AMQ-6372 - fix up accessor pool cleanupUnused and use the minimum number of open files for recovery
;;;","25/Jul/16 12:35;gtully;cleanup task now works as expected and during recovery only the current data file is retained in the pool.;;;","27/Jul/16 10:58;jira-bot;Commit 6b8e743b083b9baf201f26b6f7d9a574638ba537 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=6b8e743 ]

AMQ-6372 - add IOExceptionHandler to kahadb read path to ensure fast shutdown on disk access errors
;;;","30/Jul/16 17:01;jira-bot;Commit 71bb54f94c9554f24e502bccd40231b80da56740 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=71bb54f ]

https://issues.apache.org/jira/browse/AMQ-6372

Fixing test so that test DataFile is written to a temporary directory
instead of the main activemq-kahadb-store directory.  This prevents git
from picking up the test file
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JDBC message store - jdbc connection pool - potential deadlock with cleanup task when pool exhausted,AMQ-6370,12991247,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,20/Jul/16 21:11,26/Jul/16 13:06,14/Jul/23 05:44,21/Jul/16 10:00,5.13.0,,,,,,,,,5.14.0,,,,JDBC,Message Store,XA,,,0,,,,,,"There is an read/write lock guarding the cleanup task and other jdbc ops in the jdbc message store.
Typically the read lock is obtained before the connection from the jdbc connection pool.
In the case of xa transactions, the connection is obtained before the read lock, in transactioncontext.begin, leaving a window between which readlock holders can be blocked pending the connection release.
If there is a cleanup (and write lock) request before release, the xa transaction cannot obtain a read lock and we are stuck.
Disabling the cleanup task avoids this issue, but that is only an option if there are no durable subs or if the durable sub cleanup task can be tackled through db admin.
",,gtully,jira-bot,tnarake,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-2551,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jul 26 13:06:19 UTC 2016,,,,,,,,,,,"0|i31a6v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Jul/16 21:15;gtully;The fix for AMQ-2551 is the root cause.
Moving the locking to the transaction context, essentially up a level, will ensure that the datasource connection handling is always done with the appropriate lock.;;;","21/Jul/16 09:58;jira-bot;Commit 2a815c2e08a5e2f5a056fdafbcd9c30dacf369d5 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=2a815c2 ]

AMQ-6370 - move cleanup lock to connection allocation to avoid contention with between store and connection pool. pool connection grant or block is now guarded by store lock which lasts till connection is closed
;;;","21/Jul/16 10:00;gtully;moved locking up to connection allocation ensuring lock is held till close.;;;","25/Jul/16 12:41;jira-bot;Commit ad657cc202f30bc279316ed34c1e48c7291070cf in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=ad657cc ]

AMQ-6370 - ensure derby instance is created
;;;","26/Jul/16 13:06;jira-bot;Commit 29856516098ba3edc0d1cd5d68bc70beeae1e73d in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=2985651 ]

AMQ-6370 - speed up the test and wait a bit longer for sends in slow ci
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
A duplex bridge will not properly honor dynamicOnly and restart subscriptions,AMQ-6366,12990802,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,19/Jul/16 15:26,20/Jul/16 12:33,14/Jul/23 05:44,19/Jul/16 15:36,5.13.4,,,,,,,,,5.14.0,,,,Broker,Network of Brokers,,,,0,,,,,,When creating a bridge the dynamicOnly flag being false should recreate subscriptions on start up.  This works fine for the normal case but is broken in the duplex case in one direction because when the duplex bridge is created the durable destination list is never set.,,cshannon,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jul 20 12:33:59 UTC 2016,,,,,,,,,,,"0|i317g7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/Jul/16 15:32;jira-bot;Commit 39184e2fb052fc73c69934890a16b333f1ea31d5 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=39184e2 ]

https://issues.apache.org/jira/browse/AMQ-6366

Fixing the duplex bridge case for restarting durable subscriptions when
dynamicOnly is false
;;;","19/Jul/16 15:36;jira-bot;Commit a82bd3cf721e32272b2cf3dee3aa1afcc726c3cb in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=a82bd3c ]

https://issues.apache.org/jira/browse/AMQ-6366

Fixing the duplex bridge case for restarting durable subscriptions when
dynamicOnly is false

(cherry picked from commit 39184e2fb052fc73c69934890a16b333f1ea31d5)
;;;","19/Jul/16 19:20;jira-bot;Commit 4fc16630ea94a8eda96ffa99a8e559ca4355c02a in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=4fc1663 ]

Revert ""https://issues.apache.org/jira/browse/AMQ-6366""

This reverts commit a82bd3cf721e32272b2cf3dee3aa1afcc726c3cb.
;;;","19/Jul/16 19:21;cshannon;Backing this out of 5.13.x and only applying to master because adding this feature causes some issues with the NC durables not being properly deleted when the original durable is deleted.  I'm going to be resolving this in another JIRA for 5.14.0;;;","20/Jul/16 12:33;jira-bot;Commit 9f7d70ba0d8f0262c76844954b274786e3d7545f in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=9f7d70b ]

https://issues.apache.org/jira/browse/AMQ-6366

Need to make sure that the durableDestinations set on the duplex bridge
are only topics
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Message can remain inflight after consumer side expiration acknowledgements,AMQ-6361,12989901,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,tabish,tabish,15/Jul/16 18:50,26/Jul/16 12:46,14/Jul/23 05:44,22/Jul/16 14:19,5.13.3,,,,,,,,,5.14.0,,,,Broker,,,,,0,,,,,,"If the client clock is slightly ahead of the brokers clock a message could be expired on the client but not considered expired on the broker.

When the expiry ACK is sent to the broker it checks if the message is also considered expired on the broker side. If the broker clock is behind the client side clock the message could be considered not expired on the broker and not
removed from the broker's dispatched list. This leaves the broker reporting a message inflight from the broker's perspective even though the message has been expired on the consumer(client) side

The broker should treat the expired ACK as the authority on whether a message is expired and process it as such regardless of the broker side clock.",,gtully,jira-bot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jul 26 12:46:00 UTC 2016,,,,,,,,,,,"0|i311w7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Jul/16 19:08;jira-bot;Commit cd5ea6c27fa92a57dc68cd9632572a77b36c446c in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=cd5ea6c ]

https://issues.apache.org/jira/browse/AMQ-6361

Honor the expired ack from the client as the authority on expiration;;;","21/Jul/16 12:45;gtully;There is a regression in org.apache.activemq.usecases.ExpiredMessagesTest
the problem is that the stats are off b/c the message can get processed twice for expiry. The stats reports too many expired and the dlq rejects the duplicates so the stat and dlq queue size don't match for the assertion.
expiry is one process that has shared access to the message.

peeking at adding method to messageReference to encapsulate the right to process an expired message, such that it is done once.;;;","22/Jul/16 14:18;jira-bot;Commit 6cc2c1190da15579a9a886bad03596e14a77a677 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=6cc2c11 ]

AMQ-6361 - fix contention over expiry processing with expiry task and client expiry ack, unit test regression sorted.
;;;","26/Jul/16 12:46;jira-bot;Commit 01cfa7727dfb6e680e3a94789fd0798c36dbc87c in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=01cfa77 ]

AMQ-6361 - fix additional test regression on topic sub expiry AMQ4083Test,MessageEvictionTest
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
shutdown due to a local error: java.lang.ArithmeticException: / by zero,AMQ-6357,12989461,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,theseal,theseal,14/Jul/16 13:26,14/Jul/16 14:18,14/Jul/23 05:44,14/Jul/16 14:18,5.13.0,,,,,,,,,5.13.4,5.14.0,,,,,,,,0,,,,,,"We have two brokers esb-test-mq01 and esb-test-mq02 configured in a
network of brokers. In front of the brokers we have a load balancer
that spreads the connecting clients between the brokers.
The brokers connect to each other directly without the load balancer.

Sometimes (we havn't found any patterns for when it occurs) one of the
connections between the brokers closes down with the following message:

""Network connection between vm://esb-test-mq01.it.su.se#18 and ssl://
esb-test-mq02.it.su.se/77.238.37.208:61616 shutdown due to a local error:
java.lang.ArithmeticException: / by zero""

After this the faulty broker never calls back. We have finally caught this
division with TRACE turned on, but we can't make anything out of the
logs. (See attatched log file)

Tim said on activemq-users to include as much information as I can but
I can't figure out anything more specific for our setup. I think activemq.xml 
says it all (and it is attatched to this issue).
Let us know if there is any other information we can provide you with.
","# /local/jdk/bin/java -version
java version ""1.8.0_45""
Java(TM) SE Runtime Environment (build 1.8.0_45-b14)
Java HotSpot(TM) 64-Bit Server VM (build 25.45-b02, mixed mode)

# uname -a
Linux esb-test-mq01 3.13.0-91-generic #138-Ubuntu SMP Fri Jun 24 17:00:34 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux

# lsb_release -a
No LSB modules are available.
Distributor ID: Ubuntu
Description:    Ubuntu 14.04.4 LTS
Release:        14.04
Codename:       trusty

Activemq 5.13.0",cshannon,jira-bot,theseal,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jul/16 13:26;theseal;TRACE.log;https://issues.apache.org/jira/secure/attachment/12817947/TRACE.log","14/Jul/16 13:26;theseal;activemq.xml;https://issues.apache.org/jira/secure/attachment/12817946/activemq.xml",,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jul 14 14:18:28 UTC 2016,,,,,,,,,,,"0|i30z6f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Jul/16 14:16;jira-bot;Commit 42dabb7a7a7f981eb57d46663456ac1d7c912acb in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=42dabb7 ]

https://issues.apache.org/jira/browse/AMQ-6357

Preventing a divide by 0 error by taking a local reference to the
prefetch size to guarantee that the value doesn't change after the > 0
check
;;;","14/Jul/16 14:17;jira-bot;Commit 78cacc5e17b6d5a93ff3b857043a3f5879e48edd in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=78cacc5 ]

https://issues.apache.org/jira/browse/AMQ-6357

Preventing a divide by 0 error by taking a local reference to the
prefetch size to guarantee that the value doesn't change after the > 0
check

(cherry picked from commit 42dabb7a7a7f981eb57d46663456ac1d7c912acb)
;;;","14/Jul/16 14:18;cshannon;Resolved by using a local reference to make sure that the value that is the divisor doesn't change after the initial > 0 check;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Processing a KahaUpdateMessageCommand can lead to wrong store size being reported ,AMQ-6356,12989457,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,cshannon,cshannon,cshannon,14/Jul/16 13:18,14/Jul/16 13:24,14/Jul/23 05:44,14/Jul/16 13:24,5.13.3,,,,,,,,,5.13.4,5.14.0,,,Broker,KahaDB,,,,0,,,,,,When KahaDB processes a KahaUpdateMessageCommand it's possible for the size statistic to be inadvertently increased in size.  This can happen if the location in the journal of the message command matches the new location.  This bug won't show up in normal usage as typically an update message command is only processed when a new command is written to the journal (and hence a new location) but should still be fixed.,,cshannon,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jul 14 13:23:02 UTC 2016,,,,,,,,,,,"0|i30z5j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Jul/16 13:22;jira-bot;Commit a5050a8bc5b5f45852269867dd9bf46b9381912d in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=a5050a8 ]

https://issues.apache.org/jira/browse/AMQ-6356

Fixing store size calculation on KahaUpdateMessageCommand processing so
that the size won't increase inadvertently if the existing location of
the command in the journal is the same as the new location
;;;","14/Jul/16 13:23;jira-bot;Commit f1642b4244b0bbbdeaaec6fe4808c9e54835fbf7 in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=f1642b4 ]

https://issues.apache.org/jira/browse/AMQ-6356

Fixing store size calculation on KahaUpdateMessageCommand processing so
that the size won't increase inadvertently if the existing location of
the command in the journal is the same as the new location

(cherry picked from commit a5050a8bc5b5f45852269867dd9bf46b9381912d)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Provide bundles for activemq-client and its dependencies,AMQ-6355,12989449,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cschneider,cschneider,14/Jul/16 12:59,14/Jul/16 14:47,14/Jul/23 05:44,14/Jul/16 14:47,5.13.3,,,,,,,,,5.14.0,,,,JMS client,,,,,0,,,,,,"I need to install activemq client on plain felix. Of course I can use the karaf feature and install all bundles from it. This is quite hughe though.

So I tried to install the activemq-client and just its dependencies. Interestingly activemq does not seem to produce bundles during the build. 
This is especially strange as some of the projects even include custom maven bundle plugin settings.

The reason seems to be that the packaging type bundle is missing.
I will provide a PR to adjust the bundles needed for the activemq client.",,cschneider,cshannon,githubbot,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jul 14 14:47:22 UTC 2016,,,,,,,Patch Available,,,,"0|i30z3r:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Jul/16 13:01;githubbot;GitHub user cschneider opened a pull request:

    https://github.com/apache/activemq/pull/191

    [AMQ-6355] Provide bundles for client and jms-pool

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/cschneider/activemq AMQ-6355

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/191.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #191
    
----
commit 3e129348057a7b64ee54c0562c0c986cbb7fa0ef
Author: Christian Schneider <chris@die-schneider.net>
Date:   2016-07-14T13:00:24Z

    [AMQ-6355] Provide bundles for client and jms-pool

----
;;;","14/Jul/16 14:46;jira-bot;Commit 24eb2bb2db3ebfd68f5c143b02a1e8f24ca3b0ac in activemq's branch refs/heads/master from [~chris@die-schneider.net]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=24eb2bb ]

[AMQ-6355] Provide bundles for client and jms-pool
;;;","14/Jul/16 14:46;jira-bot;Commit 71ee1eae18ee92c37e600945397ee6b7d893629e in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=71ee1ea ]

https://issues.apache.org/jira/browse/AMQ-6355

This closes #191
;;;","14/Jul/16 14:47;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/191
;;;","14/Jul/16 14:47;cshannon;Thanks for the patch, I applied it to master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"AMQP: Using JMS Transformer, preserve the type of the original CorrelationId",AMQ-6353,12988799,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,12/Jul/16 18:15,12/Jul/16 18:21,14/Jul/23 05:44,12/Jul/16 18:21,5.13.3,,,,,,,,,5.13.4,5.14.0,,,AMQP,,,,,0,,,,,,"When transforming the incoming message using the JMS Transformer the type of the incoming correlation ID is lost when stored in the string value in the Message object, we need to preserve that type as this is meant to be immutable.  Because the ActiveMQMessage object's only have a text value for correlation ID we need to encode the incoming value to a string form and apply prefix values to allow for re-encoding the correlation to the original type on the way out.
",,jira-bot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6263,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jul 12 18:20:00 UTC 2016,,,,,,,,,,,"0|i30v3b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Jul/16 18:16;tabish;Similar situation to the MessageId encoding. ;;;","12/Jul/16 18:19;jira-bot;Commit 16c487a7b9ba54c013254a1c642d31eba86acc8b in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=16c487a ]

https://issues.apache.org/jira/browse/AMQ-6353

Fix and test for encoding the correlation Id value to the ActiveMQ
message object's string value;;;","12/Jul/16 18:20;jira-bot;Commit 3563f14de668c9c7b06121fb4b68ec459b71d334 in activemq's branch refs/heads/activemq-5.13.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=3563f14 ]

https://issues.apache.org/jira/browse/AMQ-6353

Fix and test for encoding the correlation Id value to the ActiveMQ
message object's string value
(cherry picked from commit 16c487a7b9ba54c013254a1c642d31eba86acc8b)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Temporary message store cursor does not track store message size properly,AMQ-6352,12988735,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,cshannon,cshannon,cshannon,12/Jul/16 14:26,12/Jul/16 14:28,14/Jul/23 05:44,12/Jul/16 14:28,5.13.3,,,,,,,,,5.13.4,5.14.0,,,Broker,,,,,0,,,,,,"The PList implementation for the temporary store that is used by the FilePendingMessageCursor has a bug that causes the message size to not be accurate.  On removal of an item from the PList, a null reference is always passed to the onRemove method by mistake.  This causes the message size counter to not decrement properly.",,cshannon,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jul 12 14:28:34 UTC 2016,,,,,,,,,,,"0|i30upb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Jul/16 14:28;jira-bot;Commit d635a369404db25e1c450283a224ed89abf3c5a7 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=d635a36 ]

https://issues.apache.org/jira/browse/AMQ-6352

Fixing PList size tracking by moving the null assignment on removal to
after the onRemoval method is called to make sure that the decrement is
done properly.
;;;","12/Jul/16 14:28;jira-bot;Commit 9c483fa477fd0202cd311d044e22d62eddd5d25f in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=9c483fa ]

https://issues.apache.org/jira/browse/AMQ-6352

Fixing PList size tracking by moving the null assignment on removal to
after the onRemoval method is called to make sure that the decrement is
done properly.

(cherry picked from commit d635a369404db25e1c450283a224ed89abf3c5a7)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PooledConnectionFactory throws 'IllegalStateException: Pool not open' after re-init,AMQ-6350,12988297,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,amarkevich,amarkevich,11/Jul/16 14:09,11/Jul/16 22:22,14/Jul/23 05:44,11/Jul/16 22:22,5.13.3,,,,,,,,,5.13.4,5.14.0,,,Pool,,,,,0,,,,,,"Blueprint:
{code}
<cm:property-placeholder persistent-id="".."" update-strategy=""reload"" />
<bean id=""pooledConnectionFactory"" class=""org.apache.activemq.jms.pool.PooledConnectionFactory""
        init-method=""start"" destroy-method=""stop"">
...
</bean>
{code}
or Java:
{code}
org.apache.activemq.jms.pool.PooledConnectionFactory pcf = new org.apache.activemq.jms.pool.PooledConnectionFactory();
pcf.start();
...
pcf.stop();
pcf.start();
// producer.send(textMsg);
{code}

Stacktrace:
{code}
Caused by: javax.jms.IllegalStateException: java.lang.IllegalStateException: Pool not open
	at org.apache.activemq.jms.pool.ConnectionPool.createSession(ConnectionPool.java:159)
	at org.apache.activemq.jms.pool.PooledConnection.createSession(PooledConnection.java:167)
	at org.talend.ipaas.rt.amqsource.AMQEventSource.createJmsSession(AMQEventSource.java:282)
	at org.talend.ipaas.rt.amqsource.AMQEventSource.sendEvent(AMQEventSource.java:117)
	... 2 more
Caused by: java.lang.IllegalStateException: Pool not open
	at org.apache.commons.pool2.impl.BaseGenericObjectPool.assertOpen(BaseGenericObjectPool.java:672)
	at org.apache.commons.pool2.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:339)
	at org.apache.commons.pool2.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:279)
	at org.apache.activemq.jms.pool.ConnectionPool.createSession(ConnectionPool.java:141)
	... 5 more
{code}",,amarkevich,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Jul/16 14:09;amarkevich;PooledConnectionFactory.patch;https://issues.apache.org/jira/secure/attachment/12817176/PooledConnectionFactory.patch",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Patch,,,,,,,,,9223372036854775807,,,Mon Jul 11 22:21:49 UTC 2016,,,,,,,Patch Available,,,,"0|i30shj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Jul/16 22:20;jira-bot;Commit 0706fd0bc1f499f1fc304ec1c70aa8aaa3dd4d69 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=0706fd0 ]

https://issues.apache.org/jira/browse/AMQ-6350

Allow for PooledConnectionFactory restart after being stopped.;;;","11/Jul/16 22:21;jira-bot;Commit 85da157238271bd72ea55eab2aa0b0f02d043b09 in activemq's branch refs/heads/activemq-5.13.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=85da157 ]

https://issues.apache.org/jira/browse/AMQ-6350

Allow for PooledConnectionFactory restart after being stopped.
(cherry picked from commit 0706fd0bc1f499f1fc304ec1c70aa8aaa3dd4d69)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Concurrent access to a MQTT Transport from WebSocket client can deadlock,AMQ-6346,12986886,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,05/Jul/16 17:46,06/Jul/16 09:45,14/Jul/23 05:44,05/Jul/16 18:20,5.13.3,,,,,,,,,5.13.4,5.14.0,,,Broker,,,,,0,,,,,,"Just like in AMQ-6046, WebSocket connections can encounter a deadlock when the Jetty side allows for concurrent access to the Transport instance that forwards commands onto the broker core. 

This was fixed for Stomp in AMQ-6046 but also needs to be fixed for MQTT.",,cshannon,jira-bot,sylvain,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6046,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jul 06 09:45:34 UTC 2016,,,,,,,,,,,"0|i30jt3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Jul/16 18:02;jira-bot;Commit 96494f74c7142c3396f17696f345c2355c16a61c in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=96494f7 ]

https://issues.apache.org/jira/browse/AMQ-6346

Prevent concurrent access to the MQTT protocol handlers which can lead
to a tansport level deadlock
;;;","05/Jul/16 18:19;jira-bot;Commit 1dfd0eeb60921243bec8245edb16c07ca98c1857 in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=1dfd0ee ]

https://issues.apache.org/jira/browse/AMQ-6346

Prevent concurrent access to the MQTT protocol handlers which can lead
to a tansport level deadlock

(cherry picked from commit 96494f74c7142c3396f17696f345c2355c16a61c)
;;;","06/Jul/16 09:45;sylvain;{code}
device/456736a4-a32a-4eca-be21-b6d10ae4649c::06270219-c703-4575-86ee-842e7cf44d93/ping {""version"":1,""state"":2,""timestamp"":1467798091.606}
device/456736a4-a32a-4eca-be21-b6d10ae4649c::06270219-c703-4575-86ee-842e7cf44d93/ping {""version"":1,""state"":0}
device/456736a4-a32a-4eca-be21-b6d10ae4649c::06270219-c703-4575-86ee-842e7cf44d93/ping (null)
{code}

{code}
2016-07-06 11:44:03,537 | INFO  | send() clientId: 06270219-c703-4575-86ee-842e7cf44d93 userName: 456736a4-a32a-4eca-be21-b6d10ae4649c::06270219-c703-4575-86ee-842e7cf44d93 send: ActiveMQBytesMessage {commandId = 7, responseRequired = false, messageId = ID:deverylight-all-snapshot-39700-1467796619118-3:30:-1:1:2, originalDestination = null, originalTransactionId = null, producerId = ID:deverylight-all-snapshot-39700-1467796619118-3:30:-1:1, destination = topic://device.456736a4-a32a-4eca-be21-b6d10ae4649c::06270219-c703-4575-86ee-842e7cf44d93.ping, transactionId = null, expiration = 0, timestamp = 1467798243536, arrival = 0, brokerInTime = 0, brokerOutTime = 0, correlationId = null, replyTo = null, persistent = false, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = org.apache.activemq.util.ByteSequence@27666d7e, marshalledProperties = null, dataStructure = null, redeliveryCounter = 0, size = 0, properties = {ActiveMQ.MQTT.QoS=1, ActiveMQ.Retain=true}, readOnlyProperties = true, readOnlyBody = true, droppable = false, jmsXGroupFirstForConsumer = false} ActiveMQBytesMessage{ bytesOut = null, dataOut = null, dataIn = null } payload: {""version"":1,""state"":0} | com.deveryware.deverylight.activemq.TokenAuthenticationBroker | MQTTInactivityMonitor Async Task: java.util.concurrent.ThreadPoolExecutor$Worker@1e217f8f[State = -1, empty queue]
2016-07-06 11:44:03,544 | INFO  | removeConnection() clientId: 06270219-c703-4575-86ee-842e7cf44d93 userName: 456736a4-a32a-4eca-be21-b6d10ae4649c::06270219-c703-4575-86ee-842e7cf44d93 info: ConnectionInfo {commandId = 0, responseRequired = true, connectionId = ID:deverylight-all-snapshot-39700-1467796619118-3:30, clientId = 06270219-c703-4575-86ee-842e7cf44d93, clientIp = ws://192.168.0.2:55942, userName = 456736a4-a32a-4eca-be21-b6d10ae4649c::06270219-c703-4575-86ee-842e7cf44d93, password = *****, brokerPath = null, brokerMasterConnector = false, manageable = false, clientMaster = true, faultTolerant = false, failoverReconnect = false} | com.deveryware.deverylight.activemq.TokenAuthenticationBroker | MQTTInactivityMonitor Async Task: java.util.concurrent.ThreadPoolExecutor$Worker@1e217f8f[State = -1, empty queue]
2016-07-06 11:44:03,544 | WARN  | Transport Connection to: ws://192.168.0.2:55942 failed: org.apache.activemq.transport.InactivityIOException: Channel was inactive for too (>30000) long: ws://192.168.0.2:55942 | org.apache.activemq.broker.TransportConnection.Transport | MQTTInactivityMonitor Async Task: java.util.concurrent.ThreadPoolExecutor$Worker@1e217f8f[State = -1, empty queue]
{code}

works fine thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[MQTT] ping response without CONNECT,AMQ-6345,12986605,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,cshannon,mtappler,mtappler,04/Jul/16 14:07,07/Jul/16 18:26,14/Jul/23 05:44,06/Jul/16 16:03,5.13.3,,,,,,,,,5.13.4,5.14.0,,,MQTT,,,,,0,,,,,,"I am currently investigating the behavior of several MQTT brokers and noticed that the ActiveMQ broker responds to PINGREQ packets with PINGRESP packets even if no CONNECT packet has been sent before. 

This would be a violation of MQTT-3.1.0-1 and MQTT-4.8.0-1 of MQTT v3.1.1 while MQTT v3.1 is not that strict about this issue, but does also state ""When a TCP/IP socket connection is established from a client to a server, a protocol level session must be created using a CONNECT flow."" (http://public.dhe.ibm.com/software/dw/webservices/ws-mqtt/mqtt-v3r1.html#connect)

Since ActiveMQ supports MQTT v3.1 according to http://activemq.apache.org/,
but also MQTT v3.1.1 according to Issue AMQ-4990, I am not sure whether this should actually be considered a bug. ",Ubuntu Linux 14.04 ,cshannon,jira-bot,mtappler,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jul 07 18:26:48 UTC 2016,,,,,,,,,,,"0|i30i33:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Jul/16 16:01;jira-bot;Commit 6dacef1c9552edbad656c31d784179c2cd179b2e in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=6dacef1 ]

https://issues.apache.org/jira/browse/AMQ-6345

The MQTT transport will now throw an exception if a PINGREQ is sent to
the broker if a CONNECT packet has not been received first as the spec
says CONNECT must be the first packet sent.
;;;","06/Jul/16 16:02;jira-bot;Commit 04464e48ab52d083b0fc6832b13e6717d23f99e6 in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=04464e4 ]

https://issues.apache.org/jira/browse/AMQ-6345

The MQTT transport will now throw an exception if a PINGREQ is sent to
the broker if a CONNECT packet has not been received first as the spec
says CONNECT must be the first packet sent.

(cherry picked from commit 6dacef1c9552edbad656c31d784179c2cd179b2e)
;;;","06/Jul/16 16:03;cshannon;Fixed, an error will now occur for both 3.1 and 3.1.1 if a CONNECT packet hasn't been received first.;;;","07/Jul/16 13:55;jira-bot;Commit b5b087d5585b734d15873303b1f35c572cafbe68 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b5b087d ]

https://issues.apache.org/jira/browse/AMQ-6345

Moving PINGREQ tests into its own test class so they aren't run more
than once
;;;","07/Jul/16 13:55;jira-bot;Commit bad922c9ef4ffc9c6de03e4e5fd40e93342eb7f9 in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=bad922c ]

https://issues.apache.org/jira/browse/AMQ-6345

Moving PINGREQ tests into its own test class so they aren't run more
than once

(cherry picked from commit b5b087d5585b734d15873303b1f35c572cafbe68)
;;;","07/Jul/16 18:26;jira-bot;Commit 667ea7c640dd0203b2ecdc83f74435e77cbe44ab in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=667ea7c ]

https://issues.apache.org/jira/browse/AMQ-6345

disabling failed assertion for test as it is expected based on how this
test is usin the client
;;;","07/Jul/16 18:26;jira-bot;Commit 7342b3760f4cc16c50f7477db13fdf4a48ddfc47 in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=7342b37 ]

https://issues.apache.org/jira/browse/AMQ-6345

disabling failed assertion for test as it is expected based on how this
test is usin the client

(cherry picked from commit 667ea7c640dd0203b2ecdc83f74435e77cbe44ab)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[MQTT] LWT doesn't work over a websocket connection,AMQ-6343,12985921,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,sylvain,sylvain,30/Jun/16 22:19,05/Jul/16 18:19,14/Jul/23 05:44,05/Jul/16 18:17,5.13.3,,,,,,,,,5.13.4,5.14.0,,,,,,,,0,,,,,,"I use several services, some of them connect over tcp and the LWT works properly.
I use several clients from a webapp' connected over a websocket link.

i use a javascript code:
{code:javascript}
var i_am_disconnected = new Paho.MQTT.Message(JSON.stringify({
        version: 1,
        state: 0
      }));
      i_am_disconnected.destinationName = ""device/"" + _token + ""/ping"";
      i_am_disconnected.retained = true;
      i_am_disconnected.qos = 1;
client.onConnectionLost = onConnectionLost;
      client.connect(…
{code}

i traced the ActiveMQ log, i can see that the disconnection is detected, but i didn't receive my LWT message. (again, my LWT works when I use a tcp connexion)

{code}
2016-07-01 00:07:51,329 | INFO  | addConnection() clientId: 60badfb1-3e6d-4637-b4ec-16b557d7db64 userName: bd525936-5238-4410-9579-79f8dfb27ea4::60badfb1-3e6d-4637-b4ec-16b557d7db64 info: ConnectionInfo {commandId = 0, responseRequired = true, connectionId = ID:deverylight-all-snapshot-42229-1467323807294-3:27, clientId = 60badfb1-3e6d-4637-b4ec-16b557d7db64, clientIp = ws://192.168.0.2:42372, userName = bd525936-5238-4410-9579-79f8dfb27ea4::60badfb1-3e6d-4637-b4ec-16b557d7db64, password = *****, brokerPath = null, brokerMasterConnector = false, manageable = false, clientMaster = true, faultTolerant = false, failoverReconnect = false} | com.deveryware.deverylight.activemq.TokenAuthenticationBroker | qtp1143988572-40
2016-07-01 00:07:51,333 | INFO  | addProducer() clientId: 60badfb1-3e6d-4637-b4ec-16b557d7db64 userName: bd525936-5238-4410-9579-79f8dfb27ea4::60badfb1-3e6d-4637-b4ec-16b557d7db64 info: ProducerInfo {commandId = 2, responseRequired = true, producerId = ID:deverylight-all-snapshot-42229-1467323807294-3:27:-1:1, destination = null, brokerPath = null, dispatchAsync = false, windowSize = 0, sentCount = 0} | com.deveryware.deverylight.activemq.TokenAuthenticationBroker | qtp1143988572-40
2016-07-01 00:07:51,423 | INFO  | send() clientId: 60badfb1-3e6d-4637-b4ec-16b557d7db64 userName: bd525936-5238-4410-9579-79f8dfb27ea4::60badfb1-3e6d-4637-b4ec-16b557d7db64 send: ActiveMQBytesMessage {commandId = 3, responseRequired = true, messageId = ID:deverylight-all-snapshot-42229-1467323807294-3:27:-1:1:1, originalDestination = null, originalTransactionId = null, producerId = ID:deverylight-all-snapshot-42229-1467323807294-3:27:-1:1, destination = topic://device.bd525936-5238-4410-9579-79f8dfb27ea4::60badfb1-3e6d-4637-b4ec-16b557d7db64.ping, transactionId = null, expiration = 0, timestamp = 1467324471422, arrival = 0, brokerInTime = 0, brokerOutTime = 0, correlationId = null, replyTo = null, persistent = false, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = org.apache.activemq.util.ByteSequence@335bf90b, marshalledProperties = null, dataStructure = null, redeliveryCounter = 0, size = 0, properties = {ActiveMQ.MQTT.QoS=1, ActiveMQ.Retain=true}, readOnlyProperties = true, readOnlyBody = true, droppable = false, jmsXGroupFirstForConsumer = false} ActiveMQBytesMessage{ bytesOut = null, dataOut = null, dataIn = null } payload: {""version"":1,""state"":2,""timestamp"":1467324470.015} | com.deveryware.deverylight.activemq.TokenAuthenticationBroker | qtp1143988572-41
2016-07-01 00:07:51,447 | INFO  | addConsumer() clientId: 60badfb1-3e6d-4637-b4ec-16b557d7db64 userName: bd525936-5238-4410-9579-79f8dfb27ea4::60badfb1-3e6d-4637-b4ec-16b557d7db64 info: ConsumerInfo {commandId = 4, responseRequired = true, consumerId = ID:deverylight-all-snapshot-42229-1467323807294-3:27:-1:1, destination = topic://mobile.167e0de6e20b55cc318aacb74f31752e2bffd339.*.position, prefetchSize = 32767, maximumPendingMessageLimit = 0, browser = false, dispatchAsync = true, selector = null, clientId = null, subscriptionName = null, noLocal = false, exclusive = false, retroactive = true, priority = 0, brokerPath = null, optimizedAcknowledge = false, noRangeAcks = false, additionalPredicate = null} | com.deveryware.deverylight.activemq.TokenAuthenticationBroker | qtp1143988572-39
2016-07-01 00:07:51,451 | INFO  | addConsumer() clientId: 60badfb1-3e6d-4637-b4ec-16b557d7db64 userName: bd525936-5238-4410-9579-79f8dfb27ea4::60badfb1-3e6d-4637-b4ec-16b557d7db64 info: ConsumerInfo {commandId = 5, responseRequired = true, consumerId = ID:deverylight-all-snapshot-42229-1467323807294-3:27:-1:2, destination = topic://mobile.167e0de6e20b55cc318aacb74f31752e2bffd339.*.event, prefetchSize = 32767, maximumPendingMessageLimit = 0, browser = false, dispatchAsync = true, selector = null, clientId = null, subscriptionName = null, noLocal = false, exclusive = false, retroactive = true, priority = 0, brokerPath = null, optimizedAcknowledge = false, noRangeAcks = false, additionalPredicate = null} | com.deveryware.deverylight.activemq.TokenAuthenticationBroker | qtp1143988572-39
2016-07-01 00:08:51,151 | INFO  | removeConnection() clientId: 60badfb1-3e6d-4637-b4ec-16b557d7db64 userName: bd525936-5238-4410-9579-79f8dfb27ea4::60badfb1-3e6d-4637-b4ec-16b557d7db64 info: ConnectionInfo {commandId = 0, responseRequired = true, connectionId = ID:deverylight-all-snapshot-42229-1467323807294-3:27, clientId = 60badfb1-3e6d-4637-b4ec-16b557d7db64, clientIp = ws://192.168.0.2:42372, userName = bd525936-5238-4410-9579-79f8dfb27ea4::60badfb1-3e6d-4637-b4ec-16b557d7db64, password = *****, brokerPath = null, brokerMasterConnector = false, manageable = false, clientMaster = true, faultTolerant = false, failoverReconnect = false} | com.deveryware.deverylight.activemq.TokenAuthenticationBroker | qtp1143988572-40
{code}

this is my ActiveMQ configuration

{code}
<transportConnectors>
            <transportConnector name=""mqtt"" uri=""mqtt://0.0.0.0:1883""/>
            <transportConnector name=""mqtt+ws"" uri=""ws://0.0.0.0:9000""/>
        </transportConnectors>
{code}",GNU/Linux Debian 8.3,cshannon,jira-bot,sylvain,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jul 05 18:19:44 UTC 2016,,,,,,,,,,,"0|i30ecf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Jul/16 12:34;cshannon;[~tabish121],

I looked at this briefly and it seems like in the [onWebSocketClose|https://github.com/apache/activemq/blob/activemq-5.13.3/activemq-http/src/main/java/org/apache/activemq/transport/ws/jetty9/MQTTSocket.java#L81] method of MQTTSocket we should be checking if a disconnect frame has been received already prior to close and if not then call getProtocolConverter().onTransportError() which should take care of LWT.  Right now that method just sends a disconnect frame again so LWT will never work if the connection was just closed prior to receiving disconnect.;;;","01/Jul/16 12:54;tabish;Seems plausible, a unit test might be a good idea to try it out ;);;;","04/Jul/16 08:39;sylvain;    @Override
    public void onWebSocketClose(int statusCode, String reason) {
        LOG.debug(""onWebSocketClose() - statusCode: {}, reason: {}"", statusCode, reason);
        try {
            if (statusCode == StatusCode.NO_CLOSE) {
                getProtocolConverter().onTransportError();
            } else {
                getProtocolConverter().onMQTTCommand(new DISCONNECT().encode());
            }
        } catch (Exception e) {
            LOG.debug(""Failed to close MQTT WebSocket cleanly"", e);
        }
    }

may fixes the issue?;;;","04/Jul/16 10:04;sylvain;after some tests, it's not sufficient.;;;","05/Jul/16 18:15;jira-bot;Commit bd442a3388b0f127c8f8b9fad5e4888b77bb42c3 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=bd442a3 ]

https://issues.apache.org/jira/browse/AMQ-6343

On MQTT Websocket close, a LWT message will be properly sent if
configured and a disconnect packet was not received
;;;","05/Jul/16 18:17;cshannon;This should be fixed.  The LWT message will be sent if on websocket close a disconnect packet was never received.;;;","05/Jul/16 18:19;jira-bot;Commit fda982dccb12098a84e3de9cd951108be1a8167f in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=fda982d ]

https://issues.apache.org/jira/browse/AMQ-6343

On MQTT Websocket close, a LWT message will be properly sent if
configured and a disconnect packet was not received

(cherry picked from commit bd442a3388b0f127c8f8b9fad5e4888b77bb42c3)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQP: Session and or resource close / detach need to wait on broker RemoveInfo response,AMQ-6341,12985534,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,30/Jun/16 00:10,30/Jun/16 00:14,14/Jul/23 05:44,30/Jun/16 00:14,5.13.3,,,,,,,,,5.14.0,,,,AMQP,,,,,0,,,,,,When a session or Sender / Receiver is closed or detached the response should await a response broker the broker that the async remove info command has been processed in order to ensure that the peer sees correct broker state following the return from that operation.  ,,jira-bot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jun 30 00:13:45 UTC 2016,,,,,,,,,,,"0|i30cd3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"30/Jun/16 00:13;jira-bot;Commit 83827f27709a2b8b1f8d080a4913100b80fe3429 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=83827f2 ]

https://issues.apache.org/jira/browse/AMQ-6341

Wait on broker response for async broker commands.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Queue order lost on consumer close in some cases,AMQ-6340,12985072,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,29/Jun/16 16:47,29/Jun/16 17:47,14/Jul/23 05:44,29/Jun/16 17:43,5.13.3,,,,,,,,,5.13.4,5.14.0,,,Broker,,,,,0,,,,,,When composing the unacked message list on close of a consumer the order of messages can be lost due to incorrect merging of pending and dispatched lists in the prefetch subscription.  ,,jira-bot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6286,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jun 29 17:35:14 UTC 2016,,,,,,,,,,,"0|i30bqn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/Jun/16 16:58;jira-bot;Commit 4e23adfcc981d3e13e7f1b1182b89a954160a26a in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=4e23adf ]

https://issues.apache.org/jira/browse/AMQ-6340

combine the lists in the correct order for later redispatch. ;;;","29/Jun/16 17:35;jira-bot;Commit 6fda5e3262b311de655d6f0e0d1c4035317ab4c1 in activemq's branch refs/heads/activemq-5.13.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=6fda5e3 ]

https://issues.apache.org/jira/browse/AMQ-6340

combine the lists in the correct order for later redispatch.
(cherry picked from commit 4e23adfcc981d3e13e7f1b1182b89a954160a26a)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DefaultAuthorizationMap could invoke a method with the wrong arguments,AMQ-6337,12982451,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,cshannon,cshannon,cshannon,23/Jun/16 20:33,23/Jun/16 20:36,14/Jul/23 05:44,23/Jun/16 20:36,5.13.3,,,,,,,,,5.13.3,5.14.0,,,Broker,,,,,0,,,,,,"As pointed out here:
http://activemq.2283324.n4.nabble.com/java-lang-IllegalArgumentException-wrong-number-of-arguments-td4713290.html

Some of the logic used for reflection could lead to an IllegalArgumentException if the groupClass is set to a different object because we do not properly check the that the number of method arguments is correct before invoking the method.",,cshannon,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jun 23 20:36:30 UTC 2016,,,,,,,,,,,"0|i2zzs7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Jun/16 20:35;jira-bot;Commit 6be36305f6669ded47bcd33016583a86bdda04dd in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=6be3630 ]

https://issues.apache.org/jira/browse/AMQ-6337

Checking for the correct number of arguments before reflectively
invoking a method in DefaultAuthorizationMap
;;;","23/Jun/16 20:36;jira-bot;Commit 6271a7e353696e946df598af114e5f6753e16e6f in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=6271a7e ]

https://issues.apache.org/jira/browse/AMQ-6337

Checking for the correct number of arguments before reflectively
invoking a method in DefaultAuthorizationMap

(cherry picked from commit 6be36305f6669ded47bcd33016583a86bdda04dd)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQConnection triggered heap space out of memory error when used with org.apache.activemq.network.SimpleJmsQueueConnector,AMQ-6334,12981917,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,ben_nisbet,ben_nisbet,22/Jun/16 15:16,23/Jun/16 15:05,14/Jul/23 05:44,23/Jun/16 15:05,5.12.1,,,,,,,,,5.13.4,5.14.0,,,Broker,JMS client,,,,0,,,,,,"This defect was identified when proxying an outbound queue bridge's foreign connection through a load balancer with no available cluster nodes and is reported in the ActiveMQ broker log file with following DEBUG level event message:
 
DEBUG 2016-June-22 15:54:25,165 JmsConnector:627 - Failed to establish initial [foreign, 24388] connection for JmsConnector [javax.jms.JMSException: Cannot send, channel has already failed: tcp://0.0.0.0:61616]

 In ActiveMQ v5.12.1 release this is triggered by a ConnectionFailedException being thrown on line 190 of class org.apache.activemq.network.SimpleJmsQueueConnector and can be replicated by running the attached JUnit test.
 
Attached ActiveMQConnection subclass ensures that resource clean up is performed if any exception is thrown during an invocation of the start() method. Consequently instances are eligible for garbage collection if the underlying TCP connection is successfully established by constructor and then reset by peer before the connection is put into service. 

Is it possible to include this behaviour within the ActiveMQConnection class  itself in future release?","WebLogic v10.3.6, HotSpot 64bit JVM 1.7.0_71",ben_nisbet,jira-bot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Jun/16 15:33;ben_nisbet;ActiveMQConnectionMemoryLeakTest.java;https://issues.apache.org/jira/secure/attachment/12812513/ActiveMQConnectionMemoryLeakTest.java","22/Jun/16 15:33;ben_nisbet;PatchedActiveMQConnection.java;https://issues.apache.org/jira/secure/attachment/12812514/PatchedActiveMQConnection.java",,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jun 23 15:04:16 UTC 2016,,,,,,,,,,,"0|i2zwqf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Jun/16 17:21;tabish;Seems like the SimpleJmsQueueConnector and SimpleJmsTopicConnector are the issue here, the init methods need to handle the case of an exception being thrown and closing the newConnection instance before exiting when an exception is thrown.  ;;;","23/Jun/16 15:03;jira-bot;Commit 03785a4d53877bb4088e0d83558d09147e1f0124 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=03785a4 ]

https://issues.apache.org/jira/browse/AMQ-6334

Fix error handling for connection establishment on the bridge.;;;","23/Jun/16 15:04;jira-bot;Commit 33e70292d458f9f22b31b8ce8bd3916d6db6e70f in activemq's branch refs/heads/activemq-5.13.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=33e7029 ]

https://issues.apache.org/jira/browse/AMQ-6334

Fix error handling for connection establishment on the bridge.
(cherry picked from commit 03785a4d53877bb4088e0d83558d09147e1f0124)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
getNextScheduledTime() returns incorrect time when working with day of month,AMQ-6327,12980012,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,hadrian,hathvi,hathvi,16/Jun/16 22:12,22/Dec/17 23:42,14/Jul/23 05:44,21/Dec/17 02:52,5.12.0,5.13.3,,,,,,,,5.14.6,5.15.3,5.16.0,,Broker,,,,,0,,,,,,"Given the following code

{code:java}
DateFormat format = new SimpleDateFormat(""yyyy/MM/dd"");

try {
  // cron, currentDate, expectedDate
  String[][] tests = new String[][]{
    { ""0 0 1 * *"", ""2016/04/15"", ""2016/05/01"" },
    { ""0 0 1,15 * *"", ""2016/04/15"", ""2016/05/01"" },
    { ""0 0 1 * *"", ""2016/05/15"", ""2016/06/01"" },
    { ""0 0 1,15 * *"", ""2016/05/15"", ""2016/06/01"" },
    { ""0 0 1 * *"", ""2016/06/15"", ""2016/07/01"" },
    { ""0 0 1,15 * *"", ""2016/06/15"", ""2016/07/01"" },
  };

  String cron;
  Date currentDate;
  Date expectedDate;
  Date nextDate;

  for (int i = 0; i < tests.length; i++) {
    cron = tests[i][0];
    currentDate = format.parse(tests[i][1]);
    expectedDate = format.parse(tests[i][2]);
    nextDate = new Date(CronParser.getNextScheduledTime(cron, currentDate.getTime()));
    System.out.println(String.format(""CronParser.getNextScheduledTime('%s', '%s') == '%s' // Expected: '%s'"", cron, currentDate, nextDate, expectedDate));
  }
} catch (Exception e) {
  e.printStackTrace();
}
{code}

The output is
{code}
CronParser.getNextScheduledTime('0 0 1 * *', 'Fri Apr 15 00:00:00 UTC 2016') == 'Wed Jun 01 00:00:00 UTC 2016' // Expected: 'Sun May 01 00:00:00 UTC 2016'
CronParser.getNextScheduledTime('0 0 1,15 * *', 'Fri Apr 15 00:00:00 UTC 2016') == 'Sun May 15 00:00:00 UTC 2016' // Expected: 'Sun May 01 00:00:00 UTC 2016'
CronParser.getNextScheduledTime('0 0 1 * *', 'Sun May 15 00:00:00 UTC 2016') == 'Wed Jun 01 00:00:00 UTC 2016' // Expected: 'Wed Jun 01 00:00:00 UTC 2016'
CronParser.getNextScheduledTime('0 0 1,15 * *', 'Sun May 15 00:00:00 UTC 2016') == 'Wed Jun 01 00:00:00 UTC 2016' // Expected: 'Wed Jun 01 00:00:00 UTC 2016'
CronParser.getNextScheduledTime('0 0 1 * *', 'Wed Jun 15 00:00:00 UTC 2016') == 'Mon Aug 01 00:00:00 UTC 2016' // Expected: 'Fri Jul 01 00:00:00 UTC 2016'
CronParser.getNextScheduledTime('0 0 1,15 * *', 'Wed Jun 15 00:00:00 UTC 2016') == 'Fri Jul 15 00:00:00 UTC 2016' // Expected: 'Fri Jul 01 00:00:00 UTC 2016'
{code}

When given 1 for the day of month it's returning 1 month to many every other month
When given 1,15 for the day of month it's returning the correct month but incorrect day of month every other month

I've tested this on both v5.12.0 and v5.13.3

",,dhanika,githubbot,hadrian,hathvi,jira-bot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Dec 22 23:42:57 UTC 2017,,,,,,,,,,,"0|i2zlj3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Jun/16 19:23;tabish;I'd encourage you to put together a more exhaustive test for the getNextScheduledTime in the unit tests and try and see if can come up with a fix, we love contributions.;;;","21/Jun/16 00:20;hathvi;I'm currently pretty busy trying to get some high priority work done before I take some vacation time. I'll be back on the 18th of July so if this issue still needs fixed I can take a look then.;;;","04/Aug/16 01:51;dhanika;Hey I would like to contribute to fix this bug.
Can someone explain briefly about this bug.;;;","04/Aug/16 18:23;tabish;[~dhanika] The issue is related to [the CronParser|https://github.com/apache/activemq/blob/master/activemq-client/src/main/java/org/apache/activemq/broker/scheduler/CronParser.java] class in the ActiveMQ code, namely it seems there are cases where the CronParser doesn't return next scheduled time based on the Cron value passed in.  There is already a [unit test|https://github.com/apache/activemq/blob/master/activemq-client/src/test/java/org/apache/activemq/broker/scheduler/CronParserTest.java] for this code but more tests seem necessary to show some of its shortcomings.


;;;","20/Dec/17 19:48;githubbot;GitHub user snurmine opened a pull request:

    https://github.com/apache/activemq/pull/267

    AMQ-6327 - getNextScheduledTime() returns incorrect time when working…

    … with day of month

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/snurmine/activemq AMQ-6327

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/267.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #267
    
----

----
;;;","21/Dec/17 02:32;jira-bot;Commit 051e2b791c88e09a0f7cdecfb53eb2fd52c1d39c in activemq's branch refs/heads/master from [~snurmine]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=051e2b7 ]

AMQ-6327 - getNextScheduledTime() returns incorrect time when working with day of month
;;;","21/Dec/17 02:32;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/267
;;;","21/Dec/17 02:35;jira-bot;Commit 2f1a6d3b3bd1d2fb94a84e5a68b6eab210184e82 in activemq's branch refs/heads/activemq-5.15.x from [~snurmine]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=2f1a6d3 ]

AMQ-6327 - getNextScheduledTime() returns incorrect time when working with day of month
;;;","21/Dec/17 02:48;jira-bot;Commit f4e7cd1b1df2481461a439eb47fb13bc8f37dc4f in activemq's branch refs/heads/activemq-5.14.x from [~snurmine]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=f4e7cd1 ]

AMQ-6327 - getNextScheduledTime() returns incorrect time when working with day of month
;;;","21/Dec/17 02:52;hadrian;PR applied, tested on all three branches. Many thanks!;;;","21/Dec/17 05:18;githubbot;GitHub user snurmine opened a pull request:

    https://github.com/apache/activemq/pull/268

    AMQ-6327 - Remove System.out.println

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/snurmine/activemq AMQ-6327

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/268.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #268
    
----
commit 1f518b74b1907d9e1b3152067a031743162d96b8
Author: Sami Nurminen <snurmine@...>
Date:   2017-12-21T05:18:05Z

    AMQ-6327 - Remove System.out.println

----
;;;","22/Dec/17 23:25;jira-bot;Commit 39caca7cf6593c167f00e89842b16812edbc578f in activemq's branch refs/heads/master from [~snurmine]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=39caca7 ]

AMQ-6327 - Remove System.out.println
;;;","22/Dec/17 23:30;jira-bot;Commit c9eb5a7251795da46c87c5a9650818bad9521c96 in activemq's branch refs/heads/activemq-5.15.x from [~snurmine]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=c9eb5a7 ]

AMQ-6327 - Remove System.out.println
;;;","22/Dec/17 23:39;jira-bot;Commit 7b7b685f8d8932a1fb31387c607117ec0f123cbd in activemq's branch refs/heads/activemq-5.14.x from [~snurmine]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=7b7b685 ]

AMQ-6327 - Remove System.out.println
;;;","22/Dec/17 23:42;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/268
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
JMS Selector parsing will not fail if a valid selector is followed by invalid text,AMQ-6325,12978937,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,14/Jun/16 16:48,16/Jun/16 15:00,14/Jul/23 05:44,14/Jun/16 16:50,5.13.3,,,,,,,,,5.13.4,5.14.0,,,Broker,JMS client,,,,0,,,,,,"

A JMS Selector which has a valid stem followed by invalid data will not cause a failure, and the selector will be parsed an executed as if only the valid stem were present.

For example the selector

{code}
a = 1 AMD  b = 2
{code}

will be treated as if the selector was

{code}
a = 1
{code}",,jira-bot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jun 16 15:00:18 UTC 2016,,,,,,,,,,,"0|i2zfwv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Jun/16 16:50;tabish;Fix by: 7b207567d9d304facdfa7c1c5d7fa8a81b6fe70e;;;","16/Jun/16 15:00;jira-bot;Commit c0713415f5809f5a419055865e2eb0c1e341fa18 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=c071341 ]

https://issues.apache.org/jira/browse/AMQ-6325

Fix test that fails now that the parser checks the full expression. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ createSchemaStatements are not executed on init if a previous createSchemaStatement failed on execution,AMQ-6317,12977149,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,JBastijns,JBastijns,09/Jun/16 09:06,28/Jun/16 14:59,14/Jul/23 05:44,28/Jun/16 14:59,5.12.3,5.13.3,,,,,,,,5.14.0,,,,JDBC,,,,,4,,,,,,"On init the DefaultJDBCAdapter.doCreateTables-method is executed. This provides the tables needed for ActiveMQ in persistent mode.

The createSchemaStatements are executed within one SQL Statement. 
When one of the createSchemaStatements throws an SQLException (table already exists) the SQL Statement's transaction is aborted and all following createSchemaStatements are ignored.

This is unwanted behaviour as the comment on the code block states that new statements like for example 'ALTER TABLE' (introduced in new versions of activemq) should be executed if the tables already exist.

We had this issue when adding an extra createSchemaStatement for a JobScheduler table.","PostgreSql, Linux, Mac OS X",githubbot,gtully,JBastijns,jira-bot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jun 28 14:59:38 UTC 2016,,,,,,,,,,,"0|i2z7jr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Jun/16 09:11;githubbot;GitHub user bastijns-jeroen opened a pull request:

    https://github.com/apache/activemq/pull/189

    AMQ-6317

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/bastijns-jeroen/activemq AMQ-6317

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/189.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #189
    
----
commit be38782c221223def47db79b020218054441c225
Author: Jeroen Bastijns <jeroen.bastijns@aca-it.be>
Date:   2016-06-09T09:09:18Z

    AMQ-6317: Use an SQL Statement for each createSchemaStatement

----
;;;","09/Jun/16 12:34;gtully;this is a good patch. thanks.
One quick change. I think you can replace the new dependency on uk.org.lidalia... with the DefaultTestAppender. It is not as neat, but it does work fine and is already used in many tests.
See some example usage at: https://github.com/apache/activemq/blob/e2b4ca2c59a316be91cf391c758a10e518dd3a1f/activemq-unit-tests/src/test/java/org/apache/activemq/usage/StoreUsageLimitsTest.java#L55

final picky thing - the formatting on the new code seems different, maybe there are tabs in the mix of something. Just follow what is there so that there are no formatting changes.
;;;","10/Jun/16 07:30;JBastijns;Fixed the formatting.

When I use the DefaultTestAppender I have to add a dependency on activemq-unit-tests test-jar which introduces a cyclic dependency between activemq-unit-tests and activemq-jdbc-store.
Any idea's?;;;","10/Jun/16 09:22;gtully;darn, that  util should be back in the broker module, like socketProxy etc.
I did an update to move that so that you can pull in the broker test-jar dependency: <artifactId>activemq-broker</artifactId><type>test-jar</type> into jdbc.

https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=f548aafa81fdb53b5c273bd15705a3d0fe2ef0e2;;;","10/Jun/16 13:38;JBastijns;I pointed my pull request to the 5.12.x branch. Your fix is on the master branch. [~gtully] can you cherry pick it?;;;","15/Jun/16 13:33;tabish;There are no planned release from the 5.12.x branch so no reason to try and merge fixes back there at this time.  All work should target master.  ;;;","15/Jun/16 14:35;githubbot;Github user bastijns-jeroen closed the pull request at:

    https://github.com/apache/activemq/pull/189
;;;","16/Jun/16 14:00;JBastijns;[~tabish121] made a new pull request to master: https://github.com/apache/activemq/pull/190
Jenkins check failed due to issues with git...;;;","16/Jun/16 16:56;tabish;Looks like the patch still uses the uk.org.lidalia instead of the DefaultTestAppender as Gary has pointed out previously. ;;;","17/Jun/16 06:44;JBastijns;Maybe you are looking at the first pull request, I declined that one. In the new pull request (https://github.com/apache/activemq/pull/190) I use the DefaultTestAppender.;;;","17/Jun/16 12:49;tabish;I see, I missed it in the new one because the commits aren't squashed, please squash them into one commit, thanks.;;;","17/Jun/16 13:40;JBastijns;Squashed :);;;","17/Jun/16 13:41;tabish;Great, thanks much, will try and review it as soon as time permits.;;;","28/Jun/16 11:11;JBastijns;Any news?;;;","28/Jun/16 14:57;jira-bot;Commit 03a211ec061d9ed49dc1ac16f171d8f4458483b8 in activemq's branch refs/heads/master from [~JBastijns]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=03a211e ]

AMQ-6317: Use an SQL Statement for each createSchemaStatement
closes #190
;;;","28/Jun/16 14:59;gtully;fix applied, thanks for the contribution :-);;;",,,,,,,,,,,,,,,,,,,,,,,,,
Typo in activemq unix script,AMQ-6311,12976044,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,tabish,jinesh.choksi,jinesh.choksi,06/Jun/16 12:10,06/Jun/16 16:03,14/Jul/23 05:44,06/Jun/16 16:03,5.13.3,,,,,,,,,5.14.0,,,,Distribution,,,,,0,,,,,,"Line 598 of the activemq script refers to a string: ""checkfornotrunning""

{code}
    elif [ ""$CHECKRUNNING"" = ""checkfornotrunning"" ];then
{code}

That string should be what is passed to the invoke_task function on line 676:

{code}
    invoke_task checknotforrunning
{code}

Notice the location of ""not"" in the string is different.
",,jinesh.choksi,jira-bot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5956,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Jun 06 16:02:37 UTC 2016,,,,,,,,,,,"0|i2z0qf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Jun/16 16:01;tabish;the check should be removed by this issue, task with wrong name left in the script;;;","06/Jun/16 16:02;jira-bot;Commit f6b8ce6c22238b35b84d5ae3b28a46134ac2ba91 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=f6b8ce6 ]

https://issues.apache.org/jira/browse/AMQ-6311

call the correct task 'checkfornotrunnig';;;","06/Jun/16 16:02;jira-bot;Commit 9079678c3af56a37dd15ae185cc22c09d697f595 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=9079678 ]

https://issues.apache.org/jira/browse/AMQ-6311

Remove misleading checknotforrunning value from the invoke;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Certain VirtualTopic configurations no longer send messages to the correct queue,AMQ-6310,12975771,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,jonathanmalek,jonathanmalek,04/Jun/16 23:30,06/Jun/16 13:18,14/Jul/23 05:44,06/Jun/16 13:18,5.13.0,,,,,,,,,5.13.4,5.14.0,,,Broker,,,,,0,,,,,,"Several of our brokers have a VirtualTopic with the name {{VirtualTopic.>}} and a prefix of {{\*.\*.}}.  The expected behavior would be that a message sent to {{VirtualTopic.A}} should be consumed on a queue with any pattern that matches {{\*.\*.VirtualTopic.A}}.

For example, if a message is published to a topic called {{VirtualTopic.A}}, that would be consumed on queues {{Consumer.A.VirtualTopic.A}} and {{Subscriber.A.VirtualTopic.A}}.

However, since the change made in AMQ-6058, it appears that, given the example above, _neither_ queue receives the message.  This is because the change performs a startsWith comparison of the destination against the prefix, rather than a regex comparison.

If there is a reason to prevent leading wildcards in the prefix, it should be documented, otherwise the sanity check in shouldDispatch(...) needs to be updated to handle it.",,cshannon,githubbot,jira-bot,jonathanmalek,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Jun 06 13:18:45 UTC 2016,,,,,,,,,,,"0|i2yzrz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Jun/16 00:00;githubbot;GitHub user JonathanMalek opened a pull request:

    https://github.com/apache/activemq/pull/188

    AMQ-6310 added a check to ensure the leading wildcards in prefixes are handled correctly.

    Checking for leading wildcard in the prefix for a virtualtopic, modifying the behavior of shouldDispatch in the VirtualTopicInterceptor.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/JonathanMalek/activemq master

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/188.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #188
    
----
commit 6bf5987921f6fdb6844652bb77e2fc14b002ccf2
Author: Jonathan Malek <jonathan@jonathanmalek.me>
Date:   2016-06-04T23:51:27Z

    A fix for AMQ-6310
    
    Checking for leading wildcard in the prefix for a virtualtopic,
    modifying the behavior of shouldDispatch in the VirtualTopicInterceptor.

----
;;;","06/Jun/16 13:16;jira-bot;Commit 6bf5987921f6fdb6844652bb77e2fc14b002ccf2 in activemq's branch refs/heads/master from [~jonathanmalek]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=6bf5987 ]

A fix for AMQ-6310

Checking for leading wildcard in the prefix for a virtualtopic,
modifying the behavior of shouldDispatch in the VirtualTopicInterceptor.
;;;","06/Jun/16 13:16;jira-bot;Commit 2b03e6a9422dc40729bd8cc5a4c235a1631a5d83 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=2b03e6a ]

https://issues.apache.org/jira/browse/AMQ-6310

Merging fix for AMQ-6310

This closes #188
;;;","06/Jun/16 13:16;jira-bot;Commit 2b03e6a9422dc40729bd8cc5a4c235a1631a5d83 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=2b03e6a ]

https://issues.apache.org/jira/browse/AMQ-6310

Merging fix for AMQ-6310

This closes #188
;;;","06/Jun/16 13:16;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/188
;;;","06/Jun/16 13:17;jira-bot;Commit 539d6b747a96e2fb848a7a9d3d5329893fe5d360 in activemq's branch refs/heads/activemq-5.13.x from [~jonathanmalek]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=539d6b7 ]

A fix for AMQ-6310

Checking for leading wildcard in the prefix for a virtualtopic,
modifying the behavior of shouldDispatch in the VirtualTopicInterceptor.

(cherry picked from commit 6bf5987921f6fdb6844652bb77e2fc14b002ccf2)
;;;","06/Jun/16 13:18;cshannon;Patch applied with thanks. It will be included in 5.14.0 and 5.13.4 (if that version is released);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQP: Drain requests can go unaswered in certain cases.,AMQ-6305,12973187,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,26/May/16 20:26,05/Jul/16 19:55,14/Jul/23 05:44,06/Jun/16 13:11,5.13.0,5.13.1,5.13.2,5.13.3,,,,,,5.13.4,5.14.0,,,AMQP,,,,,0,,,,,,In some cases when an AMQP client issues a flow that indicates a request to drain off credit or pull some amount of messages the broker can fail to respond due to interactions between the via of credit and other factors like prefetch extension which can leave a message queued on link and not be accounted for.  ,,cshannon,jira-bot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jul 05 19:55:45 UTC 2016,,,,,,,,,,,"0|i2yk7r:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/May/16 22:03;jira-bot;Commit 6ae169e2755257b1e8e5068473bdb3156160790d in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=6ae169e ]

https://issues.apache.org/jira/browse/AMQ-6305

Add test and supporting enhancements to the JUnit module to allow for
easy repetition of tests that don't always fail reliably;;;","01/Jun/16 22:34;jira-bot;Commit 8448cf1cb886b242b54235b091259acbf43c2108 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=8448cf1 ]

https://issues.apache.org/jira/browse/AMQ-6305

Refactor credit handling and drain state tracking to ensure we stay in
sync with the remote state and always answer drain requests.  Start
adding some more tests around drain to the interop suite.;;;","03/Jun/16 19:31;tabish;Some test failures in CI indicate the credit handling still isn't quite right.;;;","03/Jun/16 21:07;jira-bot;Commit db71b43b19e24019fe7ef08dd80d53998b9eec9b in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=db71b43 ]

https://issues.apache.org/jira/browse/AMQ-6305

Lower prefetch on settlement of allow for dispatch of the full amount of
granted credit.  Adds additional tests.;;;","05/Jul/16 18:33;cshannon;[~tabish121],

Should these commits be backported to 5.13.4? (I'm assuming so because you marked this as 5.13.4 for the fix version)  I ask because the current 5.13.x branch doesn't build right now.  Looks like there is a compilation error from a missing method in the JmsClientTestSupport class that was added in one of these commits.;;;","05/Jul/16 18:55;tabish;Yes, it can go back, originally wanted to let the CI tests runs check it and forgot to merge it back later.;;;","05/Jul/16 19:55;cshannon;Alright, I'll merge the fixes.;;;","05/Jul/16 19:55;jira-bot;Commit 508c12d9487ad653f05806be7a492e4bd870522b in activemq's branch refs/heads/activemq-5.13.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=508c12d ]

https://issues.apache.org/jira/browse/AMQ-6305

Add test and supporting enhancements to the JUnit module to allow for
easy repetition of tests that don't always fail reliably
(cherry picked from commit 6ae169e2755257b1e8e5068473bdb3156160790d)
;;;","05/Jul/16 19:55;jira-bot;Commit 8916beea4228e5432c948629e252d363c63cfea3 in activemq's branch refs/heads/activemq-5.13.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=8916bee ]

https://issues.apache.org/jira/browse/AMQ-6305

Refactor credit handling and drain state tracking to ensure we stay in
sync with the remote state and always answer drain requests.  Start
adding some more tests around drain to the interop suite.
(cherry picked from commit 8448cf1cb886b242b54235b091259acbf43c2108)
;;;","05/Jul/16 19:55;jira-bot;Commit 53c9d7ecb6331a432c8956a0ee5dbc8ff0ac8a4e in activemq's branch refs/heads/activemq-5.13.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=53c9d7e ]

https://issues.apache.org/jira/browse/AMQ-6305

Lower prefetch on settlement of allow for dispatch of the full amount of
granted credit.  Adds additional tests.
(cherry picked from commit db71b43b19e24019fe7ef08dd80d53998b9eec9b)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Message ack rewrite does not always set the right journal file type code,AMQ-6303,12972150,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,23/May/16 18:41,23/May/16 18:44,14/Jul/23 05:44,23/May/16 18:44,5.13.3,,,,,,,,,5.14.0,,,,Broker,,,,,0,,,,,,The type code value is not always set correctly for journal files that are rewritten for ack compaction.  This value is transient so we need to make sure it's set immediately after allocating the new file and also on replay.,,cshannon,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6203,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon May 23 18:43:25 UTC 2016,,,,,,,,,,,"0|i2ydtz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/May/16 18:43;jira-bot;Commit 4d6cc4b46007c7bcec10ade080e822d83261273f in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=4d6cc4b ]

https://issues.apache.org/jira/browse/AMQ-6303

Properly setting typeCode value for new journal files used for ack
compaction
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.activemq.SERIALIZABLE_PACKAGES=""*"" doesn't work",AMQ-6300,12971734,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,bsonntag,bsonntag,21/May/16 04:56,21/May/16 07:01,14/Jul/23 05:44,21/May/16 07:01,5.13.3,,,,,,,,,,,,,Broker,,,,,0,,,,,,"Hello,

i tried to use ActiveMQ in Combination with the Wildfly Application Server to establish a centrallogging acrhitecture. Some applications can write logging output through log4j JMSTopicAppender and on the Wildfly is a MDB which shall receive the message. 

BUT i get every time the 

06:45:58,259 ERROR [de.dropletinnovations.centrallogging.centralloggingsystem.LoggingMessageService] (default-threads - 24) Failed to build body from content. Serializable class not available to broker. Reason: java.lang.ClassNotFoundException: Forbidden class org.apache.log4j.spi.LoggingEvent! This class is not trusted to be serialized as ObjectMessage payload. Please take a look at http://activemq.apache.org/objectmessage.html for more information on how to configure trusted classes.

I've see at the page and added 

if [ -z ""$ACTIVEMQ_OPTS"" ] ; then
    ACTIVEMQ_OPTS=""$ACTIVEMQ_OPTS_MEMORY -Djava.util.logging.config.file=logging.properties -Djava.security.auth.login.config=$ACTIVEMQ_CONF/login.config -Dorg.apache.activemq.SERIALIZABLE_PACKAGES='*'""

I try it without quotes too but both didn't work.

thank a lot.

with best regards

Bjoern


","- Linux server 4.4.0-21-generic #37-Ubuntu SMP Mon Apr 18 18:33:37 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux
- java version ""1.8.0_25""
Java(TM) SE Runtime Environment (build 1.8.0_25-b17)
Java HotSpot(TM) 64-Bit Server VM (build 25.25-b02, mixed mode)
- Wildlfy 10.0.0.FINAL
- ActiveMQ 5.13.3
",bsonntag,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Sat May 21 07:01:15 UTC 2016,,,,,,,,,,,"0|i2yb9j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/May/16 05:26;bsonntag;ps aux | grep activemq shows

activemq   597  172  2.3 8602920 291032 ?      Sl   07:24   0:08 /opt/java/bin/java -Dorg.apache.activemq.SERIALIZABLE_PACKAGES=* -Djava.util.logging.config.file=logging.properties -Djava.security.auth.login.config=/opt/activemq/conf/login.config -Dcom.sun.management.jmxremote.port=11099 -Dcom.sun.management.jmxremote.password.file=/opt/activemq/conf/jmx.password -Dcom.sun.management.jmxremote.access.file=/opt/activemq/conf/jmx.access -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote -Djava.awt.headless=true -Djava.io.tmpdir=/opt/activemq/tmp -Dactivemq.classpath=/opt/activemq/conf:/opt/activemq/../lib/: -Dactivemq.home=/opt/activemq -Dactivemq.base=/opt/activemq -Dactivemq.conf=/opt/activemq/conf -Dactivemq.data=/opt/activemq/data -jar /opt/activemq/bin/activemq.jar start
;;;","21/May/16 07:01;bsonntag;Have forgot to configure the client as well (Wildfly). But i have still a problem, the LoggingEvent is Null :-(;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect Import-Package version range for org.springframework.osgi,AMQ-6298,12971457,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,davsclaus,soleger,soleger,20/May/16 08:31,20/May/16 18:33,14/Jul/23 05:44,20/May/16 13:15,5.13.0,5.13.1,5.13.2,5.13.3,,,,,,5.13.4,5.14.0,,,OSGi/Karaf,,,,,0,patch,,,,,"In issue AMQ-5922, I supplied a patch that updated the OSGi version range inside activemq-osgi for Spring to include Spring 4.X. Unfortunately, I reordered the ""org.springframework*"" clause and this is causing the version range for Spring and *Spring-DM* classes to be set to ""[3,5)"".

This is not a correct version range for Spring-DM since its releases only went from 1.0 to several 2.0 candidates.",,davsclaus,githubbot,jira-bot,soleger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6271,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Patch,,,,,,,,,9223372036854775807,,,Fri May 20 13:15:53 UTC 2016,,,,,,,Patch Available,,,,"0|i2y9jz:",9223372036854775807,Regression,,,,,,,,,,,,,,,,,,,,"20/May/16 09:05;githubbot;GitHub user soleger opened a pull request:

    https://github.com/apache/activemq/pull/186

    AMQ-6298: Fixed Spring Import-Package wildcard

    The org.springframework wildcard is above the Spring-DM org.springframework.osgi import, causing incorrect OSGi metadata.
    
    https://issues.apache.org/jira/browse/AMQ-6298

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/soleger/activemq AMQ-6298

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/186.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #186
    
----
commit 8b7632cb4f6aaa0d7d7c2febab5e60b6abcf3dff
Author: Seth Leger <seth@opennms.org>
Date:   2016-05-20T08:57:51Z

    AMQ-6298: Moved Spring Import-Package wildcard below other Spring
    imports.

----
;;;","20/May/16 09:08;soleger;There is a pull request with changes to fix this at:

https://github.com/apache/activemq/pull/186;;;","20/May/16 13:15;jira-bot;Commit 6d539b4f0127285f77c350a474a5bde867c34d72 in activemq's branch refs/heads/activemq-5.13.x from [~soleger]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=6d539b4 ]

AMQ-6298: Moved Spring Import-Package wildcard below other Spring
imports.
;;;","20/May/16 13:15;jira-bot;Commit 8b7632cb4f6aaa0d7d7c2febab5e60b6abcf3dff in activemq's branch refs/heads/master from [~soleger]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=8b7632c ]

AMQ-6298: Moved Spring Import-Package wildcard below other Spring
imports.
;;;","20/May/16 13:15;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/186
;;;","20/May/16 13:15;davsclaus;Thanks for the PR;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException in MulticastDiscoveryAgent.findNetworkInterface,AMQ-6297,12971410,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,space_center,space_center,20/May/16 05:39,20/May/16 14:33,14/Jul/23 05:44,20/May/16 13:55,5.13.3,,,,,,,,,5.14.0,,,,Transport,,,,,0,,,,,,"Broker configuration in spring:
{code:xml}
    <amq:broker useJmx=""true"" persistent=""true"" schedulerSupport=""true"" brokerName=""hardcollection""
                dataDirectoryFile=""file:${catalina.base}/active-mq"">
        <amq:networkConnectors>
            <amq:networkConnector uri=""${activemq.network.connector.uri}"" />
        </amq:networkConnectors>
        <amq:transportConnectors>
            <amq:transportConnector uri=""${activemq.transport.connector.uri}"" discoveryUri=""${activemq.transport.connector.discovery.uri}""/>
        </amq:transportConnectors>
    </amq:broker>
{code}

Properties
{code}
activemq.network.connector.uri=multicast://default
activemq.transport.connector.uri=tcp://localhost:0
activemq.transport.connector.discovery.uri=multicast://default
{code}

Exception throwed when broker is starting.
{quote}
Caused by: java.lang.NullPointerException: null
	at org.apache.activemq.transport.discovery.multicast.MulticastDiscoveryAgent.findNetworkInterface(MulticastDiscoveryAgent.java:351)
	at org.apache.activemq.transport.discovery.multicast.MulticastDiscoveryAgent.start(MulticastDiscoveryAgent.java:324)
	at org.apache.activemq.broker.TransportConnector.start(TransportConnector.java:253)
	at org.apache.activemq.broker.BrokerService.startTransportConnector(BrokerService.java:2680)
	at org.apache.activemq.broker.BrokerService.startAllConnectors(BrokerService.java:2594)
	at org.apache.activemq.broker.BrokerService.doStartBroker(BrokerService.java:756)
	at org.apache.activemq.broker.BrokerService.startBroker(BrokerService.java:718)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:621)
	at org.apache.activemq.broker.BrokerService.autoStart(BrokerService.java:575)
	at org.apache.activemq.broker.BrokerService.postConstruct(BrokerService.java:562)
	... 69 common frames omitted
{quote}","Windows Server 2008 R2 Standard
jdk1.8.0_77
Apache Tomcat 8.0.30
Springframework 4.2.5.Release",gtully,jira-bot,space_center,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri May 20 14:33:50 UTC 2016,,,,,,,,,,,"0|i2y99j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/May/16 13:54;jira-bot;Commit daf7e85e68e2403bc9e86948ae38adaa3e55ad69 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=daf7e85 ]

https://issues.apache.org/jira/browse/AMQ-6297 - null check for case where interface has no bindings
;;;","20/May/16 13:55;gtully;added a null check, it appears there are no bindings for one of the configured network interfaces on that machine;;;","20/May/16 14:33;jira-bot;Commit 5cc5022d2a2da6e2add8de5c1576a28e97006e87 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=5cc5022 ]

https://issues.apache.org/jira/browse/AMQ-6297 - displayName can also be null - thanks tbish
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Queue destination statistics can be inaccurate with a purge,AMQ-6293,12969773,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,14/May/16 16:15,16/May/16 15:03,14/Jul/23 05:44,14/May/16 16:24,5.13.3,,,,,,,,,5.14.0,,,,Broker,,,,,0,,,,,,"Recently I have been seeing some negative message counts from the destinationStatistics message counter of a Queue.  The dequeue counts also seem to be wrong as well.  This is hard to reproduce as it happens rarely, but running a purge while there are consumers online acking seems to be an occasional cause. 

The removeMessage method in a Queue can be called more than once for the same message if an ack comes in at the same time as a purge.  (This is because messages are prefetched so they can be acked even while they are purged) Taking a closer look, the broker handles duplicate calls ok in most cases but there are two areas that need to be fixed.

First, there is a race condition in the dropMessage() method in Queue.  It checks if the message is dropped before continuing with the drop.  This is not thread safe because the two methods calls are not synchronized together. I was able to show negative counts by introducing a small amount of latency between those two calls during a test.  There needs to be some synchronization done here to prevent the counts from getting out of sync.

Second, the dequeue counter needs to be moved out of the removeMessage() method and to the dropMessage() method so it can be protected by the same sync and only incremented when a message is dropped to prevent duplicate counts.
",,cshannon,jira-bot,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon May 16 15:03:20 UTC 2016,,,,,,,,,,,"0|i2xz67:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/May/16 16:21;jira-bot;Commit 1241e4120a5f4af58be2952a6ec985dcd8ac11c3 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=1241e41 ]

https://issues.apache.org/jira/browse/AMQ-6293

Fixing Queue destination statistics in dropMessage by adding sync in
between the check for dropped and actually dropping the message plus
fixing dequeue stats so messages aren't counted twice
;;;","14/May/16 16:24;cshannon;Patch applied with a test case.  This can be reopened if there are still issues in the future with wrong counts. ;;;","16/May/16 15:03;jira-bot;Commit a2720c46530a4e82907888bb0c33c2e41c6565e4 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=a2720c4 ]

https://issues.apache.org/jira/browse/AMQ-6293

Clean up the test, the times were causing CI failure.  Turn off
persistence and fix a couple other things, reduced time to 2.5 secs
while still reproducing with fix removed.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Thread unsafe code in TcpTransportServer can lead to NPE or other errors on start / stop,AMQ-6291,12969531,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,13/May/16 13:24,13/May/16 15:32,14/Jul/23 05:44,13/May/16 15:32,5.12.2,5.12.3,5.13.0,5.13.1,5.13.2,5.13.3,,,,5.13.4,5.14.0,,,Broker,Transport,,,,0,,,,,,"Access to several variable in TcpTransportServer is done in an unsafe manner which can lead to NPE or other data race exceptions on start or stop, one example below:

{noformat}
Error Message

got: <false>, expected: is <true>

Stacktrace

org.junit.AssumptionViolatedException: got: <false>, expected: is <true>
	at org.junit.Assume.assumeThat(Assume.java:95)
	at org.junit.Assume.assumeTrue(Assume.java:41)
	at org.apache.activemq.transport.stomp.StompMaxFrameSizeTest.testOversizedActionOnNioSocket(StompMaxFrameSizeTest.java:184)

Standard Output

2016-05-11 23:32:34,331 [main           ] - INFO  StompTestSupport               - ========== start testOversizedActionOnNioSocket[0] ==========
2016-05-11 23:32:34,339 [main           ] - DEBUG StompTestSupport               - Using stomp port 38198
2016-05-11 23:32:34,345 [main           ] - DEBUG StompTestSupport               - Using stomp+ssl port 54202
2016-05-11 23:32:34,346 [main           ] - DEBUG StompTestSupport               - Using stomp+nio port 56816
2016-05-11 23:32:34,350 [main           ] - DEBUG StompTestSupport               - Using stomp+nio+ssl port 50013
2016-05-11 23:32:34,353 [main           ] - WARN  BrokerService                  - Memory Usage for the Broker (1024mb) is more than the maximum available for the JVM: 891 mb - resetting to 70% of maximum available: 623 mb
2016-05-11 23:32:34,365 [main           ] - INFO  BrokerService                  - Using Persistence Adapter: MemoryPersistenceAdapter
2016-05-11 23:32:34,370 [main           ] - INFO  BrokerService                  - Apache ActiveMQ 5.14.0-SNAPSHOT (localhost, ID:jenkins-test-39e-56729-1463009553425-0:4) is starting
2016-05-11 23:32:34,374 [main           ] - INFO  TransportServerThreadSupport   - Listening for connections at: stomp://jenkins-test-39e:38198?wireFormat.maxDataLength=102400&wireFormat.maxFrameSize=65536
2016-05-11 23:32:34,374 [main           ] - INFO  TransportConnector             - Connector stomp://jenkins-test-39e:38198?wireFormat.maxDataLength=102400&wireFormat.maxFrameSize=65536 started
2016-05-11 23:32:34,375 [main           ] - INFO  TransportServerThreadSupport   - Listening for connections at: stomp+ssl://jenkins-test-39e:54202?wireFormat.maxDataLength=102400&wireFormat.maxFrameSize=65536
2016-05-11 23:32:34,376 [main           ] - INFO  TransportConnector             - Connector stomp+ssl://jenkins-test-39e:54202?wireFormat.maxDataLength=102400&wireFormat.maxFrameSize=65536 started
2016-05-11 23:32:34,377 [main           ] - INFO  TransportServerThreadSupport   - Listening for connections at: stomp+nio://jenkins-test-39e:56816?wireFormat.maxDataLength=102400&wireFormat.maxFrameSize=65536
2016-05-11 23:32:34,377 [main           ] - INFO  TransportConnector             - Connector stomp+nio://jenkins-test-39e:56816?wireFormat.maxDataLength=102400&wireFormat.maxFrameSize=65536 started
2016-05-11 23:32:34,379 [main           ] - INFO  TransportServerThreadSupport   - Listening for connections at: stomp+nio+ssl://jenkins-test-39e:50013?wireFormat.maxDataLength=102400&wireFormat.maxFrameSize=65536
2016-05-11 23:32:34,379 [main           ] - INFO  TransportConnector             - Connector stomp+nio+ssl://jenkins-test-39e:50013?wireFormat.maxDataLength=102400&wireFormat.maxFrameSize=65536 started
2016-05-11 23:32:34,380 [main           ] - INFO  BrokerService                  - Apache ActiveMQ 5.14.0-SNAPSHOT (localhost, ID:jenkins-test-39e-56729-1463009553425-0:4) started
2016-05-11 23:32:34,380 [main           ] - INFO  BrokerService                  - For help or more information please see: http://activemq.apache.org
2016-05-11 23:32:34,380 [main           ] - WARN  BrokerService                  - Temporary Store limit is 51200 mb (current store usage is 0 mb). The data directory: /home/jenkins/jenkins-slave/workspace/ActiveMQ-Java7/activemq-stomp/target only has 14884 mb of usable space. - resetting to maximum available disk space: 14884 mb
2016-05-11 23:32:34,381 [main           ] - INFO  BrokerService                  - Apache ActiveMQ 5.14.0-SNAPSHOT (localhost, ID:jenkins-test-39e-56729-1463009553425-0:4) is shutting down
2016-05-11 23:32:34,381 [main           ] - INFO  TransportConnector             - Connector stomp://jenkins-test-39e:38198?wireFormat.maxDataLength=102400&wireFormat.maxFrameSize=65536 stopped
2016-05-11 23:32:34,382 [main           ] - INFO  TransportConnector             - Connector stomp+ssl://jenkins-test-39e:54202?wireFormat.maxDataLength=102400&wireFormat.maxFrameSize=65536 stopped
2016-05-11 23:32:34,383 [main           ] - ERROR StompNIOTransportFactory$1     - Could not stop service: stomp+nio://0.0.0.0:0?wireFormat.maxDataLength=102400&wireFormat.maxFrameSize=65536. Reason: java.lang.NullPointerException
java.lang.NullPointerException
	at java.nio.channels.spi.AbstractSelectableChannel.removeKey(AbstractSelectableChannel.java:128)
	at java.nio.channels.spi.AbstractSelector.deregister(AbstractSelector.java:185)
	at sun.nio.ch.EPollSelectorImpl.implClose(EPollSelectorImpl.java:147)
	at sun.nio.ch.SelectorImpl.implCloseSelector(SelectorImpl.java:114)
	at java.nio.channels.spi.AbstractSelector.close(AbstractSelector.java:108)
	at org.apache.activemq.transport.tcp.TcpTransportServer.doStop(TcpTransportServer.java:476)
	at org.apache.activemq.util.ServiceSupport.stop(ServiceSupport.java:71)
	at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)
	at org.apache.activemq.broker.TransportConnector.stop(TransportConnector.java:283)
	at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)
	at org.apache.activemq.broker.BrokerService.stopAllConnectors(BrokerService.java:2208)
	at org.apache.activemq.broker.BrokerService.stop(BrokerService.java:819)
	at org.apache.activemq.transport.stomp.StompTestSupport.stopBroker(StompTestSupport.java:177)
	at org.apache.activemq.transport.stomp.StompTestSupport.tearDown(StompTestSupport.java:116)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:33)
	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:27)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:264)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:153)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
2016-05-11 23:32:34,385 [main           ] - ERROR StompNIOTransportFactory$1     - Could not stop service: stomp+nio://0.0.0.0:0?wireFormat.maxDataLength=102400&wireFormat.maxFrameSize=65536. Reason: java.lang.NullPointerException
java.lang.NullPointerException
	at java.nio.channels.spi.AbstractSelectableChannel.removeKey(AbstractSelectableChannel.java:128)
	at java.nio.channels.spi.AbstractSelector.deregister(AbstractSelector.java:185)
	at sun.nio.ch.EPollSelectorImpl.implClose(EPollSelectorImpl.java:147)
	at sun.nio.ch.SelectorImpl.implCloseSelector(SelectorImpl.java:114)
	at java.nio.channels.spi.AbstractSelector.close(AbstractSelector.java:108)
	at org.apache.activemq.transport.tcp.TcpTransportServer.doStop(TcpTransportServer.java:476)
	at org.apache.activemq.util.ServiceSupport.stop(ServiceSupport.java:71)
	at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)
	at org.apache.activemq.broker.TransportConnector.stop(TransportConnector.java:283)
	at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)
	at org.apache.activemq.broker.BrokerService.stopAllConnectors(BrokerService.java:2208)
	at org.apache.activemq.broker.BrokerService.stop(BrokerService.java:819)
	at org.apache.activemq.transport.stomp.StompTestSupport.stopBroker(StompTestSupport.java:177)
	at org.apache.activemq.transport.stomp.StompTestSupport.tearDown(StompTestSupport.java:116)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:33)
	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:27)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:264)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:153)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
2016-05-11 23:32:34,386 [main           ] - ERROR ManagedTransportConnector      - Could not stop service: stomp+nio://jenkins-test-39e:56816?wireFormat.maxDataLength=102400&wireFormat.maxFrameSize=65536. Reason: java.lang.NullPointerException
java.lang.NullPointerException
	at java.nio.channels.spi.AbstractSelectableChannel.removeKey(AbstractSelectableChannel.java:128)
	at java.nio.channels.spi.AbstractSelector.deregister(AbstractSelector.java:185)
	at sun.nio.ch.EPollSelectorImpl.implClose(EPollSelectorImpl.java:147)
	at sun.nio.ch.SelectorImpl.implCloseSelector(SelectorImpl.java:114)
	at java.nio.channels.spi.AbstractSelector.close(AbstractSelector.java:108)
	at org.apache.activemq.transport.tcp.TcpTransportServer.doStop(TcpTransportServer.java:476)
	at org.apache.activemq.util.ServiceSupport.stop(ServiceSupport.java:71)
	at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)
	at org.apache.activemq.broker.TransportConnector.stop(TransportConnector.java:283)
	at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)
	at org.apache.activemq.broker.BrokerService.stopAllConnectors(BrokerService.java:2208)
	at org.apache.activemq.broker.BrokerService.stop(BrokerService.java:819)
	at org.apache.activemq.transport.stomp.StompTestSupport.stopBroker(StompTestSupport.java:177)
	at org.apache.activemq.transport.stomp.StompTestSupport.tearDown(StompTestSupport.java:116)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:33)
	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:27)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:264)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:153)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
2016-05-11 23:32:34,388 [main           ] - INFO  TransportConnector             - Connector stomp+nio+ssl://jenkins-test-39e:50013?wireFormat.maxDataLength=102400&wireFormat.maxFrameSize=65536 stopped
2016-05-11 23:32:34,389 [main           ] - INFO  BrokerService                  - Apache ActiveMQ 5.14.0-SNAPSHOT (localhost, ID:jenkins-test-39e-56729-1463009553425-0:4) uptime 0.036 seconds
2016-05-11 23:32:34,389 [main           ] - INFO  BrokerService                  - Apache ActiveMQ 5.14.0-SNAPSHOT (localhost, ID:jenkins-test-39e-56729-1463009553425-0:4) is shutdown

Standard Error

Exception in thread ""ActiveMQ Transport Server: stomp+nio://0.0.0.0:0?wireFormat.maxDataLength=102400&wireFormat.maxFrameSize=65536"" java.nio.channels.ClosedSelectorException
	at sun.nio.ch.EPollSelectorImpl.putEventOps(EPollSelectorImpl.java:185)
	at sun.nio.ch.ServerSocketChannelImpl.translateAndSetInterestOps(ServerSocketChannelImpl.java:361)
	at sun.nio.ch.SelectionKeyImpl.nioInterestOps(SelectionKeyImpl.java:105)
	at sun.nio.ch.SelectionKeyImpl.interestOps(SelectionKeyImpl.java:83)
	at sun.nio.ch.SelectorImpl.register(SelectorImpl.java:135)
	at java.nio.channels.spi.AbstractSelectableChannel.register(AbstractSelectableChannel.java:209)
	at java.nio.channels.SelectableChannel.register(SelectableChannel.java:277)
	at org.apache.activemq.transport.tcp.TcpTransportServer.run(TcpTransportServer.java:310)
	at java.lang.Thread.run(Thread.java:745)

{noformat}",,jira-bot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri May 13 15:31:25 UTC 2016,,,,,,,,,,,"0|i2xxof:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/May/16 15:26;tabish;Tagged the wrong issue in the commit, the actually fix for this is in: https://git1-us-west.apache.org/repos/asf?p=activemq.git;a=commit;h=ff998722;;;","13/May/16 15:29;jira-bot;Commit 52d2b157808c4dd11fe39203e0caad44d4e64a86 in activemq's branch refs/heads/activemq-5.13.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=52d2b15 ]

https://issues.apache.org/jira/browse/AMQ-6291

Better management of shared resources between the background run thread
and the main start / stop thread.  Makes sure to cleanup all resources
before finally throwing on stop to prevent leaking and resources.  
(cherry picked from commit ff99872263981982bb1ebce93c07bfb8a28d4a06)

Conflicts:
	activemq-client/src/main/java/org/apache/activemq/transport/tcp/TcpTransportServer.java
;;;","13/May/16 15:31;jira-bot;Commit cc849e74406e6fdc410aac862bd615b9a321bb7f in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=cc849e7 ]

https://issues.apache.org/jira/browse/AMQ-6291

Simplify the selector close in doStop, the run method no longer tries to
close this after it has been registered and assigned.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMS Pool reconnection logic not always reliable,AMQ-6290,12967886,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,11/May/16 20:01,11/May/16 20:20,14/Jul/23 05:44,11/May/16 20:16,5.13.0,5.13.1,5.13.2,5.13.3,,,,,,5.13.4,5.14.0,,,JMS client,Pool,,,,0,,,,,,"The reconnect on exception configuration setting in the JMS pool relies on an exception being thrown from the ExceptionListener to signal a reconnect needed.  This can miss an exception thrown from the start method when the initial connection attempt is being made and things like security exceptions trigger connection failure.  Even if the exception is given to the listener it happens asynchronously which means the pool will be handling out known broken connection instances until the listener gets around to running the close logic.

For the start method we should also be handling the exception in ConnectionPool and checking for the reconnect on exception flag to indicate a failure has occurred and the Connection should be closed and evicted from the pool.  ",,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5534,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,2016-05-11 20:01:15.0,,,,,,,,,,,"0|i2xnkn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Message ack compaction needs to acquire the checkpoint lock,AMQ-6288,12967407,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,11/May/16 13:04,06/Feb/17 14:05,14/Jul/23 05:44,12/May/16 14:42,5.13.3,,,,,,,,,5.14.0,,,,Broker,,,,,0,,,,,,"The AckCompactionRunner task needs to acquire the checkpiont lock to prevent other threads from running a checkpoint while the task is running. Normally this task runs on the same executor as the checkpoint task so the ack compaction task wouldn't run at the same time as the checkpoint task as they are processed one at a time.

However, there are two cases where this isn't always true.  First, the checkpoint() method is public and can be called through the PersistenceAdapter interface by someone at the same time the ack compaction is running.  Second, a checkpoint is called during shutdown without using the executor and could also run while the ack compaction is running.

The main reason for this fix is because when doing some testing I was seeing an occasional error from journal.getNextLocation() in the forwardAllAcks method because a journal file was missing which I believe was cleaned up by the cleanup task.  I was testing scenarios such as shutdown and also manually triggering the task at the same time as an ack compaction.

Also, while we are at it, we should have a try/catch around the journal.getNextLocation calls to catch any IOException so we can abort gracefully. ",,cshannon,jira-bot,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6203,AMQ-6432,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Feb 06 14:05:49 UTC 2017,,,,,,,,,,,"0|i2xkmf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/May/16 13:17;jira-bot;Commit e53e340262d5e57a11464c323606529430e9b832 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e53e340 ]

https://issues.apache.org/jira/browse/AMQ-6288

The ack compaction task now acquires the checkpoint lock while it runs
to prevent a checkpoint from running at the same time unintentionally.
Also, getJournalLocation is now protected by a try/catch to handle
errors.
;;;","11/May/16 13:20;cshannon;This has been resolved.  In the future it may make sense to get rid of the checkpoint lock entirely and only run the tasks on the executor.  The existing points in the code that run the checkpoint as sync could just use a future and wait for it to finish, etc.  I think this would work ok without the lock but would still need to look closer at it and make sure no issues would pop up.;;;","12/May/16 14:26;cshannon;We need to grab the readlock, not the writelock because the journal requires the readlock to store to it.  With the writelock everything grinds to a halt when rewriting acks which we don't want.;;;","12/May/16 14:42;cshannon;Fixed updated with a readlock: https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=c8a6171d04303da18d9e19ded30146643d7cbad6;;;","03/Feb/17 16:59;jira-bot;Commit 9b64e188b59a395300a2f5d6022df9dbbae2f426 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=9b64e18 ]

[AMQ-6432] issue was journal scan on newly created ack file. I left the relevant braces from AMQ-6288 in place. Fix and test
;;;","06/Feb/17 14:05;jira-bot;Commit 93715d1bd605bc61149505d4df2ebc223ae371af in activemq's branch refs/heads/activemq-5.14.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=93715d1 ]

[AMQ-6432] issue was journal scan on newly created ack file. I left the relevant braces from AMQ-6288 in place. Fix and test

(cherry picked from commit 9b64e188b59a395300a2f5d6022df9dbbae2f426)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Message ack rewrite task doesn't properly release index lock,AMQ-6287,12967394,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,11/May/16 12:35,26/May/16 09:55,14/Jul/23 05:44,11/May/16 12:37,5.13.3,,,,,,,,,5.13.4,5.14.0,,,Broker,,,,,0,,,,,,"The AckCompactionRunner that processes the ack rewrites doesn't properly release the index lock in a try/finally block so it is possible that the lock isn't released, such as when no journal to advance is found.

This only currently affects 5.13.3 as in master it was already fixed by this commit: https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=62bdbb0db5dc4354f0e00fd5259b3db53eb1432d",,cshannon,jira-bot,ruralhunter,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6203,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu May 26 09:55:04 UTC 2016,,,,,,,,,,,"0|i2xkjj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/May/16 12:36;jira-bot;Commit c8a805deffc0315ccf3bcb5591fafe8b22e5bd60 in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=c8a805d ]

https://issues.apache.org/jira/browse/AMQ-6287

Properly enclosing the indexLock in a try/finally inside of
AckCompactionRunner
;;;","26/May/16 09:10;ruralhunter;did this actually land in release 5.13.3? I see this in the release note https://issues.apache.org/jira/secure/ReleaseNote.jspa?projectId=12311210&version=12335045
But 5.13.3 was released on 05/03 while this change was made on 05/11. How could this happen?;;;","26/May/16 09:55;cshannon;It was supposed to be 5.13.4 not 5.13.3;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Queue order lost on repeated redelivery,AMQ-6286,12966403,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,09/May/16 21:44,29/Jun/16 17:47,14/Jul/23 05:44,09/May/16 22:10,5.13.0,,,,,,,,,5.14.0,,,,Broker,,,,,0,order,,,,,"When a consumer prefetches messages or consumes and does not ack in pull mode, on close, any messages that have not been acked end up in on the broker in the already delivered list.
These messages get dispatched first. However, if these messages are unconsumed again, they get appended to the dispatched list.
This makes sense when there are multiple consumers, A gets 10, B gets 10, A closes, there are 10 to redeliver, B closes, there are now 20 to redeliver. the order should be preserved.
However if there is a single consumer this breaks.

Consider: 
publish 100 to Q
consume 50 and rollback/close with all unacked, expect 0-49
consume 10 and rollback/close with all unacked, expect 0-9
consume 10 more ... expect 0-9 but get 10-19!

In concert with the strictOrderDispatch policy, I think we should be able to support the natural expectation here.

The scenario presents its self with prefetched messages where the prefetch varies or more naturally with a single consumer that consumed in various transaction batches. In the transacted case, two failures would result in compromised queue ordering. 

",,gtully,jira-bot,pgfox,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6340,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jun 29 17:35:11 UTC 2016,,,,,,,,,,,"0|i2xefj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/May/16 22:06;jira-bot;Commit f47b370573d5a2bcb5a000c1adce0bbf7d40f5b1 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=f47b370 ]

https://issues.apache.org/jira/browse/AMQ-6286 extend strictOrderDispatch to retain order of redispatched messages for a single consumer
;;;","09/May/16 22:10;gtully;strictOrderDispatch=true - for a single consumer, re-dispatched messages will be inserted at the head of the dispatch list.
Note: this does not work if prioritizedMessages=true, in that case the ordering is determined by the current visible message priority, irrespective of previous dispatch order.;;;","10/May/16 10:45;jira-bot;Commit 604f707d4d69696fa18f2c58d3a46b0c282c37a8 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=604f707 ]

https://issues.apache.org/jira/browse/AMQ-6286 - refactor insertAtHead from pendinglist to ordered variant
;;;","13/May/16 14:50;jira-bot;Commit d7b5a62bb0f5131986bbb16d26758f986e4d9222 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=d7b5a62 ]

https://issues.apache.org/jira/browse/AMQ-6286 - variant on test with n consumers sharing a session
;;;","18/May/16 09:10;jira-bot;Commit c2230fda4bd8eed7bba3245ad4b11fcd8e3bd581 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=c2230fd ]

https://issues.apache.org/jira/browse/AMQ-6286 - refine fix to distinguish multiple consumers in a transaction, verify insertion at head will preserve order
;;;","24/Jun/16 13:39;jira-bot;Commit e02c1a17f83b21cbf42fa9e6e78a891af3edd8bb in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e02c1a1 ]

https://issues.apache.org/jira/browse/AMQ-6286

Create a follow on test showing AMQP respects order.;;;","29/Jun/16 17:35;jira-bot;Commit 8ae7c8f3a7b82e8f3ab4ef4331fbda5ca0fd0d17 in activemq's branch refs/heads/activemq-5.13.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=8ae7c8f ]

https://issues.apache.org/jira/browse/AMQ-6286

Create a follow on test showing AMQP respects order.
(cherry picked from commit e02c1a17f83b21cbf42fa9e6e78a891af3edd8bb)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MessageDatabase doesn't properly cleanup the checkpoint scheduler on shutdown,AMQ-6285,12966271,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,09/May/16 19:02,09/May/16 19:45,14/Jul/23 05:44,09/May/16 19:11,5.13.3,,,,,,,,,5.13.4,5.14.0,,,Broker,KahaDB,,,,0,,,,,,"On KahaDB store close the checkpoint scheduler service is shutdown but it is not set to null.  This is an issue because on startup of the store, the scheduler is checked for null and only started if it is null.  Therefore, if a store was previously started and shutdown, when started again the thread would not re-start.

This would not normally cause a problem for the usual use case as a store is typically only closed when the broker is shut down, however it is a good idea to fix it as this behavior could change in the future plus the start/stop methods are public on the store so it is possible to start/stop the store even though it isn't normally done.

 ",,cshannon,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6203,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon May 09 19:38:09 UTC 2016,,,,,,,,,,,"0|i2xdmf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/May/16 19:04;jira-bot;Commit 60b0c4f85ada06875e09b1bc3fbefac0f9fb6156 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=60b0c4f ]

https://issues.apache.org/jira/browse/AMQ-6285

Properly nulling out the scheduler service in MessageDatabase after it
is shutdown on a store close so that if the store is restarted the thread will
properly restart.
;;;","09/May/16 19:08;jira-bot;Commit db3f8b3554a1ecf5c9fcf917948d10e5fa8de28e in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=db3f8b3 ]

Revert ""https://issues.apache.org/jira/browse/AMQ-6285""

This reverts commit 60b0c4f85ada06875e09b1bc3fbefac0f9fb6156.

Inadvertantly commited a bunch of changes by mistake
;;;","09/May/16 19:08;jira-bot;Commit 7bdcca1bdacec4955c55e8717ac8d61cc51b0c69 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=7bdcca1 ]

https://issues.apache.org/jira/browse/AMQ-6285

Properly nulling out the scheduler service in MessageDatabase after it
is shutdown on a store close so that if the store is restarted the
thread will properly restart.
;;;","09/May/16 19:10;jira-bot;Commit cd68c42b90892a62d050fad7e46dddd469051b38 in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=cd68c42 ]

https://issues.apache.org/jira/browse/AMQ-6285

Properly nulling out the scheduler service in MessageDatabase after it
is shutdown on a store close so that if the store is restarted the
thread will properly restart.

(cherry picked from commit 7bdcca1bdacec4955c55e8717ac8d61cc51b0c69)
;;;","09/May/16 19:11;cshannon;The scheduler is properly nulled out on store close now.;;;","09/May/16 19:36;jira-bot;Commit 91213010b30d426095c16d3fa8d5fa2cafaf05e5 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=9121301 ]

https://issues.apache.org/jira/browse/AMQ-6285

Added an extra isShutdown() failsafe check when detecting if the
checkpoint thread should start
;;;","09/May/16 19:36;jira-bot;Commit 0ba9f9340f3d568db54923e03b9abfb5a5352a38 in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=0ba9f93 ]

https://issues.apache.org/jira/browse/AMQ-6285

Added an extra isShutdown() failsafe check when detecting if the
checkpoint thread should start

(cherry picked from commit 91213010b30d426095c16d3fa8d5fa2cafaf05e5)
;;;","09/May/16 19:38;cshannon;AMQ-6203 actually first introduced this so it only effects version 5.13.3.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LevelDB store can't recover from no disk space,AMQ-6282,12965347,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,ryan.stedman@gmail.com,ryan.stedman@gmail.com,05/May/16 18:23,06/Feb/17 14:27,14/Jul/23 05:44,06/Feb/17 14:27,5.12.2,,,,,,,,,,,,,LevelDB,,,,,1,,,,,,"If there is no space left on the drive that leveldb is using for storage, it will wind up truncating the store-version.txt file, which will prevent activemq from starting up once the drive space issue is resolved.

To reproduce:
1. Start activemq, configured to use leveldb as a persistence store.
2. use fallocate to create a file(s) that use up all available disk space on the drive that leveldb is using to persist to.
3. restart activemq.  It will fail to start with errors in the log about no available disk space (expected).
4. delete the files created in step 2, so that the drive is not full
5. start activemq again.  This time it will fail with the below exception:

2016-05-05 13:34:39,986 [erSimpleAppMain] ERROR XBeanBrokerFactory             - Failed to load: class path resource [activemq.xml], reason: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.Exception: Cannot open the store.  It's schema version is not supported.
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.Exception: Cannot open the store.  It's schema version is not supported.
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1514)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:521)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:293)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:290)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:191)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:636)
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:934)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
        at org.apache.activemq.xbean.XBeanBrokerFactory$1.<init>(XBeanBrokerFactory.java:104)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:104)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:67)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:87)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:62)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:154)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:62)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:104)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:606)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:262)
        at org.apache.activemq.console.Main.main(Main.java:115)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:606)
        at org.tanukisoftware.wrapper.WrapperSimpleApp.run(WrapperSimpleApp.java:290)
        at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.Exception: Cannot open the store.  It's schema version is not supported.
        at org.apache.activemq.leveldb.LevelDBClient.init(LevelDBClient.scala:596)
        at org.apache.activemq.leveldb.LevelDBClient.start(LevelDBClient.scala:557)
        at org.apache.activemq.leveldb.DBManager.start(DBManager.scala:648)
        at org.apache.activemq.leveldb.LevelDBStore.doStart(LevelDBStore.scala:312)
        at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:55)
        at org.apache.activemq.broker.BrokerService.doStartPersistenceAdapter(BrokerService.java:651)
        at org.apache.activemq.broker.BrokerService.startPersistenceAdapter(BrokerService.java:640)
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:604)
        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:73)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:606)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1640)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1581)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1511)
        ... 33 more


6. If you look at store-version.txt file (ie. /usr/share/activemq/data/leveldb/store-version.txt), the file is empty.
7. If you edit the file and add the text ""activemq_leveldb_store:1"" to it, activemq will start up successfully the next time you try to start it.

",CentOS 6.5,cshannon,ryan.stedman@gmail.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Feb 06 14:27:42 UTC 2017,,,,,,,,,,,"0|i2x7z3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/May/16 18:28;ryan.stedman@gmail.com;I have seen this issue of the store-version.txt file getting truncated in other situations where the disk wasn't full.  It was seen a couple times when the OS host was hard shut down (powered off, not shut down properly).  However, filling up the drive space was the only way I could consistently reproduce the problem.;;;","06/Feb/17 14:27;cshannon;LevelDB has been deprecated and is no longer supported.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CompositeDestination copyMessage configuration is no longer valid,AMQ-6281,12965319,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,05/May/16 16:27,02/Jun/17 11:54,14/Jul/23 05:44,05/May/16 17:00,5.11.4,5.12.3,5.13.0,5.13.1,5.13.2,5.13.3,,,,5.14.0,,,,Broker,,,,,0,,,,,,"The configuration value *copyMessage* in CompositeDestination is no longer valid, the messages always need to be copied so their destination value can be updated before being routed through the broker.

We can deprecate this option and ignore it in the current code base.",,jira-bot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6695,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu May 05 16:59:43 UTC 2016,,,,,,,,,,,"0|i2x7sv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/May/16 16:59;jira-bot;Commit 5096463b00c4f470b108760f6849f9a0433b6fa0 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=5096463 ]

https://issues.apache.org/jira/browse/AMQ-6281

Deprecate the copyMessage option and remove usage, always copy a
forwarded message.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SSL documentation is inconsistent,AMQ-6280,12964748,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,maxlinc,maxlinc,03/May/16 18:53,05/May/16 18:50,14/Jul/23 05:44,05/May/16 17:48,,,,,,,,,,,,,,Documentation,,,,,0,documentation,,,,,"The documentation at http://activemq.apache.org/how-do-i-use-ssl.html uses inconsistent names for the keystore & trustStore files, so a user trying to follow the steps exactly as a tutorial will run into problems.

In particular it alternates between using ""server.keystore"" and ""client.keystore"" vs ""broker.ts"" and ""client.ks"".

The separation between server authentication and client authentication certificates also isn't as clean as it could be. If you're only doing server authentication than is the trustStore configuration required or only the keystore?",,maxlinc,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu May 05 18:50:31 UTC 2016,,,,,,,,,,,"0|i2x49z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/May/16 17:48;tabish;Updated the keystore files to be consistent.  If you have other issues with the page as it stands then we accept contributions of additional content, you can request edit rights on the user mailing list.;;;","05/May/16 18:43;maxlinc;I actually would have sent a pull request but I had hard time finding the source. Is the documentation in the main activemq repo or stored elsewhere?;;;","05/May/16 18:50;tabish;The documentation is contained within a confluence based Wiki, so you need to request access to that in order to make changes.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error when using ws transport connector,AMQ-6275,12963963,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,sulzbach,sulzbach,29/Apr/16 20:23,09/Jun/16 21:33,14/Jul/23 05:44,09/Jun/16 16:14,5.13.2,,,,,,,,,5.13.4,5.14.0,,,,,,,,1,karaf,websocket,,,,"Googled it. Only 20 pages found.

broker.xml:

{code:xml}
<transportConnectors>
	<!-- DOS protection, limit concurrent connections to 1000 and frame size to 100MB -->
	<transportConnector name=""openwire"" uri=""tcp://0.0.0.0:61616?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600"" />
	<transportConnector name=""websocket"" uri=""ws://0.0.0.0:61614"" />
	<transportConnector name=""mqtt"" uri=""mqtt+nio://0.0.0.0:1883"" />
</transportConnectors>
{code}

About 43 topics total.
3 publishers, 1 message per second.
Firefox subscribed to 39 topics (websocket).

After few messages received, the following error occurs (Karaf log:tail):

{noformat}

Transport Connection to: ws://x.x.x.x:xxxx failed: java.io.IOException: Blocking message pending 10000 for BLOCKING

{noformat}","Server:
Linux 3.16.0-38-generic x86_64
Karaf 4.0.5
Java SDK 1.8.0_91-b14

Client:
Linux 3.16.0-38-generic x86_64
Firefox 45.0.2
Eclipse Paho JavaScript Client (https://raw.githubusercontent.com/eclipse/paho.mqtt.javascript/master/src/mqttws31.js)

Also tested with http://www.hivemq.com/demos/websocket-client/

",cshannon,Dovitch,jira-bot,sulzbach,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Jun/16 21:38;sulzbach;dump.log;https://issues.apache.org/jira/secure/attachment/12808767/dump.log","07/Jun/16 21:38;sulzbach;karaf.log;https://issues.apache.org/jira/secure/attachment/12808766/karaf.log",,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jun 09 21:33:47 UTC 2016,,,,,,,,,,,"0|i2wzfr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/May/16 13:44;tabish;Were there any additional details in the logs that might help to know what was going on?  Not enough here to really go on. ;;;","06/May/16 14:30;cshannon;A full thread dump would be useful as well (jstack -l <pid>) to show what all the threads are doing when messages are being blocked.;;;","17/May/16 08:57;Dovitch;I've also the same issue with the last release (5.13.3).
I've tried to change kahaDB configuration in _<persistenceAdaptater>_ block with adding attribute ""_indexCacheSize_"" with a value of 100000 to test if it changes something. Not at all...
I still have an error _failed: java.io.IOException: Blocking message pending 10000 for BLOCKING_

I will try a full thread dump to give you more informations if needed!;;;","07/Jun/16 21:38;sulzbach;Sorry about the delay.;;;","09/Jun/16 16:10;jira-bot;Commit 98d20008333af380ae05d91036d123501115ab8c in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=98d2000 ]

https://issues.apache.org/jira/browse/AMQ-6275

Avoid unnecessary connection state lookup leading to lock ordering
issues.;;;","09/Jun/16 21:33;jira-bot;Commit d594248db59995432cdbf8b1866590e1cd8d814e in activemq's branch refs/heads/activemq-5.13.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=d594248 ]

https://issues.apache.org/jira/browse/AMQ-6275

Avoid unnecessary connection state lookup leading to lock ordering
issues.
(cherry picked from commit 98d20008333af380ae05d91036d123501115ab8c)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ReconnectionPolicy.getNextDelay(int attempt) always returns zero when maxReconnectAttempts/maxInitialConnectAttempts == ReconnectionPolicy.INFINITE,AMQ-6273,12963879,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,ben_nisbet,ben_nisbet,29/Apr/16 15:59,19/Jul/16 21:27,14/Jul/23 05:44,19/Jul/16 21:27,5.12.1,,,,,,,,,5.14.0,,,,Connector,,,,,0,,,,,,"The v.5.12.1 release of class org.apache.activemq.network.jms.JmsConnector contains a defect within method *private void doInitializeConnection(boolean local) throws Exception* that causes the *attempt* variable to
 always retain a value of zero if ReconnectionPolicy.maxReconnectAttempts/maxInitialConnectAttempts == ReconnectionPolicy.INFINITE. (irrespective of the actual number of loop iterations)

This indirectly prevents the connector from using any of the following ReconnectionPolicy configuration properties:

private long initialReconnectDelay = 1000L;
private long maximumReconnectDelay = 30000;
private boolean useExponentialBackOff = false;
private double backOffMultiplier = 2.0;

The defect is triggered by inclusion of increment operator for *attempt* variable within do/while loop condition evaluation.  Line 630 of class JmsConnector uses short-circuit evaluation and this prevents value from being incremented whenever maxRetries == INFINITE  evaluates to true:

*while ((maxRetries == INFINITE || maxRetries > ++attempt) && !connectionService.isShutdown());*","WebLogic 10.3.6, HotSpot JDK 1.7",ben_nisbet,jira-bot,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Important,,,,,,,,,9223372036854775807,,,Tue Jul 19 21:26:54 UTC 2016,,,,,,,,,,,"0|i2wyx3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/Apr/16 16:17;tabish;You should write a unit test to demonstrate the issue;;;","19/Jul/16 21:26;jira-bot;Commit e05db7cb5c82660d83e913fa6df77a9e23d0eb8f in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e05db7c ]

https://issues.apache.org/jira/browse/AMQ-6273

increment the connect attempt count explicitly to ensure reconnect
policy options are applied. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deadlock on destination map - slow topic sub with slowConsumerAdvisory,AMQ-6264,12962970,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,gtully,gtully,27/Apr/16 10:44,04/May/16 21:29,14/Jul/23 05:44,04/May/16 21:29,5.13.0,,,,,,,,,5.14.0,,,,Broker,,,,,1,advisory,daedlock,topic,,,"the DestinationMap is locked via a publish send to a new dest:
{code}
""ActiveMQ NIO Worker 9808"" #48458 daemon prio=9 os_prio=0
tid=0x00007f2c4c00e000 nid=0x4849 waiting for monitor entry
[0x00007f2c59a78000]
   java.lang.Thread.State: BLOCKED (on object monitor)
at org.apache.activemq.broker.region.PrefetchSubscription.add(PrefetchSubscription.java:585)
- waiting to lock <0x00000006c2921d78> (a java.lang.Object)
at org.apache.activemq.broker.region.DurableTopicSubscription.add(DurableTopicSubscription.java:113)
at org.apache.activemq.broker.region.Topic.addSubscription(Topic.java:160)
at org.apache.activemq.broker.region.DestinationFilter.addSubscription(DestinationFilter.java:57)
at org.apache.activemq.security.AuthorizationDestinationFilter.addSubscription(AuthorizationDestinationFilter.java:61)
at org.apache.activemq.broker.region.AbstractRegion.addSubscriptionsForDestination(AbstractRegion.java:169)
at org.apache.activemq.broker.region.TopicRegion.addSubscriptionsForDestination(TopicRegion.java:245)
at org.apache.activemq.broker.region.AbstractRegion.addDestination(AbstractRegion.java:144)
at org.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:348)
at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:172)
at org.apache.activemq.advisory.AdvisoryBroker.addDestination(AdvisoryBroker.java:198)
at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:172)
at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:172)
at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:172)
at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:172)
at org.apache.activemq.security.AuthorizationBroker.addDestination(AuthorizationBroker.java:118)
at org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:177)
at org.apache.activemq.broker.util.LoggingBrokerPlugin.addDestination(LoggingBrokerPlugin.java:329)
at org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:177)
at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:462)
at org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:297)
at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:152)
at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)
at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:293)
at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:152)
at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:152)
at org.apache.activemq.security.AuthorizationBroker.send(AuthorizationBroker.java:223)
at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:157)
at org.apache.activemq.broker.util.LoggingBrokerPlugin.send(LoggingBrokerPlugin.java:275)
at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:157)
at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:542)
at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:768)
at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:334)
at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:188)
{code}


which is blocked on a durable sub: that is slow and is firing an advisory to that effect with the pending lock held.
The other thread has the destination lock and wants the pending lock to tell the sub about the new destination.
{code}
""ActiveMQ BrokerService[..] Task-6065"" #48428
daemon prio=5 os_prio=0 tid=0x00007f2c640c5000 nid=0x4803 waiting on
condition [0x00007f2c5898f000]
   java.lang.Thread.State: WAITING (parking)
at sun.misc.Unsafe.park(Native Method)
- parking to wait for  <0x00000006c29630f0> (a
java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)
at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836)
at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireShared(AbstractQueuedSynchronizer.java:967)
at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireShared(AbstractQueuedSynchronizer.java:1283)
at java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock.lock(ReentrantReadWriteLock.java:727)
at org.apache.activemq.broker.region.AbstractRegion.lookup(AbstractRegion.java:455)
at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:415)
at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:468)
at org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:297)
at org.apache.activemq.advisory.AdvisoryBroker.fireAdvisory(AdvisoryBroker.java:634)
at org.apache.activemq.advisory.AdvisoryBroker.slowConsumer(AdvisoryBroker.java:438)
at org.apache.activemq.broker.BrokerFilter.slowConsumer(BrokerFilter.java:359)
at org.apache.activemq.broker.BrokerFilter.slowConsumer(BrokerFilter.java:359)
at org.apache.activemq.broker.BrokerFilter.slowConsumer(BrokerFilter.java:359)
at org.apache.activemq.broker.BrokerFilter.slowConsumer(BrokerFilter.java:359)
at org.apache.activemq.broker.MutableBrokerFilter.slowConsumer(MutableBrokerFilter.java:370)
at org.apache.activemq.broker.util.LoggingBrokerPlugin.slowConsumer(LoggingBrokerPlugin.java:571)
at org.apache.activemq.broker.MutableBrokerFilter.slowConsumer(MutableBrokerFilter.java:370)
at org.apache.activemq.broker.region.BaseDestination.slowConsumer(BaseDestination.java:545)
at org.apache.activemq.broker.region.PrefetchSubscription.dispatchPending(PrefetchSubscription.java:674)
- locked <0x00000006c2921d78> (a java.lang.Object)
at org.apache.activemq.broker.region.DurableTopicSubscription.dispatchPending(DurableTopicSubscription.java:282)
at org.apache.activemq.broker.region.PrefetchSubscription.onDispatch(PrefetchSubscription.java:755)
at org.apache.activemq.broker.region.PrefetchSubscription$3.onSuccess(PrefetchSubscription.java:717)
at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:959)
at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:988)
at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:133)
at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:48)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
at java.lang.Thread.run(Thread.java:745){code}

All of the blocked threads result in disconnects/reconnects and exhaustion of available sockets.
",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed May 04 20:32:18 UTC 2016,,,,,,,,,,,"0|i2wtcn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Apr/16 10:45;gtully;Seems the issue is retaining the pendingLock while firing the slowConsumerAdvisory in PrefetchSubscription;;;","27/Apr/16 10:49;gtully;the slowConsumerAdvisory policy needs to be specified for this to occur:{code}<policyEntry topic="">"" advisoryForSlowConsumers=""true ..>{code}
when false (the default) this issue is avoided.;;;","04/May/16 20:32;jira-bot;Commit a28a091c552cc4910c7340cc62cc3cd88a5e8993 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=a28a091c ]

https://issues.apache.org/jira/browse/AMQ-6264

Fire advisory for slow consumer outside the pending lock.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"AMQP: Using JMS Transformer, preserve the type of the original MessageID",AMQ-6263,12962588,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,26/Apr/16 13:34,12/Jul/16 18:16,14/Jul/23 05:44,26/Apr/16 22:10,5.12.2,5.12.3,5.13.0,5.13.1,5.13.2,,,,,5.13.3,5.14.0,,,AMQP,,,,,0,,,,,,"When transforming the incoming message using the JMS Transformer the type of the incoming message ID is lost when stored in the text view value in the MessageId object, we need to preserve that type as this is meant to be immutable.  ",,jira-bot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6353,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Apr 26 22:09:06 UTC 2016,,,,,,,,,,,"0|i2wqzr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Apr/16 22:08;jira-bot;Commit 4d6f4d74755d6c9985078766fce2eba95d9bbb6a in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=4d6f4d7 ]

https://issues.apache.org/jira/browse/AMQ-6263

Encode the incoming messageId value into a string using type prefixes
and decode them on the way out to ensure that we preserve the original
AMQP MessageId type and value. ;;;","26/Apr/16 22:09;jira-bot;Commit 94023ebed50af901438eec9254ae5462fa1ce907 in activemq's branch refs/heads/activemq-5.13.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=94023eb ]

https://issues.apache.org/jira/browse/AMQ-6263

Encode the incoming messageId value into a string using type prefixes
and decode them on the way out to ensure that we preserve the original
AMQP MessageId type and value.
(cherry picked from commit 4d6f4d74755d6c9985078766fce2eba95d9bbb6a)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HTTP transport broken in 5.12,AMQ-6262,12962170,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,pbruski_,pbruski_,25/Apr/16 08:15,29/Nov/16 22:31,14/Jul/23 05:44,25/Apr/16 21:06,5.12.0,5.12.1,5.12.2,5.12.3,5.13.0,5.13.1,5.13.2,,,5.13.3,5.14.0,,,,,,,,0,,,,,,"A regression from https://issues.apache.org/jira/browse/AMQ-5794 .
Connection watchdog is started for every initiated connection and stopped on WireFormatInfo command. HTTP transport doesn't send WireFormatInfo so the watchdog never realises that the connection has been successfully established.

The connection gets terminated every 30seconds by the watchdog.
At the beginning, everything looks fine, but then you start getting exceptions and start losing packets. I haven't seen that myself, but I had people reporting that if HTTP transports are in use, it eventually destabilises the broker and affects non-HTTP transports too.

{noformat}
2016-04-22 10:32:46.029244500 2016-04-22 10:32:46,029 WARN [ActiveMQ InactivityMonitor Worker] [Transport] Transport Connection to: blockingQueue_28120594 failed: org.apache.activemq.transport.InactivityIOException: Channel was inactive
2016-04-22 10:33:30.988313500 org.apache.activemq.transport.InactivityIOException: Channel was inactive (no connection attempt made) for too (>30000) long: blockingQueue_21644517
2016-04-22 10:33:30.988637500   at org.apache.activemq.transport.AbstractInactivityMonitor$1$1.run(AbstractInactivityMonitor.java:91)
2016-04-22 10:33:30.988667500   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
2016-04-22 10:33:30.988689500   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
2016-04-22 10:33:30.988717500   at java.lang.Thread.run(Thread.java:745)
{noformat}",,githubbot,jira-bot,pbruski_,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6185,,,,,,,,,,,,,,,,AMQ-5794,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Nov 29 22:31:21 UTC 2016,,,,,,,Patch Available,,,,"0|i2woev:",9223372036854775807,Regression,,,,,,,,,,,,,,,,,,,,"25/Apr/16 08:34;githubbot;GitHub user pbruski opened a pull request:

    https://github.com/apache/activemq/pull/181

    AMQ-6262 - HTTP transport broken in 5.12

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/atlassian/activemq AMQ-6262-fix-inactivity-monitor-for-http

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/181.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #181
    
----
commit c7f46503305b06abc1ddff49e1e2de467bb72d49
Author: Przemek Bruski <pbruski@atlassian.com>
Date:   2016-04-25T08:32:54Z

    AMQ-6262 - HTTP transport broken in 5.12

----
;;;","25/Apr/16 21:05;jira-bot;Commit e47edd7a282e1391f480c1278555f4a86e9a8ea9 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e47edd7 ]

https://issues.apache.org/jira/browse/AMQ-6262

Ensure that the connection check task is stopped once commands pass
through the inactivity monitor to prevent the transport from being
closed for no reason.  ;;;","25/Apr/16 21:42;jira-bot;Commit 0c3d05f2eac40902fc252cb6cff4997f00b1b053 in activemq's branch refs/heads/activemq-5.13.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=0c3d05f ]

https://issues.apache.org/jira/browse/AMQ-6262

Ensure that the connection check task is stopped once commands pass
through the inactivity monitor to prevent the transport from being
closed for no reason.
(cherry picked from commit e47edd7a282e1391f480c1278555f4a86e9a8ea9)
;;;","29/Nov/16 22:31;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/181
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ConcurentStoreAndDispatch can lead to inconsistent message states using VM Transport,AMQ-6256,12959158,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,15/Apr/16 12:24,18/Apr/16 12:44,14/Jul/23 05:44,15/Apr/16 13:09,5.13.2,,,,,,,,,5.13.3,5.14.0,,,Broker,,,,,0,,,,,,"When messages are added to a store asynchronously (when using concurrent store and dispatch) and then dispatched to a consumer at the same time, there is a race condition that can occur primarily with the VM Transport.  The issue is that it's possible that when the VM Transport is copying the message for dispatch, the async task can run at the same time to store the message.  It's possible that the copy on dispatch can occur during the same time the async store task is trying to marshall the data and properties which can lead to an inconsistent state of the message (ie null content).  This is the cause of the issue in AMQ-6218.

The proper fix for this is to make sure the beforeMarshall method is called prior to the task running and prior to dispatch.",,cshannon,gtully,jira-bot,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6218,,,,,,,,AMQ-6222,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Apr 18 12:44:16 UTC 2016,,,,,,,,,,,"0|i2w6dr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Apr/16 13:02;jira-bot;Commit b9f9f03829a65efa2956c347d2cafa41905313c6 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b9f9f03 ]

https://issues.apache.org/jira/browse/AMQ-6256

Calling beforeMarshall on messages when they async stored before the
store task is run and before consumer dispatch to prevent two threads
from trying to mutate the message state at the same time.
;;;","15/Apr/16 13:07;jira-bot;Commit dc3c5a719b47fc40b5affce8412390ead67ce8ef in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=dc3c5a7 ]

https://issues.apache.org/jira/browse/AMQ-6256

Calling beforeMarshall on messages when they async stored before the
store task is run and before consumer dispatch to prevent two threads
from trying to mutate the message state at the same time.

(cherry picked from commit b9f9f03829a65efa2956c347d2cafa41905313c6)
;;;","15/Apr/16 13:57;gtully;afaik the format is not used by before marshall, I think beforeMarshall can done in Queue with an null format, just  before a call to asyncAdd.
there is a beforeMarshall in this way before stomp dispatch to the broker to ensure properties are accounted for.
see: https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=blobdiff;f=activemq-stomp/src/main/java/org/apache/activemq/transport/stomp/ProtocolConverter.java;h=b25860bf6895240c33a8643b6fcc731af126d32e;hp=8539b59ee046e54c5ec82c73edc6f591da0c9148;hb=57264bf;hpb=521c4fd8c31a88575f80659e9b84f016b22087ea;;;","15/Apr/16 14:09;cshannon;Thanks for pointing that out, i can move it to the Queue.;;;","15/Apr/16 14:19;jira-bot;Commit b9b98a45cee484b112dadeffa2d9a874c4ffe280 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b9b98a4 ]

https://issues.apache.org/jira/browse/AMQ-6256

Moving beforeMarshall call out of the store and into the actual
destination
;;;","15/Apr/16 14:23;jira-bot;Commit 32913408a68ec92e3d202f5dcc3923d5c7d7588a in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=3291340 ]

https://issues.apache.org/jira/browse/AMQ-6256

Moving beforeMarshall call out of the store and into the actual
destination

(cherry picked from commit b9b98a45cee484b112dadeffa2d9a874c4ffe280)
;;;","15/Apr/16 14:24;jira-bot;Commit 1ffac14f6ed3b2f2d30b5de1b759f16a29a0c099 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=1ffac14 ]

https://issues.apache.org/jira/browse/AMQ-6256

cleanup imports
;;;","18/Apr/16 12:17;cshannon;[~gtully],  This patch has the side effect that it ends up calling beforeMarshall for all stores, including the memory store.  I believe this is causing the tests failures in AMQ2103Test here: 

https://builds.apache.org/view/A-D/view/ActiveMQ/job/ActiveMQ-Java8/652/testReport/

I'm assuming we don't really want to marshall data for the memory store, so do you think we should move the beforeMarshall call back to the store implementations?

Edit: Looks like it caused this failure as well org.apache.activemq.usecases.ObjectMessageNotSerializableTest.testSendNotSerializeableObjectMessage;;;","18/Apr/16 12:30;gtully;darn, yea, that is the only option. Your original fix is perfect then, just doing the work in the stores that actually do async bits.
For the memory store and pure invm dispatch, bypassing serialisation altogether is valid. Win for the test suite.;;;","18/Apr/16 12:39;cshannon;Ok, sounds good, easy enough to revert back to the original fix :) ;;;","18/Apr/16 12:40;jira-bot;Commit 11622b3af32fe9518df06f026e6c0fb65de4aa26 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=11622b3 ]

https://issues.apache.org/jira/browse/AMQ-6256

Moving beforeMarshall back to the store implementations because we don't
want all store implementations to marshall (such as memory store)

This reverts commit b9b98a45cee484b112dadeffa2d9a874c4ffe280.
;;;","18/Apr/16 12:44;jira-bot;Commit 840583df090bdca6ef1a709d1a2e7701aaeda637 in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=840583d ]

https://issues.apache.org/jira/browse/AMQ-6256

Moving beforeMarshall back to the store implementations because we don't
want all store implementations to marshall (such as memory store)

This reverts commit 32913408a68ec92e3d202f5dcc3923d5c7d7588a.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Durable wildcard subscription causes memory leak after broker restart,AMQ-6254,12959106,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,osmanrafiq,osmanrafiq,15/Apr/16 08:45,28/Apr/16 11:53,14/Jul/23 05:44,19/Apr/16 13:56,5.11.1,5.12.2,,,,,,,,5.13.3,5.14.0,,,Broker,,,,,0,,,,,,"We have two setups using ActiveMQ 5.11.1 and 5.12.2 that are both configured with authentication/authorization and are using LevelDB for persistence.

We have observed an issue with durable wildcard subscribers where it seems that a durable subscriber restored after a broker restart is not being replaced/updated when the subscriber reconnects after the restart. Instead both the restored and reconnected durable subscribers are being kept by the broker.

An example may help to clarify the issue:

*Before restart*:
Topic: alphabet.a
Durable subscriber: aplhabet.>

*After restart*:
Durable subscriber: alphabet.a

*After reconnect*:
Durable subscriber: aplhabet.a
Durable subscriber: alphabet.>

As messages sent to the topic are forwarded to both the restored and reconnected durable subscriber, but the restored subscriber is never being dequeued it consumes ever increasing amounts of memory.

The issue is related to AMQ-5153 as the restored subscriber has an incorrect subscribed destination (i.e. alhpabet.a instead of alphabet.>). 

However, the restored and reconnected durable subscribers only come into co-existence if the broker is run with broker plugins (i.e. authorization/authentication) as the use of DestinationFilters prevents the TopicRegion from running through all known Topics to remove possible matching subscriptions.",,jira-bot,osmanrafiq,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5153,,,,,,,,,,,,,,,,,,,,,"15/Apr/16 22:34;tabish;AMQ6254Test.java;https://issues.apache.org/jira/secure/attachment/12799028/AMQ6254Test.java","15/Apr/16 08:48;osmanrafiq;DurableWildcardSubscriptionReactivationTest.java;https://issues.apache.org/jira/secure/attachment/12798924/DurableWildcardSubscriptionReactivationTest.java",,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Apr 19 13:54:55 UTC 2016,,,,,,,,,,,"0|i2w627:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Apr/16 08:48;osmanrafiq;Attaching a unit test that shows the existence of another subscription after broker restart. 

Note: The test uses inner classes from SimpleSecurityBrokerSystemTest because I needed the authentication/authorization plugin configured on the broker and got a bit lazy.;;;","19/Apr/16 13:54;jira-bot;Commit b027e655538226b56f1fe277a426e0df41501fc6 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b027e65 ]

https://issues.apache.org/jira/browse/AMQ-5153
https://issues.apache.org/jira/browse/AMQ-6254

Store the original subscribed destination along with the target
destination in the subscription info object to ensure that wildcard
subscriptions remain linked.  ;;;","19/Apr/16 13:54;jira-bot;Commit ad07ee4612bd537ad4a441464ded701d98b0fcc1 in activemq's branch refs/heads/activemq-5.13.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=ad07ee4 ]

https://issues.apache.org/jira/browse/AMQ-5153
https://issues.apache.org/jira/browse/AMQ-6254

Store the original subscribed destination along with the target
destination in the subscription info object to ensure that wildcard
subscriptions remain linked.
(cherry picked from commit b027e655538226b56f1fe277a426e0df41501fc6)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Composite destination support for MQTT,AMQ-6253,12959104,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,15/Apr/16 08:43,15/Apr/16 09:02,14/Jul/23 05:44,15/Apr/16 09:02,5.13.0,,,,,,,,,5.14.0,,,,MQTT,,,,,0,,,,,,"Although not part of the spec, composite destinations work properly for the default subscription strategy. Virtual topic subscription strategy doesn't convert composite destination names properly (adding just a prefix to the first destination name).",,dejanb,jira-bot,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Apr 15 09:00:50 UTC 2016,,,,,,,,,,,"0|i2w61r:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Apr/16 09:00;jira-bot;Commit 6d20cba0e4de8970da0236f2c772ef66c0f02661 in activemq's branch refs/heads/master from [~dejanb]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=6d20cba ]

https://issues.apache.org/jira/browse/AMQ-6253 - mqtt composite destinations support for virtual topic subscriptions
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HealthView has a variety of weaknesses,AMQ-6252,12958905,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,jahlborn,jahlborn,14/Apr/16 17:37,14/Apr/16 20:56,14/Jul/23 05:44,14/Apr/16 20:56,5.13.2,5.9.1,,,,,,,,5.13.3,5.14.0,,,Broker,,,,,0,,,,,,"The HealthView utility has a variety of weaknesses.

* The currentState field should be volatile to ensure correct visibility in a multi-threaded environment
* the assignment to the currentState field at the end of the healthList method should only happen once the _final_ string has been built.  the current code could expose a caller to a partially built string (since the field is continually re-assigned as the string is built).

On a separate note, the semantics of this class are non-obvious.  We were monitoring our broker via jmx using the CurrentState attribute for a year or so now and i only just realized that the value is useless.  The value is useless because _it is only updated if you call the healthList() method first_.  The CurrentState attribute is the one someone would most likely monitor using an external automated management product, yet it is not useful by itself.  I would recommend one of the following approaches:
* at the very least, the current behavior should be _clearly documented_ so that users know they have to call one of the other methods first in order to get a valid CurrentState
* Alternately, it would be nice if calling the getCurrentState() by itself were sufficient.  this could be accomplished via one of the following approaches:
** Have the BrokerService schedule a periodic task to invoke the healthList() method in order to ensure that the CurrentState attribute gets updated.
** Track a ""last updated"" field within the HealthView class and have the getCurrentState() method itself invoke the healthList() method first if the currentState is too old.",,jahlborn,jira-bot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Apr 14 20:56:20 UTC 2016,,,,,,,,,,,"0|i2w4tj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Apr/16 20:28;tabish;Since the Broker doesn't know if anyone is even looking at the HealthView bits it wouldn't be optimal to be doing such a heavyweight operation for no good reason which is why there isn't a scheduled task.  The last updated value has some merit although it is hard to settle on what an optimal default for that would be given that everyone would have their own opinion.  ;;;","14/Apr/16 20:53;jira-bot;Commit 19fd084a83c990f9fb75a5f2becb48ac808a1b36 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=19fd084 ]

https://issues.apache.org/jira/browse/AMQ-6252

Update for some added thread safety.  Adds method healthStatus that will
regenrate the status from the healthList data which is more intuitive
than the getCurrentStatus which doesn't update state and requires
periodic calls to healthList to capture current metrics.  ;;;","14/Apr/16 20:53;jira-bot;Commit cb6c7fb423bb7347bbe62c4ec5e2845302967b59 in activemq's branch refs/heads/activemq-5.13.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=cb6c7fb ]

https://issues.apache.org/jira/browse/AMQ-6252

Update for some added thread safety.  Adds method healthStatus that will
regenrate the status from the healthList data which is more intuitive
than the getCurrentStatus which doesn't update state and requires
periodic calls to healthList to capture current metrics.
(cherry picked from commit 19fd084a83c990f9fb75a5f2becb48ac808a1b36)
;;;","14/Apr/16 20:56;tabish;Fixed thread safety issues and added new method healthStatus that will return a health status string after calling healthList.  This preserves the existing behavior so we don't break anyone while giving you a better entry into the health information in a poller use case. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Queue resetNeeded field should be volatile,AMQ-6251,12958902,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,jahlborn,jahlborn,14/Apr/16 17:20,28/Apr/16 11:50,14/Jul/23 05:44,26/Apr/16 14:04,5.13.2,5.9.1,,,,,,,,5.13.3,5.14.0,,,Broker,,,,,0,,,,,,"The Queue.resetNeeded field should be volatile due to the fact that it is exposed outside of any additional synchronization (via the Queue.isResetNeeded() method).  without the volatile modifier, the flag could be set but not recognized by any external code checking it.",,jahlborn,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Apr 28 11:49:20 UTC 2016,,,,,,,,,,,"0|i2w4sv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Apr/16 14:04;jira-bot;Commit 8031d77f984e4d3c54782dd4934f48b35cf16c00 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=8031d77 ]

https://issues.apache.org/jira/browse/AMQ-6251

Make field volatile since it is written to outside of any locks and read
both in and out of locking. ;;;","28/Apr/16 11:49;jira-bot;Commit bb58db75a677e3cc147f3ca0a56ffb9afa12d287 in activemq's branch refs/heads/activemq-5.13.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=bb58db7 ]

https://issues.apache.org/jira/browse/AMQ-6251

Make field volatile since it is written to outside of any locks and read
both in and out of locking.
(cherry picked from commit 8031d77f984e4d3c54782dd4934f48b35cf16c00)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MultiKahaDBTransactionStore should have null protection in close,AMQ-6250,12958901,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,cshannon,jahlborn,jahlborn,14/Apr/16 17:15,14/Apr/16 18:42,14/Jul/23 05:44,14/Apr/16 18:40,5.13.2,5.9.1,,,,,,,,5.13.3,5.14.0,,,KahaDB,,,,,0,,,,,,"When utilizing the MultiKahaDBPersistenceAdapter and there is a failure during broker startup, (depending on when the startup failure occurs) a secondary NullPointerException can be generated from MultiKahaDBTransactionStore.close.  this happens if the transaction store is closed when it has not yet been opened.  the problem is that the close method does not check the journal for null before closing.",,jahlborn,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Apr 14 18:42:24 UTC 2016,,,,,,,,,,,"0|i2w4sn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Apr/16 18:39;jira-bot;Commit 092c56d70c1440fbdb1e91447a1bc4a2c461e5c7 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=092c56d ]

https://issues.apache.org/jira/browse/AMQ-6250

Checking for null before closing the journal in
MultiKahaDBPersistentAdapter.  Also protecting against multiple calls to
start and stop.
;;;","14/Apr/16 18:42;jira-bot;Commit 61dc6888045544cbaad6b4ea5a3302b3f23fe4d3 in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=61dc688 ]

https://issues.apache.org/jira/browse/AMQ-6250

Checking for null before closing the journal in
MultiKahaDBPersistentAdapter.  Also protecting against multiple calls to
start and stop.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failover - transport connected to one broker fails due to error in connection to another broker,AMQ-6248,12958845,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,pjanata,pjanata,14/Apr/16 13:39,18/Apr/16 13:55,14/Jul/23 05:44,18/Apr/16 13:55,,,,,,,,,,5.13.3,5.14.0,,,Transport,,,,,0,failover,race-condition,,,,"There is a bug in the  {{FailoverTransport}} which is triggered by a race condition. The client log contains message:
{{WARN | ActiveMQ Transport: *URI1* \[FailoverTransport] Transport (*URI2*) failed, attempting to automatically reconnect}}

The exact impact on client failover differs with each setup and environment. In our case this forced client to infinitely switch between two available brokers.

Assume client is configured to use broker URL in form
{{failover:(URI1,URI2)?randomize=false}}.
Assume that broker with URI1 is down and the other broker URI2 is running fine. This is normal master/slave setup. 

Client tries to establish connection and the following happens:
1. URI1 is tried, it fails because this broker is not reachable (down or waiting slave)
2. URI2 is tried, it succeeds because this broker is currently the 'master'
3. Exception from thread of transport to URI1 causes failure in transport to URI2
4. Try another transport in the list. Oh wait, its URI1 -> go to 1.

Impact for different configurations might not be that severe. But unfortunately in our case we were not able to avoid this bug no matter the configuration. For example {{randomize=true}} helped a little, but still the inifinite loop happens 1/2 of the time.

The bug is caused by a single shared instance {{myTransportListener}} of {{TransportListener}} in {{FailoverTransport}} class. {{doReconnect()}} tries to start transport to URI1 and registers the listener on it. Transport fails to start and the next transport to URI2 is tried. But the listener is not unregistered from the failed transport URI1. Failures that happen on transport URI1 may call in its own thread the listener method {{onException()}}. This call will get to {{handleTransportFailure()}} where it waits for the {{reconnectMutex}}. The reconnect task thread continues, establishes Transport URI2, sets it to {{connectedTransport}}=URI2, releases the reconnectMutex. The thread of transport URI1 unblocks in handleTransportFailure() and destroys the connectedTransport=URI2.

I have created a patch against version 5.11 that deals specifically with this problem.
The change is that instead of the single shared myTrasnportListener instance there is a new listener created for each new transport.
Each new listener keeps reference to the transport it was assigned to. The listener will cause failover only if the exception is coming from the transport which is currently connected.
I didn't care about the other methods of the listener, but these probably need the same restriction.

This bug is present in all versions from version 4.0 (I didn't go deeper). The idea in the patch should be applicable for all versions.

Btw. log message mentioned in AMQ-4986 contains the same URI1 vs URI2 problem.",,jira-bot,pjanata,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Apr/16 14:14;pjanata;AMQ-6248.patch.svndiff;https://issues.apache.org/jira/secure/attachment/12798740/AMQ-6248.patch.svndiff",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Patch,,,,,,,,,9223372036854775807,,,Mon Apr 18 13:54:10 UTC 2016,,,,,,,Patch Available,,,,"0|i2w4gf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Apr/16 14:14;pjanata;Here is the patch. It is an output from svn diff command.;;;","18/Apr/16 13:46;jira-bot;Commit 23a5beb86c3dac151ae3ed242ce506aa0048bd03 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=23a5beb ]

https://issues.apache.org/jira/browse/AMQ-6248

Prevent conccurent calls to handleTransportFailure from closing an
already reconnected transport instance.  ;;;","18/Apr/16 13:53;jira-bot;Commit 46dadf986666170638f8c8c6e1cb29346f4a86b5 in activemq's branch refs/heads/activemq-5.13.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=46dadf9 ]

https://issues.apache.org/jira/browse/AMQ-6248

Prevent conccurent calls to handleTransportFailure from closing an
already reconnected transport instance.  
(cherry picked from commit 23a5beb86c3dac151ae3ed242ce506aa0048bd03)

Conflicts:
	activemq-client/src/main/java/org/apache/activemq/transport/failover/FailoverTransport.java
;;;","18/Apr/16 13:54;jira-bot;Commit 3560d9123dbeecc97f075a6812f15b2484836275 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=3560d91 ]

AMQ-6248 fix logging statement to use the connected URI.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
STOMP: Unprefixed composite destination values not properly parsed,AMQ-6246,12958648,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,13/Apr/16 22:52,13/Apr/16 22:56,14/Jul/23 05:44,13/Apr/16 22:56,5.13.0,5.13.1,5.13.2,,,,,,,5.13.3,5.14.0,,,STOMP,,,,,0,,,,,,STOMP destinations that are intended to be composite type but lack standard destination prefixes are not being properly parsed and converted.,,jira-bot,tabish,tmielke,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Apr 13 22:54:36 UTC 2016,,,,,,,,,,,"0|i2w38n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Apr/16 22:54;jira-bot;Commit 15dc6cc7659bfacf3ca10c490466a2cf2d3c54de in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=15dc6cc ]

https://issues.apache.org/jira/browse/AMQ-6246

Fix loop to not skip the composite split code.;;;","13/Apr/16 22:54;jira-bot;Commit aea8d453fd899c343877150a3a10adba22eed823 in activemq's branch refs/heads/activemq-5.13.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=aea8d45 ]

https://issues.apache.org/jira/browse/AMQ-6246

Fix loop to not skip the composite split code.
(cherry picked from commit 15dc6cc7659bfacf3ca10c490466a2cf2d3c54de)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Potential NPE on close of a zero prefetch consumer,AMQ-6245,12958601,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,13/Apr/16 20:43,13/Apr/16 21:00,14/Jul/23 05:44,13/Apr/16 21:00,5.x,,,,,,,,,5.13.3,5.14.0,,,JMS client,,,,,0,,,,,,If a zero prefetch consumer is closed and there is still an pull timed out message marker in the unconsumed list the logging in the dispose method can trigger an NPE.,,jira-bot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Apr 13 20:59:47 UTC 2016,,,,,,,,,,,"0|i2w2y7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Apr/16 20:53;jira-bot;Commit aaecdff8b485dc1baf84110375d4b9ffa6f68c19 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=aaecdff ]

https://issues.apache.org/jira/browse/AMQ-6245

Don't log the pull timed out messages that might still be in the
unconsumed list during rollback of unconsumed messages;;;","13/Apr/16 20:59;jira-bot;Commit 857254b75bfd4544e61e61c370c97866d0824bca in activemq's branch refs/heads/activemq-5.13.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=857254b ]

https://issues.apache.org/jira/browse/AMQ-6245

Don't log the pull timed out messages that might still be in the
unconsumed list during rollback of unconsumed messages
(cherry picked from commit aaecdff8b485dc1baf84110375d4b9ffa6f68c19)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQBytesMessage fails to set 'compressed=false' following restoration of compressed message content,AMQ-6244,12958479,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,brianjohnson,brianjohnson,13/Apr/16 14:13,13/Apr/16 15:24,14/Jul/23 05:44,13/Apr/16 15:24,5.13.2,,,,,,,,,5.13.3,5.14.0,,,JMS client,,,,,0,EasyFix,,,,,"{{ActiveMQBytesMessage}} does not reset its {{compressed}} flag to {{false}} following the restoration of compressed message content in {{restoreOldContent()}}.  This becomes a problem if an {{ActiveMQBytesMessage}} is reused by a client on an uncompressed connection after originally being published on a compressed connection.

Steps to reproduce:
# An {{ActiveMQBytesMessage}} is published by a producer on a connection with compression *_enabled_*
Message State: compressed=true; content=compressed
# The message is consumed by a client and republished on a connection with compression *_disabled_*
Message State: compressed=true; content=uncompressed
# The message is consumed by a client and its contents are read.  The ActiveMQ client library tries to decompress the message content, but fails because the content is not compressed.  This causes the consumer to throw either a {{DataFormatException}} or {{NegativeArraySizeException}}.

This JIRA is similar in nature to AMQ-5381.

I'll submit a pull request with a test to reproduce and a patch shortly.",,brianjohnson,cshannon,githubbot,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Apr 13 15:24:02 UTC 2016,,,,,,,Patch Available,,,,"0|i2w273:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Apr/16 14:25;githubbot;GitHub user bdjdev opened a pull request:

    https://github.com/apache/activemq/pull/177

    https://issues.apache.org/jira/browse/AMQ-6244

    Fix and test for https://issues.apache.org/jira/browse/AMQ-6244

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/bdjdev/activemq AMQ-6244

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/177.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #177
    
----
commit 7a61718e0255728b7a822b25fcf75a030be14359
Author: Brian D. Johnson <brian@thejohnsonfamily.name>
Date:   2016-04-11T20:18:26Z

    https://issues.apache.org/jira/browse/AMQ-6244 - reset ActiveMQBytesMessage 'compressed' flag after restoring compressed content

----
;;;","13/Apr/16 15:22;jira-bot;Commit 7a61718e0255728b7a822b25fcf75a030be14359 in activemq's branch refs/heads/master from [~brianjohnson]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=7a61718 ]

https://issues.apache.org/jira/browse/AMQ-6244 - reset ActiveMQBytesMessage 'compressed' flag after restoring compressed content
;;;","13/Apr/16 15:22;jira-bot;Commit 66953e1a2981427af67c8c76332e34c3cc6d9ee3 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=66953e1 ]

https://issues.apache.org/jira/browse/AMQ-6244

Merging ActiveMQBytesMessage compression fix

This closes #177
;;;","13/Apr/16 15:23;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/177
;;;","13/Apr/16 15:23;jira-bot;Commit 7894d8a9a1f0465c0ff26360ac364b4dc797d254 in activemq's branch refs/heads/activemq-5.13.x from [~brianjohnson]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=7894d8a ]

https://issues.apache.org/jira/browse/AMQ-6244 - reset ActiveMQBytesMessage 'compressed' flag after restoring compressed content

(cherry picked from commit 7a61718e0255728b7a822b25fcf75a030be14359)
;;;","13/Apr/16 15:24;cshannon;Thanks for the patch, applied to both master and 5.13.x and will be part of 5.13.3.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Producer cannot be terminated when slow consumer is detected,AMQ-6240,12957659,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,kenhalldnb,kenhalldnb,11/Apr/16 10:00,14/Apr/16 12:46,14/Jul/23 05:44,14/Apr/16 11:27,5.13.2,,,,,,,,,5.14.0,,,,Connector,,,,,0,,,,,,"There is a discussion relating to the bug here - http://activemq.2283324.n4.nabble.com/Force-Producer-to-fail-when-blocked-by-slow-consumer-td4710264.html. Test code to reproduce the problem  has also been uploaded to this discussion.

We have  a situation where we have a producer which is feeding a slow consumer.
The consumer belongs to a third party so we do not have control over the broker configuration.
We would like to terminate our producer but we find that we cannot do so. We can set the timeout on the connection and we then trap the timeout exception. The problem is that when we try to close the session it attempts to rollback but cannot do so as the rollback blocks.

We have created a small test that is included in the zip (mentioned above) of an Eclipse project.The zip includes three classes. Call the main method of RunTest to run the test. The activemq.xml used is in the root directory of the project. 

The program will timeout after 51 messages and attempt to close the session. 

It eventually locks in this line: 

            this.connection.syncSendPacket(info); 

in the rollback method of the TransactionContext class.

We believe that the most sensible solution to this is that the rollback should respond to the same timeout as the connection.
","The test was run using an out of the box install of ActiveMQ 5.13.2 on Windows 7 Professional (64 bit). 

The java version used was jdk1.8.0_60",gtully,jira-bot,kenhalldnb,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Apr/16 11:25;kenhalldnb;brokertd.zip;https://issues.apache.org/jira/secure/attachment/12798011/brokertd.zip",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Apr 14 12:46:06 UTC 2016,,,,,,,,,,,"0|i2vx53:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Apr/16 10:34;gtully;it would be interesting to know what happens to the rollback command broker side, such that there is no response. Why does it block?
A thread dump for the broker when the client is stuck in the close/rollback would help identify;;;","11/Apr/16 11:25;kenhalldnb;Hi Gary - thanks for the quick response. 
Attached is a zip of the thread dump of the broker process
If you need any more info let me know;;;","11/Apr/16 11:56;gtully;{code}""ActiveMQ Transport: tcp:///127.0.0.1:65190@61616"" #52 daemon prio=5 os_prio=0 tid=0x000000005ac6b800 nid=0x20fc waiting on condition [0x000000006035e000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x00000000c050b598> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2163)
	at org.apache.activemq.usage.Usage.waitForSpace(Usage.java:103)
	at org.apache.activemq.usage.StoreUsage.waitForSpace(StoreUsage.java:92)
	at org.apache.activemq.usage.StoreUsage.waitForSpace(StoreUsage.java:87)
	at org.apache.activemq.broker.region.BaseDestination.waitForSpace(BaseDestination.java:686)
	at org.apache.activemq.broker.region.Queue.checkUsage(Queue.java:899)
	at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:831)
	at org.apache.activemq.broker.region.Queue.send(Queue.java:731)
	at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:503)
	at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:468)
	at org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:293)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:153)
	at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)
	at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:293)
	at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:158)
	at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:546)
	at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:768)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:338)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:188)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:125)
	at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:300)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:233)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:215)
	at java.lang.Thread.run(Thread.java:745){code}


the transport thread is busy waiting for space, blocked, so the next command, the rollback/close cannot be read from the socket.
Without broker side async blocking, via producerFlowControl or the error on no space, the default behaviour is to block the transport thread.

Because the broker config cannot be changed I think there are two client options:
1) use async send and a small producerWindow, this will cause your client to block pending space on the broker for pending messages. However having peeked at the org.apache.activemq.ActiveMQMessageProducer#send(javax.jms.Destination, javax.jms.Message, int, int, long, org.apache.activemq.AsyncCallback) - there is no timeout limit, so an interrupted exception is all that will stop that wait. not so good.

2) force a close of the connection via the underlying transport, so that the  jms connection sees a socket closure and will report an error. This should avoid the normal closure processing after you see a send timeout.
That is a bit of a hack, using an activemq narrow api. There are some examples of how to do it in the unit tests:
https://github.com/apache/activemq/blob/e2b4ca2c59a316be91cf391c758a10e518dd3a1f/activemq-unit-tests/src/test/java/org/apache/activemq/transport/failover/FailoverTimeoutTest.java#L210
;;;","11/Apr/16 12:48;kenhalldnb;Thanks Gary, I'll test that and see how I get on - I looked at using the socket but didn't know how to access it - I was also unsure of what the consequences of doing this would be.
Our current solution is to interrupt the thread - something like what you suggest in option 1.

Do you think that the fact that there is no mechanism to time out the rollback is a bug? And if so - do you think it is likely to be fixed?

I think it would be nice to be able to set a timeout on the rollback (either by inheriting the timeout from the connection or by setting it explicitly) to cover situations like this. If it was felt that inheritance was a bad idea then an explicit rollback(long timeout) call could be added.;;;","11/Apr/16 13:24;kenhalldnb;Thanks Gary - that worked perfectly. It's an acceptable solution in our situation so I'm happy to close this issue unless you want to keep it open for any reason. 
If it makes sense to you I can raise the option to timeout a rollback as a feature request.;;;","11/Apr/16 13:32;gtully;I am not sure. It is a bit of an anti pattern, the whole send timeout. 
Really the connection should close, because the sync send state is unknown. In this case the transaction blocks the close so it may make sense to use rollback(timeout) in the close case, because the socket will close and the broker side transaction will rollback.

Note the transaction rollback used to be async before: https://issues.apache.org/jira/browse/AMQ-2364
having a timeout would be similar, but I guess so long as we always close it would be ok.

I see an interesting angle in https://issues.apache.org/jira/browse/AMQ-1517 where the broker side blocking is limited by the message time to live. That would make a deterministic failure scenario. Message expired while pending space for send.
That would leave the broker side active to respond to a close.
Do you use messageExpiry or would it be a valid alternative?;;;","11/Apr/16 16:30;kenhalldnb;We don't use message expiry as we take a very minimal approach to our configuration. Looking at that solution I was reminded that the issue here might be time zone differences. We will have to communicate with queues on a multiplicity of customers brokers so we cannot make any assumptions or influence their configurations.
 ;;;","11/Apr/16 16:30;kenhalldnb;We don't use message expiry as we take a very minimal approach to our configuration. Looking at that solution I was reminded that the issue here might be time zone differences. We will have to communicate with queues on a multiplicity of customers brokers so we cannot make any assumptions or influence their configurations.
 ;;;","13/Apr/16 11:02;jira-bot;Commit 77d46dc139284141336591af649c0cc1da790cd0 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=77d46dc ]

https://issues.apache.org/jira/browse/AMQ-6240 use sendTimout on sync rollback on close such that a blocked connection won't block a close
;;;","13/Apr/16 21:20;tabish;The test for this fails in CI, probably just due to being timing sensitive 

https://builds.apache.org/view/A-D/view/ActiveMQ/job/ActiveMQ-Java8/org.apache.activemq$activemq-unit-tests/649/testReport/junit/org.apache.activemq.bugs/AMQ6240Test/testBlockedTxProducerConnectionTimeoutConnectionCanClose/;;;","13/Apr/16 21:40;gtully;it sends too many big messages for slow disks. guess it could be configured down to just one message with a small enough kahadb;;;","14/Apr/16 11:25;jira-bot;Commit 530c1a81934d0a1ca51a8778e59ee19509378d87 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=530c1a8 ]

https://issues.apache.org/jira/browse/AMQ-6240 - tidy up test and reduce duration. reuse closeTimeout on rollback during close which is the case here
;;;","14/Apr/16 11:27;gtully;thanks tim, the test was taking too long which pointed me to the closeTimeout at 15s which was in the mix.
Reusing that var for the rollback command timeout makes more sense also.
Reconfigured the test to do less work and removed the inherited variants that work better with no persistence.;;;","14/Apr/16 12:46;tabish;Ah nice, the close timeout does seem to make more sense looking at the patch.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Please delete old releases from mirroring system,AMQ-6238,12957396,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,sebb,sebb,09/Apr/16 00:23,09/Sep/16 16:21,14/Jul/23 05:44,09/Sep/16 16:21,,,,,,,,,,,,,,,,,,,0,,,,,,"To reduce the load on the ASF mirrors, projects are required to delete old releases [1]

Please can you remove all non-current releases?

Thanks!

Note: you can still reference superseded versions from the download page, but the links should be adjusted to point to the archive server.

[1] http://www.apache.org/dev/release.html#when-to-archive",,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4937,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Sep 09 16:21:53 UTC 2016,,,,,,,,,,,"0|i2vvin:",9223372036854775807,Regression,,,,,,,,,,,,,,,,,,,,"10/Apr/16 14:50;sebb;PING does anyone read these issues?;;;","11/Apr/16 16:12;tabish;Cleaned out older releases  ;;;","02/Sep/16 22:52;sebb;The following are old releases and should be removed.
Please fix the release docs to ensure this is done for every new release.

It's not fair to expect 3rd party mirrors to carry old releases.

https://dist.apache.org/repos/dist/release/activemq/5.11.4/
https://dist.apache.org/repos/dist/release/activemq/5.12.3/
https://dist.apache.org/repos/dist/release/activemq/5.13.2/
https://dist.apache.org/repos/dist/release/activemq/5.13.3/
https://dist.apache.org/repos/dist/release/activemq/5.13.4/
;;;","09/Sep/16 16:21;tabish;Removed the unsupported releases from dist and updated the release guide. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SimpleDiscoveryAgent doesn't honor it's configured initialReconnectDelay,AMQ-6235,12957236,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,08/Apr/16 15:26,08/Apr/16 16:29,14/Jul/23 05:44,08/Apr/16 16:29,5.x,,,,,,,,,5.14.0,,,,Broker,Network of Brokers,,,,0,,,,,,The SimpleDiscoveryAgent code has a configurable initialReconnectDelay that is not currently used correctly.  If the connection is lost right away on a connect attempt it may use the delay but if the connection has been up longer than the configurable minConnectTime then a connection attempt is immediately tried and will then drop back to the initialReconnectDelay if this immediate reconnection attempt fails.,,jira-bot,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Apr 08 16:28:41 UTC 2016,,,,,,,,,,,"0|i2vuj3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Apr/16 16:28;jira-bot;Commit b1c55fdc744987245c409af5835fd1a74bdc49ed in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b1c55fd ]

https://issues.apache.org/jira/browse/AMQ-6235

Honor the initialReconnectDelay configuration in all cases.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Camel 2.17.0 breaks Karaf integration tests,AMQ-6230,12956516,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,cshannon,cshannon,06/Apr/16 14:53,24/Jun/17 11:25,14/Jul/23 05:44,24/Jun/17 11:25,5.13.2,,,,,,,,,5.15.0,,,,Camel,,,,,2,,,,,,"The new Camel version seems to cause the ActiveMQBrokerNdCamelFeatureTest test to fail.

https://builds.apache.org/view/A/view/ActiveMQ/job/ActiveMQ-Java8/lastBuild/org.apache.activemq$activemq-karaf-itest/testReport/org.apache.activemq.karaf.itest/ActiveMQBrokerNdCamelFeatureTest/test/

It looks like a bunch of work was done with Karaf and to get rid of Spring DM in the new version which is probably the issue as ActiveMQ still has the Spring DM stuff laying around.",,cshannon,davsclaus,erwelch,jira-bot,lichtin,paulmcculloch,soleger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6301,,,,,,,,,AMQ-6241,,,,,,,AMQ-6268,,,AMQ-6585,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Sat Jun 24 11:25:06 UTC 2017,,,,,,,,,,,"0|i2vq3j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Apr/16 14:54;cshannon;[~davsclaus], Can you take a look at this? Long term someone needs to fix up the Karaf support and get rid of Spring DM but I'm not sure if there is anything that can be done to make 2.17.0 compatible in the meantime or if we have to revert to an older version.;;;","06/Apr/16 15:55;davsclaus;Yeah it should likely just add camel-spring in the features when install activemq-camel ;;;","06/Apr/16 16:23;davsclaus;Its really not a Camel problem. Its ActiveMQ itself that needs to do better at OSGi and install and support what it uses.

There is a somewhat crappy activemq-osgi module that has some old spring-dm code directly using a spring osgi bundle class and whatnot.

;;;","06/Apr/16 17:08;cshannon;Agreed that the Spring DM stuff needs to go and the osgi support needs to be updated, hopefully for a 5.14 release.;;;","13/Apr/16 15:28;jira-bot;Commit 28e4090d9561a1cd2a630bc35257539c30a13cf1 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=28e4090 ]

https://issues.apache.org/jira/browse/AMQ-6230

Temporarily ignoring karaf camel tests until karaf integration is fixed

The failed test is causing the smoke tests to fail (so PRs don't pass)
and also seems to be keeping a broker alive so that other tests are
breaking as well
;;;","13/Apr/16 15:29;cshannon;Ignored failing tests to hopefully fix the other issues we are having in CI with brokers not shutting down properly.  The camel tests can be re-enabled as part of this Jira and the work here to fix our Karaf setup.;;;","01/Jul/16 10:51;cshannon;[~davsclaus], What is the time frame for a Camel 2.18.0 release? I would like to remove spring-dm but in camel version 2.17.x the camel-spring module still depends on spring dm.  Looks like that has been separated out in the latest 2.18.0 snapshot builds so using version 2.18.0 would allow us to get rid of the spring dm dependency entirely.;;;","01/Jul/16 11:40;davsclaus;Around august or maybe into september when summer vacation is over;;;","12/Jul/16 16:48;cshannon;I reverted back to Camel 2.16.x for now in master.  We most likely just need to skip 2.17 and wait for 2.18 because of the incompatibilities with OSGI.;;;","01/Aug/16 16:40;cshannon;We need camel 2.18 to remove Spring DM but Camel 2.18 requires Java 8.  So I think this should be targeted for a future version when we can raise the minimum version of ActiveMQ to Java 8 (maybe version 2.15.0);;;","24/Jun/17 11:25;cshannon;Camel tests were re-enabled as part of AMQ-6585;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Message content can be cleared by mistake when isReduceMemoryFootprint is enabled,AMQ-6222,12952488,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,22/Mar/16 15:47,18/Apr/16 11:55,14/Jul/23 05:44,22/Mar/16 18:57,5.13.2,,,,,,,,,5.13.3,5.14.0,,,Broker,,,,,0,,,,,,"In a Queue when isReduceMemoryFootprint is enabled the message state should be cleared after persisting to the store.  The idea is that once the data is marshalled into its byte content we can clear out the properties, text, etc to free up memory.

The problem is that when concurrent dispatch is enabled, messages are added to the store asynchronously and queued up.  There is a race condition because it's possible for the state to be cleared before the store has a chance to process the message so that when it gets to it, it will be null.  This is most notable when using the VM transport as messages with null content will get dispatched.",,cshannon,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6221,,,,,,,AMQ-6256,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Apr 18 11:55:29 UTC 2016,,,,,,,,,,,"0|i2v19b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Mar/16 17:54;jira-bot;Commit 75990ef14a092b629bf8d2127bc4786e51b31684 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=75990ef ]

https://issues.apache.org/jira/browse/AMQ-6222

Moving clearedMarshalledState execution to the async listener on an
async add to the message store.  This is necessary to make sure this
logic doens't execute until after the message is marshalled for the
store.
;;;","22/Mar/16 18:57;jira-bot;Commit 7f5c09f2d77c77f87a47fb738870c5ee5bc78c27 in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=7f5c09f ]

https://issues.apache.org/jira/browse/AMQ-6222

Moving clearedMarshalledState execution to the async listener on an
async add to the message store.  This is necessary to make sure this
logic doens't execute until after the message is marshalled for the
store.

(cherry picked from commit 75990ef14a092b629bf8d2127bc4786e51b31684)
;;;","18/Apr/16 11:02;gtully;[~cshannon] I think this is another candidate for revert following
https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=blobdiff;f=activemq-broker/src/main/java/org/apache/activemq/broker/region/Queue.java;h=9540a9336da22f0a63f01d21404e49cec69db32c;hp=786640e8b7723b08c8f9074bbdf1d58a3d11bcca;hb=3291340;hpb=dc3c5a719b47fc40b5affce8412390ead67ce8ef

the beforeMarshal is now always called before the async call.

https://issues.apache.org/jira/browse/AMQ-6256;;;","18/Apr/16 11:48;cshannon;Agreed, this should no longer be needed anymore so I will back out the change to Queue.;;;","18/Apr/16 11:51;jira-bot;Commit 9c8bd3360faf89c8fb054b02040458027782f48f in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=9c8bd33 ]

https://issues.apache.org/jira/browse/AMQ-6222

Reverting the change to move clearMarshalledState into the callback
listener as beforeMarshall is now called before the async message add

Revert 75990ef14a092b629bf8d2127bc4786e51b31684
;;;","18/Apr/16 11:55;jira-bot;Commit 9d545cf11f2ed999d68da7b5a16e46adee095a08 in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=9d545cf ]

https://issues.apache.org/jira/browse/AMQ-6222

Reverting the change to move clearMarshalledState into the callback
listener as beforeMarshall is now called before the async message add

Revert 7f5c09f2d77c77f87a47fb738870c5ee5bc78c27
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Message content returns null occasionally from Virtual Topic to the consumer,AMQ-6218,12951170,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,rohitsonawat@gmail.com,rohitsonawat@gmail.com,17/Mar/16 12:33,14/Jun/16 14:37,14/Jul/23 05:44,21/Mar/16 19:58,5.12.2,5.13.2,,,,,,,,5.13.3,5.14.0,,,,,,,,0,,,,,,"I have 1 Virtual Topic and 40 Consumer to consume the messages sent by the topic. The problem is when I am sending thousands of Messages lets say 10000 via Virtual Topic I have noticed that 2 or 3 consumer are getting null as a text when I do message.getText(), but virtual topic is not sending a null as a text message if it so then all 40 consumer should report same.

I have also noticed this problem is not happening in AMQ v5.11 or with levelDB in AMQ v5.12.2/5.13.2. It is happening only in when you use kahaDB with AMQ v5.12.2/5.13.2
",,cshannon,jira-bot,rohitsonawat@gmail.com,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6256,AMQ-6323,,AMQ-6221,,,,,,,,,,,"18/Mar/16 22:02;tabish;AMQ6218Test.java;https://issues.apache.org/jira/secure/attachment/12794266/AMQ6218Test.java","17/Mar/16 12:37;rohitsonawat@gmail.com;App.java;https://issues.apache.org/jira/secure/attachment/12793968/App.java","17/Mar/16 12:37;rohitsonawat@gmail.com;Full app.log;https://issues.apache.org/jira/secure/attachment/12793969/Full+app.log",,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,http://activemq.2283324.n4.nabble.com/Message-content-returns-null-occasionally-from-Virtual-Topic-to-the-consumer-td4709151.html,,,,,,,,,,,9223372036854775807,,,Fri Apr 15 13:08:40 UTC 2016,,,,,,,,,,,"0|i2utlb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Mar/16 12:37;rohitsonawat@gmail.com;Attached sample Java code that used to replicate the issue with actual log generated by the same. And i used default configuration provided in activemq.xml 
 ;;;","18/Mar/16 22:02;tabish;Converted app based test to a JUnit test.  Can reproduce on a loaded system if the VM transport is used but does not reproduce on the TCP transport.  ;;;","21/Mar/16 19:40;jira-bot;Commit ea09159a4087212964787e7cf68ef30170d115f0 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=ea09159 ]

https://issues.apache.org/jira/browse/AMQ-6218

Fixing copy method of ActiveMQTextMessage to prevent a race condition
when concurrent store and dispatch is used with Queues

We may need explicity synchronization between the text and content fields
in the future if other issues pop up
;;;","21/Mar/16 19:42;jira-bot;Commit 93bc7030e263d6ed5bab7b778b15d50d46fe2c66 in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=93bc703 ]

https://issues.apache.org/jira/browse/AMQ-6218

Fixing copy method of ActiveMQTextMessage to prevent a race condition
when concurrent store and dispatch is used with Queues

We may need explicity synchronization between the text and content fields
in the future if other issues pop up

(cherry picked from commit ea09159a4087212964787e7cf68ef30170d115f0)
;;;","21/Mar/16 19:58;cshannon;There was a race condition when using concurrent store and dispatch for queues.  The issue is that KahaDB calls beoreMarshall() when storing which then calls storeContentAndClear() on the message which clears out the text field.  With concurrent store and dispatch on this can cause both content and text to end up null if the marshalling happens at the same time the message is being copied in another thread.  

I fixed this by grabbing a copy of the text before the rest of the copy method is called and then using that as the value.  The other methods in ActiveMQTextMessage follow a similar pattern of grabbing local references of the text and content fields to try and minimize other threads from interfering.

I did not add synchronization to prevent a performance hit but If other issues pop up we might need to explicitly synchronize access on those two fields in a future version to prevent other race conditions.;;;","22/Mar/16 18:58;cshannon;A new fix has been applied as part of AMQ-6221;;;","15/Apr/16 13:02;jira-bot;Commit 9c929b6870ae4c19cf4f227fa13472b09ebac729 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=9c929b6 ]

Revert ""https://issues.apache.org/jira/browse/AMQ-6218""

Reverting commit in favor of a better approach

This reverts commit ea09159a4087212964787e7cf68ef30170d115f0.
;;;","15/Apr/16 13:07;jira-bot;Commit 4a3fa320e75870cef83f46ab125eda0dfc0cc69f in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=4a3fa32 ]

Revert ""https://issues.apache.org/jira/browse/AMQ-6218""

This reverts commit 93bc7030e263d6ed5bab7b778b15d50d46fe2c66.
;;;","15/Apr/16 13:08;cshannon;The proper fix is now part of AMQ-6256;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
priority message dispatch can be affected by jms browser or expiry processing paging messages in error,AMQ-6215,12950886,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,16/Mar/16 16:25,06/Apr/16 15:23,14/Jul/23 05:44,05/Apr/16 12:35,5.13.0,,,,,,,,,5.14.0,,,,Broker,,,,,0,browser,expiry,priority,,,"Using a pull consumer it should be possible to always get the most recent high priority message. Even with a default page size, using lazy dispatch should pull in the correct number of messages from the cursor to satisfy each consumer.
However periodic message expiry processing and queue browsing via jms or jmx will affect dispatch by pulling messages into the cursor.
Using a small maxBrowsePageSize and maxExpirePageSize should suffice to ensure a window for dispatch but this currently fails because the limits are not enforced.
Also, asyncDispatch treats a jms browser as a consumer w.r.t paging messages from the cursor, which has a similar side effect and thwarts lazyDispatch",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Apr 06 15:23:43 UTC 2016,,,,,,,,,,,"0|i2uru7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Apr/16 12:31;jira-bot;Commit a3a8c1c5256aa8ea1067afe3e1586832e5aa1821 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=a3a8c1c ]

https://issues.apache.org/jira/browse/AMQ-6215 - support 0 maxBrowsePageSize and maxExpirePageSize such that lazyDispatch ensures highest priority messages is available to a pull consumer
;;;","06/Apr/16 15:23;jira-bot;Commit 06972183f9dc8ed575e070d553f189552b027601 in activemq's branch refs/heads/activemq-5.13.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=0697218 ]

https://issues.apache.org/jira/browse/AMQ-6215 - support 0 maxBrowsePageSize and maxExpirePageSize such that lazyDispatch ensures highest priority messages is available to a pull consumer

(cherry picked from commit a3a8c1c5256aa8ea1067afe3e1586832e5aa1821)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAAS bug that causes user group membership not reloaded dynamically when reload is true,AMQ-6214,12950705,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,cshannon,nyang63@gmail.com,nyang63@gmail.com,16/Mar/16 00:18,02/Nov/19 05:36,14/Jul/23 05:44,16/Mar/16 14:52,5.13.0,5.13.2,,,,,,,,5.13.3,5.14.0,,,Security/JAAS,,,,,0,easyfix,,,,,"There is a bug in JAAS that caused users group membership not dynamically loading at runtime. Specifically, when I used the org.apache.activemq.jaas.PropertiesLoginModule with reload=true, changes in user name and password were reflected in connections after the changes, but changes in group membership was not reloaded/picked up by new connections.

The configuration of my broker xml and users.properties, groups.properties, as well as the login.config files are attached.  

The problem was repeatable always.

The cause of the problem was identified as the groups membership was cached and the cache was not cleared (reloaded) after the groups.properties file change.

The fix is to add one line of code in the org.apache.activemq.jaas.ReloadableProperties.java class.

The src code with the fix for org.apache.activemq.jaas.ReloadableProperties.java is attached in the ticket as well.

Please verify the fix and merge this one line of code change in org.apache.activemq.jaas.ReloadableProperties.java class in src branches for 5.13.0 as I tested the problem with 5.13.0 only.  The fix should be carried forward and retroactively merged into previous versions as well.

There is no negative impact on software or any noticeable impact on server performance.

","Linux, Mac",cshannon,jira-bot,nyang63@gmail.com,soumen.sarkar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ARTEMIS-451,,,,,,,,,,,,,,,,,,"16/Mar/16 00:26;nyang63@gmail.com;ReloadableProperties.java;https://issues.apache.org/jira/secure/attachment/12793667/ReloadableProperties.java","16/Mar/16 00:35;nyang63@gmail.com;activemq.xml;https://issues.apache.org/jira/secure/attachment/12793668/activemq.xml","16/Mar/16 00:35;nyang63@gmail.com;groups.properties;https://issues.apache.org/jira/secure/attachment/12793669/groups.properties","16/Mar/16 00:35;nyang63@gmail.com;login.config;https://issues.apache.org/jira/secure/attachment/12793670/login.config","16/Mar/16 00:35;nyang63@gmail.com;users.properties;https://issues.apache.org/jira/secure/attachment/12793671/users.properties",,,,,5.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Important,Patch,,,,,,,,9223372036854775807,,,Wed Mar 16 14:52:55 UTC 2016,,,,,,,Patch Available,,,,"0|i2uqpr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Mar/16 00:26;nyang63@gmail.com;The fix is to clear the cache of groups reverted map, so that the mapping of group membership will be reloaded.

One line of new code in ReloadableProperties class fixed the problem:

Line 53:    

invertedValueProps = null;;;;","16/Mar/16 00:35;nyang63@gmail.com;Attached configuration files for using JAAS with reloadable properties for users and groups.

Activemq is configured to use properties for users, groups with reload flag set to true, and authorization policy is such that changes in authorization policy is reloaded at runtime by the runtimeConfigurationPlugin.

Tests showed that the group membership is not dynamically reloaded at runtime without the fix.  The fix works well for the problem.;;;","16/Mar/16 14:50;jira-bot;Commit 2788bd55845d35ffb753f20ea1fee9711e85fe43 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=2788bd5 ]

https://issues.apache.org/jira/browse/AMQ-6214

Fixing ReloadableProperties so that the groups file will be properly
reloaded on file modification. Added a test to verify.

Thanks to Nanchang Yang for providing the fix.
;;;","16/Mar/16 14:52;jira-bot;Commit 531634fca1e99b06c34fbd2ab4f14b661443847b in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=531634f ]

https://issues.apache.org/jira/browse/AMQ-6214

Fixing ReloadableProperties so that the groups file will be properly
reloaded on file modification. Added a test to verify.

Thanks to Nanchang Yang for providing the fix.

(cherry picked from commit 2788bd55845d35ffb753f20ea1fee9711e85fe43)
;;;","16/Mar/16 14:52;cshannon;Patch applied along with a test to prevent this from happening again.  Thanks for the fix.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Unable to use default login config in ""activemq*.bat"" files if ActiveMQ is installed in a path with spaces.",AMQ-6213,12949994,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,rferraro,rferraro,14/Mar/16 18:14,20/Apr/16 20:47,14/Jul/23 05:44,14/Mar/16 21:33,5.13.2,,,,,,,,,5.13.3,5.14.0,,,Distribution,,,,,0,newbie,patch,,,,"If ActiveMQ is installed in a path with spaces (like: ""C:\Program Files\AMQ""), the batch files activemq.bat and activemq-admin.bat cannot start the service. 

The source of the issue appears to be that the -Djava.security.auth.login.config command line option is getting passed a raw path value that is not properly encoded for spaces in the path. I have a patch available that surrounds this parameter value with quotations.",Windows 7 Enterprise x64,jira-bot,rferraro,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5422,AMQ-5243,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Patch,,,,,,,,,9223372036854775807,,,Wed Apr 20 20:46:38 UTC 2016,,,,,,,Patch Available,,,,"0|i2umc7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Mar/16 18:16;rferraro;Patch below:
{noformat}
From 3c9433439d28d5050e89d77df660c78c516c02b1 Mon Sep 17 00:00:00 2001
From: Ryan Ferraro <ryan.ferraro@tideworks.com>
Date: Mon, 14 Mar 2016 10:42:10 -0700
Subject: [PATCH] Enclose java.security.auth.login.config parameter with
 quotes, so %ACTIVEMQ_CONF%\login.config is passed with spaces in file path.

---
 assembly/src/release/bin/activemq-admin.bat | 2 +-
 assembly/src/release/bin/activemq.bat       | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/assembly/src/release/bin/activemq-admin.bat b/assembly/src/release/bin/activemq-admin.bat
index 35a5ffb..46e0627 100644
--- a/assembly/src/release/bin/activemq-admin.bat
+++ b/assembly/src/release/bin/activemq-admin.bat
@@ -80,7 +80,7 @@ if ""%ACTIVEMQ_TMP%"" == """" set ACTIVEMQ_TMP=%ACTIVEMQ_DATA%\tmp
 if /i not ""%1"" == ""start"" goto debugOpts
 
 
-if ""%ACTIVEMQ_OPTS%"" == """" set ACTIVEMQ_OPTS=-Xmx1G -Dorg.apache.activemq.UseDedicatedTaskRunner=true -Djava.util.logging.config.file=logging.properties -Djava.security.auth.login.config=%ACTIVEMQ_CONF%\login.config
+if ""%ACTIVEMQ_OPTS%"" == """" set ACTIVEMQ_OPTS=-Xmx1G -Dorg.apache.activemq.UseDedicatedTaskRunner=true -Djava.util.logging.config.file=logging.properties -Djava.security.auth.login.config=""%ACTIVEMQ_CONF%\login.config""
 
 if ""%ACTIVEMQ_SUNJMX_START%"" == """" set ACTIVEMQ_SUNJMX_START=-Dcom.sun.management.jmxremote
 REM set ACTIVEMQ_SUNJMX_START=-Dcom.sun.management.jmxremote.port=1099 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false
diff --git a/assembly/src/release/bin/activemq.bat b/assembly/src/release/bin/activemq.bat
index 22e1f9d..c532c43 100755
--- a/assembly/src/release/bin/activemq.bat
+++ b/assembly/src/release/bin/activemq.bat
@@ -77,7 +77,7 @@ if ""%ACTIVEMQ_DATA%"" == """" set ACTIVEMQ_DATA=%ACTIVEMQ_HOME%\data
 
 if ""%ACTIVEMQ_TMP%"" == """" set ACTIVEMQ_TMP=%ACTIVEMQ_DATA%\tmp
 
-if ""%ACTIVEMQ_OPTS%"" == """" set ACTIVEMQ_OPTS=-Xms1G -Xmx1G -Djava.util.logging.config.file=logging.properties -Djava.security.auth.login.config=%ACTIVEMQ_CONF%\login.config
+if ""%ACTIVEMQ_OPTS%"" == """" set ACTIVEMQ_OPTS=-Xms1G -Xmx1G -Djava.util.logging.config.file=logging.properties -Djava.security.auth.login.config=""%ACTIVEMQ_CONF%\login.config""
 
 if ""%ACTIVEMQ_SUNJMX_START%"" == """" set ACTIVEMQ_SUNJMX_START=-Dcom.sun.management.jmxremote
 REM set ACTIVEMQ_SUNJMX_START=-Dcom.sun.management.jmxremote.port=1099 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false
-- 
2.7.2.windows.1


{noformat};;;","14/Mar/16 21:32;jira-bot;Commit 69c5fd7d5a56d13b4be2c56ca8e932c3d06b5d05 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=69c5fd7 ]

AMQ-6213 Quote path values to ensure the script works when the path
contains spaces.  

This closes #173;;;","20/Apr/16 20:46;jira-bot;Commit 3bd03c4e186da4f96b77a832403c100a0c52efe1 in activemq's branch refs/heads/activemq-5.13.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=3bd03c4 ]

AMQ-6213 Quote path values to ensure the script works when the path
contains spaces.

This closes #173
(cherry picked from commit 69c5fd7d5a56d13b4be2c56ca8e932c3d06b5d05)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq-all jar should include spring-messaging classes,AMQ-6212,12949948,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,cshannon,cshannon,cshannon,14/Mar/16 16:57,14/Mar/16 17:01,14/Jul/23 05:44,14/Mar/16 17:01,5.13.2,,,,,,,,,5.13.3,5.14.0,,,Distribution,,,,,0,,,,,,"Spring 4.0.x and above introduced a new jar file, spring-messaging, and these classes are a dependency on spring-jms.  This jar file should be included in the shaded activemq-all jar.",,cshannon,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Mar 14 17:01:06 UTC 2016,,,,,,,,,,,"0|i2um2n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Mar/16 16:59;jira-bot;Commit 4bd9a4ef6f29399ebde61275db75cf8d5d323ffc in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=4bd9a4e ]

https://issues.apache.org/jira/browse/AMQ-6212

Adding spring-messaging to the artifactSet for activemq-all to be
included inside the shaded jar
;;;","14/Mar/16 17:01;jira-bot;Commit 0dc76e02aac187182f04dc8b0e36db897045af9a in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=0dc76e0 ]

https://issues.apache.org/jira/browse/AMQ-6212

Adding spring-messaging to the artifactSet for activemq-all to be
included inside the shaded jar

(cherry picked from commit 4bd9a4ef6f29399ebde61275db75cf8d5d323ffc)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Synchronize creating of JMX OpenType objects,AMQ-6211,12949927,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,14/Mar/16 16:09,14/Mar/16 16:11,14/Jul/23 05:44,14/Mar/16 16:11,5.13.0,,,,,,,,,5.14.0,,,,JMX,,,,,0,,,,,,"In certain scenarios multiple threads can try to initialize the same openmbean type, which can lead to these type of exceptions.

{code}javax.management.openmbean.OpenDataException: Argument's element itemNames[25]=""JMSCorrelationID"" duplicates a previous item names.
	at javax.management.openmbean.CompositeType.<init>(CompositeType.java:153)
	at org.apache.activemq.broker.jmx.OpenTypeSupport$AbstractOpenTypeFactory.createCompositeType(OpenTypeSupport.java:82)
	at org.apache.activemq.broker.jmx.OpenTypeSupport$AbstractOpenTypeFactory.getCompositeType(OpenTypeSupport.java:70)
	at org.apache.activemq.broker.jmx.OpenTypeSupport.convert(OpenTypeSupport.java:543)
	at org.apache.activemq.broker.jmx.DestinationView.browse(DestinationView.java:206)
	at org.apache.activemq.broker.jmx.DestinationView.browse(DestinationView.java:186)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:279)
	at com.sun.jmx.mbeanserver.StandardMBeanIntrospector.invokeM2(StandardMBeanIntrospector.java:112)
	at com.sun.jmx.mbeanserver.StandardMBeanIntrospector.invokeM2(StandardMBeanIntrospector.java:46)
	at com.sun.jmx.mbeanserver.MBeanIntrospector.invokeM(MBeanIntrospector.java:237)
	at com.sun.jmx.mbeanserver.PerInterface.invoke(PerInterface.java:138)
	at com.sun.jmx.mbeanserver.MBeanSupport.invoke(MBeanSupport.java:252)
	at javax.management.StandardMBean.invoke(StandardMBean.java:405)
	at org.apache.activemq.broker.jmx.AnnotatedMBean.invoke(AnnotatedMBean.java:216)
{code}

Creating composite type should be synchronized. ",,dejanb,jira-bot,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Mar 14 16:10:22 UTC 2016,,,,,,,,,,,"0|i2ulxz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Mar/16 16:10;jira-bot;Commit a4c748883a78fca6840db03bd3cc85d970c8014f in activemq's branch refs/heads/master from [~dejanb]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=a4c7488 ]

https://issues.apache.org/jira/browse/AMQ-6211 - synchronize creating of jmx composite types
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SubQueueCacheSelectorPlugin stores information on temporary queues,AMQ-6210,12949802,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,pdudits,pdudits,14/Mar/16 08:30,04/Apr/16 13:06,14/Jul/23 05:44,28/Mar/16 18:40,5.13.2,,,,,,,,,5.14.0,,,,Broker,,,,,0,,,,,,"SubQueueCacheSelectorPlugin stores selector data on temporary destinations.

I believe this is not necessary, as temporary destinations would cease to exist when their creator disconnects, And the creator is also usually their consumer in request-response scenarios.

This leads to ever growing cache file, and since this is just persisted in-memory map, also to unnecessary memory consumption.",,githubbot,jira-bot,pdudits,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Apr 04 13:06:04 UTC 2016,,,,,,,,,,,"0|i2ul67:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Mar/16 08:30;pdudits;I will provide a PR for this issue.;;;","14/Mar/16 09:18;githubbot;GitHub user pdudits opened a pull request:

    https://github.com/apache/activemq/pull/175

    https://issues.apache.org/jira/browse/AMQ-6210

    Do not store selector information of temporary destinations.
    
    Since the selector information is not cleared after the destination is removed, the cache grows with every temporary destinations, and a use case where a consumer would ever reconnect to a temporary queue for reception is hard to imagine.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/pdudits/activemq amq-6210

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/175.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #175
    
----
commit 24c843774cbd8712382ec098d039d05480bb4c38
Author: Patrik Dudits <patrik@dudits.net>
Date:   2016-03-14T09:16:02Z

    https://issues.apache.org/jira/browse/AMQ-6210
    
    Do not store selector information of temporary destinations. Since the selector information is not cleared after the
    destination is removed, the cache grows with every temporary destinations, and a use case where a consumer
    would ever reconnect to a temporary queue for reception is extremely rare.

----
;;;","28/Mar/16 18:34;jira-bot;Commit f3ecc293f023e2a75a2c243d361f7a3fc9800f67 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=f3ecc29 ]

https://issues.apache.org/jira/browse/AMQ-6210

Don't cache selectors for temp destinations.  ;;;","28/Mar/16 18:40;jira-bot;Commit 48ba714b3083b86a84ed3419df4fde21ec61e5d8 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=48ba714 ]

https://issues.apache.org/jira/browse/AMQ-6210

Clean up and apply filtering for temp destinations to removeConsumer as
well.  

This closes #175;;;","28/Mar/16 18:40;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/175
;;;","04/Apr/16 13:06;pdudits;Thanks for incorporating. I would like to point at AMQ-6029 yet, where I add ignores on network subscriptions and queue browsers, which are also kind of consumers, that are not permanent, and have empty selectors.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The connector's jmx attribute UpdateClusterClients is not correct,AMQ-6208,12949064,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,gtully,gtully,11/Mar/16 12:00,11/Mar/16 12:05,14/Jul/23 05:44,11/Mar/16 12:05,5.13.0,,,,,,,,,5.14.0,,,,JMX,,,,,0,,,,,,cut nd paste or auto complete error in connector view attribute isUpdateClusterClientsOnRemove being returned in error for isUpdateClusterClients,,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Mar 11 12:02:53 UTC 2016,,,,,,,,,,,"0|i2uij3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Mar/16 12:02;jira-bot;Commit ae441cbc7dc8d656990cefae28657eed78cf28e0 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=ae441cb ]

https://issues.apache.org/jira/browse/AMQ-6208 - fix and test
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KahaDB: corruption of the index possible on sudden stop of the broker,AMQ-6207,12948950,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,10/Mar/16 23:32,12/Apr/16 21:45,14/Jul/23 05:44,11/Mar/16 16:14,5.11.4,5.12.3,5.13.2,,,,,,,5.13.3,5.14.0,,,KahaDB,,,,,0,,,,,,On a sudden stop of the broker it's possible for the KahaDB index to become corrupt and the broker will refuse to start.  The issue is in the PageFile code that is mixing writes to both the recovery file and the index file.  The writes need to happen in a deterministic way such that the recovery file isn't missing data that might make it into the the main index file.  ,,jgenender,jira-bot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5440,,,,,,,,,,,,,,,,,,,,,"11/Mar/16 14:56;tabish;kahadb-corruption.tar.bz2;https://issues.apache.org/jira/secure/attachment/12792810/kahadb-corruption.tar.bz2",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Mar 11 15:56:07 UTC 2016,,,,,,,,,,,"0|i2uhuf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Mar/16 14:56;tabish;Test that can be used to reproduce;;;","11/Mar/16 15:00;jira-bot;Commit b39ab7867c208a967090eff189594c2b06dafb34 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b39ab78 ]

https://issues.apache.org/jira/browse/AMQ-6207

Perform writes / sync in predicatable order first to the recovery file
and then into the main index file.;;;","11/Mar/16 15:56;jira-bot;Commit 3dc769d1f66e50c96dec6d634e1a347a577e7725 in activemq's branch refs/heads/activemq-5.13.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=3dc769d ]

https://issues.apache.org/jira/browse/AMQ-6207

Perform writes / sync in predicatable order first to the recovery file
and then into the main index file.
(cherry picked from commit b39ab7867c208a967090eff189594c2b06dafb34)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
properties in stomp non persistent messages are not reflected in the message size used for usage tracking,AMQ-6206,12948571,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,09/Mar/16 22:10,09/Mar/16 22:26,14/Jul/23 05:44,09/Mar/16 22:26,5.13.0,,,,,,,,,5.14.0,,,,STOMP,,,,,0,,,,,,"stomp messages are passed on from the protocol converter directly so their properties are not marshalled. Only marshalled properties are tracked for usage by Message.getSize
",,gtully,jira-bot,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Mar 09 22:14:43 UTC 2016,,,,,,,,,,,"0|i2ufi7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Mar/16 22:14;jira-bot;Commit 57264bf8dc9970d7d808cf24216b6185ceb644e2 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=57264bf ]

https://issues.apache.org/jira/browse/AMQ-6206 - ensure properties are marshalled before dispatch to broker so that their values are reflected in the memory usage
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Advisory broker does not properly remove virtual consumer demand,AMQ-6204,12948511,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,09/Mar/16 19:50,21/Oct/17 11:36,14/Jul/23 05:44,09/Mar/16 19:58,5.13.2,,,,,,,,,5.13.3,5.14.0,,,Broker,,,,,0,,,,,,"When virtual destination network demand is enabled based on the existence of a destination ( the useVirtualDestSubsOnCreation flag as described in AMQ-6027) , there is a map called brokerConsumerDests that tracks the unique demand for the existence virtual destinations.

Elements are not being properly removed from this map when a virtual destination is removed.  All elements are being removed from this map instead of just the ones that match the removed virtual destination.  This can cause entries in a different map (the virtualDestinationConsumers map) to not be cleaned up and for duplicates to be added if the virtual destination is re-added later.  This can lead to a memory leak as this map can continue to grow and not be cleaned up.",,cshannon,jira-bot,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6027,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Mar 09 19:58:58 UTC 2016,,,,,,,,,,,"0|i2uf4v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Mar/16 19:55;jira-bot;Commit a2781e3966ded41a241d24ffb8d85d410c39eb21 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=a2781e3 ]

https://issues.apache.org/jira/browse/AMQ-6204

Fixing the removal logic on virtual destination remove inside of
Advisory Broker to clean up virtual destination maps properly.  Added a
test to verify.  Also added new debug logging to help track down any
future issues.
;;;","09/Mar/16 19:58;jira-bot;Commit 442fadac87a248cfe1efefd678b9fff6bd9f8733 in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=442fada ]

https://issues.apache.org/jira/browse/AMQ-6204

Fixing the removal logic on virtual destination remove inside of
Advisory Broker to clean up virtual destination maps properly.  Added a
test to verify.  Also added new debug logging to help track down any
future issues.

(cherry picked from commit a2781e3966ded41a241d24ffb8d85d410c39eb21)
;;;","09/Mar/16 19:58;cshannon;Fix applied and cherry-picked to 5.13.x in case a 5.13.3 release is done in the future.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
cursorMemoryHighWaterMark configuration not applied to topic subscription,AMQ-6199,12948066,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,08/Mar/16 16:42,08/Mar/16 17:00,14/Jul/23 05:44,08/Mar/16 17:00,5.13.0,,,,,,,,,5.14.0,,,,Broker,,,,,0,,,,,,"One can configure 
{code:xml}
<policyEntry topic="">"" cursorMemoryHighWaterMark=""10"" />
{code}
but that cursorMemoryHighWaterMark is not set on the effective TopicSubscription. As a result, topic messages don't get swapped to disk once the explicitly configured water mark is reached.
That should be a usage percentage of the systemUsage memory usage limit, but it stays at the default 70 in error",,gtully,jira-bot,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Mar 08 16:45:52 UTC 2016,,,,,,,,,,,"0|i2ucdz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Mar/16 16:45;jira-bot;Commit 078f39f5896ab728046424017f9cd4f45d53f48c in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=078f39f ]

https://issues.apache.org/jira/browse/AMQ-6199 - apply CursorMemoryHighWaterMark to topic subscriptions
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deleting a temporary queue creates a warning message in the broker,AMQ-6194,12946537,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,cshannon,DavidD,DavidD,03/Mar/16 13:02,01/Jul/16 12:28,14/Jul/23 05:44,07/Mar/16 14:20,5.12.1,5.13.1,,,,,,,,5.13.4,5.14.0,,,Broker,JMS client,,,,0,,,,,,"When deleting a temporary queue, the ActiveMQ 5.13.1 (and 5.12.2) broker logs the following warning message:
{noformat}
INFO  [ActiveMQ NIO Worker 111] [TempQueue] temp-queue://ID:brokerHostname-57582-1455804170203-8569:1:1 on dispose, purge of 1 pending messages: org.apache.activemq.broker.region.cursors.VMPendingMessageCursor@e0f6196
WARN  [ActiveMQ NIO Worker 111] [Queue] temp-queue://ID:brokerHostname-57582-1455804170203-8569:1:1 after purge of 1 messages, message count stats report: 1
{noformat}
The cause of this warning seems to be the publication of a ""ghost"" message when sending a single message on the temporary queue from a transacted session, as demonstrated by this test class:
{code:java}
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.jms.Connection;
import javax.jms.JMSException;
import javax.jms.MessageProducer;
import javax.jms.Session;
import javax.jms.TemporaryQueue;
import javax.jms.TextMessage;

import org.apache.activemq.ActiveMQConnectionFactory;

public class GhostMessageOnTempQueueWithTransactedSessionDemo {
    public static void main(final String[] args) throws JMSException {
        final ActiveMQConnectionFactory factory = new ActiveMQConnectionFactory(""tcp://localhost:61616"");
        Connection connection = null;
        Session session = null;
        MessageProducer producer = null;
        TemporaryQueue temporaryQueue = null;
        try {
            connection = factory.createConnection();
            connection.start();
            // The session has to be transacted for the second ""ghost"" message to appear (see below).
            session = connection.createSession(true, Session.SESSION_TRANSACTED);
            // And the publication has to be on a temporary queue (if the temporary queue is created by another process, the second ""ghost"" message still appears).
            temporaryQueue = session.createTemporaryQueue();
            producer = session.createProducer(temporaryQueue);
            final TextMessage textMessage = session.createTextMessage();
            textMessage.setText(""GhostMessageDemo@"" + new SimpleDateFormat(""yyyy-MM-dd'T'HH:mm:ss,SSSZ"").format(new Date()));

            producer.send(textMessage);
            // Here, in ActiveMQ 5.13.1 and 5.12.2, the message was sent but cannot be browsed or consumed. It can however be seen in the JMX console with:
            // - EnqueueCount, that was increased by one;
            // - MemoryUsageByteCount (by sending huge messages of different size to ensure that it is indeed the real message).
            // In ActiveMQ 5.10.2 (and 5.4.1), it is not sent (even though SocketOutputStream.socketWrite is still called through TcpFormat.oneway?).

            session.commit();
            // Here, in ActiveMQ 5.13.1, a ""ghost"" message was sent (EnqueueCount has increased by one again) and the real message is visible and can be consumed.
            // If rollback is called instead, the real message stays (and cannot be consumed since the ""ghost"" message is not sent).
        } finally {
            if (producer != null)
                producer.close();
            if (temporaryQueue != null)
                // Here, if there was a consumer on the queue, it would have consumed the real message, leaving the ""ghost"" message that lead to the broker warning.
                temporaryQueue.delete();
            if (session != null)
                session.close();
            if (connection != null) {
                connection.stop();
                connection.close();
            }
        }
    }
}
{code}
",,cshannon,DavidD,gtully,hakanj,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Mar/16 12:07;cshannon;AMQ6194Test.java;https://issues.apache.org/jira/secure/attachment/12791455/AMQ6194Test.java",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jul 01 12:28:53 UTC 2016,,,,,,,,,,,"0|i2u3hz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Mar/16 12:16;cshannon;Thanks for the test case.  I took your example and re-wrote it slightly with JUnit to demonstrate the issue and uploaded it as an attachment.   

[~gtully], If you run the test case you will see that the statistics report back a message count of 2 instead of 1.  The issue here is pretty simple, it's on line 857 of the Queue class: https://github.com/apache/activemq/blob/master/activemq-broker/src/main/java/org/apache/activemq/broker/region/Queue.java#L857

The problem is the temp queue is part of a transaction, but since its store is null that if statement is always true so it executes the messageSent() method there and also again when the transaction completes which leads to the statistics updating twice.

Seems like we could just delete the {{store == null}} part because I think any non temporary destination should always have a store.  Could also just change it to {{if ((store == null && !destination.isTemporary()) || (!context.isInTransaction() && !message.isPersistent()))}}

But I wanted to run it by you first to see what you think since you were the last person to have touched that line in this commit https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=54e2e3bef290d7455d9d1ba3420d12dc4805b339;;;","07/Mar/16 11:29;gtully;[~cshannon] thanks for the heads up!
The intent is to match tryOrderedCursorAdd, 2nd else clause.
Where there is no ordering issue with non persistent messages and when the store == null all messages are non persistent.
https://github.com/apache/activemq/blob/master/activemq-broker/src/main/java/org/apache/activemq/broker/region/Queue.java#L879

To match that clearly I think it should be: {code}if ( !context.isInTransaction() && !( store == null && message.isPersistent())) {code}

An alternative approach would be to delete that line altogether and add a call to messageSend in tryOrderedCursorAdd.
ie: When there is no order issue, add to the cursor and add to the stats.
That keeps the logic and the action nicely together so the intent is a little more clear.

There used to be a sendLock, and it idea was to do the stats update outside of that lock, hence the separation. With the send lock gone, there is no good reason not to inline the call to sendMessage in the tryOrderedCursorAdd

;;;","07/Mar/16 13:32;cshannon;Thanks for the explanation [~gtully]. I like the idea of getting rid of that line and moving the stats to tryOrderedCursorAdd as it is cleaner.  I will apply the fix and a test shortly.;;;","07/Mar/16 14:20;jira-bot;Commit 903dec615c7932475bd3e6cd869af25f01de64b2 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=903dec6 ]

https://issues.apache.org/jira/browse/AMQ-6194

Fixing an issue that caused statistics for a transactional temporary
queue to be updated twice by mistake.  Moved the statistics update into
tryOrderedCursorAdd so that the update is called immediately only if
not inside a transaction.
;;;","01/Jul/16 07:52;hakanj;In our production test environment this bug causes the ActiveMQ kahadb store limit to be reached, even though there is not a single message currently in the broker. The ""data/kahadb"" directory fills up with database log files, stopping the broker from working.

We have several clients using request-response where the response queue is a temporary queue. Each client has its own temporary queue which is reused for all requests during the lifetime of the client process, as recommended [by the ActiveMQ documentation|http://activemq.apache.org/how-should-i-implement-request-response-with-jms.html].
When we look at the temp queues using hawtio we see that the _EnqueueCount_ is always two times the _DequeueCount_, even though no messages can be fetched from the queue, aka ""ghost"" messages.

Because of the seriousness of this issue I would consider this issue to be at least _Major_, not _Minor_ as it is today.

If we manually build ActiveMQ with this patch, then this issue goes away, but we would prefer to have an official release instead.
We would be very happy if a new release containing this fix could be prioritized.;;;","01/Jul/16 10:38;jira-bot;Commit 7ddfa97d0173b07346ea8fdfcb8e6545766e0d39 in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=7ddfa97 ]

https://issues.apache.org/jira/browse/AMQ-6194

Fixing an issue that caused statistics for a transactional temporary
queue to be updated twice by mistake.  Moved the statistics update into
tryOrderedCursorAdd so that the update is called immediately only if
not inside a transaction.

(cherry picked from commit 903dec615c7932475bd3e6cd869af25f01de64b2)
;;;","01/Jul/16 10:43;cshannon;I actually meant to merge this earlier into a 5.13.x minor release but it was overlooked.  I went ahead and merged it now so it will be in 5.13.4 if released as well as 5.14.0.  I would like to start pushing for 5.14.0 soon but there are still a couple of issues to be worked out first so a 5.13.4 may end up being going out the door in the meantime as it probably has enough bug fixes by now that it can be released.;;;","01/Jul/16 12:28;hakanj;Thank you for your quick response.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Queues containing PERSISTENT messages can be garbage collected due to Inactivity,AMQ-6188,12945035,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,brianjohnson,brianjohnson,26/Feb/16 20:17,01/Feb/17 11:14,14/Jul/23 05:44,26/Feb/16 21:06,5.13.0,5.13.1,,,,,,,,5.13.2,5.14.0,,,Broker,,,,,0,,,,,,"It is possible for a queue to be garbage collected due to inactivity despite undelivered {{PERSISTENT}} messages being present on the queue.

Order of events-
* unused queue is marked for garbage collection due to inactivity
* prior to garbage collection, an anonymous producer comes online, sending one or more messages, then closing
** Note: the queue's {{lastActiveTime}} is not reset when an anonymous producer is created because they are not bound to a destination at creation.
* queue with pending Message(s) is garbage collected

A simple fix for this seems to be resetting {{BaseDestination#lastActiveTime}} to zero each time a message is sent ({{BaseDestination#messageDelivered(context, messageReference)}}).

I'll submit a PR with a patch shortly.",,brianjohnson,cshannon,githubbot,jira-bot,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6587,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Feb 26 21:06:59 UTC 2016,,,,,,,,,,,"0|i2tu8n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Feb/16 20:24;githubbot;GitHub user bdjdev opened a pull request:

    https://github.com/apache/activemq/pull/170

    https://issues.apache.org/jira/browse/AMQ-6188 - reset BaseDestinatio…

    Fix and test for https://issues.apache.org/jira/browse/AMQ-6188

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/bdjdev/activemq AMQ-6188

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/170.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #170
    
----
commit c88bcedff0e498667db53af561ab01d03b286e0c
Author: Brian D. Johnson <brian@thejohnsonfamily.name>
Date:   2016-02-26T20:19:50Z

    https://issues.apache.org/jira/browse/AMQ-6188 - reset BaseDestination.lastActiveTime each time a message is delivered to the broker.

----
;;;","26/Feb/16 20:33;tabish;I think you could assume passing faster in the test so long as the send causes the canGC to once again return false instead of doing the hard sleep;;;","26/Feb/16 20:43;cshannon;This looks good to me but I think it would also be a good idea to add an extra failsafe check to the canGC method and make sure that the message count is still 0 before returning true.;;;","26/Feb/16 20:44;brianjohnson;Updated commit to remove sleep and assert canGC is false following message send.;;;","26/Feb/16 20:47;brianjohnson;Also added the extra failsafe check to the canGC method.;;;","26/Feb/16 21:00;jira-bot;Commit 552c0f0f7a7502c0337b13699de51a11b29723a2 in activemq's branch refs/heads/master from [~brianjohnson]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=552c0f0 ]

https://issues.apache.org/jira/browse/AMQ-6188 - reset BaseDestination.lastActiveTime each time a message is delivered to the broker.
;;;","26/Feb/16 21:00;jira-bot;Commit 012e4d0a1c85a17f90391b264617b4c9f0683d23 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=012e4d0 ]

https://issues.apache.org/jira/browse/AMQ-6188

Patch applied with thanks to Brian D. Johnson
;;;","26/Feb/16 21:00;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/170
;;;","26/Feb/16 21:03;jira-bot;Commit 5dfd8cdfa806ae6cf708e3dc3ee8b174655a89dd in activemq's branch refs/heads/activemq-5.13.x from [~brianjohnson]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=5dfd8cd ]

https://issues.apache.org/jira/browse/AMQ-6188 - reset BaseDestination.lastActiveTime each time a message is delivered to the broker.

(cherry picked from commit 552c0f0f7a7502c0337b13699de51a11b29723a2)
;;;","26/Feb/16 21:06;cshannon;Patch applied, thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MQTT Tests using SSL fail on latest JDK 8 release,AMQ-6187,12944976,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,tabish,tabish,26/Feb/16 18:00,26/Feb/16 18:45,14/Jul/23 05:44,26/Feb/16 18:45,5.13.1,,,,,,,,,5.13.2,5.14.0,,,MQTT,,,,,0,,,,,,"Tests that use SSL fail due to the way they initialize their SSL Context, simple fix is to use the same mechanism as is used to initialize the broker SSLContext to initialize the MQTT client provider.  ",,jira-bot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Feb 26 18:44:41 UTC 2016,,,,,,,,,,,"0|i2ttvj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Feb/16 18:42;jira-bot;Commit 6e2edf08c3e3dda7656dffa1af8c92b6ed333c22 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=6e2edf0 ]

https://issues.apache.org/jira/browse/AMQ-6187

Create a proper SSLContext for the MQTT client provider in the tests to
avoid failure on newer JDKs;;;","26/Feb/16 18:44;jira-bot;Commit a4cd137dab777cdf4c5fdc284cdb60e8efd6f70c in activemq's branch refs/heads/activemq-5.13.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=a4cd137 ]

https://issues.apache.org/jira/browse/AMQ-6187

Create a proper SSLContext for the MQTT client provider in the tests to
avoid failure on newer JDKs
(cherry picked from commit 6e2edf08c3e3dda7656dffa1af8c92b6ed333c22)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Keep-Alive does not work in broker network when connected over HTTP,AMQ-6185,12944842,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,jiri.formanek@atos.net,jiri.formanek@atos.net,26/Feb/16 10:06,26/Apr/16 22:49,14/Jul/23 05:44,26/Apr/16 22:49,5.13.1,,,,,,,,,5.13.3,5.14.0,,,Network of Brokers,,,,,0,http,keepalive,networkBridge,networkConnector,,"The keep-alive mechanism does not work (no keep-alives are sent), when the connections go over HTTP layer.
The InactivityMonitor closes then the connection and new connection to target is established. This repeats every 30 seconds (the default time out).

E.g.: Let's have a simple broker network. Machine A connects to machine B with duplex network bridge over HTTP...

Machine A config:
<networkConnector duplex=""true"" uri=""static:(http://machineB:61617)"" name=""bridgeToB"" />

Machine B config:
<transportConnector name=""http"" uri=""http://0.0.0.0:61617?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600""/>

When the transport layer is changed to e.g. TCP then keep-alive works and the connection is persistent.
",all OSs,jiri.formanek@atos.net,uliss3,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6262,,,,,,,,,,,,,,,,,,,,,"03/Apr/16 23:07;uliss3;amq6185.diff;https://issues.apache.org/jira/secure/attachment/12796760/amq6185.diff",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Sun Apr 03 23:07:31 UTC 2016,,,,,,,,,,,"0|i2tt1r:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Apr/16 22:55;uliss3;It seems to be actually a bug of InactivityMonitor.
In fact, specifically for Http transport, the inactivity monitor skips all the wire format information. 
In this case the connection checker task is never canceled and this causes the connector to be stopped after 30 seconds because the monitor thinks that the connection has never been established.

In order to not wait for the issue to be fixed, you can overcome the problem by turning off connection checker (that does not make sense for http transport). Read and write checks for keep alive will by the way work as designed.

Just add connectAttemptTimeout=0 to your transport options (also in network connectors)

Cheers

Andrea;;;","03/Apr/16 23:07;uliss3;Patch against 5.14.0 attached;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Provide the DispatchAsync value on Subscriptions to the SubscriptionViewMBean,AMQ-6183,12943090,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,tabish,tabish,tabish,24/Feb/16 21:51,24/Feb/16 22:36,14/Jul/23 05:44,24/Feb/16 22:36,5.12.3,5.13.0,5.13.1,,,,,,,5.14.0,,,,JMX,,,,,0,,,,,,"The SubscriptionVewMBean does not expose the dispatchAsync property from a consumer.

The ProducerViewMBean does expose a dispatchAsync value from a producer which is never used and leads to some confusion.  ",,jira-bot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Feb 24 22:25:37 UTC 2016,,,,,,,,,,,"0|i2ti8f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Feb/16 22:25;jira-bot;Commit c2ad0c32512e5265fa5482a0e49aa13f359acb8f in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=c2ad0c3 ]

AMQ-6183 Add isDispatchSync to the subscription view and deprecate the
meaningless one in the producer view;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Documentation has Error formatting macro,AMQ-6180,12941365,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,niels@harremoes.dk,niels@harremoes.dk,23/Feb/16 10:29,23/Feb/16 15:44,14/Jul/23 05:44,23/Feb/16 15:44,5.12.3,,,,,,,,,,,,,Documentation,,,,,0,,,,,,"The page http://activemq.apache.org/virtual-destinations.html
shows 

{code}
Error formatting macro: snippet: java.lang.IndexOutOfBoundsException: Index: 20, Size: 20
{code}
 for most examples?

So does
http://activemq.apache.org/per-destination-policies.html and many other pages.

This link does a google search for all affected pages.
https://www.google.com/search?q=%22Error+formatting+macro%22+site:+activemq.apache.org",,cshannon,niels@harremoes.dk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Important,,,,,,,,,9223372036854775807,,,Tue Feb 23 15:44:53 UTC 2016,,,,,,,,,,,"0|i2t7l3:",9223372036854775807,Regression,,,,,,,,,,,,,,,,,,,,"23/Feb/16 15:44;cshannon;It looks like the plugin that pulls in snippets is no longer working.  Also, we were pointing to an old subversion respository that wasn't being updated anymore.

Seeing as how the source code has been moved to git and that the snippet plugin wasn't working I went ahead and just copied the xml examples into code blocks inline to fix the issue.  I think I got all of them but we can always fix an example later if I missed one.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make ActiveMQ build and test pass in Newfoundland,AMQ-6177,12940710,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,jgoodyear,jgoodyear,19/Feb/16 23:58,22/Feb/16 12:53,14/Jul/23 05:44,22/Feb/16 12:53,5.13.1,5.14.0,,,,,,,,5.13.2,5.14.0,,,,,,,,0,test,,,,,"Certain tests such as org.apache.activemq.broker.scheduler.CronParserTest, require a build/test to be run on an epoch that is aligned with the hour. In timezones such as Newfounland, which is shifted by 30 minutes, these tests fail.

Lets update the build/test suite to work in any time zone.

(Verified by changing timezone from NST to EST -- on EST the test suite passes)",,cshannon,jgoodyear,jira-bot,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Feb/16 14:52;jgoodyear;amq6177-513xpatch.diff;https://issues.apache.org/jira/secure/attachment/12788914/amq6177-513xpatch.diff","21/Feb/16 14:57;jgoodyear;amq6177-master.diff;https://issues.apache.org/jira/secure/attachment/12788915/amq6177-master.diff",,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Patch,,,,,,,,,9223372036854775807,,,Mon Feb 22 12:53:10 UTC 2016,,,,,,,Patch Available,,,,"0|i2t3jr:",9223372036854775807,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"21/Feb/16 14:52;jgoodyear;Patch for 5.13.x branch.

The existing check for half hour offsets wasn't in 24 hour clock format (8pm == 20h).;;;","21/Feb/16 14:57;jgoodyear;Patch for master branch.

The check for half hour timezone assumed 12 hr clock instead of 24 hr. 
Updated to check for 20h instead of 8h.;;;","22/Feb/16 12:51;jira-bot;Commit 0f445a535f8ec1135d6769a9e7c1503fd7b26121 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=0f445a5 ]

https://issues.apache.org/jira/browse/AMQ-6177

Fixing CronParserTest so that it checks 24 hour format properly when
using a timezone shifted by 30 minutes

Thanks to Jamie Goodyear for the patch
;;;","22/Feb/16 12:52;jira-bot;Commit a1f309ea19c3766157566bcef1f3b1a02458a0de in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=a1f309e ]

https://issues.apache.org/jira/browse/AMQ-6177

Fixing CronParserTest so that it checks 24 hour format properly when
using a timezone shifted by 30 minutes

Thanks to Jamie Goodyear for the patch

(cherry picked from commit 0f445a535f8ec1135d6769a9e7c1503fd7b26121)
;;;","22/Feb/16 12:53;cshannon;[~jgoodyear],

I have applied your patch to both master and 5.13.x, thanks for tracking down the cause of this.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ webconsole breaks when supressMBean is used,AMQ-6175,12940286,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,,jgenender,jgenender,18/Feb/16 21:12,27/Apr/16 11:41,14/Jul/23 05:44,18/Feb/16 21:38,5.12.1,5.13.0,5.13.1,,,,,,,5.13.2,5.14.0,,,Web Console,,,,,0,,,,,,"AMQ-5656 which included the suppressMBean function broke the web console that comes with ActiveMQ.  The proxied calls to ManagedRegionBroker will obtain objects that are not registered with the MBean server and thus the web console breaks with invalid JSP when executed, which ultimately is caused by javax.management.InstanceNotFoundException.  The fix for this is to have the web calls filter out lists that contain any non-MBeans. ",,jgenender,jira-bot,lichtin,paulgale,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Apr 27 11:41:03 UTC 2016,,,,,,,,,,,"0|i2t0xj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Feb/16 21:26;jira-bot;Commit 49974279a745604d1028a78426985d438fc3762c in activemq's branch refs/heads/master from [~jgenender]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=4997427 ]

AMQ-6175 - Web console needs to only obtain lists of MBeans that are not
suppressed.
;;;","18/Feb/16 21:36;jira-bot;Commit 9224f27ba3bdf8001dae5930e994f42125d70a1c in activemq's branch refs/heads/activemq-5.13.x from [~jgenender]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=9224f27 ]

AMQ-6175 - Web console needs to only obtain lists of MBeans that are not suppressed.
;;;","18/Feb/16 21:38;jgenender;Updates ManagementContext and ManagedRegionBroker to provide protected/public access produce filtered lists of the Mbeans for lists/sets.  Changed the BrokerView to use the filtered versions.;;;","08/Mar/16 11:56;jira-bot;Commit e313f4098900b717614cc109a1ab028e7bb5fd67 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e313f40 ]

https://issues.apache.org/jira/browse/AMQ-6175 - fix unit test regression SelectiveMBeanRegistrationTest
;;;","27/Apr/16 11:41;jira-bot;Commit e633e49aff5754b9ed0efa4d84b3e9084078490c in activemq's branch refs/heads/activemq-5.13.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e633e49 ]

https://issues.apache.org/jira/browse/AMQ-6175 - fix unit test regression SelectiveMBeanRegistrationTest

(cherry picked from commit e313f4098900b717614cc109a1ab028e7bb5fd67)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
legal colon in broker name breaks vm transport,AMQ-6171,12939280,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,15/Feb/16 14:11,15/Feb/16 14:26,14/Jul/23 05:44,15/Feb/16 14:26,5.13.0,,,,,,,,,5.14.0,,,,Broker,,,,,0,brokerName,vmtransport,,,,"A colon is acceptable in a broker brokerName attribute. However a network connector will fail to create a local vm connection in this case, in error. In addition there is little logging and the network connector is not retried.



",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Feb 15 14:25:11 UTC 2016,,,,,,,,,,,"0|i2surj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Feb/16 14:25;jira-bot;Commit b0c0441d0907a26b239367dedbd9b1f3a355ab66 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b0c0441 ]

https://issues.apache.org/jira/browse/AMQ-6171 - fix vm transport replacement of : from brokerName in error, fix networkConnector retry logic in the event of localTransport creation failure
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
X-Frame-Options are not set for static content,AMQ-6170,12938920,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,12/Feb/16 20:42,16/Mar/16 20:01,14/Jul/23 05:44,12/Feb/16 20:48,5.11.4,5.12.2,5.13.1,,,,,,,5.13.2,5.14.0,,,Broker,,,,,0,,,,,,"In AMQ-6113, The X-Frame-Options header was added to the web console.  Unfortunately that patch isn't quite correct because static content is still missing this header.",,cshannon,jira-bot,Rocketman,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6113,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Mar 16 19:59:32 UTC 2016,,,,,,,,,,,"0|i2ssjj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Feb/16 20:45;jira-bot;Commit 24ad36778534c5ac888f880837075449169578ad in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=24ad367 ]

https://issues.apache.org/jira/browse/AMQ-6170

Fixing X-Frame-Options header so that is applied for all content served
by Jetty.  The previous patch wasn't correct because it only applied it
to Servlets and JSPs and not static content. This also reverts AMQ-6113
;;;","12/Feb/16 20:46;jira-bot;Commit 028a33ea7d73fabe6161defffdbfc85578328a68 in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=028a33e ]

https://issues.apache.org/jira/browse/AMQ-6170

Fixing X-Frame-Options header so that is applied for all content served
by Jetty.  The previous patch wasn't correct because it only applied it
to Servlets and JSPs and not static content. This also reverts AMQ-6113

(cherry picked from commit 24ad36778534c5ac888f880837075449169578ad)
;;;","12/Feb/16 20:48;cshannon;Jetty has been configured to set the header for static content as well.;;;","16/Mar/16 19:39;Rocketman;Was this issue properly fixed in the 5.11.x and 5.12.x branches as well?;;;","16/Mar/16 19:59;cshannon;No, in those versions the header is applied in a Servlet filter so any static content will not be protected which is why the notice that went out says to upgrade to 5.13.2.  Fixing older versions like 5.11.x and 5.12.x would require more work than just cherry-picking because the version of Jetty is different.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
STOMP: Invliad frames are logged in warn messages,AMQ-6169,12938868,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,12/Feb/16 18:18,17/Feb/16 18:17,14/Jul/23 05:44,12/Feb/16 18:57,5.12.0,5.12.1,5.13.0,5.13.1,,,,,,5.14.0,,,,STOMP,,,,,0,,,,,,"When the STOMP protocol converter encounters a frame that is badly encoded it logs out a warning that prints the entire frame contents in the warn message.  This leads to some confusing results or logs of 'null' as the decoder never got to creating a full frame instance before failing.  

If the frame happens to get read but contains corrupted data the log can get spammed with garbage characters and becomes somewhat unreadable.  

We should not log the frame if there is one at warn level, perhaps allow for trace logging it.  We could attempt to log the frame Action if one was read and is valid but otherwise should not pollute the logs with entire frames.  ",,jira-bot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Feb 17 18:17:49 UTC 2016,,,,,,,,,,,"0|i2ss7z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Feb/16 18:57;jira-bot;Commit b595b8bc12cf58314fb131128184fec92e7d2509 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b595b8b ]

https://issues.apache.org/jira/browse/AMQ-6169

Log actual STOMP frames that cause error at trace level, only log the
command action if it is present and valid.  ;;;","17/Feb/16 18:17;jira-bot;Commit 4e60075a3217bfcaae44fc510e3214aa6c53387d in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=4e60075 ]

https://issues.apache.org/jira/browse/AMQ-6169

Add additional null check;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
STOMP: Connection should be closed on receiving an invalid STOMP Frame with unknown action value.,AMQ-6168,12938820,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,12/Feb/16 14:59,12/Feb/16 17:37,14/Jul/23 05:44,12/Feb/16 17:37,5.13.0,5.13.1,,,,,,,,5.14.0,,,,STOMP,,,,,0,,,,,,"When a STOMP frame comes in and the ""action"" is not known the transport doesn't currently throw a fatal protocol exception.  This can lead to issues if the incoming data is corrupt and the transport can continue to try and read more commands from the stream and start logging binary data or reading in garbage commands.  ",,jira-bot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Feb 12 17:36:46 UTC 2016,,,,,,,,,,,"0|i2srxb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Feb/16 17:36;jira-bot;Commit adf70bc08ab4a8c3bfa87e0a7b50476aa5bab779 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=adf70bc ]

https://issues.apache.org/jira/browse/AMQ-6168

Disconnect on unkown STOMP Command Action. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Python stompest tests do not work with newer releases,AMQ-6165,12938478,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,cshannon,iweiss,iweiss,11/Feb/16 10:40,12/Feb/16 16:47,14/Jul/23 05:44,12/Feb/16 16:47,5.13.0,,,,,,,,,5.14.0,,,,Test Cases,,,,,0,,,,,,"The {{listener.py}} from the {{stompest}} API Python example doesn't work with this error message:

{noformat}
Unhandled error in Deferred:


Traceback (most recent call last):
  File ""/Users/iweiss/homebrew/lib/python2.7/site-packages/twisted/internet/defer.py"", line 393, in callback
    self._startRunCallbacks(result)
  File ""/Users/iweiss/homebrew/lib/python2.7/site-packages/twisted/internet/defer.py"", line 501, in _startRunCallbacks
    self._runCallbacks()
  File ""/Users/iweiss/homebrew/lib/python2.7/site-packages/twisted/internet/defer.py"", line 588, in _runCallbacks
    current.result = callback(current.result, *args, **kw)
  File ""/Users/iweiss/homebrew/lib/python2.7/site-packages/twisted/internet/defer.py"", line 1184, in gotResult
    _inlineCallbacks(r, g, deferred)
--- <exception caught here> ---
  File ""/Users/iweiss/homebrew/lib/python2.7/site-packages/twisted/internet/defer.py"", line 1128, in _inlineCallbacks
    result = g.send(result)
  File ""listener.py"", line 45, in run
    client.subscribe(destination, self.handleFrame, headers={'ack': 'auto', 'id': 'required-for-STOMP-1.1'}, ack=False)
  File ""/Users/iweiss/homebrew/lib/python2.7/site-packages/stompest/util/__init__.py"", line 16, in __checkattr
    return f(self, *args, **kwargs)
  File ""/Users/iweiss/homebrew/lib/python2.7/site-packages/twisted/internet/defer.py"", line 1265, in unwindGenerator
    gen = f(*args, **kwargs)
exceptions.TypeError: subscribe() got an unexpected keyword argument 'ack'
{noformat}",Python 2.7,cshannon,githubbot,iweiss,jira-bot,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Patch,,,,,,,,,9223372036854775807,,,Fri Feb 12 16:47:34 UTC 2016,,,,,,,Patch Available,,,,"0|i2sptj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Feb/16 10:41;githubbot;GitHub user iweiss opened a pull request:

    https://github.com/apache/activemq/pull/168

    [AMQ-6165] Python stompest tests do not work with newer releases

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/iweiss/activemq-1 master

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/168.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #168
    
----
commit dcaf7cc0425c614e8e205a94dbf5e491efda05de
Author: Ingo Weiss <ingo@redhat.com>
Date:   2016-02-11T09:03:47Z

    Clarified and updated instructions

commit 009080fde8830ac832e34583b818d2600475f789
Author: Ingo Weiss <ingo@redhat.com>
Date:   2016-02-11T09:50:30Z

    Updated the example to match stompest API changes

----
;;;","12/Feb/16 16:46;jira-bot;Commit 3e4bf2df7526ac1693d6ec5f162ca9054bd2b61b in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=3e4bf2d ]

https://issues.apache.org/jira/browse/AMQ-6165

Merging Python Stomp example fixes

This closes #168
;;;","12/Feb/16 16:47;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/168
;;;","12/Feb/16 16:47;cshannon;Patch applied with thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
In-Memory JobScheduler handles cron repeats incorrectly,AMQ-6159,12936881,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,tabish,tabish,04/Feb/16 22:06,04/Feb/16 22:18,14/Jul/23 05:44,04/Feb/16 22:18,5.12.1,5.13.0,,,,,,,,5.13.2,5.14.0,,,Job Scheduler,,,,,0,,,,,,The cron entry is handled incorrectly when the rescheduling is done and an assigned repeat will be missed.  ,,jira-bot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Feb 04 22:18:33 UTC 2016,,,,,,,,,,,"0|i2sg73:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Feb/16 22:18;jira-bot;Commit 4782feb6a1f4a6a399ceacb315b1fc96d7ee904b in activemq's branch refs/heads/activemq-5.13.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=4782feb ]

https://issues.apache.org/jira/browse/AMQ-6159

Ensure proper repeat counts are scheduled.
(cherry picked from commit 386210fafe331630aded29f2af64b1ccdf161bf3)
;;;","04/Feb/16 22:18;jira-bot;Commit 386210fafe331630aded29f2af64b1ccdf161bf3 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=386210f ]

https://issues.apache.org/jira/browse/AMQ-6159

Ensure proper repeat counts are scheduled.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Computing pending message size for a durable subscription is very slow,AMQ-6158,12936744,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,04/Feb/16 14:35,04/Feb/16 15:28,14/Jul/23 05:44,04/Feb/16 15:25,5.13.0,,,,,,,,,5.13.2,5.14.0,,,Broker,KahaDB,,,,0,,,,,,"AMQ-5923 added a new feature to compute the pending message size for a durable subscription.  The problem is that the current algorithm used in KahaDB to iterate over the pending messages for a subscription runs in O(n^2) because it uses the wrong index (location index) to compute the size.

Now that AMQ-6097 has been resolved so that the order index contains size information for messages as well, we can rewrite the algorithm to be O\(n) which will make this run significantly faster for large pending message sizes (such as 100k messages, etc)",,cshannon,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5923,AMQ-6097,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Feb 04 15:25:37 UTC 2016,,,,,,,,,,,"0|i2sfcn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Feb/16 15:18;jira-bot;Commit 25ff5699f1fb7c73668d5da2eacb53ad2ef14289 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=25ff569 ]

https://issues.apache.org/jira/browse/AMQ-6158

Computing messageSize for a durable subscription in KahaDB now runs much
faster (n vs n^2) which is noticable when there are a large number of
pending messages for a durable subscription.
;;;","04/Feb/16 15:23;jira-bot;Commit 23e9ecaec1ddd6fe8948aed47aca4767fccc1b6e in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=23e9eca ]

https://issues.apache.org/jira/browse/AMQ-6158

Computing messageSize for a durable subscription in KahaDB now runs much
faster (n vs n^2) which is noticable when there are a large number of
pending messages for a durable subscription.

(cherry picked from commit 25ff5699f1fb7c73668d5da2eacb53ad2ef14289)
;;;","04/Feb/16 15:25;cshannon;Patch applied and the tests were tweaked a bit to make sure everything looks good.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KahaDB scheduler log files not being deleted,AMQ-6152,12935777,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,ryansenior,ryansenior,01/Feb/16 22:50,26/Apr/17 17:30,14/Jul/23 05:44,03/Feb/16 01:29,5.11.1,5.12.0,5.13.0,,,,,,,5.13.2,5.14.0,,,KahaDB,,,,,0,,,,,,"Something is holding onto KahaDB scheduler log files. We have reports of up to 400GB of scheduler log files. I have tried to isolate the issue and create a minimal example (attached). In the troubleshooting I have done, the scheduler GC process is running, it's just deciding not to GC files that it should be. I have also found behavior inconsistent on the log files it does remove. 

The ran the attached example/test on 5.10.0, 5.11.1, 5.12.0 and 5.13.0. The test schedules 20 messages that are large enough to cause 4 log files to be created. It then consumes all 20 messages. When on 5.10.0, it behaves like I would expect, files 1-3 are GC'd and the 4th (the current log file) is left. On all other versions I've tried it always leaves the first 2 files, and sometimes will GC the 3rd.

Below is a snippet from the log of the scheduler process and why it's deciding not to GC these files:
{noformat}
2016-02-01 16:32:33,327 DEBUG [main] [o.a.a.s.k.s.JobSchedulerStoreImpl] Job Scheduler Store Checkpoint started.
2016-02-01 16:32:33,338 TRACE [main] [o.a.a.s.k.s.JobSchedulerStoreImpl] Last update: 4:29447367, full gc candidates set: [1, 2, 3, 4]
2016-02-01 16:32:33,338 TRACE [main] [o.a.a.s.k.s.JobSchedulerStoreImpl] gc candidates after reference check: [1, 2, 3]
2016-02-01 16:32:33,338 TRACE [main] [o.a.a.s.k.s.JobSchedulerStoreImpl] A remove in log 1 has an add still in existance.
2016-02-01 16:32:33,339 TRACE [main] [o.a.a.s.k.s.JobSchedulerStoreImpl] A remove in log 2 has an add still in existance.
2016-02-01 16:32:33,339 TRACE [main] [o.a.a.s.k.s.JobSchedulerStoreImpl] A remove in log 3 has an add still in existance.
2016-02-01 16:32:33,339 TRACE [main] [o.a.a.s.k.s.JobSchedulerStoreImpl] gc candidates after removals check: []
2016-02-01 16:32:33,339 DEBUG [main] [o.a.a.s.k.s.JobSchedulerStoreImpl] Job Scheduler Store Checkpoint complete.
2016-02-01 16:32:33,727 INFO  [main] [o.a.a.s.k.s.JobSchedulerStoreImpl] JobSchedulerStore: test-mq/localhost/scheduler stopped.
{noformat}

This issue was originally reported in the Open Source PuppetDB project, ticket [here|https://tickets.puppetlabs.com/browse/PDB-1411].
","Linux (issue reported on several versions)
OpenJDK 1.8.0_72",jira-bot,lbrozovsky,ryansenior,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Feb/16 22:51;ryansenior;BasicSchedulerTest.java;https://issues.apache.org/jira/secure/attachment/12785616/BasicSchedulerTest.java",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Apr 26 17:30:49 UTC 2017,,,,,,,,,,,"0|i2s9ev:",9223372036854775807,Regression,,,,,,,,,,,,,,,,,,,,"03/Feb/16 01:28;jira-bot;Commit 8c4b5f485d64caec97b0abe2b721d47bc19bfba1 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=8c4b5f4 ]

https://issues.apache.org/jira/browse/AMQ-6152

Ensure that when add / remove commands are colocated they don't prevent
the log from being GC'd once it is unreferenced.  ;;;","03/Feb/16 01:30;jira-bot;Commit 04b191ceb48637fc12cb02a01cf0bb23f081d84a in activemq's branch refs/heads/activemq-5.13.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=04b191c ]

https://issues.apache.org/jira/browse/AMQ-6152

Ensure that when add / remove commands are colocated they don't prevent
the log from being GC'd once it is unreferenced.
(cherry picked from commit 8c4b5f485d64caec97b0abe2b721d47bc19bfba1)
;;;","08/Mar/16 18:59;ryansenior;[~tabish121] Was this included in the 5.13.2 release? I don't see it listed in the release notes [here|https://issues.apache.org/jira/secure/ReleaseNote.jspa?projectId=12311210&version=12334251];;;","08/Mar/16 19:24;tabish;That's because that is the 5.13.1 release notes, see it on 5.13.2 notes here: https://issues.apache.org/jira/secure/ReleaseNote.jspa?projectId=12311210&version=12334774;;;","08/Mar/16 20:18;ryansenior;Great! for what it's worth, the link on the release page [here|http://activemq.apache.org/activemq-5132-release.html] is pointing to the old one then.;;;","08/Mar/16 20:34;tabish;Fixed, should show up on the next site update.  Thanks for spotting that. ;;;","26/Apr/17 17:30;jira-bot;Commit de681b93757010d86f566ed148bfa5e60bd843e4 in activemq's branch refs/heads/activemq-5.11.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=de681b9 ]

https://issues.apache.org/jira/browse/AMQ-6152

Ensure that when add / remove commands are colocated they don't prevent
the log from being GC'd once it is unreferenced.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Redelivered messages bypass priority ordering,AMQ-6151,12935603,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,01/Feb/16 12:18,06/Apr/16 15:23,14/Jul/23 05:44,06/Apr/16 14:11,5.13.0,,,,,,,,,5.14.0,,,,Broker,,,,,0,priority,,,,,"messages prefetched and redispatched or messages redelivered are dispatched first to preserve queue order. However when message priority must be respected, priority must take precedence.
Both the relative priority of pending and redelivered needs to respect priority and the order of newly pages in w.r.t redelivered needs to respect priority.",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Apr 06 15:23:44 UTC 2016,,,,,,,,,,,"0|i2s8c7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Feb/16 12:46;jira-bot;Commit 5af5b59d3bf3c84098e55b6cb87631c061990666 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=5af5b59 ]

https://issues.apache.org/jira/browse/AMQ-6151 - respect prioritizeMessages for pending and redelivered messages
;;;","01/Feb/16 12:47;gtully;newly paged in and pending messages are merged prior to dispatch when prioritizedMessage support is enabled for a destination;;;","02/Feb/16 16:21;jira-bot;Commit ce604fba78a3108123ca5c1713d01e168385d7ba in activemq's branch refs/heads/activemq-5.13.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=ce604fb ]

https://issues.apache.org/jira/browse/AMQ-6151 - respect prioritizeMessages for pending and redelivered messages

(cherry picked from commit 5af5b59d3bf3c84098e55b6cb87631c061990666)
;;;","06/Apr/16 13:48;gtully;Within a priority, dispatch order after prefetch needs to be retained.
Having a single merged list breaks this.
Redeliveries still need to be separate, they need to be combined for dispatch or iteration.;;;","06/Apr/16 14:10;jira-bot;Commit 2a8218a9a8cfa74e1049249481f601e042f33358 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=2a8218a ]

https://issues.apache.org/jira/browse/AMQ-6151 - retain list for redeliveries and combine for dispatch/iteration such that redeliveries retain per priority order after prefetch
;;;","06/Apr/16 15:23;jira-bot;Commit 6c79298541541526fedc6a0580c1b487d505212e in activemq's branch refs/heads/activemq-5.13.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=6c79298 ]

https://issues.apache.org/jira/browse/AMQ-6151 - retain list for redeliveries and combine for dispatch/iteration such that redeliveries retain per priority order after prefetch

(cherry picked from commit 2a8218a9a8cfa74e1049249481f601e042f33358)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Found (and fixed) 3 instances of impossible casts in the activemq code,AMQ-6150,12935165,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,cshannon,mbreslow,mbreslow,29/Jan/16 16:07,01/Feb/16 13:10,14/Jul/23 05:44,01/Feb/16 13:10,5.13.0,,,,,,,,,5.13.1,5.14.0,,,Broker,,,,,0,,,,,,Running static analysis on activemq I was able to identify 3 instances of impossible casts in the code. Attaching patch files to fix.,,cshannon,githubbot,jira-bot,mbreslow,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Jan/16 16:07;mbreslow;0001-Fix-Impossible-Cast-issues-in-MemoryTopicSub.patch;https://issues.apache.org/jira/secure/attachment/12785176/0001-Fix-Impossible-Cast-issues-in-MemoryTopicSub.patch","29/Jan/16 16:07;mbreslow;0002-Removed-2-conditions-from-ServerSessionPoolImpl-that.patch;https://issues.apache.org/jira/secure/attachment/12785177/0002-Removed-2-conditions-from-ServerSessionPoolImpl-that.patch","29/Jan/16 16:07;mbreslow;0003-Remove-impossible-cast-in-MemoryMessageStore.patch;https://issues.apache.org/jira/secure/attachment/12785178/0003-Remove-impossible-cast-in-MemoryMessageStore.patch",,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Patch,,,,,,,,,9223372036854775807,,,Mon Feb 01 13:10:12 UTC 2016,,,,,,,Patch Available,,,,"0|i2s5mv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/Jan/16 16:13;githubbot;GitHub user mbreslow opened a pull request:

    https://github.com/apache/activemq/pull/166

    Fix AMQ-6150 (Found 3 instances of impossible casts in the activemq code)

    Running static analysis on activemq I was able to identify 3 instances of impossible casts in the code. This pull request resolves them.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/DevFactory/activemq AMQ-6150-fix-impossible-cast-issues

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/166.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #166
    
----
commit 364e10d40569042595ec27ae710c2fd687fa2746
Author: Marc Breslow <marc.breslow@devfactory.com>
Date:   2016-01-28T21:39:29Z

    Fix Impossible Cast issues in MemoryTopicSub:
    - recoverSubscription()
    -- map is defined as LinkedHashMap<MessageId, Message>
    -- msg is defined as <map> entry.getValue() so must be a Message
    -- condition if (msg.getClass() == MessageId.class) could never be true
    -- no need to cast at all when using generics
    
    - recoverNextMessages()
    -- basically same code copy/pasted so same fix

commit 61f951d0c811b8c9dcde306fa7843aadce70d199
Author: Marc Breslow <marc.breslow@devfactory.com>
Date:   2016-01-29T15:51:18Z

    Removed 2 conditions from ServerSessionPoolImpl that would result in impossible casts. Conditions removed were trying to cast ActiveMQQueueSession and ActiveMQTopicSession to ActiveMQSession which is illegal.
    
    Since it isn't obvious what to do if you get an ActiveMQQueueSession or ActiveMQTopicSession from getServerSession() I make it fall back to the else condition which raises an async exception. This is better than getting a ClassCastException at runtime.

commit f177a52c62336115dc3df7af0694851046ae670c
Author: Marc Breslow <marc.breslow@devfactory.com>
Date:   2016-01-29T16:00:31Z

    Remove impossible cast in MemoryMessageStore

commit 509fe1ce8f3e1a6b5b64be4a027487e9c11737a6
Author: Marc Breslow <marc.breslow@devfactory.com>
Date:   2016-01-29T16:11:30Z

    Merge branch 'master' into AMQ-6150-fix-impossible-cast-issues

----
;;;","01/Feb/16 13:05;jira-bot;Commit 9361bc6a0f7219bfb8ba963bac8ec413fd1ebb58 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=9361bc6 ]

https://issues.apache.org/jira/browse/AMQ-6150

merging patch to fix casting issues

Thanks for Marc Breslow for the patch

This closes #166
;;;","01/Feb/16 13:05;jira-bot;Commit 161730fda2a15c41a3f620a476ba49f841b87545 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=161730f ]

https://issues.apache.org/jira/browse/AMQ-6150

code cleanup
;;;","01/Feb/16 13:05;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/166
;;;","01/Feb/16 13:08;jira-bot;Commit f514b157138886419712f04726f96e5bb523c5cb in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=f514b15 ]

https://issues.apache.org/jira/browse/AMQ-6150

code cleanup

(cherry picked from commit 161730fda2a15c41a3f620a476ba49f841b87545)
;;;","01/Feb/16 13:10;cshannon;Patch applied with thanks. For the ServerSessionPoolImpl class, it can only contain an ActiveMQSession, so deleting the else if checks for ActiveMQQueueSession and ActiveMQTopicSession is the right fix.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"When use LDAP auth, Activemq should not always connect to ldap service to do authentication",AMQ-6148,12934874,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,jbonofre,alt_alt,alt_alt,28/Jan/16 18:33,19/Oct/22 04:02,14/Jul/23 05:44,19/Oct/22 04:02,5.11.1,,,,,,,,,5.16.6,5.17.3,5.18.0,,,,,,,1,,,,,,"I am using LDAP service to do authentication for ActiveMQ, and I found everytime ActiveMQ servers try to establish a connection between ActiveMQ client, the ActiveMQ server will create a connection to LDAP server to do authentication. That's is not good, think about there are thousands of ActiveMQ clients are trying to connect to ActiveMQ servers, the ActiveMQ servers will need to create thousands of connections to LDAP servers. And moreover it is not reliable as well because the connection between LDAP servers and ActiveMQ servers could be broken sometimes. We need something similar as Cached LDAP Authorization Module. It is more reasonable that the ActiveMQ will cache the ldap account credential in local memory and refresh in certain interval.
",,alt_alt,gtully,jbertram,jira-bot,tabish,,,,,,,,,,,,,,,,,,,,,"Dm-Chebotarskyi opened a new pull request #673:
URL: https://github.com/apache/activemq/pull/673


   ### Description
   Re-using LDAP context for authentication.
   
   ### Testing
   Manual test authentication using LDAP `TBD`
   
   ### Issue
   https://issues.apache.org/jira/browse/AMQ-6148


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jun/21 23:10;githubbot;600","epytka commented on a change in pull request #673:
URL: https://github.com/apache/activemq/pull/673#discussion_r658347684



##########
File path: activemq-jaas/src/main/java/org/apache/activemq/jaas/LDAPLoginModule.java
##########
@@ -490,45 +482,47 @@ protected boolean bindUser(DirContext context, String dn, String password) throw
         return values;
     }
 
-    protected DirContext open() throws NamingException {
-        try {
-            Hashtable<String, String> env = new Hashtable<String, String>();
-            env.put(Context.INITIAL_CONTEXT_FACTORY, getLDAPPropertyValue(INITIAL_CONTEXT_FACTORY));
-            if (isLoginPropertySet(CONNECTION_USERNAME)) {
-                env.put(Context.SECURITY_PRINCIPAL, getLDAPPropertyValue(CONNECTION_USERNAME));
-            } else {
-                throw new NamingException(""Empty username is not allowed"");
-            }
+    protected void openContext() throws NamingException {
+        if (context == null) {

Review comment:
       Just to be consistent with `deleteContext` you could change to: 
   
   ```
   if (context != null) {
     return;
   }
   ```




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jun/21 23:17;githubbot;600","Dm-Chebotarskyi closed pull request #673:
URL: https://github.com/apache/activemq/pull/673


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jun/21 23:19;githubbot;600","Dm-Chebotarskyi opened a new pull request #699:
URL: https://github.com/apache/activemq/pull/699


   ### Description
   Re-using LDAP context for authentication. The context is created only once and re-used each time ActiveMQ server established connection with ActiveMQ clients.
   Refactoring some code in LDAPLoginModule.java
   This PR is based on fix introduced to Artemis: https://github.com/apache/activemq-artemis/commit/f3a8619d7eeabded75f3725f2e77af267e8cb450#diff-706fd9b54d2aed5a0ea5d28fa7c70f7ee733672f7e91d847137517e3b147d716
   
   ### Testing
   Manual test authentication using LDAP
   
   ### Issue
   https://issues.apache.org/jira/browse/AMQ-6148


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Aug/21 20:40;githubbot;600","mattrpav commented on PR #699:
URL: https://github.com/apache/activemq/pull/699#issuecomment-1223298292

   FWIW;22/Aug/22 23:05;githubbot;600","Dm-Chebotarskyi commented on PR #699:
URL: https://github.com/apache/activemq/pull/699#issuecomment-1223411074

   > Please rebase, and take a look at the comments about moving some clean-up tasks to finally {} blocks instead to prevent leaks or deadlock.
   
   Hey Matt, thanks for the quick review. 
   Could you please clarify what comments do you mean? I can't see any comments in the CR nor in the rebased code itself.


;23/Aug/22 01:34;githubbot;600","mattrpav commented on code in PR #699:
URL: https://github.com/apache/activemq/pull/699#discussion_r951988296


##########
activemq-jaas/src/main/java/org/apache/activemq/jaas/LDAPLoginModule.java:
##########
@@ -320,22 +316,17 @@ protected boolean authenticate(String username, String password) throws LoginExc
                 throw new FailedLoginException(""Password does not match for user: "" + username);
             }
         } catch (CommunicationException e) {
+            closeContext();

Review Comment:
   Can all the closeContext() calls be moved to a finally {}



##########
activemq-jaas/src/main/java/org/apache/activemq/jaas/LDAPLoginModule.java:
##########
@@ -187,9 +183,13 @@ public boolean abort() throws LoginException {
         return true;
     }
 
-    protected void close(DirContext context) {
+    protected void closeContext() {
+        if (context == null) {
+            return;
+        }
         try {
             context.close();
+            context = null;

Review Comment:
   The context = null assignment should probably be in a finally {} 



;24/Aug/22 16:40;githubbot;600","Dm-Chebotarskyi commented on code in PR #699:
URL: https://github.com/apache/activemq/pull/699#discussion_r954141703


##########
activemq-jaas/src/main/java/org/apache/activemq/jaas/LDAPLoginModule.java:
##########
@@ -187,9 +183,13 @@ public boolean abort() throws LoginException {
         return true;
     }
 
-    protected void close(DirContext context) {
+    protected void closeContext() {
+        if (context == null) {
+            return;
+        }
         try {
             context.close();
+            context = null;

Review Comment:
   fixed



##########
activemq-jaas/src/main/java/org/apache/activemq/jaas/LDAPLoginModule.java:
##########
@@ -320,22 +316,17 @@ protected boolean authenticate(String username, String password) throws LoginExc
                 throw new FailedLoginException(""Password does not match for user: "" + username);
             }
         } catch (CommunicationException e) {
+            closeContext();

Review Comment:
   fixed



;24/Aug/22 18:20;githubbot;600","mattrpav commented on code in PR #699:
URL: https://github.com/apache/activemq/pull/699#discussion_r967355327


##########
activemq-jaas/src/main/java/org/apache/activemq/jaas/LDAPLoginModule.java:
##########
@@ -175,7 +171,7 @@ public boolean commit() throws LoginException {
     public boolean abort() throws LoginException {
         if (!succeeded) {
             return false;
-        } else if (succeeded && commitSucceeded) {

Review Comment:
   Why is the logic changing here?



##########
activemq-jaas/src/main/java/org/apache/activemq/jaas/LDAPLoginModule.java:
##########
@@ -450,7 +440,6 @@ protected boolean bindUser(DirContext context, String dn, String password) throw
                 log.debug(""User "" + dn + "" successfully bound."");
             }
         } catch (AuthenticationException e) {
-            isValid = false;

Review Comment:
   Why is this being removed?



;09/Sep/22 18:23;githubbot;600","Dm-Chebotarskyi commented on code in PR #699:
URL: https://github.com/apache/activemq/pull/699#discussion_r967360453


##########
activemq-jaas/src/main/java/org/apache/activemq/jaas/LDAPLoginModule.java:
##########
@@ -175,7 +171,7 @@ public boolean commit() throws LoginException {
     public boolean abort() throws LoginException {
         if (!succeeded) {
             return false;
-        } else if (succeeded && commitSucceeded) {

Review Comment:
   succeeded is alway `true` in line 174. Logic hasn't been changed



;09/Sep/22 18:29;githubbot;600","Dm-Chebotarskyi commented on code in PR #699:
URL: https://github.com/apache/activemq/pull/699#discussion_r967360453


##########
activemq-jaas/src/main/java/org/apache/activemq/jaas/LDAPLoginModule.java:
##########
@@ -175,7 +171,7 @@ public boolean commit() throws LoginException {
     public boolean abort() throws LoginException {
         if (!succeeded) {
             return false;
-        } else if (succeeded && commitSucceeded) {

Review Comment:
   Variable `succeeded` is alway `true` in line 174. Logic hasn't been changed



;09/Sep/22 18:29;githubbot;600","Dm-Chebotarskyi commented on code in PR #699:
URL: https://github.com/apache/activemq/pull/699#discussion_r967361744


##########
activemq-jaas/src/main/java/org/apache/activemq/jaas/LDAPLoginModule.java:
##########
@@ -450,7 +440,6 @@ protected boolean bindUser(DirContext context, String dn, String password) throw
                 log.debug(""User "" + dn + "" successfully bound."");
             }
         } catch (AuthenticationException e) {
-            isValid = false;

Review Comment:
   Because it is `false` here and this assignment is not needed.
   Logic hasn't been changed



;09/Sep/22 18:30;githubbot;600","Dm-Chebotarskyi commented on code in PR #699:
URL: https://github.com/apache/activemq/pull/699#discussion_r967361744


##########
activemq-jaas/src/main/java/org/apache/activemq/jaas/LDAPLoginModule.java:
##########
@@ -450,7 +440,6 @@ protected boolean bindUser(DirContext context, String dn, String password) throw
                 log.debug(""User "" + dn + "" successfully bound."");
             }
         } catch (AuthenticationException e) {
-            isValid = false;

Review Comment:
   Because `isValid` variable is `false` here and this assignment is not needed.
   Logic hasn't been changed



;09/Sep/22 18:31;githubbot;600","jbonofre commented on code in PR #699:
URL: https://github.com/apache/activemq/pull/699#discussion_r995941852


##########
activemq-jaas/src/main/java/org/apache/activemq/jaas/LDAPLoginModule.java:
##########
@@ -175,7 +171,7 @@ public boolean commit() throws LoginException {
     public boolean abort() throws LoginException {
         if (!succeeded) {
             return false;
-        } else if (succeeded && commitSucceeded) {

Review Comment:
   I agree with @Dm-Chebotarskyi : as we already test `succeeded` at line 172, no need to test again.



##########
activemq-jaas/src/main/java/org/apache/activemq/jaas/LDAPLoginModule.java:
##########
@@ -450,7 +440,6 @@ protected boolean bindUser(DirContext context, String dn, String password) throw
                 log.debug(""User "" + dn + "" successfully bound."");
             }
         } catch (AuthenticationException e) {
-            isValid = false;

Review Comment:
   I agree with @Dm-Chebotarskyi : `isValid` is already set to `false` at line 429.



;14/Oct/22 16:35;githubbot;600","jbonofre commented on PR #699:
URL: https://github.com/apache/activemq/pull/699#issuecomment-1279229450

   @Dm-Chebotarskyi do you mind to squash the 9 commits in one and rebase ? If you prefer, I can do it myself and manually merge. Thoughts ?


;14/Oct/22 16:36;githubbot;600","Dm-Chebotarskyi commented on PR #699:
URL: https://github.com/apache/activemq/pull/699#issuecomment-1279236338

   Thanks for the review @jbonofre .
   I will squash and update the PR shortly 


;14/Oct/22 16:43;githubbot;600","jbonofre commented on PR #699:
URL: https://github.com/apache/activemq/pull/699#issuecomment-1279238900

   @Dm-Chebotarskyi awesome ! Thank you so much ! Let me know if I can help on anything.


;14/Oct/22 16:45;githubbot;600","Dm-Chebotarskyi closed pull request #699: AMQ-6148 Reusing LDAP context to avoid creating new connections
URL: https://github.com/apache/activemq/pull/699


;14/Oct/22 17:50;githubbot;600","Dm-Chebotarskyi opened a new pull request, #699:
URL: https://github.com/apache/activemq/pull/699

   ### Description
   Re-using LDAP context for authentication. The context is created only once and re-used each time ActiveMQ server established connection with ActiveMQ clients.
   Refactoring some code in LDAPLoginModule.java
   This PR is based on fix introduced to Artemis: https://github.com/apache/activemq-artemis/commit/f3a8619d7eeabded75f3725f2e77af267e8cb450#diff-706fd9b54d2aed5a0ea5d28fa7c70f7ee733672f7e91d847137517e3b147d716
   
   ### Testing
   Manual test authentication using LDAP
   
   ### Issue
   https://issues.apache.org/jira/browse/AMQ-6148


;14/Oct/22 18:01;githubbot;600","jbonofre merged PR #699:
URL: https://github.com/apache/activemq/pull/699


;19/Oct/22 03:59;githubbot;600",,0,12000,,,0,12000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Oct 19 04:02:14 UTC 2022,,,,,,,,,,,"0|i2s3uf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/Jan/16 02:45;jbertram;For what it's worth, [Apache ActiveMQ Artemis|http://activemq.apache.org/artemis/] (a sub-project of Apache ActiveMQ) employs a caching mechanism so that whatever login module is being used isn't called *every* time an authentication is performed.  It's controlled by a simple time-out.  You can see the details in [org.apache.activemq.artemis.core.security.impl.SecurityStoreImpl|https://github.com/apache/activemq-artemis/blob/master/artemis-server/src/main/java/org/apache/activemq/artemis/core/security/impl/SecurityStoreImpl.java];;;","01/Feb/16 20:29;tabish;Use the cached LDAP Authorization Map: http://activemq.apache.org/cached-ldap-authorization-module.html;;;","03/Feb/16 22:39;alt_alt;Hi Timothy,
I am talking about AUTHENTICATION, not authorization. The cached LDAP Authorization Map does NOT help at all. 
In our case, we have hundreds of application servers, and we use pooled connection factory with max connection number of 5. The ActiveMQ server has to create more than a thousand connections to LDAP service when it is trying to establish the huge number of connections from application servers. That does not make sense and ldap server could deny access due to the huge number of connections to it. Think about if we have 5 ActiveMQ servers, each server has to create 1000 connections to LDAP server. sooner or later, the ldap server will be exhausted.

This is an real ISSUE when we are trying to adopt ActiveMQ for big application clusters.

Thanks;;;","03/Feb/16 22:43;alt_alt;Hi Justin,
Is there any release schedule for this project? We are trying to adopt ActiveMQ as our message bus for our application servers, but since we use ldap authentication and authorization, we soon found the ldap service itself will become a bottleneck due to huge requirements for establishing connections from ActiveMQ servers. 

Thanks;;;","03/Feb/16 23:02;jbertram;[~alt_alt], the Apache ActiveMQ Artemis broker has had [3 releases already|http://activemq.apache.org/artemis/download.html].;;;","04/Feb/16 23:41;alt_alt;Hi Justin,
It looks like another project instead of a plugin in ActiveMQ, have you considered to fix this issue in the future release of ActiveMQ, it is really important for us to adopt ActiveMQ for huge clusters of application servers.

Thanks;;;","05/Feb/16 01:28;jbertram;That's correct.  ActiveMQ Artemis is not a plugin to ActiveMQ but a broker in and of itself.  Artemis supports clustering.  Most of the same kinds of clustering features that ActiveMQ 5.x supports are also supported in Artemis so if you want a huge cluster then you can certainly have it with Artemis.;;;","08/Feb/16 23:41;alt_alt;Hi Justin,
Thanks for your reply, but the problem is that we already setup ActiveMQ as our message bus and it is already online for production now. It should be no easy for us to replace it with another one. So we still hope the fix coming in the future release of ActiveMQ. Is that possible?

Thanks;;;","09/Feb/16 12:25;gtully;looks like we could pull back the fix from artemis for this. I don't see any reason why we cannot cache the ldap context and reuse it for subsequent logins. There may even be a way to pool ldap connections.;;;","10/Feb/16 18:48;alt_alt;Cool! Thanks Gary!;;;","19/Oct/22 03:59;jira-bot;Commit 610b87aed8ac0c98a97af5637750b84fe0b15e4a in activemq's branch refs/heads/main from Dmytro Chebotarskyi
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=610b87aed ]

AMQ-6148 re-using LDAP context for authentication
;;;","19/Oct/22 03:59;jira-bot;Commit e2fcae8bab73437a98d15ea5ca10c65802a185c9 in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=e2fcae8ba ]

Merge pull request #699 from Dm-Chebotarskyi/main

AMQ-6148 Reusing LDAP context to avoid creating new connections;;;","19/Oct/22 04:00;jira-bot;Commit ba322251144f89d0049fdbf7fbe90fc2de395f5d in activemq's branch refs/heads/activemq-5.17.x from Dmytro Chebotarskyi
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=ba3222511 ]

AMQ-6148 re-using LDAP context for authentication

(cherry picked from commit 610b87aed8ac0c98a97af5637750b84fe0b15e4a)
;;;","19/Oct/22 04:02;jira-bot;Commit 08de052f578936c5dad5549a2905ac8bfd9859dc in activemq's branch refs/heads/activemq-5.16.x from Dmytro Chebotarskyi
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=08de052f5 ]

AMQ-6148 re-using LDAP context for authentication

(cherry picked from commit 610b87aed8ac0c98a97af5637750b84fe0b15e4a)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Use proper JSTL tags in the WebConsole,AMQ-6146,12934817,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,28/Jan/16 14:04,03/Feb/16 14:40,14/Jul/23 05:44,28/Jan/16 14:07,5.13.0,,,,,,,,,5.11.4,5.12.3,5.13.1,5.14.0,Web Console,,,,,0,,,,,,Some places in the WebConsole are not using the correct JSTL tags to print content in all cases.  We should look at all the JSP pages and make sure correct tags are used.,,cshannon,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Feb 03 14:40:34 UTC 2016,,,,,,,,,,,"0|i2s3hr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Jan/16 14:06;jira-bot;Commit d0f5c277851f260247c256c1d6cf56a31e744d31 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=d0f5c27 ]

https://issues.apache.org/jira/browse/AMQ-6146

Fixing JSTL tags in the Webconsole
;;;","28/Jan/16 14:06;jira-bot;Commit e24e285c9919a1ed7e415d45780d40a3136c30f9 in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e24e285 ]

https://issues.apache.org/jira/browse/AMQ-6146

Fixing JSTL tags in the Webconsole

(cherry picked from commit d0f5c277851f260247c256c1d6cf56a31e744d31)
;;;","03/Feb/16 14:40;jira-bot;Commit 30ad62947329c696347067ea963eab865e0ec5e5 in activemq's branch refs/heads/activemq-5.12.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=30ad629 ]

https://issues.apache.org/jira/browse/AMQ-6146

Fixing JSTL tags in the Webconsole

(cherry picked from commit d0f5c277851f260247c256c1d6cf56a31e744d31)
;;;","03/Feb/16 14:40;jira-bot;Commit 09d7599bd1b573b7bcb77df1f4ce65fe6d7754d3 in activemq's branch refs/heads/activemq-5.11.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=09d7599 ]

https://issues.apache.org/jira/browse/AMQ-6146

Fixing JSTL tags in the Webconsole

(cherry picked from commit d0f5c277851f260247c256c1d6cf56a31e744d31)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Upgrade dependencies in 5.13.0,AMQ-6143,12933980,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,kgoerlitz,kgoerlitz,25/Jan/16 23:39,27/Jan/16 21:07,14/Jul/23 05:44,27/Jan/16 21:07,5.13.0,,,,,,,,,5.13.1,5.14.0,,,Distribution,,,,,0,,,,,,Please upgrade org.springframework to at least version 4.1.9 (preferably version 4.2.4) and org.apache.taglibs to version 1.2.3 or 1.2.5.,,cshannon,jira-bot,kgoerlitz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6104,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jan 27 21:07:04 UTC 2016,,,,,,,,,,,"0|i2rybr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Jan/16 21:05;jira-bot;Commit c6f470266e88b01db6286e72546dcf396919566a in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=c6f4702 ]

https://issues.apache.org/jira/browse/AMQ-6143

Updating to taglibs 1.2.3
;;;","27/Jan/16 21:06;jira-bot;Commit 0702888830bb2e013870ce3aa2d34c613f20dde8 in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=0702888 ]

https://issues.apache.org/jira/browse/AMQ-6143

Updating to taglibs 1.2.3

(cherry picked from commit c6f470266e88b01db6286e72546dcf396919566a)
;;;","27/Jan/16 21:07;cshannon;Updating to taglibs 1.2.3.  AMQ-6104 already updated Spring.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQBytesMessage decompress throws DataFormatException incorrect header check,AMQ-6142,12933814,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,tagliola,tagliola,25/Jan/16 14:01,11/Apr/16 13:35,14/Jul/23 05:44,01/Feb/16 17:44,5.10.2,5.11.3,5.12.1,5.13.0,,,,,,5.13.1,5.14.0,,,Broker,,,,,0,,,,,,"In our environment we use an embedded broker. On one topic where compression is enabled, the server is also listening in on the messages. From ActiveMQ 5.10.0 up to 5.13.0, we encounter DataFormatException: incorrect header check exceptions on the tcp clients due to corruption of the payload. Attached are a test server and client. At some point, the client will exit due to mentioned exception. Increase chances by running multiple clients. This scenario works with 5.8.0 and 5.9.1.

If the server has multiple consumers on the same topic, they will encounter corruption as well, but this has other side-effects.",,cshannon,gtully,jira-bot,tagliola,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4887,,,,,,,,,,,,,,"25/Jan/16 14:03;tagliola;Client.java;https://issues.apache.org/jira/secure/attachment/12784155/Client.java","25/Jan/16 14:03;tagliola;MessageListener.java;https://issues.apache.org/jira/secure/attachment/12784156/MessageListener.java","25/Jan/16 14:03;tagliola;Server.java;https://issues.apache.org/jira/secure/attachment/12784157/Server.java","06/Apr/16 11:35;gtully;amq-6142.diff;https://issues.apache.org/jira/secure/attachment/12797284/amq-6142.diff","25/Jan/16 14:03;tagliola;pom.xml;https://issues.apache.org/jira/secure/attachment/12784158/pom.xml",,,,,5.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Apr 11 13:35:29 UTC 2016,,,,,,,,,,,"0|i2rxbb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Jan/16 14:01;tagliola;Stack trace:
{noformat}
javax.jms.JMSException: java.util.zip.DataFormatException: incorrect header check
	at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:72)
	at org.apache.activemq.command.ActiveMQBytesMessage.initializeReading(ActiveMQBytesMessage.java:884)
	at org.apache.activemq.command.ActiveMQBytesMessage.getBodyLength(ActiveMQBytesMessage.java:198)
	at com.foo.bar.activemqtest.MessageListener.onMessage(MessageListener.java:11)
	at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:1393)
	at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:131)
	at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:202)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:133)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:48)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.io.IOException: java.util.zip.DataFormatException: incorrect header check
	at org.apache.activemq.command.ActiveMQBytesMessage.decompress(ActiveMQBytesMessage.java:902)
	at org.apache.activemq.command.ActiveMQBytesMessage.initializeReading(ActiveMQBytesMessage.java:876)
	... 10 more
Caused by: java.util.zip.DataFormatException: incorrect header check
	at java.util.zip.Inflater.inflateBytes(Native Method)
	at java.util.zip.Inflater.inflate(Inflater.java:259)
	at java.util.zip.Inflater.inflate(Inflater.java:280)
	at org.apache.activemq.command.ActiveMQBytesMessage.decompress(ActiveMQBytesMessage.java:898)
	... 11 more
{noformat};;;","25/Jan/16 14:03;tagliola;Prior thread on activemq-users: http://activemq.2283324.n4.nabble.com/ActiveMQBytesMessage-decompress-throws-DataFormatException-incorrect-header-check-tp4706292.html;;;","28/Jan/16 15:56;tagliola;{noformat}
package com.foo.bar.activemqtest;

import javax.jms.*;
import javax.jms.Connection;
import javax.jms.Message;

import org.apache.activemq.*;
import org.apache.activemq.broker.*;
import org.junit.*;

public class ActiveMQBytesMessageCorruptionTest
{
    private volatile AssertionError assertionError;

    @Test
    public void bytesMessageCorruption() throws Exception
    {
        BrokerService brokerService = new BrokerService();
        brokerService.setBrokerName(""embedded"");
        brokerService.setPersistent(false);
        brokerService.start();

        ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory(""vm://embedded"");
        connectionFactory.setUseCompression(true);

        Connection connection = connectionFactory.createConnection();
        connection.start();

        for (int i = 0; i < 10; i++)
        {
            Session mySession = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
            mySession.createConsumer(mySession.createTopic(""foo.bar"")).setMessageListener(this::onMessage);
        }

        Session producerSession = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
        MessageProducer messageProducer = producerSession.createProducer(producerSession.createTopic(""foo.bar""));

        for (int i = 0; i < 1000; i++)
        {
            BytesMessage bytesMessage = producerSession.createBytesMessage();
            bytesMessage.writeBytes(new byte[0]);
            messageProducer.send(bytesMessage);

            if (assertionError != null)
            {
                throw assertionError;
            }
        }

    }

    private void onMessage(Message message)
    {
        try
        {
            ((BytesMessage) message).getBodyLength();
        }
        catch (JMSException | Error e)
        {
            assertionError = new AssertionError(""Exception in thread"", e);
        }
    }
}
{noformat}
Unit test will fail most of the time with:
{noformat}
java.lang.AssertionError: Exception in thread
	at com.foo.bar.activemqtest.ActiveMQBytesMessageCorruptionTest.onMessage(ActiveMQBytesMessageCorruptionTest.java:60)
	at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:1393)
	at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:131)
	at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:202)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:133)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:48)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.OutOfMemoryError: Java heap space
	at org.apache.activemq.command.ActiveMQBytesMessage.decompress(ActiveMQBytesMessage.java:897)
	at org.apache.activemq.command.ActiveMQBytesMessage.initializeReading(ActiveMQBytesMessage.java:876)
	at org.apache.activemq.command.ActiveMQBytesMessage.getBodyLength(ActiveMQBytesMessage.java:198)
	at com.foo.bar.activemqtest.ActiveMQBytesMessageCorruptionTest.onMessage(ActiveMQBytesMessageCorruptionTest.java:56)
	at com.foo.bar.activemqtest.ActiveMQBytesMessageCorruptionTest$$Lambda$3/665188480.onMessage(Unknown Source)
	... 8 more
{noformat}
;;;","01/Feb/16 17:37;jira-bot;Commit aaa2fdd5418098b98595f9f85be8248da32aff7b in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=aaa2fdd ]

https://issues.apache.org/jira/browse/AMQ-6142

Fixing a race condition that exists in the decompress method of
ActiveMQBytesMessage that can cause an invalid length to be read.

(cherry picked from commit 5f7a81f9280fb65b8a3c1f85c4570a18d87fafd9)
;;;","01/Feb/16 17:44;cshannon;Thanks for the test cases.  There was a race condition in the decompress method of ActiveMQBytesMessage.  I applied a fix and include a variation of one of your tests to make sure to catch this problem if it comes back in the future.;;;","06/Apr/16 11:34;gtully;[~cshannon] sorry for the late input. I was peeking at this change and some of the sync from https://issues.apache.org/jira/browse/AMQ-6218 etc.

Message intentionally has no sync, the intent is that copy is called if mods will be made. There is one before dispatch to a consumer that should sort this issue.
However, the copy seems broken.
For this bytesMessage case, it looks like the root cause is in message.copy where the content ByteSequence is referenced rather than copied in error.

For AMQ-6218 - if all of those issues relate to concurrentStoreAndDispatch, it may be that we need to take a message.copy for the async store case.

Let me attach a diff to see if this makes sense to you.;;;","06/Apr/16 11:35;gtully;amq-6142.diff - file attach. Show the problem with message.copy that seems to be the root cause cc [~cshannon];;;","06/Apr/16 12:10;cshannon;[~gtully], This diff makes sense to fix the copy which is the root of the issue.  My commit had a test so if this diff is applied as a new commit CI can check that everything is still good.

For AMQ-6218, yes the entire problem comes down to concurrentStoreAndDispatch.  I talked to [~tabish121] about it a little and the problem shows up when using the VM transport because of the same message reference but two different threads accessing it.  There are other messages that could be fixed but the text message is the main issue because of the fix from AMQ-5857 where we clear out the text after converting to bytes so that the data isn't stored twice but only counted once.  So you can get into this weird state where both bytes and text end up being null.   

Copying the message before doing the async store would fix this issue for sure and would allow the sync that I added to be backed out.  We could also back out the fix from AMQ-5857 as it was only applied to text messages (but other messages have the same issue i think) which would fix the issue as well.  I think that backing out the sync and copying the message before the async store makes the most sense but I didn't do that originally because I was concerned about the extra memory usage for large messages and for the memory usage counter to not take that into account.  But the copy is probably the right thing to do to prevent future problems with the async store case.;;;","06/Apr/16 13:39;cshannon;Also if we go the copy route we would need to take a look at the async listener that runs after completion.  I recently committed a fix to move the clearMarshalledState() call into the listener (if reduce memory footprint is on) and I think that might still need to run on the original message, not the copy since the copy should be GC's anyways after it's written.;;;","06/Apr/16 14:06;gtully;good point, but thinking some more, the copy may be problematic because the concurrentStore stuff is coordinated through state in the messageId which is also copied. Will need to do some more root cause analysis on the concurrentStoreAndDisptch cases.;;;","06/Apr/16 17:02;cshannon;[~gtully], Seems like this same issue reported in AMQ-6218 that caused me to add synchronization has also come up before in AMQ-2966.  What do you think about rolling back the fix I added from AMQ-5857 that clears out the text field after marshalling?  That was the start of all of these issues since state is now mutated and before it wasn't.  The downside is that the data would once again be stored twice leading to possible OOM issues, including for clients which is why originally AMQ-5857 was submitted.  So it would be nice to be able to clear it out but not if other concurrent issues keep popping up.

Also, on a related note having to do with changing message state during dispatch, as I was digging back through some of this stuff I was looking at the reduceMemoryFootPrint flag and wondering if it could be applied to topics.  I'm guessing it caused issues before so it wasn't applied (maybe with concurrent store and dispatch for topics) but it would be useful to be able to turn it on, especially if concurrent store and dispatch is off, which is the default.  ;;;","07/Apr/16 14:04;gtully;there is some more context in https://issues.apache.org/jira/browse/AMQ-2103;;;","07/Apr/16 16:04;gtully;[~cshannon] I think rolling back the sync is best, then thinking of mutation being ok on your own copy which implies maybe doing more copies and those not sharing mutable state. Client side there is typically a copy per consumer. 
Broker side there is a single copy of the message at the moment and the reduceMemoryFootPrint policy can control whacking the duplicate state on send/store for a queue. concurrentStoreAndDispatch muddies that a bit.
;;;","08/Apr/16 11:14;cshannon;Yep agreed, lets roll back the sync I added.  I think the Jira reported for AMQ-5857 was about client side and not the broker side (since reduceMemoryFootprint exists to clear the duplicate state, at least for queues).  I would say we either need to roll that commit back as well or maybe figure out a way so that the client can clear out the state but the broker won't clear it out until it is safe to do so.;;;","11/Apr/16 12:32;jira-bot;Commit e69c2cbad6611fa355bd9eb592f03bd3b8f90abb in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e69c2cb ]

https://issues.apache.org/jira/browse/AMQ-6142

Moving the bytes copy to the parent Message class to solve this this
issue for all message types as that is the root cause
;;;","11/Apr/16 12:33;jira-bot;Commit 20e84d63e045d3d26627e204c808677a8fe77dc4 in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=20e84d6 ]

https://issues.apache.org/jira/browse/AMQ-6142

Moving the bytes copy to the parent Message class to solve this this
issue for all message types as that is the root cause

(cherry picked from commit e69c2cbad6611fa355bd9eb592f03bd3b8f90abb)
;;;","11/Apr/16 12:39;cshannon;[~gtully], I applied your new patch as it makes sense to move the bytes copy to that root Message class.  I also rolled back the sync as we discussed. ;;;","11/Apr/16 12:43;gtully;[~cshannon] great. I recall many times thinking message needed some sync and then finding a missing copy or a copy in the wrong place :-);;;","11/Apr/16 13:31;cshannon;Yep, makes sense now :) I think what's left to do would be to call beforeMarshall on the message before async store to prevent the concurrent modifications on dispatch with the vm transport and also hopefully apply reduceMemoryFootprint flag for the topic case.  These can be done in new Jiras for a 5.14.0 release.;;;","11/Apr/16 13:35;gtully;agree;;;",,,,,,,,,,,,,,,,,,,,,
Special escape characters in LIKE selectors do not work as expected,AMQ-6137,12933367,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,22/Jan/16 15:26,22/Jan/16 15:39,14/Jul/23 05:44,22/Jan/16 15:39,5.13.0,,,,,,,,,5.14.0,,,,Selector,,,,,0,,,,,,"foo LIKE '%_%' ESCAPE '%'
should map to regexp:  {code}\\A_.*?{code}",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jan 22 15:39:57 UTC 2016,,,,,,,,,,,"0|i2rukn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Jan/16 15:31;jira-bot;Commit acbe31fcb5d84c49c948a8816fd3a7cf50b58620 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=acbe31f ]

https://issues.apache.org/jira/browse/AMQ-6137 - deal with 'special' escape chars in like selector expression
;;;","22/Jan/16 15:39;gtully;additional tests for using _ and % as escape characters in like expressions. A little unusual but valid;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Activemq client OSGi feature should support Spring 4.x,AMQ-6136,12933104,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,cshannon,cshannon,cshannon,21/Jan/16 16:09,01/Aug/16 16:37,14/Jul/23 05:44,01/Aug/16 16:37,5.13.0,,,,,,,,,5.14.0,,,,Broker,OSGi/Karaf,,,,2,,,,,,"The features-core.xml file in the activemq-karaf project currently lists a version for Spring as [3.2,4) but this should be [3.2,5) as ActiveMQ 5.13.0 upgraded to Spring 4.1.x",,cshannon,jira-bot,lichtin,soleger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6301,,,,,,,,,,,,,,,,,,,AMQ-5932,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Aug 01 16:37:32 UTC 2016,,,,,,,,,,,"0|i2rsyf:",9223372036854775807,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"21/Jan/16 16:11;jira-bot;Commit 4ee29c363fbcc754f69ebc57b45f84a549f7d130 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=4ee29c3 ]

https://issues.apache.org/jira/browse/AMQ-6136

Switching the version for Spring in features-core.xml to allow Spring
4.x versions.
;;;","21/Jan/16 16:11;jira-bot;Commit 957fb85786214e1817db98ca238d5444898ea077 in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=957fb85 ]

https://issues.apache.org/jira/browse/AMQ-6136

Switching the version for Spring in features-core.xml to allow Spring
4.x versions.

(cherry picked from commit 4ee29c363fbcc754f69ebc57b45f84a549f7d130)
;;;","29/Jan/16 14:53;cshannon;Unfortunately, it looks like this commit broke a couple of Karaf tests.  I believe the problem is that the Spring OSGi feature (spring dm) has an import defined with a version of less than Spring 4.  I think the only way to resolve this is to remove the dependency on Spring DM, which is now a dead project.  There is already a Jira for this here: AMQ-5932 and we should look at fixing this for a 5.14.0 release.;;;","29/Jan/16 14:58;jira-bot;Commit 7eb25ec50bd3af931c6ae876d9f7bef09385ba43 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=7eb25ec ]

Revert ""https://issues.apache.org/jira/browse/AMQ-6136""

This reverts commit 4ee29c363fbcc754f69ebc57b45f84a549f7d130.

We need to remove the dependency on Spring DM before doing this
;;;","29/Jan/16 14:59;jira-bot;Commit 0ebc7a4da819d4be2e6c2de6d8681c0dc3500781 in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=0ebc7a4 ]

Revert ""https://issues.apache.org/jira/browse/AMQ-6136""

This reverts commit 4ee29c363fbcc754f69ebc57b45f84a549f7d130.

We need to remove the dependency on Spring DM before doing this

(cherry picked from commit 7eb25ec50bd3af931c6ae876d9f7bef09385ba43)
;;;","29/Jan/16 14:59;cshannon;Reverted the commit until the Spring DM dependency is removed.;;;","01/Aug/16 16:37;cshannon;Resolved by AMQ-6301 until Spring DM is removed;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Message updates can cause message loss on recovery,AMQ-6133,12932452,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,19/Jan/16 15:47,01/Apr/16 16:52,14/Jul/23 05:44,01/Apr/16 16:52,5.13.0,,,,,,,,,5.13.1,5.13.3,5.14.0,,Broker,KahaDB,,,,0,,,,,,"After doing some testing with AMQ-6131, I noticed a similar issue where messages can be lost if a message update is called.

Normally when KahaDB gets a KahaUpdateMessageCommand it will update the index with the new location.  This works except that if the index is deleted or corrupted and needs to be rebuilt, the replay process may not be able to recover the message.

This happens because after the message is updated, KahaDB is free to garbage collect the file with the original add command.  So, whatt happens is that during replay when the update command is seen KahaDB rejects it because it can't find the original message if that file has been GC'd.  This happens in the updateIndex method of MessageDatabase on line 1395 where it prints out a warning saying ""Non existent message update attempt rejected"".

I am attaching a unit test that demonstrates the issue where the count after restart is missing messages.

",,cshannon,gtully,jira-bot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6131,,,,,,,,,,,"19/Jan/16 23:24;tabish;AMQ6133PersistJMSRedeliveryTest.java;https://issues.apache.org/jira/secure/attachment/12783215/AMQ6133PersistJMSRedeliveryTest.java","19/Jan/16 15:56;cshannon;AMQ6133Test.java;https://issues.apache.org/jira/secure/attachment/12783125/AMQ6133Test.java",,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Apr 01 16:52:12 UTC 2016,,,,,,,,,,,"0|i2roxj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/Jan/16 15:53;cshannon;[~gtully] and [~tabish121],

I have attached a test that shows the Queue case breaking.  I think it will also break for durables in certain conditions.  One easy solution is to change line 1416 in MessageDatabase (the warning log message) to {{this.updateIndex(tx, command, location);}} and simply add the message if it can't find it.  However, this is probably not desirable in all cases as I'm guessing there are times when the update should be rejected (such as after an ack).  Another solution is to not garbage collect the original journal file that contains the add command, however then that would lead to having more journal files laying around that couldn't be garbage collected.;;;","19/Jan/16 23:24;tabish;Added a test that shows this in effect using the persistJMSRedelivered policy since that is the place you'd most likely see this happening.  ;;;","20/Jan/16 14:57;gtully;It should add the message if it cannot be found. It is expected that the original gets gced because it is no longer indexed. The update should aim to add or replace.;;;","20/Jan/16 15:12;cshannon;Thanks for the input Gary, I will create a patch and include Tim's test.;;;","20/Jan/16 17:00;jira-bot;Commit b4aa53d806570a4f054dc0af9cb095f13b914153 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b4aa53d ]

https://issues.apache.org/jira/browse/AMQ-6133

Fixing the processing of KahaUpdateMessageCommand to add the message to
the store if it doesn't exist, instead of ignoring it.  This will
prevent message loss in certain cases when the KahaDB index has to be
rebuilt.
;;;","20/Jan/16 17:01;jira-bot;Commit adc3ba49c2cfb739ad7619a3aa7c5b518de5c996 in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=adc3ba4 ]

https://issues.apache.org/jira/browse/AMQ-6133

Fixing the processing of KahaUpdateMessageCommand to add the message to
the store if it doesn't exist, instead of ignoring it.  This will
prevent message loss in certain cases when the KahaDB index has to be
rebuilt.

(cherry picked from commit b4aa53d806570a4f054dc0af9cb095f13b914153)
;;;","20/Jan/16 17:02;cshannon;Patch and test submitted by [~tabish121] applied to master and 5.13.x.;;;","01/Apr/16 12:43;cshannon;I'm seeing a race condition issue here where some duplicate messages end up in the store. The issue occurs when persistJmsRedelivered is turned on for a Queue and concurrentStoreAndDispatchQueues is used.

What I'm seeing is that when rapidly producing/consuming, after a consumer gets all of the messages, sometimes the message reappears.  The cause seems to be that sometimes the message has been acked by the consumer and removed after it has been added to the store but before the update command runs (to set the redelivered flag).  So what happens with this fix is that at the end it will try to update a non-existent message so it will end up re-adding it.

In a test on my machine with 1 producer/consumer rapidly producing and consuming 50k messages, at the end of the test I consistently see 10-20 messages left over in the store even though the consumer has already received them all.  

I'm investigating more now to see if there is a good way to fix this without having to completely back out this patch.;;;","01/Apr/16 13:08;cshannon;Actually, I think what is happening is that the update command is running first because it's not done async like the add message command.  So I think the fix might be to do the update command async as well, or maybe modify the original add message command if it hasn't been performed yet.;;;","01/Apr/16 14:02;gtully;hmm. I think concurrentStoreAndDispatchQueues is not compatible with persistJmsRedelivered. The point of persistJmsRedelivered is that the delivery count is persisted *before* dispatch which is not the case with concurrentStoreAndDispatchQueues.
One attribute is a policyEntry, the other on the PA, so it is not easy to enforce but the combination do not make sense.
Maybe the update is done async but we wait on the future, or we update the inflight write and wait on its future.
Either way, it may not be trivial and it may be more straightforward to document the incompatibility. The two features are working against each other.
To force them to coexist will impact both.;;;","01/Apr/16 14:13;cshannon;Good points, and it may not make sense to change anything other than to document the behavior better as pointed out.  I'm testing out a couple things today to see what a fix would look like.  I was thinking one thing that might work would be to update the message that is part of the async task if the task hasn't started executing yet, else if it has executed then go through the normal update.  Not sure of any side effects of that approach yet though.;;;","01/Apr/16 14:41;cshannon;[~gtully], After some testing, I agree with your assessment to do nothing.  Indeed it doesn't really make any sense to try and make the two features coexist.  One issue of trying to update a message async is then you can't guarantee that it was persisted before dispatch so you negate any benefits. And you already alluded to this when you mentioned the point is to persist before dispatch.  In fact, if anything, I'm seeing slower message rates with added synchronization from trying to do the update.

In the doMessageSend() method inside Queue where asyncAddQueueMessage() is called, do you think it makes sense to check there if the destination has persistJmsRedelivered enabled and if it does call addMessage() instead?  Or just leave it alone and document it?;;;","01/Apr/16 14:52;gtully;[~cshannon]
I like that, isPersistJMSRedelivered is likely selectively used. 

In doMessageSend, {code}if (!isPersistJMSRedelivered())  && messages.isCacheEnabled()  {{code} 
guess the order of the checks could go either way :-)

that is safest as it enforces the persistJmsRedelivered semantic. ;;;","01/Apr/16 16:04;cshannon;Sounds good, I'll update that and add a note to the documentation about it.;;;","01/Apr/16 16:44;jira-bot;Commit b2327db3b79dffd42fd5c6ba85720a5d9c302052 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b2327db ]

https://issues.apache.org/jira/browse/AMQ-6133

Disabling async queue message store when persistJMSRedelivered is turned
on for a destination.  That flag will cause a sync update later on
dispatch which can cause a race condition if the original message add is
processed after the update.  This can cause a duplicate message to be
stored.
;;;","01/Apr/16 16:52;jira-bot;Commit 8393e6b8ea6cb9953f54cec80df46b8c181c7e7f in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=8393e6b ]

https://issues.apache.org/jira/browse/AMQ-6133

Disabling async queue message store when persistJMSRedelivered is turned
on for a destination.  That flag will cause a sync update later on
dispatch which can cause a race condition if the original message add is
processed after the update.  This can cause a duplicate message to be
stored.

(cherry picked from commit b2327db3b79dffd42fd5c6ba85720a5d9c302052)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Durable subscription rewrote in journal can be to agressive and cause message loss on recovery,AMQ-6131,12932249,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,18/Jan/16 22:26,19/Jan/16 15:53,14/Jul/23 05:44,18/Jan/16 22:48,5.12.0,5.12.1,5.13.0,,,,,,,5.13.1,5.14.0,,,KahaDB,,,,,0,,,,,,The compaction logic that attempt to move a durable subscription commands forward in the journal when the subscription has no pending messages is to aggressive and can rewrite to early leading to loss of messages if the state is recovered from the journal instead of having a valid index to read from.  ,,jira-bot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6133,AMQ-4212,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Jan 18 22:45:11 UTC 2016,,,,,,,,,,,"0|i2rnon:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Jan/16 22:29;tabish;Fix for AMQ-4212 is not entirely correct.;;;","18/Jan/16 22:43;jira-bot;Commit 193f6be6878502f3db8563465872a1afd86b7c54 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=193f6be ]

https://issues.apache.org/jira/browse/AMQ-6131

Fix check for durable sub with no pending messages during checkpoint
cleanup.  ;;;","18/Jan/16 22:45;jira-bot;Commit 7d3a71a4dff336b6f660d7f51661829b325e034b in activemq's branch refs/heads/activemq-5.13.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=7d3a71a ]

https://issues.apache.org/jira/browse/AMQ-6131

Fix check for durable sub with no pending messages during checkpoint
cleanup.
(cherry picked from commit 193f6be6878502f3db8563465872a1afd86b7c54)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
browsing priority queue can return messages in different order than they will be consumed,AMQ-6128,12931473,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,15/Jan/16 14:17,15/Jan/16 14:39,14/Jul/23 05:44,15/Jan/16 14:39,5.13.0,,,,,,,,,5.14.0,,,,,,,,,0,priority,,,,,"with queue policyEntry prioritizedMessages=true, consumers get messages in the expected priority but the results of a browser consumer do not always match.",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jan 15 14:39:02 UTC 2016,,,,,,,,,,,"0|i2riwf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Jan/16 14:39;jira-bot;Commit 2b84cd60ba775a2e0106a3c6f577ea78b05b143b in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=2b84cd6 ]

https://issues.apache.org/jira/browse/AMQ-6128 - fix and test - fix values on priority ordered pending - messages assigned to browsers need to be ordered
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Potential NPE in session rollback if no default redlivery policy configured,AMQ-6125,12929987,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,13/Jan/16 23:01,29/Feb/16 19:56,14/Jul/23 05:44,13/Jan/16 23:10,,,,,,,,,,5.13.1,5.14.0,,,,,,,,0,,,,,,If the RedliveryPolicyMap is set on a ConnectionFactory and no default entry is set on that instance than the MessageConsumer can throw an NPE on Rollback because its policy will be null.,,jira-bot,tabish,volkerk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Feb 29 19:56:33 UTC 2016,,,,,,,,,,,"0|i2r9qf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Jan/16 23:08;jira-bot;Commit 92870553389ef288d81c4ad670463c4fb1002c69 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=9287055 ]

https://issues.apache.org/jira/browse/AMQ-6125

Ensure that the redelivery policy is never null in the consumer.;;;","13/Jan/16 23:10;jira-bot;Commit b32be1bb1154368c34f9c4db6b6bf606ed6fbbea in activemq's branch refs/heads/activemq-5.13.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b32be1b ]

https://issues.apache.org/jira/browse/AMQ-6125

Ensure that the redelivery policy is never null in the consumer.
(cherry picked from commit 92870553389ef288d81c4ad670463c4fb1002c69)
;;;","29/Feb/16 19:56;volkerk;Hmm, red livery stables wonders why they're mentioned in AMQ tickets :);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
failover backup transports do not update the brokerInfo leaving stale org.apache.activemq.ActiveMQConnection#getBrokerName,AMQ-6124,12929496,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,gtully,gtully,12/Jan/16 13:53,14/Jan/16 15:58,14/Jul/23 05:44,12/Jan/16 14:07,5.13.0,,,,,,,,,5.14.0,,,,JMS client,,,,,0,backup,failover,priorityBackup,,,"with broker url {code}failover:(tcp://a:<port>,tcp://b:<port> "")?randomize=false&priorityBackup=true{code} The brokerName as reported by 
org.apache.activemq.ActiveMQConnection#getBrokerName stays at A even after failover to B.

The backup transport are started up front and the brokerInfo is not cached so it  never gets replayed to the jms connection.

The same is true for the backup attribute",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jan 14 15:58:43 UTC 2016,,,,,,,,,,,"0|i2r6pb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Jan/16 14:00;jira-bot;Commit db1506a5921f70134c3b647cec51204f0e1c1416 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=db1506a ]

https://issues.apache.org/jira/browse/AMQ-6124 - fix and test - propagate broker info from prestarted backup transport
;;;","14/Jan/16 15:58;jira-bot;Commit 741ee01e11f2805d84d45996f70996687026993c in activemq's branch refs/heads/activemq-5.13.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=741ee01 ]

https://issues.apache.org/jira/browse/AMQ-6124 - fix and test - propagate broker info from prestarted backup transport

(cherry picked from commit db1506a5921f70134c3b647cec51204f0e1c1416)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Potential Deadlock when a duplicate message is read from the store for the DLQ destination,AMQ-6122,12929202,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,tabish,tabish,tabish,11/Jan/16 15:22,12/Jan/16 17:02,14/Jul/23 05:44,11/Jan/16 16:06,5.13.0,,,,,,,,,5.13.1,5.14.0,,,Broker,Message Store,,,,0,,,,,,"Potential for deadlock when duplicates read in from store for DLQ destination itself and another producer is trying to send messages from the DLQ destination.

It can result with threads in following state

{code}
Found one Java-level deadlock:
=============================
""ActiveMQ Transport: tcp:///127.0.0.1:59885@59875"":
  waiting for ownable synchronizer 0x00000007f6188490, (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync),
  which is held by ""ActiveMQ BrokerService[localhost] Task-1""
""ActiveMQ BrokerService[localhost] Task-1"":
  waiting for ownable synchronizer 0x00000007f6190cf8, (a java.util.concurrent.locks.ReentrantLock$NonfairSync),
  which is held by ""ActiveMQ Transport: tcp:///127.0.0.1:59885@59875""

Java stack information for the threads listed above:
===================================================
""ActiveMQ Transport: tcp:///127.0.0.1:59885@59875"":
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x00000007f6188490> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:834)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireShared(AbstractQueuedSynchronizer.java:964)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireShared(AbstractQueuedSynchronizer.java:1282)
	at java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock.lock(ReentrantReadWriteLock.java:731)
	at org.apache.activemq.broker.region.Queue.toString(Queue.java:937)
	at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:830)
	at org.apache.activemq.broker.region.Queue.send(Queue.java:728)
	at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:390)
	at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:455)
	at org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:297)
	at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)
	at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:307)
	at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:157)
	at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:541)
	at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:756)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:334)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:188)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:270)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)
	at java.lang.Thread.run(Thread.java:722)
""ActiveMQ BrokerService[localhost] Task-1"":
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x00000007f6190cf8> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:834)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireInterruptibly(AbstractQueuedSynchronizer.java:894)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireInterruptibly(AbstractQueuedSynchronizer.java:1221)
	at java.util.concurrent.locks.ReentrantLock.lockInterruptibly(ReentrantLock.java:340)
	at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:828)
	at org.apache.activemq.broker.region.Queue.send(Queue.java:728)
	at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:390)
	at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:455)
	at org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:297)
	at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)
	at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:307)
	at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:157)
	at org.apache.activemq.util.BrokerSupport.doResend(BrokerSupport.java:68)
	at org.apache.activemq.util.BrokerSupport.resendNoCopy(BrokerSupport.java:38)
	at org.apache.activemq.broker.region.RegionBroker.sendToDeadLetterQueue(RegionBroker.java:762)
	at org.apache.activemq.broker.BrokerFilter.sendToDeadLetterQueue(BrokerFilter.java:318)
	at org.apache.activemq.broker.BrokerFilter.sendToDeadLetterQueue(BrokerFilter.java:318)
	at org.apache.activemq.broker.MutableBrokerFilter.sendToDeadLetterQueue(MutableBrokerFilter.java:330)
	at org.apache.activemq.broker.region.BaseDestination.duplicateFromStore(BaseDestination.java:801)
	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.dealWithDuplicates(AbstractStoreCursor.java:134)
	at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.doFillBatch(QueueStorePrefetch.java:110)
	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:385)
	- locked <0x00000007f6188550> (a org.apache.activemq.broker.region.cursors.QueueStorePrefetch)
	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:142)
	- locked <0x00000007f6188550> (a org.apache.activemq.broker.region.cursors.QueueStorePrefetch)
	at org.apache.activemq.broker.region.cursors.StoreQueueCursor.reset(StoreQueueCursor.java:159)
	- locked <0x00000007f61885a8> (a org.apache.activemq.broker.region.cursors.StoreQueueCursor)
	at org.apache.activemq.broker.region.Queue.doPageInForDispatch(Queue.java:1906)
	at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:2127)
	at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1608)
	- locked <0x00000007f61885f8> (a java.lang.Object)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:133)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:48)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
	at java.lang.Thread.run(Thread.java:722)

Found 1 deadlock.
{code}
",,jira-bot,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jan 12 17:00:50 UTC 2016,,,,,,,,,,,"0|i2r4w7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Jan/16 15:57;jira-bot;Commit 66cfc7bab3dfa2e079bbc5276312c97ab02cae4f in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=66cfc7b ]

AMQ-6121
AMQ-6122

Prevent messages on DLQ for looping back onto the same DLQ.  Prevents
expired messages from bouncing back and duplicate messages from the
store from causing a deadlock.;;;","12/Jan/16 17:00;jira-bot;Commit b4405bed5ea999e0ea6ce0ea61ee0d6871b7ac63 in activemq's branch refs/heads/activemq-5.13.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b4405be ]

AMQ-6121
AMQ-6122

Prevent messages on DLQ for looping back onto the same DLQ.  Prevents
expired messages from bouncing back and duplicate messages from the
store from causing a deadlock.
(cherry picked from commit 66cfc7bab3dfa2e079bbc5276312c97ab02cae4f)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Messages can continually expire from DLQ and back,AMQ-6121,12929197,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,11/Jan/16 15:01,12/Jan/16 17:02,14/Jul/23 05:44,11/Jan/16 16:06,5.13.0,,,,,,,,,5.13.1,5.14.0,,,Broker,LevelDB,Message Store,,,0,,,,,,In some cases it is possible for a message on the DLQ to retain its expiration value such as when LevelDB reads a duplicate from the store.  In these cases the message can end up being expired and sent back to the DLQ over and over.  This leads to inaccurate statistics on the DLQ among other things.  ,,jira-bot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jan 12 17:00:49 UTC 2016,,,,,,,,,,,"0|i2r4v3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Jan/16 15:57;jira-bot;Commit 66cfc7bab3dfa2e079bbc5276312c97ab02cae4f in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=66cfc7b ]

AMQ-6121
AMQ-6122

Prevent messages on DLQ for looping back onto the same DLQ.  Prevents
expired messages from bouncing back and duplicate messages from the
store from causing a deadlock.;;;","12/Jan/16 17:00;jira-bot;Commit b4405bed5ea999e0ea6ce0ea61ee0d6871b7ac63 in activemq's branch refs/heads/activemq-5.13.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b4405be ]

AMQ-6121
AMQ-6122

Prevent messages on DLQ for looping back onto the same DLQ.  Prevents
expired messages from bouncing back and duplicate messages from the
store from causing a deadlock.
(cherry picked from commit 66cfc7bab3dfa2e079bbc5276312c97ab02cae4f)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Add the X-Frame-Options"" header for the WebConsole",AMQ-6113,12928331,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,michael_furman,michael_furman,07/Jan/16 14:22,12/Feb/16 20:46,14/Jul/23 05:44,29/Jan/16 21:08,,,,,,,,,,5.11.4,5.12.3,5.13.1,5.14.0,Web Console,,,,,0,,,,,,The X-Frame-Options header is missing for the ActiveMQ Web Console and it should be added to all responses,centos 6,jira-bot,michael_furman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6170,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Feb 12 20:46:55 UTC 2016,,,,,,,,,,,"0|i2qziv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/Jan/16 21:06;jira-bot;Commit 186b5d0f305ed63b23a1db712a933aa4896006cf in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=186b5d0 ]

https://issues.apache.org/jira/browse/AMQ-6113

Properly set the X-FRAME-OPTIONS header on web responses.
;;;","29/Jan/16 21:07;jira-bot;Commit 648d08391d5c4efdbfe0734744f19ed9b8b14276 in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=648d083 ]

https://issues.apache.org/jira/browse/AMQ-6113

Properly set the X-FRAME-OPTIONS header on web responses.

(cherry picked from commit 186b5d0f305ed63b23a1db712a933aa4896006cf)
;;;","29/Jan/16 21:11;jira-bot;Commit 6bff094f5a0150ccf224f3be7ee0399bbb6eb99f in activemq's branch refs/heads/activemq-5.12.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=6bff094 ]

https://issues.apache.org/jira/browse/AMQ-6113

Properly set the X-FRAME-OPTIONS header on web responses.

(cherry picked from commit 186b5d0f305ed63b23a1db712a933aa4896006cf)
;;;","29/Jan/16 21:15;jira-bot;Commit d852615fd950fbf86c11e3c91139a98edec9b895 in activemq's branch refs/heads/activemq-5.11.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=d852615 ]

https://issues.apache.org/jira/browse/AMQ-6113

Properly set the X-FRAME-OPTIONS header on web responses.

(cherry picked from commit 186b5d0f305ed63b23a1db712a933aa4896006cf)
;;;","12/Feb/16 20:45;jira-bot;Commit 24ad36778534c5ac888f880837075449169578ad in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=24ad367 ]

https://issues.apache.org/jira/browse/AMQ-6170

Fixing X-Frame-Options header so that is applied for all content served
by Jetty.  The previous patch wasn't correct because it only applied it
to Servlets and JSPs and not static content. This also reverts AMQ-6113
;;;","12/Feb/16 20:46;jira-bot;Commit 028a33ea7d73fabe6161defffdbfc85578328a68 in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=028a33e ]

https://issues.apache.org/jira/browse/AMQ-6170

Fixing X-Frame-Options header so that is applied for all content served
by Jetty.  The previous patch wasn't correct because it only applied it
to Servlets and JSPs and not static content. This also reverts AMQ-6113

(cherry picked from commit 24ad36778534c5ac888f880837075449169578ad)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq.jar : regression in file permissions,AMQ-6112,12928282,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,cshannon,BarthV,BarthV,07/Jan/16 09:54,07/Jan/16 15:41,14/Jul/23 05:44,07/Jan/16 15:41,5.13.0,,,,,,,,,5.13.1,5.14.0,,,,,,,,0,,,,,,"In 5.12.X :
- activemq.jar is 0644 and wrapper.jar is 0755

{noformat}
> ls -al apache-activemq-5.12.0/bin 
drwxrwxr-x  5 myuser myuser  4096 janv.  7 10:27 .
drwxr-xr-x 10 myuser myuser  4096 août  10 17:26 ..
-rwxr-xr-x  1 myuser myuser 21748 août  10 17:26 activemq
-rwxr-xr-x  1 myuser myuser  6189 août  10 17:26 activemq-diag
-rw-r--r--  1 myuser myuser 15958 août  10 17:21 activemq.jar
-rw-r--r--  1 myuser myuser  4881 août  10 17:26 env
drwxrwxr-x  2 myuser myuser  4096 janv.  7 10:27 linux-x86-32
drwxrwxr-x  2 myuser myuser  4096 janv.  7 10:27 linux-x86-64
drwxrwxr-x  2 myuser myuser  4096 janv.  7 10:27 macosx
-rwxr-xr-x  1 myuser myuser 83820 août  10 17:11 wrapper.jar
{noformat}

In 5.13.X :
- activemq.jar is 0600 and wrapper.jar is 0700

{noformat}
> ls -al apache-activemq-5.13.0/bin
drwxrwxr-x  5 myuser myuser  4096 janv.  7 10:26 .
drwxr-xr-x 10 myuser myuser  4096 nov.  30 15:14 ..
-rwxr-xr-x  1 myuser myuser 21250 nov.  30 15:14 activemq
-rwxr-xr-x  1 myuser myuser  6189 nov.  30 15:14 activemq-diag
-rw-------  1 myuser myuser 15977 nov.  30 15:09 activemq.jar
-rw-r--r--  1 myuser myuser  4881 nov.  30 15:14 env
drwxrwxr-x  2 myuser myuser  4096 janv.  7 10:26 linux-x86-32
drwxrwxr-x  2 myuser myuser  4096 janv.  7 10:26 linux-x86-64
drwxrwxr-x  2 myuser myuser  4096 janv.  7 10:26 macosx
-rwx------  1 myuser myuser 83820 nov.  30 14:53 wrapper.jar
{noformat}

This regression broke my automated deploy process and now I need to modify the release files (which is really not a great thing ....)

Can you fix this packaging regression ?

Thanks",,BarthV,cshannon,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jan 07 15:41:30 UTC 2016,,,,,,,,,,,"0|i2qz7z:",9223372036854775807,Regression,,,,,,,,,,,,,,,,,,,,"07/Jan/16 15:38;jira-bot;Commit 43d493e527ccd7d940858646d37819d3bda0a806 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=43d493e ]

https://issues.apache.org/jira/browse/AMQ-6112

Fixing file permissions in assembly tar.  Some permissions were not
being set explicitly which means the value used could change depending
on where the assembly was built. Permissions are now being set to fix
this.
;;;","07/Jan/16 15:39;jira-bot;Commit 2f062488c3cdbc6c3f2fca3ced898f33aa07031a in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=2f06248 ]

https://issues.apache.org/jira/browse/AMQ-6112

Fixing file permissions in assembly tar.  Some permissions were not
being set explicitly which means the value used could change depending
on where the assembly was built. Permissions are now being set to fix
this.

(cherry picked from commit 43d493e527ccd7d940858646d37819d3bda0a806)
;;;","07/Jan/16 15:41;cshannon;Thanks for reporting this.  Some permissions were not being set so the permissions that were used depends on where the the build is run.  I have fixed the build to always set the correct permissions now for those files.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Destination with wildcard may not have correct policy applied,AMQ-6109,12924527,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,28/Dec/15 16:39,16/Feb/18 15:38,14/Jul/23 05:44,29/Dec/15 12:49,5.12.1,5.13.0,,,,,,,,5.12.2,5.13.1,5.14.0,,Broker,,,,,0,,,,,,"When a destination is created with a wildcard, it may not have the correct policy applied.  

For example, if there are two policies:

{code:xml}
<policyMap>
    <policyEntries>
         <policyEntry queue=""test.queue.>"" memoryLimit=""20mb"" />
         <policyEntry queue=""test.queue.a"" memoryLimit=""5000000""  />
     </policyEntries>
</policyMap>
{code}

and if the queue {{test.queue.>}} is created, the policy for {{test.queue.a}} will be applied to that destination instead of the {{test.queue.>}} policy.

Some work was done on this in AMQ-5972 and that seems to have fixed most of the issues, but there is this one edge case where we need to account for what happens if a policy matches a destination exactly.",,brianjohnson,cshannon,jira-bot,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6901,,,AMQ-5972,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Dec 29 12:49:09 UTC 2015,,,,,,,,,,,"0|i2qcgn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Dec/15 16:41;jira-bot;Commit 8e2176d93c95d847c813f54d54aaf9bafba4d5c4 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=8e2176d ]

https://issues.apache.org/jira/browse/AMQ-6109

The chooseValue method in DestinationMap will now always return the
exact match, if there is one, else it will then sort as before.
;;;","28/Dec/15 16:42;cshannon;Patch applied, I will resolve and backport the fixes to 5.12.2 and 5.13.0 if all of the tests pass.;;;","29/Dec/15 12:47;jira-bot;Commit 63f045e5c97419b1bb93b5475226832a9c7104a4 in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=63f045e ]

https://issues.apache.org/jira/browse/AMQ-6109

The chooseValue method in DestinationMap will now always return the
exact match, if there is one, else it will then sort as before.

(cherry picked from commit 8e2176d93c95d847c813f54d54aaf9bafba4d5c4)
;;;","29/Dec/15 12:49;jira-bot;Commit bf35f42bb69e57d5aebdb4f2afc95f544fb1edb5 in activemq's branch refs/heads/activemq-5.12.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=bf35f42 ]

https://issues.apache.org/jira/browse/AMQ-6109

The chooseValue method in DestinationMap will now always return the
exact match, if there is one, else it will then sort as before.

(cherry picked from commit 8e2176d93c95d847c813f54d54aaf9bafba4d5c4)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SelectorManager Executor is not shutdown when transport os stopped.,AMQ-6108,12924073,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,andyg,andyg,23/Dec/15 19:45,15/Mar/16 19:45,14/Jul/23 05:44,14/Jan/16 21:50,,,,,,,,,,5.13.1,5.14.0,,,,,,,,0,,,,,,"SelectorManager creates an Executor that is not shut down on termination of the Transport.

The Executor currently uses non-daemon threads and is is not guaranteed the the SelectorWorker thread exit condition is ever met.

This causes the shutdown to hang when using transports that utilise the SelectorManager, such as nio+ssl for example.

The proposed patch shuts down the ExecutorService on/after Transport shutdown. The SelectorWorkers also check for this as an exit condition.",,andyg,cshannon,jira-bot,tabish,volkerk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Dec/15 12:00;andyg;SelectorManager.Shutdown.patch;https://issues.apache.org/jira/secure/attachment/12779432/SelectorManager.Shutdown.patch",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Mar 15 19:45:08 UTC 2016,,,,,,,Patch Available,,,,"0|i2q9q7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Dec/15 12:00;andyg;Updated patch;;;","05/Jan/16 17:54;cshannon;It's a good idea to include a test if possible to demonstrate the issue (in this case to show that the shutdown hangs) and also to show that your patch fixes the problem.  It also helps to make sure that any future changes won't cause the problem to show up again.;;;","14/Jan/16 21:33;tabish;Since the SelectorManager instance is shared amongst every Transport instance created when using the NIOTransport types it doesn't make any sense to shutdown the executor when any one instance is stopped, or when any one TransportConnector instance is stopped as that defeats the purpose of the NIO bits sharing resources.  The Threads in the executor should be set deamon though in order to prevent them keeping a JVM running.  ;;;","14/Jan/16 21:47;jira-bot;Commit 5adbafef3b9ec05de7186caa9112f3639c7a6253 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=5adbafe ]

https://issues.apache.org/jira/browse/AMQ-6108

Ensure that executor threads are created as daemon threads, fix a
try/finaly block, clean up some warnings.  ;;;","14/Jan/16 21:48;jira-bot;Commit 1d9fdbcbeaacf2d5673bb5435b1caae0b1cfc7a7 in activemq's branch refs/heads/activemq-5.13.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=1d9fdbc ]

https://issues.apache.org/jira/browse/AMQ-6108

Ensure that executor threads are created as daemon threads, fix a
try/finaly block, clean up some warnings.
(cherry picked from commit 5adbafef3b9ec05de7186caa9112f3639c7a6253)
;;;","14/Jan/16 21:50;tabish;Updated thread creation to be daemon threads and fixed some warnings in the code.  Shutdown of the SelectorManager doesn't make sense on Transport stop given that all other active NIO Transport based instances still need to use the SelectorManager ;;;","14/Mar/16 22:27;volkerk;Actually these check-ins by [~tabish121] call setDaemon(false), i.e. they create the ActiveMQ IO Worker thread as user thread, not as daemon. This is exactly the wrong way around, so this issue remains unfixed, or rather the fix here really broke things!

This is a major problem, as it prevents proper shutdown and restart of JVMs running AMQ. In all previous releases these threads actually were daemon threads, as can easily be verified in thread dumps, but the newly added explicit setDaemon(false) call broke that in 5.13.1.;;;","15/Mar/16 18:03;jira-bot;Commit e2b4ca2c59a316be91cf391c758a10e518dd3a1f in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e2b4ca2 ]

https://issues.apache.org/jira/browse/AMQ-6108

Update the threads created by the SelectorManager to be daemon threads. ;;;","15/Mar/16 18:06;jira-bot;Commit e0081014bfd95140b0545ffc20e1d25558044a02 in activemq's branch refs/heads/activemq-5.13.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e008101 ]

https://issues.apache.org/jira/browse/AMQ-6108

Update the threads created by the SelectorManager to be daemon threads. 
(cherry picked from commit e2b4ca2c59a316be91cf391c758a10e518dd3a1f)

Conflicts:
	activemq-client/src/main/java/org/apache/activemq/transport/nio/SelectorManager.java
;;;","15/Mar/16 19:45;volkerk;Thanks for the quick fix!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMX SubscriptionViewMBean reset statistics method doesn't reset,AMQ-6102,12923573,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,21/Dec/15 21:46,21/Dec/15 22:48,14/Jul/23 05:44,21/Dec/15 22:48,5.12.1,5.13.0,,,,,,,,5.12.2,5.13.1,5.14.0,,JMX,,,,,0,,,,,,The resetStatistics method for the SubscriptionViewMBean implementation does not reset statistics for the subscription.,,jira-bot,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Dec 21 22:47:17 UTC 2015,,,,,,,,,,,"0|i2q6n3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Dec/15 22:03;jira-bot;Commit 564d55023ec7386c31277db054ecc63d966e2b29 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=564d550 ]

https://issues.apache.org/jira/browse/AMQ-6102

Call to the statistics instance of the subscription to reset the
counters.;;;","21/Dec/15 22:04;jira-bot;Commit 871f0a60051192b36ea79936a4d020d8bd6eb8bd in activemq's branch refs/heads/activemq-5.13.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=871f0a6 ]

https://issues.apache.org/jira/browse/AMQ-6102

Call to the statistics instance of the subscription to reset the
counters.
(cherry picked from commit 564d55023ec7386c31277db054ecc63d966e2b29)
;;;","21/Dec/15 22:47;jira-bot;Commit 819e2371d6bc94e0c0b81c0b687d35e420c1241c in activemq's branch refs/heads/activemq-5.12.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=819e237 ]

https://issues.apache.org/jira/browse/AMQ-6102

Call to the statistics instance of the subscription to reset the
counters.
(cherry picked from commit 564d55023ec7386c31277db054ecc63d966e2b29)

Conflicts:
	activemq-unit-tests/src/test/java/org/apache/activemq/broker/jmx/MBeanTest.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KahaDB message size metrics can be inaccurate,AMQ-6097,12923093,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,18/Dec/15 18:29,04/Feb/16 14:40,14/Jul/23 05:44,22/Dec/15 13:26,5.12.1,5.13.0,,,,,,,,5.12.2,5.13.1,5.14.0,,Broker,KahaDB,,,,0,,,,,,"I have found during testing that the reported size of the messages in a KahaDB store can be shown as too high in certain cases.  The message count values are accurate, however.

My testing as shown that when publishing a large quantity of messages with several producers (a couple hundred thousand) and then consuming them with several consumers, when all the messages are consumed and the count is 0, the reported size will still be greater than 0.
",,cshannon,jira-bot,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6158,,,AMQ-5748,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Dec 22 13:26:24 UTC 2015,,,,,,,,,,,"0|i2q3on:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Dec/15 18:32;cshannon;I did some debugging and the problem is that in certain cases, the wrong marshaller is being used for the messages keys in the message order index.  During updates in KahaDB the size is being read as -1 and not initialized since the used marshaller doesn't know how to serialize the message size.  Normally the location index is used for size information so this problem doesn't always show up.;;;","18/Dec/15 19:46;jira-bot;Commit 246ccb8e04515c6e85544b32035537f60d92b5b9 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=246ccb8 ]

https://issues.apache.org/jira/browse/AMQ-6097

Fixing KahaDB so that the correct marshaller is used for the message
keys inside of the message order index.  This will ensure that message
size metrics are accurate.
;;;","18/Dec/15 19:48;jira-bot;Commit 370b1810995c48129521d1c86d7b0a31d1d966d9 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=370b181 ]

https://issues.apache.org/jira/browse/AMQ-6097

remove un-needed import statements
;;;","18/Dec/15 19:50;cshannon;Patch applied...I will resolve and backport the fix to 5.12.x and 5.13.x if tests pass.;;;","21/Dec/15 16:47;jira-bot;Commit 507d40a79f15449ba6d79ef85d7fdf6bf50a3a65 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=507d40a ]

https://issues.apache.org/jira/browse/AMQ-6097

Fixing JournalCorruptionEofIndexRecoveryTest class

Because of the size being stored in the message order index, the test
testRecoveryAftercorruptionCheckSumExistingIndex was no longer passing
as that test was corrupting the size value in the journal, but not the
size value in the index.  The test now corrupts both values so that the
expect exception occurs again.
;;;","22/Dec/15 13:14;jira-bot;Commit 51aa70eaae69f7fa9941c40d2f31b90c7f5a81ab in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=51aa70e ]

https://issues.apache.org/jira/browse/AMQ-6097

Fixing KahaDB so that the correct marshaller is used for the message
keys inside of the message order index.  This will ensure that message
size metrics are accurate.

(cherry picked from commit 246ccb8e04515c6e85544b32035537f60d92b5b9)
;;;","22/Dec/15 13:14;jira-bot;Commit b103932ccd24235fad91c104f46b5c5194500bfb in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b103932 ]

https://issues.apache.org/jira/browse/AMQ-6097

remove un-needed import statements

(cherry picked from commit 370b1810995c48129521d1c86d7b0a31d1d966d9)
;;;","22/Dec/15 13:14;jira-bot;Commit a73ada062960e72b5f22bb8cbb914997f72f4a37 in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=a73ada0 ]

https://issues.apache.org/jira/browse/AMQ-6097

Fixing JournalCorruptionEofIndexRecoveryTest class

Because of the size being stored in the message order index, the test
testRecoveryAftercorruptionCheckSumExistingIndex was no longer passing
as that test was corrupting the size value in the journal, but not the
size value in the index.  The test now corrupts both values so that the
expect exception occurs again.

(cherry picked from commit 507d40a79f15449ba6d79ef85d7fdf6bf50a3a65)
;;;","22/Dec/15 13:26;jira-bot;Commit 28f711e50e94cda4d1235da8290c148719487e40 in activemq's branch refs/heads/activemq-5.12.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=28f711e ]

https://issues.apache.org/jira/browse/AMQ-6097

Fixing KahaDB so that the correct marshaller is used for the message
keys inside of the message order index.  This will ensure that message
size metrics are accurate.

(cherry picked from commit 246ccb8e04515c6e85544b32035537f60d92b5b9)
;;;","22/Dec/15 13:26;jira-bot;Commit 041191679301554c669451cd0a628c49e07bb039 in activemq's branch refs/heads/activemq-5.12.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=0411916 ]

https://issues.apache.org/jira/browse/AMQ-6097

remove un-needed import statements

(cherry picked from commit 370b1810995c48129521d1c86d7b0a31d1d966d9)
;;;","22/Dec/15 13:26;jira-bot;Commit 7eb1425733324caeac7619d9510288c6c1527300 in activemq's branch refs/heads/activemq-5.12.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=7eb1425 ]

https://issues.apache.org/jira/browse/AMQ-6097

Fixing JournalCorruptionEofIndexRecoveryTest class

Because of the size being stored in the message order index, the test
testRecoveryAftercorruptionCheckSumExistingIndex was no longer passing
as that test was corrupting the size value in the journal, but not the
size value in the index.  The test now corrupts both values so that the
expect exception occurs again.

(cherry picked from commit 507d40a79f15449ba6d79ef85d7fdf6bf50a3a65)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory Leak with abnormal disconnecting consumers,AMQ-6094,12922954,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,d.bieringer,d.bieringer,18/Dec/15 07:20,05/Jan/16 15:09,14/Jul/23 05:44,05/Jan/16 14:17,5.13.0,,,,,,,,,5.12.2,5.13.1,5.14.0,,Broker,,,,,0,,,,,,"On our production ActiveMQ broker (processes around 10 000 messages / sec in average) we have encountered situations where queues started blocking completely after running without problems for a couple of days.

When taking a look at the activemq logs, we can see messages like this (I've changed queue names and client IPs):

2015-12-17 20:52:37,375 | INFO  | Usage(default:memory:queue://Consumer.AAA.VirtualTopic.OFFER:memory) percentUsage=100%, usage=104858538, limit=104857600, percentUsageMinDelta=1%;Parent:Usage(default:memory) percentUsage=42%, usage=305669289, limit=720424141, percentUsageMinDelta=1%: Usage Manager Memory Limit reached. Producer (ID:ip-172-30-0-97-38230-1450370654525-1:8:1:1) stopped to prevent flooding queue://Consumer.AAA.VirtualTopic.OFFER. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 151s) | org.apache.activemq.broker.region.Queue | ActiveMQ Transport: tcp:///1.1.1.1:36128@61616

The strange thing is, when taking a look at the admin interface, there are no messages queued in the above mentioned queue and also purging the queue does not help.

The only thing that works (that we found out so far) (to get the broker process messages again) in the above situation is:
 * delete the queue (it then is recreated automatically and works again)
 * restart the broker

I have now tried to reproduce the situation locally and come up with a test case that, while I am not sure if that is the exact problem that we face in production, at least produces the same problem as mentioned above. I have noticed that we sometimes have network issues between the clients and the broker and therefore have done something similar in the test code.

The test code launches 4 producing threads and 4 consuming threads. The producers > 1000 messages / sec to the queues and the consumers just read them. Once after a while (every 10 seconds), one of the consuming threads is interrupted and then, with a delay of another 10 seconds, the connection is cleaned up (to free up the allocated messages that are already in the dead connections prefetchBuffer). 

When running the test case on a fresh download of activeMQ 5.13.0, it takes a long time until the broker completey blocks, as it takes time for the memory to fill up. However, when checking JMX stats, it is clearly visible, that the following metrics behave strangely:
 * CursorMemoryUsage
 * MemoryUsageByteCount

Both above metrics are quite constant for some time, and then, once a thread gets interrupted and the connection cleaned up, it suddenly increases by couple of mbytes ... then, again, while the consumers and producers work normally, the size is quite constant, until again, a consumer is interrupted, which again increases memory for couple of mbytes ... and this continues until memory is completely full and no messages can pass anymore through the broker.

To speed things up, a lower memory limit can be placed on the queue in the activemq.xml configuration file, which will lead to shorter waiting time before the broker blocks messages on the queue.

Even terminating the client jvm does not free up resources on the broker.",Unmodified release version of ActiveMQ 5.13.0 (http://www.eu.apache.org/dist/activemq/5.13.0/apache-activemq-5.13.0-bin.tar.gz),cshannon,d.bieringer,felixehm,gtully,jira-bot,lichtin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6014,,,,,,,,"18/Dec/15 07:21;d.bieringer;Test.java;https://issues.apache.org/jira/secure/attachment/12778441/Test.java","18/Dec/15 17:17;cshannon;Test6094JUnit.java;https://issues.apache.org/jira/secure/attachment/12778522/Test6094JUnit.java",,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jan 05 15:08:48 UTC 2016,,,,,,,,,,,"0|i2q2tz:",9223372036854775807,Regression,,,,,,,,,,,,,,,,,,,,"18/Dec/15 07:21;d.bieringer;Test Case;;;","18/Dec/15 07:26;d.bieringer;Running the same test code with 5.12.1 works correctly and the described issue does not appear.;;;","18/Dec/15 08:30;d.bieringer;Also tried it now with 5.12.2 (built with code from GitHub) and this version seems to be affected by the above described problem as well (I've added it to the affected versions);;;","18/Dec/15 17:15;cshannon;Thanks for reporting this.  I was able to use your test and verify that there is in fact an issue. I modified your test case slightly so that it runs with an embedded broker and JUnit.  I am able to see it print out an increasing memory usage.

I did some debugging with git-bisect and the problem is coming from this commit: https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=1ad0117932ae73603b963860c92c0980a3572b9e

The commit was all cherry-picked to 5.12.x https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=e54c9ccfa0a2bbc419fc10c39825610bf078c3db

So, for now I am going to go ahead and cancel the 5.12.2 vote because I think this issue should be resolved before releasing 5.12.2;;;","18/Dec/15 17:17;cshannon;Modified test case that runs with JUnit and is standalone that demonstrates the problem.;;;","18/Dec/15 17:57;cshannon;[~gtully], When you get a chance can you take a look at this and see what you think?  I've narrowed down the issue to the changes that were made to PrefetchSubscription in commit https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=1ad0117932ae73603b963860c92c0980a3572b9e .  If you undo the changes then the test case runs without memory usage continuing to increase.;;;","04/Jan/16 11:14;felixehm;Hi,
do I understand that this problem only occurs for durable subscribers ?
Thanks,
Felix;;;","05/Jan/16 14:09;jira-bot;Commit e3df09b9db09d6cf2834b0beb901c253be9b6120 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e3df09b ]

https://issues.apache.org/jira/browse/AMQ-6094 - regression via https://issues.apache.org/jira/browse/AMQ-6014 - incorrect ref count on message expiry event during cursor move for dispatch. Fix and test - thanks for the test
;;;","05/Jan/16 14:11;gtully;[~felixehm] - fraid not. It related to the expiry check, so any message with a setTimeToLive could trigger it.;;;","05/Jan/16 14:17;gtully;[~cshannon] thanks for the unit test and commit identification. The expiry case was missing a decrement which lead to the leak. The test now verifies the usage after draining the queue, it finishes in a minute of so. ;;;","05/Jan/16 14:33;cshannon;Thanks [~gtully], I will get the fix back-ported and re-run the 5.12.2 vote.;;;","05/Jan/16 15:08;jira-bot;Commit 26665fa1b98a9004fc90a6eeea26ca06eb53d118 in activemq's branch refs/heads/activemq-5.13.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=26665fa ]

https://issues.apache.org/jira/browse/AMQ-6094 - regression via https://issues.apache.org/jira/browse/AMQ-6014 - incorrect ref count on message expiry event during cursor move for dispatch. Fix and test - thanks for the test

(cherry picked from commit e3df09b9db09d6cf2834b0beb901c253be9b6120)
;;;","05/Jan/16 15:08;jira-bot;Commit 6f8942387e98f3dd41612dc331fa72f3fa718613 in activemq's branch refs/heads/activemq-5.12.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=6f89423 ]

https://issues.apache.org/jira/browse/AMQ-6094 - regression via https://issues.apache.org/jira/browse/AMQ-6014 - incorrect ref count on message expiry event during cursor move for dispatch. Fix and test - thanks for the test

(cherry picked from commit e3df09b9db09d6cf2834b0beb901c253be9b6120)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.activemq.TransactionContext.recover(int flag) should return null or an empty array when it receives the flag  XAResource.TMNOFLAGS as it has return all transactions when called with  XAResource.TMSTARTRSCAN. or XAResource. TMENDRSCAN.,AMQ-6089,12921893,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,chrisr45,chrisr45,15/Dec/15 07:59,06/Jan/16 12:58,14/Jul/23 05:44,06/Jan/16 12:58,5.12.1,,,,,,,,,5.14.0,,,,Transport,,,,,0,newbie,,,,,"org.apache.activemq.TransactionContext implements XAResource.  The recover method currently ignores the flag parameter, returning all transaction regardless of flags passed to it.  This behaviour cause our transaction manager (IIB) to go into an indefinite loop.  It is expecting to get an empty array or null when XAResource.TMNOFLAGS is passed as all transactions where returned by the prior XAResource.TMSTARTRSCAN call.",,chrisr45,gtully,jira-bot,lichtin,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Dec/15 00:45;chrisr45;AMQRecoveryTester.java;https://issues.apache.org/jira/secure/attachment/12777875/AMQRecoveryTester.java","16/Dec/15 00:45;chrisr45;XAHandlerXid.java;https://issues.apache.org/jira/secure/attachment/12777876/XAHandlerXid.java","06/Jan/16 04:07;chrisr45;activemq 5.12.patch;https://issues.apache.org/jira/secure/attachment/12780665/activemq+5.12.patch",,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jan 06 12:58:02 UTC 2016,,,,,,,Patch Available,,,,"0|i2pwaf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Dec/15 11:40;gtully;the transaction context does not maintain any state at the moment. I can see a case for returning an empty array if TMENDRSCAN is specified. Because the default behaviour is to return all of the pending xids.

Please add a little test case that demos the usage pattern of your TM, from the patch it is not clear that data will be of 0 length.;;;","16/Dec/15 00:45;chrisr45;As requested a test client to demonstrate the IIB recovery behaviour ;;;","16/Dec/15 03:55;chrisr45;My reading of the spec was that TMENDRSCAN can be used with a TMSTARTRSCAN, hence all pending xids being returned by either call seems logical as activeMQ does not currently maintain a cursor or state.

With no state being maintained and all pending xids are returned by both TMSTARTRSCAN and TMSTARTRSCAN a TM that has implemented cursor support has no way of knowing it has all received all pending xids if all three flags return the same result.;;;","06/Jan/16 12:11;gtully;I agree, I had a read of http://pubs.opengroup.org/onlinepubs/009680699/toc.pdf - the javadoc does not seem to have this level of detail.
returning noting in the case of TMNOFLAGS makes sense, the only caveat is that we won't have any way to record that a scan is in progress. Because TMNOFLAGS must be exclusive and we always return the full array, it will work ok.;;;","06/Jan/16 12:45;gtully;peeking at the patch, not sure there is any value in the round trip to the broker because the returned data is ignored. Will just return an empty array if TMNOFLAGS is specified;;;","06/Jan/16 12:54;jira-bot;Commit 16bc0f0d750530643333695ba20f6a736704271c in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=16bc0f0 ]

https://issues.apache.org/jira/browse/AMQ-6089 - support TMNOFLAGS as a scan end to allow looping calls to recover to terminate
;;;","06/Jan/16 12:58;gtully;thanks for the test. I merged in the looping code from your test into an existing test that exercised the recovery calls with pending transactions to verify a loop can now exit.
The fix is a little different from the patch b/c it bypases the broker roundtrip.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Runtime configuration does not properly apply policy updates,AMQ-6088,12921697,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,14/Dec/15 15:59,14/Dec/15 19:22,14/Jul/23 05:44,14/Dec/15 19:22,5.13.0,,,,,,,,,5.13.1,5.14.0,,,Broker,,,,,0,,,,,,"There is 1 bug and 1 improvement with policy modification at runtime with both the XML runtime broker and Java runtime broker.

For the bug portion, when a new policy is added there is no check to see if there are any more specific policies that should be used.  So if a policy called ""queue.test.child.>"" exists, and then a new policy for ""queue.test.>"" is added, this will update destinations that match the more specific policy and it shouldn't.  There is a check for this for modification (as seen below) but not on adding a new policy.

For the improvement, when modifying a policy entry, an entry can only be modified if there are no children entries.  This is a problem because if two policies exist, say for ""queue.test.>"" and ""queue.test.child.>"", we can not modify ""queue.test.>"" because there is logic to prevent this.  This is done to prevent reapplying changes to destinations that might be affected by ""queue.test.child.>"".  (which breaks on an add)

However, with the use of the policy map we should be able to update any policy and figure out which specific destinations because we can look up whether or not the policy being updated should be applied to the destination.  So this limitation should be removed and the proper logic should be applied for both adding and updating policies.

This should be merged into 5.13.1 because it's a bug fix and improvement to how policies are applied.

",,brianjohnson,cshannon,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5915,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Dec 14 19:22:09 UTC 2015,,,,,,,,,,,"0|i2pv2v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Dec/15 19:06;jira-bot;Commit 9e7fae0d83c584f98e99024ba6d20e53f14b81f7 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=9e7fae0 ]

https://issues.apache.org/jira/browse/AMQ-6088

The runtime plugins will now find the exact policy to update which means
that a destination can match more than one policy and the policy can
still be updated at runtime.

The java runtime broker also supports the ability to replace or add a
policy entry based on a flag on a new method call.
;;;","14/Dec/15 19:09;jira-bot;Commit 27b08b03c58fcaaf11c278ac28a4da472e55d274 in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=27b08b0 ]

https://issues.apache.org/jira/browse/AMQ-6088

The runtime plugins will now find the exact policy to update which means
that a destination can match more than one policy and the policy can
still be updated at runtime.

The java runtime broker also supports the ability to replace or add a
policy entry based on a flag on a new method call.

(cherry picked from commit 9e7fae0d83c584f98e99024ba6d20e53f14b81f7)
;;;","14/Dec/15 19:22;cshannon;A policy can now be modified even if it matches more than one destination because the policy will only be applied to the correct destination(s) during update.  This includes the case of a new policy as well.  This applies to both the Java and XML runtime plugins.

Also, there's a new option in the Java plugin to create or replace (based on a flag) a policy entry.  For the replace case, that is useful if someone wants to update a policy without looking up the existing one first, which is required in the current version.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broker stop and start are not at all thread safe - we can do better,AMQ-6086,12921092,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,11/Dec/15 16:17,25/Sep/18 15:29,14/Jul/23 05:44,11/Dec/15 16:25,5.13.0,,,,,,,,,5.13.1,5.14.0,,,Broker,,,,,0,,,,,,"If one thread starts a broker and a second tries to stop we can get in a mess. Particularly if there is blocking or locking in the mix. In some cases we are ok but there is no determinism.
In a simple case, the stop can complete before the start gets going at all and we miss the stop, leaving a dangling broker.
",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Sep 25 15:29:42 UTC 2018,,,,,,,,,,,"0|i2prvr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Dec/15 16:23;jira-bot;Commit da076f4a632af6ad1d66382523f4c50e9de9e62e in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=da076f4 ]

https://issues.apache.org/jira/browse/AMQ-6086 - add some determinism to interleaved stop and start calls on broker service
;;;","11/Dec/15 17:33;jira-bot;Commit e5b86116c4683f2f7149cddc50d2d7aa1909efb8 in activemq's branch refs/heads/activemq-5.13.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e5b8611 ]

https://issues.apache.org/jira/browse/AMQ-6086 - add some determinism to interleaved stop and start calls on broker service

(cherry picked from commit da076f4a632af6ad1d66382523f4c50e9de9e62e)
;;;","14/Dec/15 15:40;jira-bot;Commit 35df815fb86d201e63b4f0f2d53bee3bae5c0752 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=35df815 ]

https://issues.apache.org/jira/browse/AMQ-6086 - start exception can prevent stop from exiting fully, need to be more selective in creation on stop.
;;;","14/Dec/15 16:32;jira-bot;Commit 455a628305dc49476d7033701901d119db3fffdb in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=455a628 ]

https://issues.apache.org/jira/browse/AMQ-6086 - avoid logging npe on attempted start of persistence adapter post stop
;;;","14/Dec/15 16:46;jira-bot;Commit b7787bf6fbbb33b5d16b34dab07de52b76044a4c in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b7787bf ]

https://issues.apache.org/jira/browse/AMQ-6086 - test cannot validate all start failures scenarios at this time, suffice that start and stop complete ok
;;;","14/Dec/15 16:53;gtully;having some sort of stack of started components is needed here. Pushing (start) aborting if popping has started. A blocking component, like a persistence adapter that will block on a lock acquire - would need to push early and respond to a stop during eventual blocking.
This implies some symmetry between start/stop which makes sense and some consistency in applying the service pattern. Something to keep in mind for the future.;;;","14/Dec/15 19:09;jira-bot;Commit 2ffd7498a835be85b08e5ca9966a26a2d4ac0cd3 in activemq's branch refs/heads/activemq-5.13.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=2ffd749 ]

https://issues.apache.org/jira/browse/AMQ-6086 - start exception can prevent stop from exiting fully, need to be more selective in creation on stop.

(cherry picked from commit 35df815fb86d201e63b4f0f2d53bee3bae5c0752)
;;;","14/Dec/15 19:09;jira-bot;Commit b4360c6e0e285aa97851d5bda9083d376709b0b4 in activemq's branch refs/heads/activemq-5.13.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b4360c6 ]

https://issues.apache.org/jira/browse/AMQ-6086 - avoid logging npe on attempted start of persistence adapter post stop

(cherry picked from commit 455a628305dc49476d7033701901d119db3fffdb)
;;;","14/Dec/15 19:09;jira-bot;Commit fc4120e85016e094eee6d7a758c73f49f3db191b in activemq's branch refs/heads/activemq-5.13.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=fc4120e ]

https://issues.apache.org/jira/browse/AMQ-6086 - test cannot validate all start failures scenarios at this time, suffice that start and stop complete ok

(cherry picked from commit b7787bf6fbbb33b5d16b34dab07de52b76044a4c)
;;;","25/Sep/18 15:29;jira-bot;Commit cae66f5d37943ede480330aa05e7b886ba089ff3 in activemq's branch refs/heads/master from gtully
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=cae66f5 ]

AMQ-6086 - variant with broker.schedulerSupport=true; same fix with additional test
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Broker starts on corrupted kahadb despite checkForCorruptJournalFiles=""true"" and ignoreMissingJournalfiles=""false""",AMQ-6083,12920401,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,09/Dec/15 12:13,11/Dec/15 14:53,14/Jul/23 05:44,09/Dec/15 12:38,5.13.0,,,,,,,,,5.13.1,5.14.0,,,KahaDB,,,,,0,,,,,,"Kahadb checkForCorruptJournaFiles will pick up journal corruption via the checksum, but if the corrupt locations are not referenced by the index the corruption is ignored, even if ignoreMissingJournalFiles (which should be called ignoreMissingJournalFilesOrCorruptJournalLocations) is false (the default).

this means that acks can be missing and in the event of a journal replay, there is no indication of the missing acks.

If ignoreMissingJournalFiles=false and corruption or missing journal files that just have acks are detected, the broker should error out.

This ensures that corruption does not go unnoticed and the root cause can be determined before restart. ",,gtully,jira-bot,lichtin,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Dec 11 14:53:42 UTC 2015,,,,,,,,,,,"0|i2pnm7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Dec/15 12:38;jira-bot;Commit 5db5f3e39a682640b64bc904f30cbd2e0e3de4da in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=5db5f3e ]

https://issues.apache.org/jira/browse/AMQ-6083 - ignoreMissingJournalfiles false - check for missing acks and corruption anywhere and error out so that corruption does not go unnoticed - fix and test
;;;","09/Dec/15 14:21;jira-bot;Commit 99fce5bae986fdd70af0b1af9f24abc6dc4a2b07 in activemq's branch refs/heads/activemq-5.13.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=99fce5b ]

https://issues.apache.org/jira/browse/AMQ-6083 - ignoreMissingJournalfiles false - check for missing acks and corruption anywhere and error out so that corruption does not go unnoticed - fix and test

(cherry picked from commit 5db5f3e39a682640b64bc904f30cbd2e0e3de4da)
;;;","11/Dec/15 11:21;jira-bot;Commit 8609f74db329d97eac054cca2d1dd188c2960ddd in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=8609f74 ]

https://issues.apache.org/jira/browse/AMQ-6083 - ignore test scenario on leveldb store
;;;","11/Dec/15 12:34;jira-bot;Commit 724a0e85f37b776dbba4ad236b9228ae8a85c145 in activemq's branch refs/heads/activemq-5.13.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=724a0e8 ]

https://issues.apache.org/jira/browse/AMQ-6083 - ignore test scenario on leveldb store

(cherry picked from commit 8609f74db329d97eac054cca2d1dd188c2960ddd)
;;;","11/Dec/15 13:31;jira-bot;Commit 31d99b6aa92aed27acfd90a4d2a278c077a47a33 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=31d99b6 ]

https://issues.apache.org/jira/browse/AMQ-6083 - resolve some test regressions - AMQ2149Test - fail to start with missing data file. Ensure ack map is always saved on modification
;;;","11/Dec/15 14:53;jira-bot;Commit 9c82756ca9e61b202cb2c6695bcc585634d90297 in activemq's branch refs/heads/activemq-5.13.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=9c82756 ]

https://issues.apache.org/jira/browse/AMQ-6083 - resolve some test regressions - AMQ2149Test - fail to start with missing data file. Ensure ack map is always saved on modification

(cherry picked from commit 31d99b6aa92aed27acfd90a4d2a278c077a47a33)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
StoreOpenWireVersion is not properly set on KahaDB index corruption recovery,AMQ-6082,12920174,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,08/Dec/15 19:47,08/Dec/15 20:15,14/Jul/23 05:44,08/Dec/15 20:15,5.13.0,,,,,,,,,5.13.1,5.14.0,,,Broker,KahaDB,,,,0,,,,,,"The BrokerService has a property called {{storeOpenWireVersion}} to set the specified OpenWire version to use for the store.

On start up, KahaDB will first set this value as the OpenWire version used in the index metadata in memory, and then if it detects a different version when reading in an existing index, it will reset the the version to the version that was detected.

The problem is that if a corrupted index is detected during the reading of the index, the metadata is recreated in the catch block but the storeOpenWireVersion that was set on the BrokerService is never copied back to the new Metadata.  This happens in the open() method of MessageDatabase.

This causes marshalling errors because the index will now be recreated with the default OpenWire version instead of the actual version that was set on the broker.

",,brianjohnson,cshannon,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Dec 08 20:15:38 UTC 2015,,,,,,,,,,,"0|i2pm7r:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Dec/15 20:12;jira-bot;Commit 7a7c70ad7524594339c4388b897fa1eac6988928 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=7a7c70a ]

https://issues.apache.org/jira/browse/AMQ-6082

Propertly re-setting the storeOpenWireVersion from the BrokerService
on the KahaDB Metadata if a corrupted index is detected and the
Metadata has to be recreated.
;;;","08/Dec/15 20:15;cshannon;Fix and test applied. KahaDB will now properly reset the configured version on the new Metadata after a detected corruption. ;;;","08/Dec/15 20:15;jira-bot;Commit 785041d20f3093b8a22a4428c91514534483fd8f in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=785041d ]

https://issues.apache.org/jira/browse/AMQ-6082

Propertly re-setting the storeOpenWireVersion from the BrokerService
on the KahaDB Metadata if a corrupted index is detected and the
Metadata has to be recreated.

(cherry picked from commit 7a7c70ad7524594339c4388b897fa1eac6988928)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQ4126Test#testOpenwireNIOSSLWithCertificate fails with JDK8,AMQ-6074,12919686,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,kearls,kearls,07/Dec/15 13:21,07/Dec/15 17:29,14/Jul/23 05:44,07/Dec/15 17:29,,,,,,,,,,5.12.2,5.13.1,5.14.0,,,,,,,0,,,,,,"Both AMQ4126Test.testOpenwireNIOSSLWithCertificate and AMQ4126Test.testOpenwireNIOSSLWithUsernameAndPassword fail when run with JDK8 with the errors below.  They both pass with JDK7.

-------------------------------------------------------
Running org.apache.activemq.bugs.AMQ4126Test
Tests run: 9, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 24.589 sec <<< FAILURE! - in org.apache.activemq.bugs.AMQ4126Test
testOpenwireNIOSSLWithUsernameAndPassword(org.apache.activemq.bugs.AMQ4126Test)  Time elapsed: 2.437 sec  <<< ERROR!
javax.jms.JMSException: Could not connect to broker URL: ssl://planet-express:34060. Reason: javax.net.ssl.SSLHandshakeException: Remote host closed connection during handshake
	at org.apache.activemq.bugs.AMQ4126Test.openwireConnectTo(AMQ4126Test.java:132)
	at org.apache.activemq.bugs.AMQ4126Test.testOpenwireNIOSSLWithUsernameAndPassword(AMQ4126Test.java:153)
Caused by: javax.net.ssl.SSLHandshakeException: Remote host closed connection during handshake
	at org.apache.activemq.bugs.AMQ4126Test.openwireConnectTo(AMQ4126Test.java:132)
	at org.apache.activemq.bugs.AMQ4126Test.testOpenwireNIOSSLWithUsernameAndPassword(AMQ4126Test.java:153)
Caused by: java.io.EOFException: SSL peer shut down incorrectly
	at org.apache.activemq.bugs.AMQ4126Test.openwireConnectTo(AMQ4126Test.java:132)
	at org.apache.activemq.bugs.AMQ4126Test.testOpenwireNIOSSLWithUsernameAndPassword(AMQ4126Test.java:153)

testOpenwireNIOSSLWithCertificate(org.apache.activemq.bugs.AMQ4126Test)  Time elapsed: 2.157 sec  <<< ERROR!
javax.jms.JMSException: Could not connect to broker URL: ssl://planet-express:38890. Reason: javax.net.ssl.SSLHandshakeException: Remote host closed connection during handshake
	at org.apache.activemq.bugs.AMQ4126Test.openwireConnectTo(AMQ4126Test.java:134)
	at org.apache.activemq.bugs.AMQ4126Test.testOpenwireNIOSSLWithCertificate(AMQ4126Test.java:158)
Caused by: javax.net.ssl.SSLHandshakeException: Remote host closed connection during handshake
	at org.apache.activemq.bugs.AMQ4126Test.openwireConnectTo(AMQ4126Test.java:134)
	at org.apache.activemq.bugs.AMQ4126Test.testOpenwireNIOSSLWithCertificate(AMQ4126Test.java:158)
Caused by: java.io.EOFException: SSL peer shut down incorrectly
	at org.apache.activemq.bugs.AMQ4126Test.openwireConnectTo(AMQ4126Test.java:134)
	at org.apache.activemq.bugs.AMQ4126Test.testOpenwireNIOSSLWithCertificate(AMQ4126Test.java:158)


Results :

Tests in error: 
  AMQ4126Test.testOpenwireNIOSSLWithCertificate:158->openwireConnectTo:134 » JMS
  AMQ4126Test.testOpenwireNIOSSLWithUsernameAndPassword:153->openwireConnectTo:132 » JMS

Tests run: 9, Failures: 0, Errors: 2, Skipped: 0
",,jira-bot,kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4126,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Dec 07 17:29:54 UTC 2015,,,,,,,,,,,"0|i2pj7b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Dec/15 17:27;jira-bot;Commit 315147c5ef3d545a868c74fe55d8ea7efb09f1d1 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=315147c ]

https://issues.apache.org/jira/browse/AMQ-6074

Make the transportConnector configs consistent across all four variants
by removing the enableCipherSuites option on openwire NIO+SSL.  RC4 was
enabled on the broker side but in later JDK releases that suite is
disbaled as it is insecure so the client side couldn't find a supported
suite.  ;;;","07/Dec/15 17:29;jira-bot;Commit 0ac1e23d004392624aa66a56908cb8f20b668b62 in activemq's branch refs/heads/activemq-5.12.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=0ac1e23 ]

https://issues.apache.org/jira/browse/AMQ-6074

Make the transportConnector configs consistent across all four variants
by removing the enableCipherSuites option on openwire NIO+SSL.  RC4 was
enabled on the broker side but in later JDK releases that suite is
disbaled as it is insecure so the client side couldn't find a supported
suite.
(cherry picked from commit 315147c5ef3d545a868c74fe55d8ea7efb09f1d1)
;;;","07/Dec/15 17:29;jira-bot;Commit 6e2252d08358f6dc2b0647587930459ead782899 in activemq's branch refs/heads/activemq-5.13.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=6e2252d ]

https://issues.apache.org/jira/browse/AMQ-6074

Make the transportConnector configs consistent across all four variants
by removing the enableCipherSuites option on openwire NIO+SSL.  RC4 was
enabled on the broker side but in later JDK releases that suite is
disbaled as it is insecure so the client side couldn't find a supported
suite.
(cherry picked from commit 315147c5ef3d545a868c74fe55d8ea7efb09f1d1)
;;;","07/Dec/15 17:29;tabish;Updated config now works on 1.7 or 1.8 JDKs;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WebSockets no longer working on most browers,AMQ-6073,12919037,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,a.marchand@progeri.com,a.marchand@progeri.com,04/Dec/15 18:13,07/Dec/15 15:37,14/Jul/23 05:44,07/Dec/15 15:37,5.13.0,,,,,,,,,5.13.1,5.14.0,,,STOMP,,,,,1,,,,,,"It is no longer possible to open a web socket from the recent browsers such as : chrome, IE 11 and safari. Firefox is still working.

It triggers an exception telling that the following header is missing: Sec-WebSocket-Protocol

",Mac OS X and Windows,a.marchand@progeri.com,cshannon,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Dec 07 15:37:59 UTC 2015,,,,,,,,,,,"0|i2pf7j:",9223372036854775807,Regression,,,,,,,,,,,,,,,,,,,,"04/Dec/15 20:46;cshannon;Thanks for pointing this out.  I had tested this with our integration tests which uses Jetty's client websocket client library and Firefox, and of course that's the one browser that works :)

The issue is that most likely you are using the stomp.js library and that library is setting the accepted sub protocol (the Sec-WebSocket-Protocol header) as ""v10.stomp"" and ""v11.stomp"".  However, the web socket server in ActiveMQ is setting the accepted protocol to just plain ""stomp"", so there is no match.  I will put a fix in for this so in 5.13.1 all 3 protocol strings will be there.

For now, as a work around, you should be able to specify the protocol if you are using stomp.js (or any other websocket client).  For stomp.js, if you look at http://jmesnil.net/stomp-websocket/doc/ there is information on how to change the subprotocol, which should be ""stomp"" for now.  For example, you would switch your connection line from: 

{{Stomp.client(url)}} to {{Stomp.client(url, \['stomp'])}}

and that should work.;;;","05/Dec/15 09:17;a.marchand@progeri.com;This is working thx.;;;","07/Dec/15 15:33;jira-bot;Commit 913f64476b66c452fa03cb4fb8c09d831825bca5 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=913f644 ]

https://issues.apache.org/jira/browse/AMQ-6073

WSServlet for websockets will attempt to detect the subprotocol
requested and respond with the appropriate one.  Currently the protocols
loaded are what stomp.js use for stomp (v11.stomp and v12.stomp).
If a protocol can't be found then a default will be returned, either
""stomp"" or ""mqtt"", which is the same behavior before this patch.

This will make it a bit easier to use stomp over websockets out of the
box as stomp.js will work by default.
;;;","07/Dec/15 15:33;jira-bot;Commit a4845253d01b2d6a184d5494da82be938e7a4233 in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=a484525 ]

https://issues.apache.org/jira/browse/AMQ-6073

WSServlet for websockets will attempt to detect the subprotocol
requested and respond with the appropriate one.  Currently the protocols
loaded are what stomp.js use for stomp (v11.stomp and v12.stomp).
If a protocol can't be found then a default will be returned, either
""stomp"" or ""mqtt"", which is the same behavior before this patch.

This will make it a bit easier to use stomp over websockets out of the
box as stomp.js will work by default.

(cherry picked from commit 913f64476b66c452fa03cb4fb8c09d831825bca5)
;;;","07/Dec/15 15:37;cshannon;By default the servlet will now properly handle stomp.js protocol formats (v10.stomp, v11.stomp, etc) and respond with the correct protocol. This will make it easier to use websockets since stomp.js is used by a lot of people so that library will now work without any other configuration.

If the protocol requested can't be found then it will revert back to the default, ie ""stomp"".  The protocol can always be configured by setting the ""Sec-WebSocket-Protocol "" header to either ""stomp"" or one of the other accepted protocols.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Log info about corrupted journal records at WARN level,AMQ-6071,12918919,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,tmielke,tmielke,04/Dec/15 08:37,03/Nov/16 21:26,14/Jul/23 05:44,04/Dec/15 11:34,5.13.0,,,,,,,,,5.12.2,5.13.1,5.14.0,,KahaDB,,,,,0,corruption,kahadb,,,,"Currently information about corrupted journal records are logged at INFO level.

{code}
2015-12-03 14:26:21,292 | INFO  | pool-12-thread-1 | Journal  | tore.kahadb.disk.journal.Journal  335 | 171 - org.apache.activemq.activemq-osgi - 5.11.1 | Corrupt journal records found in '/tmp/kahadb/db-1.log' between offsets: 2041..3156
{code}

We should change the log level to WARN. ",,githubbot,gtully,jira-bot,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Patch,,,,,,,,,9223372036854775807,,,Thu Nov 03 21:26:31 UTC 2016,,,,,,,,,,,"0|i2pehb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Dec/15 08:42;githubbot;GitHub user tmielke opened a pull request:

    https://github.com/apache/activemq/pull/162

    https://issues.apache.org/jira/browse/AMQ-6071 - Log info about corru…

    …pted journal records at WARN level

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/tmielke/activemq CorruptedJournalLogging

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/162.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #162
    
----
commit 911e04ca8b4365bb851bf0fa6fcac991b4492fb2
Author: Torsten Mielke <tmielke@redhat.com>
Date:   2015-12-04T08:39:03Z

    https://issues.apache.org/jira/browse/AMQ-6071 - Log info about corrupted journal records at WARN level

----
;;;","04/Dec/15 11:31;jira-bot;Commit 66c348b1b85e341ed508b9c10028c037a226dfb6 in activemq's branch refs/heads/master from [~tmielke]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=66c348b ]

https://issues.apache.org/jira/browse/AMQ-6071 - Log info about corrupted journal records at WARN level
;;;","04/Dec/15 11:34;gtully;thanks for the patch :-);;;","04/Dec/15 20:24;jira-bot;Commit 11ebaccd64db6413abdf3cd60b580e2703df1e8f in activemq's branch refs/heads/activemq-5.13.x from [~tmielke]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=11ebacc ]

https://issues.apache.org/jira/browse/AMQ-6071 - Log info about corrupted journal records at WARN level

(cherry picked from commit 66c348b1b85e341ed508b9c10028c037a226dfb6)
;;;","04/Dec/15 20:24;jira-bot;Commit 8daf6f503e45281b19324fa9bb240b77a10d2806 in activemq's branch refs/heads/activemq-5.12.x from [~tmielke]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=8daf6f5 ]

https://issues.apache.org/jira/browse/AMQ-6071 - Log info about corrupted journal records at WARN level

(cherry picked from commit 66c348b1b85e341ed508b9c10028c037a226dfb6)
;;;","03/Nov/16 21:26;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/162
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
originalDestination property of advisory messages set to message id in error,AMQ-6070,12917991,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,gtully,gtully,03/Dec/15 12:07,07/Mar/16 16:45,14/Jul/23 05:44,03/Dec/15 12:15,5.13.0,,,,,,,,,5.12.2,5.13.1,5.14.0,,Broker,,,,,0,,,,,,The discarded/consumed/delivered advisories have the messageid as the value of the property key originalDestination in error.,,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5209,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Mar 07 16:45:02 UTC 2016,,,,,,,,,,,"0|i2p8rb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Dec/15 12:14;jira-bot;Commit 75ff17af414b98dbdd891f66b9425692ca799fcc in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=75ff17a ]

https://issues.apache.org/jira/browse/AMQ-6070 - set correct originalDestination property value in advisories
;;;","03/Dec/15 14:01;jira-bot;Commit d5f6b0297e87a3080438f500e4314603e9ec94e4 in activemq's branch refs/heads/activemq-5.12.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=d5f6b02 ]

https://issues.apache.org/jira/browse/AMQ-6070 - set correct originalDestination property value in advisories

(cherry picked from commit 75ff17af414b98dbdd891f66b9425692ca799fcc)
;;;","03/Dec/15 14:01;jira-bot;Commit e1cf0d26782780c96bc9fc0dacc8483af1482ff5 in activemq's branch refs/heads/activemq-5.13.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e1cf0d2 ]

https://issues.apache.org/jira/browse/AMQ-6070 - set correct originalDestination property value in advisories

(cherry picked from commit 75ff17af414b98dbdd891f66b9425692ca799fcc)
;;;","08/Dec/15 11:13;jira-bot;Commit 179dc3acb28a8a7fc3c1eddf6c6ac54fe49836a5 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=179dc3a ]

https://issues.apache.org/jira/browse/AMQ-6070 - rework for virtual topic case, use the destination from the transient region destination rather than the message, such that consumer queue advisories work for delivered etc
;;;","08/Dec/15 11:26;jira-bot;Commit 88ec9dad9dc47790a3fc4e0f5ad939ea5530dad7 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=88ec9da ]

https://issues.apache.org/jira/browse/AMQ-5454 https://issues.apache.org/jira/browse/AMQ-6070 - in the case of duplicates from the store the regiondestination was not set
;;;","08/Dec/15 14:51;jira-bot;Commit 558dcc0479bc355fd5b2ecf0d62d1caefbb05fce in activemq's branch refs/heads/activemq-5.13.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=558dcc0 ]

https://issues.apache.org/jira/browse/AMQ-6070 - rework for virtual topic case, use the destination from the transient region destination rather than the message, such that consumer queue advisories work for delivered etc

(cherry picked from commit 179dc3acb28a8a7fc3c1eddf6c6ac54fe49836a5)
;;;","08/Dec/15 14:51;jira-bot;Commit c67590104b0836906b0701c641eabb6e66989da6 in activemq's branch refs/heads/activemq-5.13.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=c675901 ]

https://issues.apache.org/jira/browse/AMQ-5454 https://issues.apache.org/jira/browse/AMQ-6070 - in the case of duplicates from the store the regiondestination was not set

(cherry picked from commit 88ec9dad9dc47790a3fc4e0f5ad939ea5530dad7)
;;;","11/Dec/15 15:28;jira-bot;Commit 93092f7ea0e231cd7d615f8ee6420c9b73a5367f in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=93092f7 ]

https://issues.apache.org/jira/browse/AMQ-6070 - rework regression - KahaDBStoreRecoveryExpiryTest had NPE in the logs, region dest not set on recovery listener for expiry case
;;;","11/Dec/15 17:33;jira-bot;Commit aa2a85abe582b8ae118aef8bfdf2cab9a098c727 in activemq's branch refs/heads/activemq-5.13.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=aa2a85a ]

https://issues.apache.org/jira/browse/AMQ-6070 - rework regression - KahaDBStoreRecoveryExpiryTest had NPE in the logs, region dest not set on recovery listener for expiry case

(cherry picked from commit 93092f7ea0e231cd7d615f8ee6420c9b73a5367f)
;;;","07/Mar/16 16:45;jira-bot;Commit 67ae2bd8a486d065495eff97997c33cd7cf9f160 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=67ae2bd ]

https://issues.apache.org/jira/browse/AMQ-6070 - fix npe in org.apache.activemq.usecases.ExpiredMessagesWithNoConsumerTest#testExpireMessagesForDurableSubscriber
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Purging a Queue can lead to OOM error with prioritized messages,AMQ-6069,12917573,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,02/Dec/15 13:24,04/Dec/15 13:36,14/Jul/23 05:44,02/Dec/15 13:44,5.12.1,,,,,,,,,5.12.2,5.13.1,5.14.0,,Broker,,,,,0,,,,,,"The other day I noticed that when purging a large Queue I receive an out of memory error in the broker.  I did some investigation and it looks like this only happens if using a Queue that is configured to use prioritized messages.  After analyzing the heap dump it was discovered that after a purge, the dispatchPendingList in the Queue is still retaining all messages and not freeing them as it should.  ",,cshannon,jira-bot,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6066,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Dec 04 13:36:31 UTC 2015,,,,,,,,,,,"0|i2p66n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Dec/15 13:26;jira-bot;Commit 8363c99b51a98eb176e6baea82fcafce3225ba2c in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=8363c99 ]

https://issues.apache.org/jira/browse/AMQ-6069

Fixed contains method in PrioritizedPendinList which was not returning
correctly.  This was causing messages to not be removed from the
dispatchPendingList when purge was called inside a Queue leading to an
eventual OOM error if enough messages were purged. This fix also
improves performance of the contains method.
;;;","02/Dec/15 13:42;jira-bot;Commit db87a051ca22abec6ce3e296e0c7f6935becd803 in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=db87a05 ]

https://issues.apache.org/jira/browse/AMQ-6069

Fixed contains method in PrioritizedPendinList which was not returning
correctly.  This was causing messages to not be removed from the
dispatchPendingList when purge was called inside a Queue leading to an
eventual OOM error if enough messages were purged. This fix also
improves performance of the contains method.

(cherry picked from commit 8363c99b51a98eb176e6baea82fcafce3225ba2c)
;;;","02/Dec/15 13:43;jira-bot;Commit bbb002afda43e9bc0445bf050c808f117b7ab1e8 in activemq's branch refs/heads/activemq-5.12.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=bbb002a ]

https://issues.apache.org/jira/browse/AMQ-6069

Fixed contains method in PrioritizedPendinList which was not returning
correctly.  This was causing messages to not be removed from the
dispatchPendingList when purge was called inside a Queue leading to an
eventual OOM error if enough messages were purged. This fix also
improves performance of the contains method.

(cherry picked from commit 8363c99b51a98eb176e6baea82fcafce3225ba2c)
;;;","02/Dec/15 13:44;cshannon;Fix and test applied.  The dispatchedPendingList now properly clears out messages during a purge.;;;","04/Dec/15 13:36;cshannon;This is a similar fix to AMQ-6066 so this also improves performance.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RAR - cannot reset clientId on pooled managed connection,AMQ-6068,12917258,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,01/Dec/15 14:25,04/May/17 12:13,14/Jul/23 05:44,01/Dec/15 14:30,5.12.0,,,,,,,,,5.14.0,5.15.0,,,RAR,,,,,0,,,,,,"A managed connection returned to the pool has cleanup called, but cleanup is not releasing the underlying activemq connection  info and clientid. On the second attempt to reuse the connection, setting the id fails due to the pre existing state in error.
{code}[Server:eai01] 17:04:58,073 WARN  [org.jboss.jca.core.connectionmanager.pool.strategy.OnePool] (jmsListener-734) IJ000613: Throwable while trying to match managed connection, destroying connection: org.jboss.jca.core.connectionmanager.listener.TxConnectionListener@3e11f08f[state=NORMAL managed connection=[org.apache.activemq.ra.ActiveMQManagedConnection@34bc339a,ActiveMQConnection {id=ID:macbookpro-2.local-54186-1448868251571-1463:1,clientId=xxx,started=false}] connection handles=0 lastUse=1448874205871 trackByTx=false pool=org.jboss.jca.core.connectionmanager.pool.strategy.OnePool@2f2f39fd pool internal context=SemaphoreArrayListManagedConnectionPool@51eff7c[pool=ActiveMQConnectionFactory] xaResource=XAResourceWrapperImpl@623206[xaResource=[org.apache.activemq.ra.ActiveMQManagedConnection$1@64df868a,TransactionContext{transactionId=null,connection=ActiveMQConnection {id=ID:macbookpro-2.local-54186-1448868251571-1463:1,clientId=xxx,started=false}}] pad=false overrideRmValue=null productName=ActiveMQ productVersion=5.12.1 jndiName=java:/ra/activeMQ/ActiveMQConnectionFactory] txSync=null]: javax.resource.ResourceException: javax.jms.IllegalStateException: Setting clientID on a used Connection is not allowed
[Server:eai01] 	at org.apache.activemq.ra.ActiveMQManagedConnectionFactory.matchManagedConnections(ActiveMQManagedConnectionFactory.java:217) [activemq-ra-5.12.1.jar:5.12.1]
[Server:eai01] 	at org.jboss.jca.core.connectionmanager.pool.mcp.SemaphoreArrayListManagedConnectionPool.getConnection(SemaphoreArrayListManagedConnectionPool.java:314)
[Server:eai01] 	at org.jboss.jca.core.connectionmanager.pool.AbstractPool.getSimpleConnection(AbstractPool.java:453)
[Server:eai01] 	at org.jboss.jca.core.connectionmanager.pool.AbstractPool.getConnection(AbstractPool.java:425)
[Server:eai01] 	at org.jboss.jca.core.connectionmanager.AbstractConnectionManager.getManagedConnection(AbstractConnectionManager.java:354)
[Server:eai01] 	at org.jboss.jca.core.connectionmanager.tx.TxConnectionManagerImpl.getManagedConnection(TxConnectionManagerImpl.java:368)
[Server:eai01] 	at org.jboss.jca.core.connectionmanager.AbstractConnectionManager.allocateConnection(AbstractConnectionManager.java:510)
[Server:eai01] 	at org.apache.activemq.ra.ActiveMQConnectionFactory.createConnection(ActiveMQConnectionFactory.java:94) [activemq-ra-5.12.1.jar:5.12.1]
[Server:eai01] 	at org.apache.activemq.ra.ActiveMQConnectionFactory.createConnection(ActiveMQConnectionFactory.java:78) [activemq-ra-5.12.1.jar:5.12.1]{code}",,gtully,hanson,jira-bot,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu May 04 10:08:49 UTC 2017,,,,,,,,,,,"0|i2p48n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Dec/15 14:29;jira-bot;Commit 5a27bdf07e1cc77251d02d10b477b38d34413d91 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=5a27bdf ]

https://issues.apache.org/jira/browse/AMQ-6068 - fix and test. Cleanup from ra managed connection needs to remove the connection info, leaving the tcp connection free for another identity. Possibly this could be conditional on having a user supplied clientId
;;;","03/May/17 18:38;hanson;The fix for this bug introduces an unwanted behaviour in our activemq cluster.
We are running JBoss 6.4 with a Java EE application that processes around 25000 msg per minute throught couple of JMS queues.
The application consumes one message, does some logic and then post a message on another queue. 
The applucation is running with XA-transaction enabled.

We recently upgraded from activemq-rar.rar version 5.13.5 to 5.14.5 and noticed that the A-MQ cluster started to behave strange,
one issue was that the nodes in the cluster (network of brokers) ran out of native memory. 

We have now come to the conclusion that the fix for this issue forces the activemq client to send a new ConnectionInfo message
to the broker for every message it processes. This get passed around in the cluster via Advisory messages and both memory consumtion
and CPU load went up on all brokers. The information sent in the connectionInfo is in our case always the same thing, i.e. we don't set any clientId etc.

There is almost no use having a JCA connection pool for activemq resource adapter when it cant avoid sending ConnectionInfo messages.

We have reverted back to 5.13.5 for now.  ;;;","04/May/17 09:39;gtully;thanks for the feedback. It may make sense to have this full cleanup conditional on a user specifying a client id.
However, the old cleanup would remove any consumer info, so the advisory load would be the same;
Usually only demand information, ie: consumer add/remove is propagated across a network.

There may be something else in the mix that is leading to the excessive memory usage.;;;","04/May/17 10:08;jira-bot;Commit 2bd337993285d83549fdb9d9f9b96712bb6fed69 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=2bd3379 ]

[AMQ-6068] make full cleanup of the rar managed connection conditional on a user specified client id being present
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
OutOfMemoryError when expiring big amount of topic messages,AMQ-6067,12916971,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,phavran,phavran,30/Nov/15 14:42,26/Aug/16 18:35,14/Jul/23 05:44,26/Aug/16 18:34,5.10.0,,,,,,,,,5.14.1,5.15.0,,,JDBC,,,,,0,durable,durable_subscription,expiration,jdbc,"timeToLive,","There is a problem in
{noformat}
org.apache.activemq.broker.region.Topic.expireMessagesTask
{noformat}
When there are big amount of topic messages that are going to be expired, this {{expireMessagesTask}} loads all of the messages to memory. This causes
{noformat}
2015-11-24 11:05:46.359 WARN  [ActiveMQ Broker[JmsEngineActivemqBroker] Scheduler] [Topic] Failed to browse Topic: test-topic
java.lang.OutOfMemoryError: Java heap space
	at oracle.sql.BLOB.getBytes(BLOB.java:204)
	at oracle.jdbc.driver.T4CBlobAccessor.getBytes(T4CBlobAccessor.java:464)
	at oracle.jdbc.driver.OracleResultSetImpl.getBytes(OracleResultSetImpl.java:676)
	at org.apache.commons.dbcp.DelegatingResultSet.getBytes(DelegatingResultSet.java:203)
	at org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.getBinaryData(DefaultJDBCAdapter.java:80)
	at org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.doRecover(DefaultJDBCAdapter.java:418)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:309)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)
	at org.springframework.aop.interceptor.AbstractTraceInterceptor.invoke(AbstractTraceInterceptor.java:113)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at $Proxy14.doRecover(Unknown Source)
	at org.apache.activemq.store.jdbc.JDBCMessageStore.recover(JDBCMessageStore.java:236)
	at org.apache.activemq.store.ProxyTopicMessageStore.recover(ProxyTopicMessageStore.java:62)
	at org.apache.activemq.broker.region.Topic.doBrowse(Topic.java:594)
	at org.apache.activemq.broker.region.Topic.access$100(Topic.java:65)
	at org.apache.activemq.broker.region.Topic$6.run(Topic.java:733)
	at org.apache.activemq.thread.SchedulerTimerTask.run(SchedulerTimerTask.java:33)
	at java.util.TimerThread.mainLoop(Timer.java:512)
	at java.util.TimerThread.run(Timer.java:462)
{noformat}

The problem happens when using JDBC persistency with ActiveMQ 5.10.0. After a short look to source code, the same problem could be also with 5.12.1.

Test case:
- run ActiveMQ broker with JDBC persistency
- create subscription to a topic, but do not receive the messages
- send enough number of messages with short TimeToLive
- when expireMessagesTask is scheduled, it tries to load all of the messages and causes the OutOfMemoryError

It would be fine if
{noformat}
org.apache.activemq.store.jdbc.JDBCMessageStore.recover(MessageRecoveryListener)
{noformat}
will be updated like this:
{code:java}
public void recover(final MessageRecoveryListener listener) throws Exception {
  // Get all the Message ids out of the database.
  TransactionContext c = persistenceAdapter.getTransactionContext();
  try {
    c = persistenceAdapter.getTransactionContext();
    adapter.doRecover(c, destination, new JDBCMessageRecoveryListener() {
      public boolean recoverMessage(long sequenceId, byte[] data) throws Exception {
        if (listener.hasSpace()) {
          Message msg = (Message)wireFormat.unmarshal(new ByteSequence(data));
          msg.getMessageId().setBrokerSequenceId(sequenceId);
          return listener.recoverMessage(msg);
        } else {
          logger.debug(""Recovery limit of the messages has exceeded."");
          return false;
        }                    
      }

      public boolean recoverMessageReference(String reference) throws Exception {
        if (listener.hasSpace()) {
          return listener.recoverMessageReference(new MessageId(reference));
        } else {
          logger.debug(""Recovery limit of the message references has exceeded."");
          return false;
        }
      }
    });
  } catch (SQLException e) {
    JDBCPersistenceAdapter.log(""JDBC Failure: "", e);
    throw IOExceptionSupport.create(""Failed to recover container. Reason: "" + e, e);
  } finally {
    c.close();
  }
}
{code}

But I am not sure if this limitation is the best way, because there will be some messages that should be expired, but need to wait. So better solution might be to do this job in more separated transactions.",,cshannon,cszczotka,gtully,itsganu@gmail.com,jira-bot,phavran,smrui,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Aug 26 18:34:44 UTC 2016,,,,,,,,,,,"0|i2p2gv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"30/Nov/15 16:41;gtully;ideally we would be able to have a store cursor that would walk the messages in the store independent of the dispatch/prefetch cursors. In the meantime, the intent is that the destination memory limit or the MaxExpirePageSize (which ever is smaller) should limit a browse for expiry.
The logic in Queue.java does a loop paging in messages to reach the memory limit in maxPagesize chunks, that same logic could be applied to durable subs.
In any event, the limit needs to be checked via the hasSpace callback from the recover call so that fix looks sensible.;;;","30/Nov/15 16:57;gtully;the follow up to https://issues.apache.org/jira/browse/AMQ-3362 introduced a fix and test for this.
Maybe that test can be tweaked to reproduce again, not sure from where the regression arrived.
;;;","07/Jul/16 02:55;itsganu@gmail.com;We still see this problem with 5.13.2, The outofmemory happens whenever I set the expiremessages other than 0. When I set to 0 and run the test  no OOO and also GC activity looks good.

The other problem we see the durable topics does not seem to be getting cleaned up from active_msgs even if I set expiremessages to 60000 or 90000.;;;","20/Jul/16 11:13;smrui;We also observed similar message 

2016-07-20 09:19:20,084 | WARN  | Failed to browse Topic: cemp | org.apache.activemq.broker.region.Topic | ActiveMQ Broker[localhost] Scheduler
java.lang.OutOfMemoryError: Java heap space

Active MQ version: 5.13.3

Could someone please check this issue, this has become big pain now
Every time we have to restart to over come this issue, the number of messages is quite huge and we're planning to send the records in chunk but not sure if that can solve this issue;;;","04/Aug/16 10:30;cszczotka;Hi,
I see under debugger that for version 5.13.2 in org.apache.activemq.broker.region.Topic the expireMessagesTask does not check max expire page size which is passed as a parameter to the doBrowse method:

private final Runnable expireMessagesTask = new Runnable() {
    @Override
    public void run() {
        List<Message> browsedMessages = new InsertionCountList<Message>();
        doBrowse(browsedMessages, getMaxExpirePageSize());
    }
};


In my case I have default settings for max expire page size eq 400. In doBrowse method are collected all messages belongs to topic into browseList and never is checked max ( or called hasSpace internal method):

private void doBrowse(final List<Message> browseList, final int max) {
    try {
        if (topicStore != null) {
            final List<Message> toExpire = new ArrayList<Message>();
            topicStore.recover(new MessageRecoveryListener() {
                @Override
                public boolean recoverMessage(Message message) throws Exception {
                    if (message.isExpired()) {
                        toExpire.add(message);
                    }
                    browseList.add(message);
                    return true;
                }

                @Override
                public boolean recoverMessageReference(MessageId messageReference) throws Exception {
                    return true;
                }

                @Override
                public boolean hasSpace() {
                    return browseList.size() < max;
                }

                @Override
                public boolean isDuplicate(MessageId id) {
                    return false;
                }
            });
            final ConnectionContext connectionContext = createConnectionContext();
   ...
}
 
In other words if you have 1 000 000 messages under ACTIVEMQ_MSGS table for same topic all messages will be collected into memory ( browseList) and this can cause OutOfMemoryError.
;;;","04/Aug/16 10:45;gtully;Thank you [~cszczotka], that is indeed a bug, seems only return from recoverMessage is checked by the store.
maybe https://github.com/apache/activemq/blob/e2b4ca2c59a316be91cf391c758a10e518dd3a1f/activemq-unit-tests/src/test/java/org/apache/activemq/usecases/ExpiredMessagesWithNoConsumerTest.java can provide some inspiration for a unit test to capture this use case and the fix into the future.;;;","08/Aug/16 12:42;cszczotka;Question is how we can mitigate this memory issue for system where is running amq 5.13.2. I  can  try to increase –Xmx, make smaller expireMessagesPeriods so we will expire messages more frequently. Do you see other options ?;;;","08/Aug/16 13:19;cshannon;Not much can be done to truly fix it without a patch.  In the recover method of DefaultJDBCAdapter there needs to be a hasSpace() check done in the recovery loop so it can abort early if memory is full just like KahaDB does.  The proposed fix posted above does exactly this check and looks good to me so it can probably be targeted for a 5.14.1 release.

In the meantime, as you pointed out you can try things like more memory and smaller expire messages period to give yourself a better chance of not running out of memory.
;;;","09/Aug/16 07:19;cszczotka;Hi,
I see another issue in amq 5.13.2 related with topic message expiration.   I have one producer which send me messages to MyTopic and one durable subscriber/consumer. Messages are stored in DB and after 30 seconds amq broker trying to expire these messages ( I have configuration entry for this: <amq:policyEntry topic=""MyTopic.>"" expireMessagesPeriod=""30000""> ). I’m getting NullPointerException from AdvisoryBroker and messages are never expired and remain in activemq_msgs table.

java.lang.NullPointerException
	at org.apache.activemq.advisory.AdvisoryBroker.messageExpired(AdvisoryBroker.java:430)
	at org.apache.activemq.broker.BrokerFilter.messageExpired(BrokerFilter.java:313)
	at org.apache.activemq.broker.BrokerFilter.messageExpired(BrokerFilter.java:313)
	at org.apache.activemq.broker.BrokerFilter.messageExpired(BrokerFilter.java:313)
	at org.apache.activemq.broker.MutableBrokerFilter.messageExpired(MutableBrokerFilter.java:325)
	at org.apache.activemq.broker.region.Topic.messageExpired(Topic.java:776)
	at org.apache.activemq.broker.region.Topic.doBrowse(Topic.java:660)

It is logged on console as WARN:

09:25:30.274 [ActiveMQ Broker[my-broker] Scheduler] WARN  org.apache.activemq.advisory.AdvisoryBroker - Failed to fire expired advisory, reason: java.lang.NullPointerException



Under debugger I see that in org.apache.activemq.advisory.AdvisoryBroker.messageExpired  baseDestination is null and call baseDestination.getActiveMQDestination() generates NPE

@Override
public void messageExpired(ConnectionContext context, MessageReference messageReference, Subscription subscription) {
    super.messageExpired(context, messageReference, subscription);
    try {
        if (!messageReference.isAdvisory()) {
            BaseDestination baseDestination = (BaseDestination) messageReference.getMessage().getRegionDestination();
            ActiveMQTopic topic = AdvisorySupport.getExpiredMessageTopic(baseDestination.getActiveMQDestination());

 Below is code how messages are produced:

public static class Producer implements Runnable {
    public void run() {
        try {
            ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory(BROKER_ULR);
            Connection connection = connectionFactory.createConnection();
            connection.start();
            Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
            Topic destination = session.createTopic(""MyTopic"");

            MessageProducer producer = session.createProducer(destination);
            producer.setDeliveryMode(DeliveryMode.PERSISTENT);
            producer.setTimeToLive(30000);
          
            for(int i =0; i < 10; i ++) {
                String text = ""Message number "" + i +  ""  From: "" + Thread.currentThread().getName();
                TextMessage message = session.createTextMessage(text);
                message.setJMSDestination(destination);
                producer.send(destination, message);

                Thread.sleep(10000);
            }
            // Clean up
            session.close();
            connection.close();
        }
        catch (Exception e) {
            System.out.println(""Caught: "" + e);
            e.printStackTrace();
        }
    }
}

Under debugger I see that setter method setRegionDestination (org.apache.activemq.command.Message ) is called in org.apache.activemq.broker.region.Topic class before message is send:
  
@Override
public void send(final ProducerBrokerExchange producerExchange, final Message message) throws Exception {
    final ConnectionContext context = producerExchange.getConnectionContext();

    final ProducerInfo producerInfo = producerExchange.getProducerState().getInfo();
    producerExchange.incrementSend();
    final boolean sendProducerAck = !message.isResponseRequired() && producerInfo.getWindowSize() > 0
            && !context.isInRecoveryMode();

    message.setRegionDestination(this);

I don’t see call this setRegionDestination method when message is loaded from db into memory.

Do you have any idea what can be wrong ? Is it issue in my messages (something is missing)  or it is another bug in amq code ?
 
;;;","26/Aug/16 17:50;jira-bot;Commit b9fad53fc650a9026391bef0fd74aea1bea7ec1b in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b9fad53 ]

https://issues.apache.org/jira/browse/AMQ-6067

The JDBCMessageStore now checks hasSpace() when running a message
recovery listener to prevent going past the max configured page size
;;;","26/Aug/16 17:55;jira-bot;Commit a99edb81757899a58d22c54a59294f7d86949659 in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=a99edb8 ]

https://issues.apache.org/jira/browse/AMQ-6067

The JDBCMessageStore now checks hasSpace() when running a message
recovery listener to prevent going past the max configured page size

(cherry picked from commit b9fad53fc650a9026391bef0fd74aea1bea7ec1b)
;;;","26/Aug/16 18:34;cshannon;Patch and test applied to master and 5.14.x.;;;","26/Aug/16 18:34;cshannon;You should create a new Jira for this issue so it can be tracked separately.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Performance issue in OrderedPendingList,AMQ-6066,12916709,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,sits,sits,28/Nov/15 04:32,13/Feb/16 13:14,14/Jul/23 05:44,28/Nov/15 18:28,5.12.1,,,,,,,,,5.12.2,5.13.0,,,Broker,,,,,0,,,,,,"I have updated my application from ActiveMQ 5.3 to 5.11.1 and have noticed a serious performance degregation.  Running a number of jstacks I can see the broker is often stuck here:
{noformat}
""Queue:master-items"" Id=122 RUNNABLE
	at org.apache.activemq.broker.region.cursors.OrderedPendingList.contains(OrderedPendingList.java:144)
	at org.apache.activemq.broker.region.Queue.doPageInForDispatch(Queue.java:1930)
	at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:2119)
	at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1596)
	-  locked java.lang.Object@253c3089
	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:112)
	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:42)

	Number of locked synchronizers = 1
	- java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync@2eb46567
{noformat}
For this specific queue in my application, there were a large number of items in it.. around 100,000.  However I noticed the code for contains has:
{code}
    public boolean contains(MessageReference message) {
        if (message != null) {
            for (PendingNode value : map.values()) {
                if (value.getMessage().equals(message)) {
                    return true;
                }
            }
        }
        return false;
    }
{code}
This will obviously be very slow.  Given the Map is keyed by message ID, can't we do a .contains(message.getMessageId()) instead?  I noticed the remove() method does this.  I changed the code to do this:
{code}
@Override
public boolean contains(MessageReference message) {
    if (message != null) {
        return map.containsKey(message.getMessageId());
    }
    return false;
}
{code}
I got a speedup for my test which now takes 29 minutes from 41 minutes.  Can we get this change in to the upcoming 5.13 release (pretty please??)  It is a tiny (but very important) change for us.. many thanks.",,cshannon,jira-bot,lichtin,sits,tmielke,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5527,,,,,,,AMQ-6069,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Nov 30 19:23:03 UTC 2015,,,,,,,,,,,"0|i2p0un:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Nov/15 18:26;jira-bot;Commit 673c2928a1b567958c2d9eabe2995a039f2aa1e2 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=673c292 ]

https://issues.apache.org/jira/browse/AMQ-6066

Improving performance of OrderedPendingList contains method

Thanks for David Sitsky for the patch
;;;","28/Nov/15 18:28;cshannon;[~sits], Thanks for the patch, it looks fine to me and makes a lot of sense.  I went ahead and merged it and will let our CI run and check it out tomorrow to make sure no issues popped up.;;;","30/Nov/15 19:23;jira-bot;Commit 9617700725182c9d2b8ea475b75a5dec6b17ad10 in activemq's branch refs/heads/activemq-5.12.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=9617700 ]

https://issues.apache.org/jira/browse/AMQ-6066

Improving performance of OrderedPendingList contains method

Thanks for David Sitsky for the patch

(cherry picked from commit 673c2928a1b567958c2d9eabe2995a039f2aa1e2)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Allow selective use of broker systemExitOnShutdown from DefaultIOExceptionHandler,AMQ-6065,12916645,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,27/Nov/15 14:18,30/Nov/15 13:25,14/Jul/23 05:44,27/Nov/15 14:22,5.12.0,,,,,,,,,5.13.0,,,,Broker,Message Store,,,,0,,,,,,"the broker attribute systemExitOnShutdown is useful in a karaf container or shared vm where the broker is the primary occupant. If the broker dies, then the container should die.
For the broker, if the store dies, then the broker should die, but for other scenarios, like the broker is shutdown via jmx or for maintenance, exiting the container is not required.
Allowing the DefaultIOExceptionHandler, which gets to handle store exceptions, flip the systemExit bit allows a container to exit on this fatal condition. Ensuring that failover of the store can occur due the the exit of the jvm that has the store lock.
With karaf on windows, the file locker is not reliable on failback when the jvm remains active.",,cshannon,gtully,jira-bot,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Nov 30 13:25:49 UTC 2015,,,,,,,,,,,"0|i2p0gn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Nov/15 14:22;jira-bot;Commit 2aa172f905d3c783c722f6aedd0fe2c1af7b988d in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=2aa172f ]

https://issues.apache.org/jira/browse/AMQ-6065 - allow ioexception handler to flip the systemExitOnShutdown broker attribute before calling stop, i.e: exit on store io errors
;;;","29/Nov/15 15:06;jira-bot;Commit 39a20bd788c664105c18886abf77c372cf9229aa in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=39a20bd ]

https://issues.apache.org/jira/browse/AMQ-6065

Fixed test case so that a System.exit call will not take down the
JVM and cause the test suite to abort in Jenkins early
;;;","29/Nov/15 15:19;cshannon;[~gtully],  The test case here kept causing Jenkins to break because of the System.exit() call so I updated your test to use the System Rules library for JUnit which has an option to handle System.exit with a Security Manager to prevent an actual JVM exit.;;;","30/Nov/15 11:32;gtully;[~cshannon]  thanks for that. i overrode the broker service so i could check the flag and reset but missed the reset! pulling in that lib will also do it :-);;;","30/Nov/15 12:20;cshannon;Yeah, I thought about fixing it without using that library but I know in the past there have been other cases of System.exit being called in JUnit tests so I wanted to see how this solution would work because I figure it will happen again in the future :) ;;;","30/Nov/15 12:45;gtully;[~cshannon] I just peeked at that dependency - the license is not 100% compatible with ASF without some additional documentation[1] etc, I don't think we need to go there. I will revert the change and fix the test. 
btw: that security manager hack is in use at https://github.com/apache/activemq/blob/d6682e5476cd8cbefca04227ffa26a5d508d2494/activemq-unit-tests/src/test/java/org/apache/activemq/security/AbstractCachedLDAPAuthorizationMapLegacyTest.java#L405

[1] http://www.apache.org/legal/resolved.html;;;","30/Nov/15 12:53;cshannon;Ok, no problem.  I was thinking it would be ok because it's just a test dependency and wasn't being included with the release, plus it is the same license as older versions of JUnit.

As soon as you are done I will start the release process for 5.13.0.  ;;;","30/Nov/15 13:25;jira-bot;Commit 1bef4de4dc6744c23c22d2dac0faf0c9a6ab68d9 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=1bef4de ]

Revert ""https://issues.apache.org/jira/browse/AMQ-6065""
CPL dependency is not fully compatable with ASF and is not really necessary

This reverts commit 39a20bd788c664105c18886abf77c372cf9229aa.
;;;","30/Nov/15 13:25;jira-bot;Commit f09000d1e61a0131ee20df22b7b2ac6d297ebd07 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=f09000d ]

https://issues.apache.org/jira/browse/AMQ-6065 - ensure no call to exit. fix mock test to account for extra call
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException during KahaDB index recovery,AMQ-6063,12916189,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,25/Nov/15 15:56,25/Nov/15 16:04,14/Jul/23 05:44,25/Nov/15 16:04,5.12.1,,,,,,,,,5.13.0,,,,Broker,,,,,0,,,,,,"A broker I was testing ran out of disk space the other day when messages were being written to it because disk usage checks were not set.  After restart, the KahaDB index was detected as corrupted but during the recovery a NullPointerException occurred.

The error occurred in MessageDatabase inside recoveryIndex on this line:

{{sd.locationIndex.remove(tx.keys.location)}}",,cshannon,jira-bot,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Nov 25 16:04:45 UTC 2015,,,,,,,,,,,"0|i2oxnb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Nov/15 16:03;jira-bot;Commit 8f30866fdf89f25188a358f1b1c161b2f06de3f5 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=8f30866 ]

https://issues.apache.org/jira/browse/AMQ-6063

Fixing potential NullPointerException during KahaDB index recovery.
;;;","25/Nov/15 16:04;cshannon;Adding a null check allowed the index to continue recovering and for the broker to restart properly.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broker goes 100% CPU on multi-queue command line browse,AMQ-6062,12916122,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,doomytroo,doomytroo,25/Nov/15 11:22,02/Dec/15 17:51,14/Jul/23 05:44,02/Dec/15 15:59,5.12.0,5.9.1,,,,,,,,5.12.2,5.13.1,5.14.0,,Broker,,,,,0,,,,,,"Hello,
The Broker may enter a state of high CPU consumption (100% or 200% if 2 browse enter the infinite loop in the same time on a multi-core) when a command line browse on multiple queues is issued. When that arrives the only way we found to restore the situation was to kill the broker and restart because he was not responding anymore to clients. Killing the clients and the browse process does not lower the CPU usage of the broker.
I assume the infinite loop based on successive thread dumps that show the browse thread remaines in the same code zone:

Here is an example of the Browse thread call stack trace, when Broker is in high CPU usage state:
{quote}
at java/util/HashMap.rehash(HashMap.java:782(Compiled Code))
at java/util/HashMap.rehash(HashMap.java:819(Compiled Code))
at java/util/HashMap.putImpl(HashMap.java:702(Compiled Code))
at java/util/HashMap.put(HashMap.java:680(Compiled Code))
at org/apache/activemq/broker/region/*QueueBrowserSubscription.isDuplicate(QueueBrowserSubscription.java:72*(Compiled Code))
at org/apache/activemq/broker/region/*Queue.iterate(Queue.java:1688*(Compiled Code))
at org/apache/activemq/thread/PooledTaskRunner.runTask(PooledTaskRunner.java:133(Compiled Code)).
{quote}

Tested ActiveMQ versions: 5.9.1 and the last, 5.12.0, but of course I suppose all in beetwen are affected.

The cause seems to be the non-threadsafe usage of the *audit HashMap* member of *QueueBrowserSubscription.java* class.
Here are some facts on non thread-safe HashMap use problems:
*High CPU / Hang on java.util.HashMap.findNonNullKeyEntry() due to non-thread-safe usage of HashMap*
http://www-01.ibm.com/support/docview.wss?uid=swg21597581
*IZ73767: INFINITE LOOP CAN OCCUR IN HASHMAP*
http://www-01.ibm.com/support/docview.wss?uid=swg1IZ73767

I must underline that *this is not an IBM JDK specific problem as the IBM JDK is based on Oracle JDK* and changing the JDK or JRE is not a solution.

The scenario may be produced with a fresh non modified install (default config) of ActiveMQ broker:
1. set ACTIVEMQ_HOME, JAVA_HOME and PATH to point accordingly to the right activemq, and Java version.
2. cd $ACTIVEMQ_HOME/bin; ./activemq start
3. inject at least 2000 messages in each of two ques, say QA.ONE and QA.TWO
4. $ $ACTIVEMQ_HOME/bin/activemq browse --view JMSDestination,JMSMessageID --amqurl tcp://localhost:61616 QA.*

The simplest fix that I suggest is to change in the *QueueBrowserSubscription.java* class the type of *audit* member to *ConcurrentHashMap*.","Linux Ubuntu, Aix, with both Java 6 and Java 7 (either IBM or Oracle)",cshannon,doomytroo,jira-bot,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,86400,86400,,0%,86400,86400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Dec/15 15:31;doomytroo;AMQ6062Test.java;https://issues.apache.org/jira/secure/attachment/12775318/AMQ6062Test.java","25/Nov/15 13:11;doomytroo;ActiveMQ_BrowseInfiniteLoopUseCase.jmx;https://issues.apache.org/jira/secure/attachment/12774337/ActiveMQ_BrowseInfiniteLoopUseCase.jmx","02/Dec/15 15:31;doomytroo;HotSpotThreadDump.txt;https://issues.apache.org/jira/secure/attachment/12775319/HotSpotThreadDump.txt","02/Dec/15 15:35;doomytroo;IBMjava7AndAMQMaster.javacore.20151202.161643.18441.0001.txt;https://issues.apache.org/jira/secure/attachment/12775321/IBMjava7AndAMQMaster.javacore.20151202.161643.18441.0001.txt","25/Nov/15 13:19;doomytroo;ThreadStatusAnalysis_2015-11-25_14h13m33s.png;https://issues.apache.org/jira/secure/attachment/12774338/ThreadStatusAnalysis_2015-11-25_14h13m33s.png","02/Dec/15 14:56;doomytroo;activemq-test.log;https://issues.apache.org/jira/secure/attachment/12775308/activemq-test.log",,,,6.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,http://www-01.ibm.com/support/docview.wss?uid=swg1IZ73767,,,,,,,,,,,9223372036854775807,,,Wed Dec 02 17:51:35 UTC 2015,,,,,,,,,,,"0|i2ox8f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Nov/15 13:11;doomytroo;JMeter test plan to produce the bug;;;","25/Nov/15 13:19;doomytroo;Thread dump analysis screenshot;;;","25/Nov/15 18:43;tabish;Have you tried reproducing this with a JMS client in a Unit test, would be a useful validation of any fixes.  ;;;","26/Nov/15 08:59;doomytroo;I already attached a JMeter test plan that injects messages in 2 queues and after that starts calling browse in 2 threads.
You just have to adapt the paths to your ActiveMQ.

If you meant a JUnit test, no I have none. I tried first but I found it was complicated to create the QueueBrowseSubscription with all the right parameters, contexts etc. embeded Broker etc. etc.

With JMeter it was pretty easy to reproduce.;;;","02/Dec/15 13:41;doomytroo;I attached the JUnit test that produces the bug and a thread dump when it occurs.
Just put it in /activemq-parent-5.9.1/activemq-unit-tests/src/test/java/org/apache/activemq/console/command/
and test it.
It works for me with 5.9.1 tag sources and IBM java6 on Ubuntu 12.04 LTS.
The test is a bit complicated because I tried to make it fail() and fail fast, do a thread dump and not block or kill the JVM without a JUnit failure.

I run the test from Eclipse. I just came to realise you might test from command line or other ways (in Jenkins, etc) and I did a test on command line and JUnit does not fail because the kill is faster and maven test is in success in spite of the bug detection.
Anyway the thread dump is generated to prove the bug.;;;","02/Dec/15 14:08;doomytroo;The log is captured in /activemq-parent-5.9.1/activemq-unit-tests/target/activemq-test.log;;;","02/Dec/15 14:08;tabish;Have you tested it against the code on master, there is no support for 5.9.x releases so if you are looking for a fix there you will be disappointed.  Would be good for you to confirm that you see the same problem when you checkout the master branch code and run your test there.  ;;;","02/Dec/15 14:11;doomytroo;I'll try and I'll keep you informed.;;;","02/Dec/15 14:56;doomytroo;I attached a fixed version of the test that produces the bug on the current master sources with IBM java 7. Also the test log and a thread dump made with Java 7.
Copy the new test in the same place in activemq-unit-tests and give it a try.;;;","02/Dec/15 15:00;tabish;Did you also try it using the Oracle JDK or OpenJDK ?  most of use don't have a system with IBM JDK installed;;;","02/Dec/15 15:31;doomytroo;I modified again the test to increase the number of browse tasks and the timeout because on command line it is faster.
And yes I reproduced the bug wit HotSpot java and I attached the thread dump. 

{code}
$ java -version
java version ""1.7.0_51""
Java(TM) SE Runtime Environment (build 1.7.0_51-b13)
Java HotSpot(TM) 64-Bit Server VM (build 24.51-b03, mixed mode)

{code};;;","02/Dec/15 15:53;jira-bot;Commit d346a765e3064a951c5d55119b80b8432a45bcb6 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=d346a76 ]

https://issues.apache.org/jira/browse/AMQ-6062

Updated QueueBrowserSubscription to use a ConcurrentMap to avoid a
potential race condition when multiple queue browsers browse
multiple queues.
;;;","02/Dec/15 15:55;jira-bot;Commit 819e512138f55d70197949a4fae208a81ea86502 in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=819e512 ]

https://issues.apache.org/jira/browse/AMQ-6062

Updated QueueBrowserSubscription to use a ConcurrentMap to avoid a
potential race condition when multiple queue browsers browse
multiple queues.

(cherry picked from commit d346a765e3064a951c5d55119b80b8432a45bcb6)
;;;","02/Dec/15 15:56;jira-bot;Commit 58359a85d86f1d578fd706c06763ca6b0cec0a2d in activemq's branch refs/heads/activemq-5.12.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=58359a8 ]

https://issues.apache.org/jira/browse/AMQ-6062

Updated QueueBrowserSubscription to use a ConcurrentMap to avoid a
potential race condition when multiple queue browsers browse
multiple queues.

(cherry picked from commit d346a765e3064a951c5d55119b80b8432a45bcb6)
;;;","02/Dec/15 15:59;cshannon;[~doomytroo], Thanks for the test case and suggested fix.  I was able to see with the test case and your description that there is indeed a race condition so I went ahead and updated to use a ConcurrentMap to avoid the issue going forward.;;;","02/Dec/15 17:40;doomytroo;Thank you very much. I tested your fix with HotSpot and IBM and it's OK.
In case you want to add the test on Git repo you'll have to work on it because it is not deterministic depending on timeout and browse task count parameters when the timeout arrives before all browse finish. It needs to be fixed to be fast enough but nut so fast :) (to produce the bug), and deterministic.;;;","02/Dec/15 17:51;cshannon;Yeah, since the test wasn't completely reliable I left it out for now.  If I get time I can go back and look at it but there are already a bunch of other queue browser tests that exist which should catch any problems with this commit.  It was a pretty straight forward fix so it should be fine.

5.12.2 should hopefully be released pretty soon (maybe a week or 2) and it will have the fix.  5.13.1 will also have it and that will go out in probably 1-2 months.;;;",,,,,,,,,,,,,,,,,,,,,,,,
"""Will message"" retain property is not respected",AMQ-6060,12915785,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,24/Nov/15 12:47,24/Nov/15 13:14,14/Jul/23 05:44,24/Nov/15 13:14,5.12.0,,,,,,,,,5.13.0,,,,MQTT,,,,,0,,,,,,"The ""will message"" in MQTT can be sent with the retain flag on, meaning that it will be sent to the new subscribers as well. We need to send it with this flag on, if it was specified by the client.",,dejanb,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Nov 24 13:13:45 UTC 2015,,,,,,,,,,,"0|i2ov5j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Nov/15 13:13;jira-bot;Commit 9bc28214d53351a6fa6cf459383d5e449a100d2d in activemq's branch refs/heads/master from [~dejanb]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=9bc2821 ]

https://issues.apache.org/jira/browse/AMQ-6060 - retain will message
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DLQ message lost after broker restarts,AMQ-6059,12915655,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,nevinchen,nevinchen,24/Nov/15 01:49,12/Jan/16 17:00,14/Jul/23 05:44,12/Jan/16 16:58,5.12.1,,,,,,,,,5.13.1,5.14.0,,,Broker,,,,,0,,,,,,"*How to Reproduce*
1. Default ActiveMQ 5.12.1 package with the attached activemq.xml.
2. Send a message to a queue with expiration time one second.
4. After the expiry time, the message will be moved to DLQ. This can be monitored by the AMQ web console.
5. Restart AMQ. You will find that the message disappear from the AMQ web console. Try to consume the message from the DLQ, nothing is received.

*Cause Analysis*
1. KahaDB works well. It means the cause should be related to the leveldb mechanism.
2. In my understanding, the JMS message is persistent to a log file and leveldb will maintain to a reference to the position where the JMS message is stored in the log. After a message expires, AMQ will copy the expired JMS message and the reference to the posistion is also copied, then send to DLQ. When AMQ restarts, DLQ will recover the message from the persistent storage. Since the DLQ message shares the same reference to the JMS message data, the message in DLQ also has the expiration time that is the same as the original message. The expiry scanner will detect the DLQ message expires and remove it. That's why the message is lost after restart.
3. Actually, the message to DLQ is not completely the same as the origial message. Because the expiration time will be reset to 0 and some more message properties will be added. The DLQ message should not reuse the same reference to message data. For more details, please refer to org.apache.activemq.broker.region.RegionBroker.sendToDeadLetterQueue(ConnectionContext context, MessageReference node, Subscription subscription, Throwable poisonCause) method.

*Fixed Proposal*
In org.apache.activemq.broker.region.RegionBroker.sendToDeadLetterQueue(ConnectionContext context, MessageReference node, Subscription subscription, Throwable poisonCause) method, after the message is copied, set the dataLocator to null (message.getMessageId().setDataLocator(null) to force leveldb to save the new JMS message data and refer to a new position.","Windows, Linux Redhat",jira-bot,nevinchen,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Nov/15 02:04;nevinchen;LevelDBStoreRecoveryBrokerTest.java;https://issues.apache.org/jira/secure/attachment/12773965/LevelDBStoreRecoveryBrokerTest.java","24/Nov/15 01:54;nevinchen;activemq.xml;https://issues.apache.org/jira/secure/attachment/12773959/activemq.xml",,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jan 12 17:00:51 UTC 2016,,,,,,,,,,,"0|i2oucn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Nov/15 02:04;nevinchen;Test case to reproduce this issue. It is expected to run in activemq-unit-tests project.;;;","12/Jan/16 16:51;jira-bot;Commit 505a76a8bb7180debbd36637dce1b9101150d0b4 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=505a76a ]

https://issues.apache.org/jira/browse/AMQ-6059

Ensure that a message sent to the store for the DLQ is rewritten so that
its updated values are written to prevent exirpation loops and loss of
reollback cause etc.;;;","12/Jan/16 16:58;tabish;Analysis was correct, the message needs to be rewritten in the store when sent into the DLQ to update the message object otherwise the old expiration is retained and newer metadata added is lost.  ;;;","12/Jan/16 17:00;jira-bot;Commit b04cfeb8af2cdf7d9ccbcd65a309478d4e01db9f in activemq's branch refs/heads/activemq-5.13.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b04cfeb ]

https://issues.apache.org/jira/browse/AMQ-6059

Ensure that a message sent to the store for the DLQ is rewritten so that
its updated values are written to prevent exirpation loops and loss of
reollback cause etc.
(cherry picked from commit 505a76a8bb7180debbd36637dce1b9101150d0b4)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Certain VirtualTopic configurations send messages to the wrong queue,AMQ-6058,12915529,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,23/Nov/15 19:42,04/Jun/16 03:17,14/Jul/23 05:44,23/Nov/15 20:38,5.12.1,,,,,,,,,5.13.0,,,,Broker,,,,,0,,,,,,"When testing out configurations of VirtualTopics I noticed some of the behavior doesn't seem quite right when using certain VirtualTopic set ups.

Consider a VirtualTopic with the default name of {{>}} and a prefix called {{q.test.vt.*.}}  Normally the desired behavior is to only forward messages to consumers with that prefix.  For example,  if a message is published to a topic called {{mytopic}}, then the consumer would be on queue {{q.test.vt.myconsumer.mytopic}}.  

However, I've noticed that based on the interceptor logic that uses the destination map to find matching destinations, if a higher level queue exists, such as {{q.test.>}} in this case, that queue will also receive the message.

It seems desirable that only queues starting with the defined prefix should get the message so we should probably do a quick sanity check in the VirtualTopicInterceptor to make sure the destinations that match start with the VirtualTopic prefix defined.",,brianjohnson,cshannon,githubbot,jira-bot,jonathanmalek,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Sat Jun 04 03:17:25 UTC 2016,,,,,,,,,,,"0|i2otkn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Nov/15 20:11;githubbot;GitHub user czobrisky opened a pull request:

    https://github.com/apache/activemq/pull/159

    AMQ-6058 added a check to make sure the destination starts with the v…

    …irtual topic prefix.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/czobrisky/activemq AMQ-6058

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/159.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #159
    
----
commit dca6e4506eab2c6f5752085e39dd3368ead4afed
Author: Chad Zobrisky <czobrisky@gmail.com>
Date:   2015-11-23T19:49:02Z

    AMQ-6058 added a check to make sure the destination starts with the virtual topic prefix.

----
;;;","23/Nov/15 20:36;jira-bot;Commit dca6e4506eab2c6f5752085e39dd3368ead4afed in activemq's branch refs/heads/master from [~czobrisky]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=dca6e45 ]

AMQ-6058 added a check to make sure the destination starts with the virtual topic prefix.
;;;","23/Nov/15 20:36;jira-bot;Commit bc9edf00d198634722e4e8a2699a285e6050c184 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=bc9edf0 ]

https://issues.apache.org/jira/browse/AMQ-6058

Updating patch to make sure SelectorAwareVirtualTopics are covered
and code cleanup
;;;","23/Nov/15 20:36;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/159
;;;","23/Nov/15 20:38;cshannon;Patch applied with thanks to Chad Zobrisky.;;;","04/Jun/16 03:17;jonathanmalek;We have some brokers (5.11.1) configured with {{prefix=""\*.\*.""}}.  After the upgrade to 5.13.3, I believe the change to shouldDispatch(...) is failing the destination name check, and the result is that messages are not being dispatched to the virtual topics.

A naive (but working) option would be to change the shouldDispatch(...) from:

bq. {{return prefix.contains("".\*"") ? ...}}

to:

bq. {{return prefix.contains("".\*"") && !prefix.startsWith(""\*"") ? ...}}

Which should satisfy both objectives: the original objective of AMQ-6058, and the need to support virtual topics whose prefix starts with a wildcard.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SASL PLAIN auth with AMQP doesn't take authzid into account,AMQ-6055,12914824,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,,simmel,simmel,20/Nov/15 12:08,02/Nov/19 05:36,14/Jul/23 05:44,20/Nov/15 19:43,5.12.1,,,,,,,,,5.12.2,5.13.0,,,AMQP,Broker,Security/JAAS,,,0,,,,,,"SASL PLAIN authentication with AMQP doesn't take authzid into account and fails authentication when it's fully legal in SASL PLAIN.

See [PROTON-1055] for a more detailed description including debug logs.","# lsb_release -a
No LSB modules are available.
Distributor ID: Ubuntu
Description:    Ubuntu 14.04.3 LTS
Release:        14.04
Codename:       trusty
# uname -a
Linux esb-test-mq01 3.13.0-67-generic #110-Ubuntu SMP Fri Oct 23 13:24:41 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux",jira-bot,simmel,tabish,zgl,zkraus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,PROTON-1055,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Nov 20 21:18:49 UTC 2015,,,,,,,,,,,"0|i2op87:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Nov/15 17:58;jira-bot;Commit ce5628a389b5491975fda0493ab9073cca6cb87e in activemq's branch refs/heads/master from Robert Gemmell
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=ce5628a ]

AMQ-6055: uptest test client and add [currently-ignored] test to demonstrate the issue
;;;","20/Nov/15 18:19;jira-bot;Commit d7e4c6d96f0e5b26d4b392e6b36595ee644fb9a2 in activemq's branch refs/heads/master from Robert Gemmell
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=d7e4c6d ]

AMQ-6055: fix for earlier change to plain response encoding
;;;","20/Nov/15 19:39;jira-bot;Commit b5dd0a16f4197cfab086b3139892a73b27c8ac74 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b5dd0a1 ]

https://issues.apache.org/jira/browse/AMQ-6055

Account for Authzid in SASL PLAIN mechanism and provide a means to fail
the authorization if the challenge response is invalid.  Update the
client to properly exclude sasl mechanism that don't apply to it's
configured credentials such as using only ANONYMOUS when no user or
password is set.  ;;;","20/Nov/15 19:43;tabish;Fixes and tests added.;;;","20/Nov/15 21:18;jira-bot;Commit e5c46df48c153129b6085301018ccda620d15ebc in activemq's branch refs/heads/activemq-5.12.x from Robert Gemmell
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e5c46df ]

AMQ-6055: uptest test client and add [currently-ignored] test to demonstrate the issue

(cherry picked from commit ce5628a389b5491975fda0493ab9073cca6cb87e)
;;;","20/Nov/15 21:18;jira-bot;Commit c8994b1d2eef47f68f265d06c3572624e23ef2bc in activemq's branch refs/heads/activemq-5.12.x from Robert Gemmell
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=c8994b1 ]

AMQ-6055: fix for earlier change to plain response encoding

(cherry picked from commit d7e4c6d96f0e5b26d4b392e6b36595ee644fb9a2)
;;;","20/Nov/15 21:18;jira-bot;Commit 451344486be8d82a2a9cde093fedf0737104ab83 in activemq's branch refs/heads/activemq-5.12.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=4513444 ]

https://issues.apache.org/jira/browse/AMQ-6055

Account for Authzid in SASL PLAIN mechanism and provide a means to fail
the authorization if the challenge response is invalid.  Update the
client to properly exclude sasl mechanism that don't apply to it's
configured credentials such as using only ANONYMOUS when no user or
password is set.
(cherry picked from commit b5dd0a16f4197cfab086b3139892a73b27c8ac74)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Network of brokers on duplex mode reports InstanceAlreadyExistsException on already existing destinations,AMQ-6052,12914299,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,Altaflux,Altaflux,19/Nov/15 00:03,02/Feb/16 16:19,14/Jul/23 05:44,02/Feb/16 16:19,5.10.1,5.11.3,5.12.1,,,,,,,5.12.3,5.13.1,5.14.0,,Network of Brokers,,,,,0,jmx,networkBridge,networkConnector,,,"When using a network of brokers apparently on duplex with destinations which were already created on each MBeanBridgeDestination.onOutboundMessage() and MBeanBridgeDestination.onInboundMessage() the bridge tries to register the MBean of a destination which has already been created.

Here is a discussion that started but a ticket was not created.
http://activemq.2283324.n4.nabble.com/Broker-log-full-of-Failed-to-register-queue-messages-td4685241.html

Although this does not seem to impact the functionality of the application it creates a massive amount of logs as this message repeats for every received message. 

This are the important bits of my activeMQ configuration:
{code:xml}
       <networkConnectors>
            <networkConnector name=""mailSystemConnector"" uri=""multicast://default"" conduitSubscriptions=""true"" duplex=""true"" >
                <dynamicallyIncludedDestinations>
                    <queue physicalName=""mailsystem.templateprocessor""/>
                    <queue physicalName=""DLQ.mailsystem.templateprocessor""/>
                </dynamicallyIncludedDestinations>
            </networkConnector>
        </networkConnectors>

        <destinations>
            <queue physicalName=""SCE""/>
            <queue physicalName=""mailsystem.templateprocessor""/>
            <queue physicalName=""ActiveMQ.DLQ""/>
        </destinations>

        <managementContext>
            <managementContext createConnector=""true""
                               connectorPort=""1091""
                               jmxDomainName=""org.apache.activemq""/>
        </managementContext>


        <!-- The transport connectors ActiveMQ will listen to -->
        <transportConnectors>
            <transportConnector name=""openwire nio"" uri=""nio://0.0.0.0:61616"" updateClusterClients=""true""
                                rebalanceClusterClients=""true"" updateClusterClientsOnRemove=""true""/>
            <transportConnector name=""openwireDiscovery"" uri=""tcp://0.0.0.0:0""
                                discoveryUri=""multicast://default"" updateClusterClients=""true""
                                rebalanceClusterClients=""true"" updateClusterClientsOnRemove=""true""/>
            <transportConnector name=""stomp"" uri=""stomp://0.0.0.0:61613"" updateClusterClients=""true""
                                rebalanceClusterClients=""true"" updateClusterClientsOnRemove=""true""/>

        </transportConnectors>
{code}

And this is the output log generated:
{noformat}
2015-11-18 15:43:10,497 [.69:41090@36731] WARN  MBeanBridgeDestination         - Failed to register queue://mailsystem.templateprocessor
javax.management.InstanceAlreadyExistsException: org.apache.activemq:brokerName=mailsystemBroker,connector=duplexNetworkConnectors,networkConnectorName=#0,networkBridge=tcp_//10.211.2.69_41090,type=Broker,direction=inbound,destinationType=Queue,destinationName=mailsystem.templateprocessor
        at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437)
        at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898)
        at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966)
        at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900)
        at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324)
        at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522)
        at org.apache.activemq.broker.jmx.ManagementContext.registerMBean(ManagementContext.java:380)
        at org.apache.activemq.broker.jmx.AnnotatedMBean.registerMBean(AnnotatedMBean.java:72)
        at org.apache.activemq.network.MBeanBridgeDestination.onInboundMessage(MBeanBridgeDestination.java:97)
        at org.apache.activemq.network.MBeanNetworkListener.onInboundMessage(MBeanNetworkListener.java:115)
        at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceInboundMessage(DemandForwardingBridgeSupport.java:1680)
        at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceRemoteCommand(DemandForwardingBridgeSupport.java:649)
        at org.apache.activemq.network.DemandForwardingBridgeSupport$3.onCommand(DemandForwardingBridgeSupport.java:224)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)
        at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
        at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:270)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)
        at java.lang.Thread.run(Thread.java:745)
{noformat}

{noformat}
		2015-11-18 15:43:09,634 [Broker] Task-16] WARN  MBeanBridgeDestination         - Failed to register queue://mailsystem.templateprocessor
javax.management.InstanceAlreadyExistsException: org.apache.activemq:brokerName=mailsystemBroker,connector=networkConnectors,networkConnectorName=mailSystemConnector,networkBridge=tcp_//10.211.2.70_36731,type=Broker,direction=outbound,destinationType=Queue,destinationName=mailsystem.templateprocessor
        at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437)
        at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898)
        at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966)
        at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900)
        at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324)
        at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522)
        at org.apache.activemq.broker.jmx.ManagementContext.registerMBean(ManagementContext.java:380)
        at org.apache.activemq.broker.jmx.AnnotatedMBean.registerMBean(AnnotatedMBean.java:72)
        at org.apache.activemq.network.MBeanBridgeDestination.onOutboundMessage(MBeanBridgeDestination.java:72)
        at org.apache.activemq.network.MBeanNetworkListener.onOutboundMessage(MBeanNetworkListener.java:107)
        at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceOutbound(DemandForwardingBridgeSupport.java:1673)
        at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceLocalCommand(DemandForwardingBridgeSupport.java:1035)
        at org.apache.activemq.network.DemandForwardingBridgeSupport$2.onCommand(DemandForwardingBridgeSupport.java:206)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)
        at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
        at org.apache.activemq.transport.vm.VMTransport.doDispatch(VMTransport.java:138)
        at org.apache.activemq.transport.vm.VMTransport.dispatch(VMTransport.java:130)
        at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:107)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:68)
        at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
        at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1419)
        at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:938)
        at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:984)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:133)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:48)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
        at java.lang.Thread.run(Thread.java:745)
{noformat}",Linux,Altaflux,cshannon,felixehm,githubbot,gtully,jira-bot,tabish,tbain98,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Nov/15 02:39;Altaflux;AMQ_6052-2.patch;https://issues.apache.org/jira/secure/attachment/12773634/AMQ_6052-2.patch","20/Nov/15 17:02;Altaflux;AMQ_6052.patch;https://issues.apache.org/jira/secure/attachment/12773542/AMQ_6052.patch",,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Feb 02 16:19:43 UTC 2016,,,,,,,Patch Available,,,,"0|i2om07:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Nov/15 02:29;Altaflux;I have found the issue that activates this problem.

{code:title=MBeanBridgeDestination.java|borderStyle=solid}
    private Map<ActiveMQDestination, ObjectName> destinationObjectNameMap = new ConcurrentHashMap<ActiveMQDestination, ObjectName>();
    private Map<ActiveMQDestination, NetworkDestinationView> outboundDestinationViewMap = new ConcurrentHashMap<ActiveMQDestination, NetworkDestinationView>();
    private Map<ActiveMQDestination, NetworkDestinationView> inboundDestinationViewMap = new ConcurrentHashMap<ActiveMQDestination, NetworkDestinationView>();
{code}

Both onOutboundMessage() and onInboundMessage() use the  destinationObjectNameMap to register the ObjectName of the NetworkDestinationView. But each other overwrite their value when using a duplex connection.

{code:title=MBeanBridgeDestination.java|borderStyle=solid}
public void onInboundMessage(Message message) {
....
 destinationObjectNameMap.put(destination, objectName);
}
{code}

When running with the option to purge unactiveDestinationViews which by default is active it will un-register from the MBeanServer the objectName that is found on  destinationObjectNameMap.remove(entry.getKey()); //ActiveMqDestination. This happens on the method purgeInactiveDestinationView(Map<ActiveMQDestination, NetworkDestinationView> map) which receives both outboundDestinationViewMap and inboundDestinationViewMap.

Thus when running for outboundDestinationViewMap if the last registration of a destination was actually of a inBound it will incorrectly delete  the object name of and  inboundDestination insead of the one from outboundDestination.

I am working on a fix and submitting a patch for this issue.

This seems to be related to AMQ-5265 which looks like it tried to fix the same issue although apparently it was still present.;;;","20/Nov/15 18:44;Altaflux;I have included a patch for this issue. From the way that it is done it removes the need to synchronize operations which is a good thing.;;;","20/Nov/15 19:21;tabish;Patch lacks any tests to validate the problem or the fix.  ;;;","20/Nov/15 20:16;Altaflux;No problem, 
Let me work out a test and attach it.;;;","21/Nov/15 02:39;Altaflux;Patch with test case included;;;","01/Dec/15 18:39;Altaflux;Is there anything missing to check this issue?;;;","04/Jan/16 21:07;githubbot;GitHub user Altaflux opened a pull request:

    https://github.com/apache/activemq/pull/164

    AMQ-6052 Network of brokers on duplex mode reports InstanceAlreadyExistsException on already existing destinations

    This PR is related to Issue AMQ-6052
    https://issues.apache.org/jira/browse/AMQ-6052


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/Altaflux/activemq master

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/164.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #164
    
----
commit a262140a616e238984b25e326143fb8e00291ed1
Author: Altaflux <pabloloz@gmail.com>
Date:   2016-01-04T21:00:00Z

    Network of brokers on duplex mode reports InstanceAlreadyExistsException on already existing destinations

commit 15dc63cb96a02d64cda9b5bd0f77492f36938f47
Author: Altaflux <pabloloz@gmail.com>
Date:   2016-01-04T21:03:26Z

    Network of brokers on duplex mode reports InstanceAlreadyExistsException on already existing destinations

----
;;;","11/Jan/16 13:00;jira-bot;Commit 3bb7e4a5c8497c8259a267e2eb11dddb8615a1ea in activemq's branch refs/heads/master from [~Altaflux]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=3bb7e4a ]

Network of brokers on duplex mode reports InstanceAlreadyExistsException on already existing destinations
https://issues.apache.org/jira/browse/AMQ-6052
closes #164
;;;","11/Jan/16 13:00;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/164
;;;","11/Jan/16 13:02;gtully;[~Altaflux] thanks for the fix and test. I pushed your changes, they look good. Lets track the nightly tests to pick up any possible regressions;;;","11/Jan/16 17:33;Altaflux;Great thanks Gary,
I expect it to work correctly, we have run this patch in production for a while and haven't seen the issue occur again so fingers crossed.;;;","15/Jan/16 14:04;tbain98;Can we back-port this issue to any future patch releases we do (5.13.1 at a minimum, plus 5.12.3, 5.11.4, etc. if we do them)?  I don't think it's important enough to make a patch version just for this issue, but I do think it's enough of a frustration for anyone with a NoB configuration that it should be in a patch release if we're already doing one for any of the earlier versions.;;;","15/Jan/16 14:14;tbain98;Also note that a workaround is to set the logging level to ERROR for org.apache.activemq.network.MBeanBridgeDestination.  You run the risk of not seeing errors in MBean creation due to other reasons, but in practice the odds of that are unlikely so there's really not much of a cost, and I think that's better than disabling JMX entirely.;;;","15/Jan/16 15:20;cshannon;I actually already backported this to 5.13.x but forgot to update the fixed versions.  I can also move it to 5.12.3 in case it is released but any others can be backported later if there is a desire for them.;;;","15/Jan/16 16:00;tbain98;Great, thanks.;;;","19/Jan/16 20:21;Altaflux;This issue can also be worked around be setting on the networkConnector gcDestinationViews=""false"".

Although disabling the log level on that class avoids the huge log output it still creates a performance impact during the time where the issue occurs until the next removal of destinations as for every message that is received being on that faulty state will enter the synchronization block and throw and exception which will cause performance to degrade.;;;","02/Feb/16 16:19;cshannon;Closing this as the fixes have been applied.;;;",,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQConnection leaking thread when resources are not well closed,AMQ-6051,12914282,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,romain.manni-bucau,romain.manni-bucau,18/Nov/15 22:57,20/Nov/15 13:37,14/Jul/23 05:44,19/Nov/15 18:18,5.12.0,,,,,,,,,5.13.0,,,,,,,,,1,,,,,,"ActiveMQConnection starts a session task thread but doesnt close it if close() is called and the broker doesnt respond

{code}
                    try {
                        if (isConnectionInfoSentToBroker) {
                            // If we announced ourselves to the broker.. Try to let the broker
                            // know that the connection is being shutdown.
                            RemoveInfo removeCommand = info.createRemoveCommand();
                            removeCommand.setLastDeliveredSequenceId(lastDeliveredSequenceId);
                            try {
                                doSyncSendPacket(removeCommand, closeTimeout);
                            } catch (JMSException e) {
                                if (e.getCause() instanceof RequestTimedOutIOException) {
                                    // expected
                                } else {
                                    throw e;
                                }
                            }
                            doAsyncSendPacket(new ShutdownInfo());
                        }
                    } finally {
                        // ensure we clean up this connection anyway even if previous send fail
                        // which can happen if we lost the connection with the broker

                        started.set(false);

                        // TODO if we move the TaskRunnerFactory to the connection
                        // factory
                        // then we may need to call
                        // factory.onConnectionClose(this);
                        if (sessionTaskRunner != null) {
                            sessionTaskRunner.shutdown();
                        }
                        closed.set(true);
                        closing.set(false);
                    }
{code}

solves it

tested on 5.12.0 but 5.12.x has the same code so I guess it has the same issue",,andyg,cshannon,felixehm,romain.manni-bucau,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Nov 20 13:37:47 UTC 2015,,,,,,,,,,,"0|i2olwf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Nov/15 23:03;romain.manni-bucau;created https://github.com/apache/activemq/pull/157;;;","19/Nov/15 18:18;tabish;Fix applied with thanks. ;;;","20/Nov/15 11:43;andyg;Nice catch Romain,

Has this been back-ported to 5.10.x ?;;;","20/Nov/15 13:37;cshannon;This has currently only been applied to master I will backport it to 5.12.x.  I doubt there will be another 5.10.x release at this point.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Recreated durable after deletion in a network of brokers won't receive messages,AMQ-6050,12914131,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,18/Nov/15 15:04,18/Nov/15 16:29,14/Jul/23 05:44,18/Nov/15 15:08,5.12.1,,,,,,,,,5.13.0,,,,Broker,,,,,0,,,,,,"When using {{dynamicallyIncludedDestinations}} with a network of brokers, if a durable subscription is removed, and then the same one is recreated again, it will no longer receive messages from a networked broker.  

The issue is that the networked broker thinks the original subscription demand is still there so that when it is re-created, it doesn't re-create the demand subscription.  This happens in the createDemandSubscription method in DurableConduitBridge.  The check for addToAlreadyInterestedConsumers is returning true even though there is no currently interested consumers.",,brianjohnson,cshannon,gtully,jira-bot,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Nov 18 16:29:30 UTC 2015,,,,,,,,,,,"0|i2okyv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Nov/15 15:07;jira-bot;Commit 09054fc4a85bcdef9e19e589be368d0e9cf0de41 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=09054fc ]

https://issues.apache.org/jira/browse/AMQ-6050

Clearing the subscription from the local map in
DemandForwardingBridgeSupport to make sure that demand can be properly
recreated again.
;;;","18/Nov/15 15:11;cshannon;[~gtully], Mind taking a look at this to make sure the fix looks good?  It was a simple one line fix in DemandForwardingBridgeSupport and I think it's fine.  I included a test case (NetworkDurableRecreationTest) with 4 tests that all break without this fix, but pass with it.  In the meantime, I'm going to let Jenkins run and see if this change causes other issues.;;;","18/Nov/15 16:10;gtully;[~cshannon] that looks perfect to me :-);;;","18/Nov/15 16:29;cshannon;Thanks Gary, if all tests pass I'll backport the fix to 5.12.x as well.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Concurrent access to a Transport from WebSocket client can deadlock,AMQ-6046,12913723,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,17/Nov/15 14:53,05/Jul/16 18:20,14/Jul/23 05:44,17/Nov/15 16:28,5.11.3,5.12.0,5.12.1,,,,,,,5.13.0,,,,MQTT,STOMP,Transport,,,0,,,,,,WebSocket connections can encounter a deadlock when the Jetty side allows for concurrent access to the Transport instance that forwards commands onto the broker core.  This seems to happen mostly in cases where a message or other action is incoming at the same time as Jetty is closing the connection due to idle timeout or some other cause.  ,,cshannon,jira-bot,tabish,zkraus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6346,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jul 05 17:39:05 UTC 2016,,,,,,,,,,,"0|i2oigv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Nov/15 16:20;jira-bot;Commit caa6b8e2539132999045c3fbbd627a2dc6d0885c in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=caa6b8e ]

https://issues.apache.org/jira/browse/AMQ-6046

Prevent concurrent access to protocol handlers which can lead to
transport level deadlocks.  ;;;","05/Jul/16 17:39;cshannon;I ran into a deadlock today when working on MQTT and AMQ-6343.  I verified that it is the same problem as this fix was never applied to MQTT.  I will go ahead and do that in a new Jira.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"In ActiveMQMessageConsumer, always set rollback cause",AMQ-6042,12912765,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,lichtin,lichtin,13/Nov/15 09:20,30/Nov/15 19:01,14/Jul/23 05:44,20/Nov/15 21:19,,,,,,,,,,5.13.0,,,,Broker,,,,,0,,,,,,"In ActiveMQMessageConsumer, currently the rollback cause is only set for the case auto- or individual-acks. However, it should also be set for the other cases, so that in the rollback() method it can be picked up when creating the poison ack.

{code}
    if (isAutoAcknowledgeBatch() || isAutoAcknowledgeEach() || session.isIndividualAcknowledge()) {
        // schedual redelivery and possible dlq processing
        md.setRollbackCause(e);
        rollback();
    } else {
        // Transacted or Client ack: Deliver the next message.
        afterMessageIsConsumed(md, false);
    }
{code}

I'd suggest to move md.setRollbackCause(e); to before the if().",,jira-bot,lichtin,maxim.cherednik,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQNET-513,AMQCPP-588,,,,,,,,,,,,,"16/Nov/15 08:42;lichtin;MessageListenerRedeliveryTest.java;https://issues.apache.org/jira/secure/attachment/12772460/MessageListenerRedeliveryTest.java",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Nov 20 21:19:20 UTC 2015,,,,,,,,,,,"0|i2ockn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Nov/15 08:42;lichtin;See attached MessageListenerRedeliveryTest.java where I added a test called testTransactedQueueSessionListenerExceptionDlq() that is using a transacted session.

Without above suggested change to ActiveMQMessageConsumer the test fails because the 'cause' is not there. WIth the change, the tests succeeds.;;;","17/Nov/15 20:25;tabish;This seems like a valid issue, the cause bit seems applicable regardless of the session ack mode.  Simillar issue raised against the NMS client in AMQNET-513.;;;","18/Nov/15 12:28;maxim.cherednik;Just one more thing: the version of the NMS client 1.6.2 is working fine;;;","20/Nov/15 21:18;jira-bot;Commit 4a27b72377bf8104b1a586bb26946c59508a3f26 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=4a27b72 ]

https://issues.apache.org/jira/browse/AMQ-6042

Apply fix and test from Martin Lichtin to preserve the rollback cause in
all ack modes.  ;;;","20/Nov/15 21:19;tabish;Fix and test added with thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KahaDB data log archiving does not work accross different physical file systems,AMQ-6039,12911884,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,10/Nov/15 15:44,10/Nov/15 16:24,14/Jul/23 05:44,10/Nov/15 16:24,5.11.1,5.11.2,5.11.3,5.12.0,5.12.1,,,,,5.13.0,,,,KahaDB,,,,,0,,,,,,The utility class IOHelper uses a trivial rename operation in its move method for files being moved to another directory.  This operation can fail when the target of the move is on a different file system.  The method needs to fall back to a deep copy / remove style operation when the rename attempt fails in order to ensure the file can move.  ,,jira-bot,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Nov 10 16:22:52 UTC 2015,,,,,,,,,,,"0|i2o767:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/Nov/15 16:22;jira-bot;Commit 938aa626c2b6a4d285f0a481be32eb6eecb26333 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=938aa62 ]

https://issues.apache.org/jira/browse/AMQ-6039

If the rename option fails, then we must try a complete copy since the
move can cross file systems.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Too trivial check in SubQueueSelectorCacheBroker.hasWildcards,AMQ-6036,12911039,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,pdudits,pdudits,06/Nov/15 12:53,04/Feb/16 16:54,14/Jul/23 05:44,04/Feb/16 16:12,5.12.1,5.13.0,,,,,,,,5.14.0,,,,Broker,,,,,0,,,,,,"VirtualSelectorCache plugin cannot be reliably used when message selectors use e. g. literals with underscore like {{notificationType = 'NOTIFY_DELETE'}}.

Full evaluation would need to walk the parsed selector, however the method should at least check for presence of {{LIKE}} case-insensitevely to return less false positives.",,cshannon,githubbot,jira-bot,pdudits,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Feb 04 16:54:54 UTC 2016,,,,,,,,,,,"0|i2o23j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Nov/15 08:34;githubbot;GitHub user pdudits opened a pull request:

    https://github.com/apache/activemq/pull/156

    AMQ-6036: Parsing message selector for wildcard matches

    Parsing message selector for wildcard matches for ignoreWildcardSelectors feature.
    
    https://issues.apache.org/jira/browse/AMQ-6036

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/pdudits/activemq amq-6036

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/156.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #156
    
----
commit 201497448db49ea8921d8c4982f330fec171fd5f
Author: Patrik Dudits <patrik@dudits.net>
Date:   2015-11-09T08:18:16Z

    AMQ-6036: Parsing message selector for wildcard matches for ignoreWildcardSelectors feature
    
    https://issues.apache.org/jira/browse/AMQ-6036

----
;;;","29/Jan/16 18:37;pdudits;Is there anything more I can do to get this merged?;;;","03/Feb/16 13:31;cshannon;Sorry for the delay, the patch looks pretty good to me.  The only thing missing is the apache license headers.  Can you add those to your new files and also rebase against master?;;;","04/Feb/16 15:58;pdudits;PR has been updated - added headers, rebased, and fixed one more corner case in the parser (oh, those REs...).;;;","04/Feb/16 16:11;jira-bot;Commit 278d29dadc9bc92971d35e9433caeabb347323b9 in activemq's branch refs/heads/master from [~pdudits]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=278d29d ]

https://issues.apache.org/jira/browse/AMQ-6036

Parsing message selector for wildcard matches for ignoreWildcardSelectors feature
;;;","04/Feb/16 16:11;jira-bot;Commit 5eeb62a6beb2a3513b7c18bb9702bbfe502332bf in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=5eeb62a ]

https://issues.apache.org/jira/browse/AMQ-6036

Merging patch, thanks to Patrik Dudits for the fix

This closes #156
;;;","04/Feb/16 16:11;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/156
;;;","04/Feb/16 16:12;cshannon;Patch applied to master, thanks.;;;","04/Feb/16 16:54;jira-bot;Commit 33dded13dfa17eca1911fde46464edab60756ee2 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=33dded1 ]

https://issues.apache.org/jira/browse/AMQ-6036

Slight refactoring to make the WildcardFinder class use a static method
so that we don't have to allocate throw away objects that will
immediately be garbage collected.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"mkahaDB,shared-file-locker - broker not shutting down when it loses the lock",AMQ-6033,12909693,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,02/Nov/15 15:00,02/Nov/15 15:23,14/Jul/23 05:44,02/Nov/15 15:23,5.12.0,,,,,,,,,5.13.0,,,,Message Store,,,,,0,,,,,,BrokerService member shadows lockable service support member var leading to keepalive check failing to shutdown broker.,,gtully,jira-bot,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Nov 02 15:21:56 UTC 2015,,,,,,,,,,,"0|i2ntr3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Nov/15 15:21;jira-bot;Commit fd0f71a4c82f1189bed6bd31efa4b17c297816f7 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=fd0f71a ]

https://issues.apache.org/jira/browse/AMQ-6033 - fix shadowing error, additional test
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Properties on scheduled messages can get lost on dispatch,AMQ-6032,12909275,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,30/Oct/15 18:06,30/Oct/15 18:51,14/Jul/23 05:44,30/Oct/15 18:51,5.11.2,5.12.0,5.12.1,,,,,,,5.12.2,5.13.0,,,Broker,Job Scheduler,,,,0,,,,,,In some cases such as when the reduceMemoryFootprint option is enabled the messages fired from the job scheduler can lose their message properties due to both the marshaled and unmarshaled properties getting cleared.  The SchedulerBroker needs to repack the message properties after its updates to ensure they don't get dropped.,,jira-bot,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Oct 30 18:51:02 UTC 2015,,,,,,,,,,,"0|i2nr67:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"30/Oct/15 18:47;jira-bot;Commit 014d5594d605515e84f935eea3fcd1a201648653 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=014d559 ]

AMQ-6032 Repack message prior to scheduler dispatch to store updated
properties in marshaled form.;;;","30/Oct/15 18:51;jira-bot;Commit 42065035b66a48782b361528a82a6d2bd9abd9ba in activemq's branch refs/heads/activemq-5.12.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=4206503 ]

AMQ-6032 Repack message prior to scheduler dispatch to store updated
properties in marshaled form.
(cherry picked from commit 014d5594d605515e84f935eea3fcd1a201648653)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQP: use System.nanoTime() when deriving time to tick the transport with for idle-timeout handling,AMQ-6031,12909241,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,robbie,robbie,robbie,30/Oct/15 16:27,30/Oct/15 17:10,14/Jul/23 05:44,30/Oct/15 17:10,5.12.0,5.12.1,,,,,,,,5.12.2,5.13.0,,,AMQP,,,,,0,,,,,,"The sending of empty AMQP heartbeating frames to satisfy the remote peers advertised idle-timeout, and closure of the connection if no frames are received from a peer to satisfy our local idle-timeout, are handled by protons Transport#tick() method. This method takes the current time as an argument and determines what (if any) actions should be undertaken now, then returns the next point at which further processing is required. In order to faciliate this the last 'current time' the method was called with is saved between calls. 

As with QPIDJMS-136, we should update our usage of the proton Transport#tick() method to use a monotonic time, derived from System.nanoTime(), rather than a wall time from System.currentTimeMillis(), so that clock changes between these points dont lead to incorrect behaviour (e.g not sending a required frame, or thinking a frame hasnt been received that should have been).",,jira-bot,robbie,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Oct 30 17:10:00 UTC 2015,,,,,,,,,,,"0|i2nqyn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"30/Oct/15 16:36;jira-bot;Commit 037f91d61e0e632bc6b3b32c91b8cf58d8b673ae in activemq's branch refs/heads/master from Robert Gemmell
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=037f91d ]

AMQ-6031: use System.nanoTime() when deriving time to tick the transport with for idle-timeout handling
;;;","30/Oct/15 17:10;jira-bot;Commit a0aa3583bc7f0a787471d894370809749cf2cbee in activemq's branch refs/heads/activemq-5.12.x from Robert Gemmell
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=a0aa358 ]

AMQ-6031: use System.nanoTime() when deriving time to tick the transport with for idle-timeout handling

(cherry picked from commit 037f91d61e0e632bc6b3b32c91b8cf58d8b673ae)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wss transport don't work with certificate authentication properly,AMQ-6029,12909176,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,30/Oct/15 10:41,18/Nov/15 16:21,14/Jul/23 05:44,02/Nov/15 14:19,5.12.0,,,,,,,,,5.13.0,,,,,,,,,0,,,,,,"As it was the case with some other transports (https://issues.apache.org/jira/browse/AMQ-6021), peer certificates are not properly propagated down the stack.",,dejanb,isthari,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Nov 18 16:21:37 UTC 2015,,,,,,,,,,,"0|i2nqk7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"30/Oct/15 10:43;jira-bot;Commit f8bfff0bc864b67ff97c67f6193e0fe7785cfbbe in activemq's branch refs/heads/master from [~dejanb]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=f8bfff0 ]

https://issues.apache.org/jira/browse/AMQ-6029 - wss transport with certificate authentication
;;;","18/Nov/15 16:21;jira-bot;Commit d7a3b9406b8496c3f1508bebf3c7ff5367374b90 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=d7a3b94 ]

https://issues.apache.org/jira/browse/AMQ-6029 - make certs available to tunnle servlet - HttpsNeedClientAuthSendAndReceiveTest regression, add javax.security so login exceptions can propogate over http - https://issues.apache.org/jira/browse/AMQ-6013
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
mqtt+nio+ssl don't work with certificate authentication properly,AMQ-6021,12907405,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,23/Oct/15 13:23,23/Oct/15 13:27,14/Jul/23 05:44,23/Oct/15 13:27,5.12.0,,,,,,,,,5.13.0,,,,,,,,,0,,,,,,This is very similar to https://issues.apache.org/jira/browse/AMQ-4133 Stomp issue.,,dejanb,jira-bot,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Oct 23 13:27:09 UTC 2015,,,,,,,,,,,"0|i2nfp3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Oct/15 13:26;jira-bot;Commit f09b9203a045cc1db6ba0b47a270b9f5288bbb7c in activemq's branch refs/heads/master from [~dejanb]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=f09b920 ]

https://issues.apache.org/jira/browse/AMQ-6021 - mqtt+nio+ssl certificate authentication
;;;","23/Oct/15 13:27;dejanb;Fixed on master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Webconsole does not work in karaf,AMQ-6020,12907332,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cschneider,cschneider,cschneider,23/Oct/15 08:52,19/Dec/16 13:06,14/Jul/23 05:44,26/Oct/15 15:43,5.x,,,,,,,,,5.11.3,,,,Web Console,,,,,0,,,,,,"Compile from master

feature:repo-add activemq 5.13-SNAPSHOT
feature:install activemq-broker activemq-web-console 

The web console bundle is active and web:list shows:
ID | State       | Web-State   | Level | Web-ContextPath | Name
-------------------------------------------------------------------------------------------------
62 | Active      | Deployed    | 80    | /activemqweb    | activemq-web-console (5.13.0.SNAPSHOT)

When I go to 
http://localhost:8181/activemqweb/

I get unable to connect. So the port is not active. Maybe pax web does not activate jetty because of the exception below.

In the log I see this exception:
ClassNotFoundException: javax.xml.transform.stax.StAXSource

Full trace here:
2015-10-23 10:48:20,428 | ERROR | pool-45-thread-1 | DispatcherServlet                | 62 - org.apache.activemq.activemq-web-console - 5.13.0.SNAPSHOT | Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter': Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter]: Constructor threw exception; nested exception is java.lang.NoClassDefFoundError: javax/xml/transform/stax/StAXSource
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1099)[62:org.apache.activemq.activemq-web-console:5.13.0.SNAPSHOT]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1044)[62:org.apache.activemq.activemq-web-console:5.13.0.SNAPSHOT]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504)[62:org.apache.activemq.activemq-web-console:5.13.0.SNAPSHOT]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)[62:org.apache.activemq.activemq-web-console:5.13.0.SNAPSHOT]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:291)[62:org.apache.activemq.activemq-web-console:5.13.0.SNAPSHOT]
	at org.springframework.web.servlet.DispatcherServlet.createDefaultStrategy(DispatcherServlet.java:849)[62:org.apache.activemq.activemq-web-console:5.13.0.SNAPSHOT]
	at org.springframework.web.servlet.DispatcherServlet.getDefaultStrategies(DispatcherServlet.java:818)[62:org.apache.activemq.activemq-web-console:5.13.0.SNAPSHOT]
	at org.springframework.web.servlet.DispatcherServlet.initHandlerAdapters(DispatcherServlet.java:626)[62:org.apache.activemq.activemq-web-console:5.13.0.SNAPSHOT]
	at org.springframework.web.servlet.DispatcherServlet.initStrategies(DispatcherServlet.java:483)[62:org.apache.activemq.activemq-web-console:5.13.0.SNAPSHOT]
	at org.springframework.web.servlet.DispatcherServlet.onRefresh(DispatcherServlet.java:471)[62:org.apache.activemq.activemq-web-console:5.13.0.SNAPSHOT]
	at org.springframework.web.servlet.FrameworkServlet.onApplicationEvent(FrameworkServlet.java:802)[62:org.apache.activemq.activemq-web-console:5.13.0.SNAPSHOT]
	at org.springframework.web.servlet.FrameworkServlet$ContextRefreshListener.onApplicationEvent(FrameworkServlet.java:1118)[62:org.apache.activemq.activemq-web-console:5.13.0.SNAPSHOT]
	at org.springframework.web.servlet.FrameworkServlet$ContextRefreshListener.onApplicationEvent(FrameworkServlet.java:1114)[62:org.apache.activemq.activemq-web-console:5.13.0.SNAPSHOT]
	at org.springframework.context.event.GenericApplicationListenerAdapter.onApplicationEvent(GenericApplicationListenerAdapter.java:52)[62:org.apache.activemq.activemq-web-console:5.13.0.SNAPSHOT]
	at org.springframework.context.event.SourceFilteringListener.onApplicationEventInternal(SourceFilteringListener.java:100)[62:org.apache.activemq.activemq-web-console:5.13.0.SNAPSHOT]
	at org.springframework.context.event.SourceFilteringListener.onApplicationEvent(SourceFilteringListener.java:69)[62:org.apache.activemq.activemq-web-console:5.13.0.SNAPSHOT]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:151)[62:org.apache.activemq.activemq-web-console:5.13.0.SNAPSHOT]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:128)[62:org.apache.activemq.activemq-web-console:5.13.0.SNAPSHOT]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:331)[62:org.apache.activemq.activemq-web-console:5.13.0.SNAPSHOT]
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:775)[62:org.apache.activemq.activemq-web-console:5.13.0.SNAPSHOT]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:483)[62:org.apache.activemq.activemq-web-console:5.13.0.SNAPSHOT]
	at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:664)[62:org.apache.activemq.activemq-web-console:5.13.0.SNAPSHOT]
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:630)[62:org.apache.activemq.activemq-web-console:5.13.0.SNAPSHOT]
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:678)[62:org.apache.activemq.activemq-web-console:5.13.0.SNAPSHOT]
	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:549)[62:org.apache.activemq.activemq-web-console:5.13.0.SNAPSHOT]
	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:490)[62:org.apache.activemq.activemq-web-console:5.13.0.SNAPSHOT]
	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:136)[62:org.apache.activemq.activemq-web-console:5.13.0.SNAPSHOT]
	at javax.servlet.GenericServlet.init(GenericServlet.java:244)[57:javax.servlet-api:3.1.0]
	at org.eclipse.jetty.servlet.ServletHolder.initServlet(ServletHolder.java:612)[107:org.eclipse.jetty.servlet:9.2.10.v20150310]
	at org.eclipse.jetty.servlet.ServletHolder.initialize(ServletHolder.java:395)[107:org.eclipse.jetty.servlet:9.2.10.v20150310]
	at org.eclipse.jetty.servlet.ServletHandler.initialize(ServletHandler.java:871)[107:org.eclipse.jetty.servlet:9.2.10.v20150310]
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:298)[107:org.eclipse.jetty.servlet:9.2.10.v20150310]
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:741)[106:org.eclipse.jetty.server:9.2.10.v20150310]
	at org.ops4j.pax.web.service.jetty.internal.HttpServiceContext.doStart(HttpServiceContext.java:245)[126:org.ops4j.pax.web.pax-web-jetty:4.2.2]
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)[109:org.eclipse.jetty.util:9.2.10.v20150310]
	at org.ops4j.pax.web.service.jetty.internal.JettyServerImpl$1.start(JettyServerImpl.java:258)[126:org.ops4j.pax.web.pax-web-jetty:4.2.2]
	at org.ops4j.pax.web.service.internal.HttpServiceStarted.end(HttpServiceStarted.java:1047)[128:org.ops4j.pax.web.pax-web-runtime:4.2.2]
	at org.ops4j.pax.web.service.internal.HttpServiceProxy.end(HttpServiceProxy.java:413)[128:org.ops4j.pax.web.pax-web-runtime:4.2.2]
	at org.ops4j.pax.web.extender.war.internal.RegisterWebAppVisitorWC.end(RegisterWebAppVisitorWC.java:380)[124:org.ops4j.pax.web.pax-web-extender-war:4.2.2]
	at org.ops4j.pax.web.extender.war.internal.model.WebApp.accept(WebApp.java:692)[124:org.ops4j.pax.web.pax-web-extender-war:4.2.2]
	at org.ops4j.pax.web.extender.war.internal.WebAppPublisher$WebAppDependencyListener.register(WebAppPublisher.java:237)[124:org.ops4j.pax.web.pax-web-extender-war:4.2.2]
	at org.ops4j.pax.web.extender.war.internal.WebAppPublisher$WebAppDependencyListener.addingService(WebAppPublisher.java:182)[124:org.ops4j.pax.web.pax-web-extender-war:4.2.2]
	at org.ops4j.pax.web.extender.war.internal.WebAppPublisher$WebAppDependencyListener.addingService(WebAppPublisher.java:135)[124:org.ops4j.pax.web.pax-web-extender-war:4.2.2]
	at org.osgi.util.tracker.ServiceTracker$Tracked.customizerAdding(ServiceTracker.java:941)[org.osgi.core-6.0.0.jar:]
	at org.osgi.util.tracker.ServiceTracker$Tracked.customizerAdding(ServiceTracker.java:870)[org.osgi.core-6.0.0.jar:]
	at org.osgi.util.tracker.AbstractTracked.trackAdding(AbstractTracked.java:256)[org.osgi.core-6.0.0.jar:]
	at org.osgi.util.tracker.AbstractTracked.trackInitial(AbstractTracked.java:183)[org.osgi.core-6.0.0.jar:]
	at org.osgi.util.tracker.ServiceTracker.open(ServiceTracker.java:318)[org.osgi.core-6.0.0.jar:]
	at org.osgi.util.tracker.ServiceTracker.open(ServiceTracker.java:261)[org.osgi.core-6.0.0.jar:]
	at org.ops4j.pax.web.extender.war.internal.WebAppPublisher.publish(WebAppPublisher.java:101)[124:org.ops4j.pax.web.pax-web-extender-war:4.2.2]
	at org.ops4j.pax.web.extender.war.internal.WebObserver.deploy(WebObserver.java:219)[124:org.ops4j.pax.web.pax-web-extender-war:4.2.2]
	at org.ops4j.pax.web.extender.war.internal.WebObserver$1.doStart(WebObserver.java:179)[124:org.ops4j.pax.web.pax-web-extender-war:4.2.2]
	at org.ops4j.pax.web.extender.war.internal.extender.SimpleExtension.start(SimpleExtension.java:59)[124:org.ops4j.pax.web.pax-web-extender-war:4.2.2]
	at org.ops4j.pax.web.extender.war.internal.extender.AbstractExtender$1.run(AbstractExtender.java:280)[124:org.ops4j.pax.web.pax-web-extender-war:4.2.2]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)[:1.8.0_60]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)[:1.8.0_60]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)[:1.8.0_60]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)[:1.8.0_60]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)[:1.8.0_60]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)[:1.8.0_60]
	at java.lang.Thread.run(Thread.java:745)[:1.8.0_60]
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter]: Constructor threw exception; nested exception is java.lang.NoClassDefFoundError: javax/xml/transform/stax/StAXSource
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:163)[62:org.apache.activemq.activemq-web-console:5.13.0.SNAPSHOT]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:89)[62:org.apache.activemq.activemq-web-console:5.13.0.SNAPSHOT]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1092)[62:org.apache.activemq.activemq-web-console:5.13.0.SNAPSHOT]
	... 60 more
Caused by: java.lang.NoClassDefFoundError: javax/xml/transform/stax/StAXSource
	at org.springframework.http.converter.xml.SourceHttpMessageConverter.<clinit>(SourceHttpMessageConverter.java:74)[62:org.apache.activemq.activemq-web-console:5.13.0.SNAPSHOT]
	at org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.<init>(AnnotationMethodHandlerAdapter.java:203)[62:org.apache.activemq.activemq-web-console:5.13.0.SNAPSHOT]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)[:1.8.0_60]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)[:1.8.0_60]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)[:1.8.0_60]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)[:1.8.0_60]
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:147)[62:org.apache.activemq.activemq-web-console:5.13.0.SNAPSHOT]
	... 62 more
Caused by: java.lang.ClassNotFoundException: javax.xml.transform.stax.StAXSource not found by org.apache.activemq.activemq-web-console [62]
	at org.apache.felix.framework.BundleWiringImpl.findClassOrResourceByDelegation(BundleWiringImpl.java:1558)[org.apache.felix.framework-5.2.0.jar:]
	at org.apache.felix.framework.BundleWiringImpl.access$400(BundleWiringImpl.java:79)[org.apache.felix.framework-5.2.0.jar:]
	at org.apache.felix.framework.BundleWiringImpl$BundleClassLoader.loadClass(BundleWiringImpl.java:1998)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)[:1.8.0_60]
	... 69 more
",,cschneider,githubbot,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Oct 26 16:21:14 UTC 2015,,,,,,,,,,,"0|i2nf8v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Oct/15 09:05;githubbot;GitHub user cschneider opened a pull request:

    https://github.com/apache/activemq/pull/153

    [AMQ-6020] Adding the necessary import and removing the export packages

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/cschneider/activemq AMQ-6020

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/153.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #153
    
----
commit b2ac6ab5f76e2584b2f471cfa386c3ad176be4ec
Author: Christian Schneider <chris@die-schneider.net>
Date:   2015-10-23T09:04:29Z

    [AMQ-6020] Adding the necessary import and removing the export packages

----
;;;","23/Oct/15 16:52;jira-bot;Commit 0ff46b18790d8df6221346b0f433fea53fa5c69a in activemq's branch refs/heads/master from [~chris@die-schneider.net]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=0ff46b1 ]

[AMQ-6020] Adding the necessary import and removing the export packages
This closes #153
This closes #152
;;;","23/Oct/15 16:52;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/153
;;;","23/Oct/15 17:13;jira-bot;Commit 547914cabcc95e424640559c8bdbbd317bf399ae in activemq's branch refs/heads/activemq-5.12.x from [~chris@die-schneider.net]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=547914c ]

[AMQ-6020] Adding the necessary import and removing the export packages
This closes #153
This closes #152
;;;","26/Oct/15 16:21;jira-bot;Commit ba512d95bfe34d69cbbb42e3f494eff2f791ce5d in activemq's branch refs/heads/activemq-5.11.x from [~chris@die-schneider.net]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=ba512d9 ]

[AMQ-6020] Adding the necessary import and removing the export packages
This closes #153
This closes #152
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console should not export any OSGi packages,AMQ-6018,12907114,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cschneider,cschneider,cschneider,22/Oct/15 15:24,19/Dec/16 13:06,14/Jul/23 05:44,26/Oct/15 15:42,5.11.2,,,,,,,,,5.11.3,,,,Web Console,,,,,0,,,,,,"The ActiveMQ web console exports all packages it embeds.
This has the effect that e.g. ActiveMQConnectionFactory is exported in the same version by multiple bundles (activemq and activemq web console) which can lead to class cast exceptions.

I suggest to remove the exports from the activemq web console war.
",,cschneider,githubbot,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Patch,,,,,,,,,9223372036854775807,,,Fri Oct 23 16:52:38 UTC 2015,,,,,,,,,,,"0|i2ndwf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Oct/15 15:26;githubbot;GitHub user cschneider opened a pull request:

    https://github.com/apache/activemq/pull/152

    [AMQ-6018] Web console should not export any OSGi packages

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/cschneider/activemq AMQ-6018

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/152.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #152
    
----
commit 901ebe629a99939b2f35c3c847ea9227102526fc
Author: Christian Schneider <chris@die-schneider.net>
Date:   2015-10-22T15:25:31Z

    [AMQ-6018] Web console should not export any OSGi packages

----
;;;","23/Oct/15 16:52;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/152
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make ioBufferSize configurable for nio transport,AMQ-6017,12907029,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,22/Oct/15 09:32,22/Oct/15 09:43,14/Jul/23 05:44,22/Oct/15 09:43,5.12.0,,,,,,,,,5.13.0,,,,,,,,,0,,,,,,Buffer size can be configured for tcp transport with transport.ioBufferSize=xxx property. In nio case it's hard coded to 8k (default for tcp case as well). We need to be bale to tune this in nio case as well.,,dejanb,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Oct 22 09:43:51 UTC 2015,,,,,,,,,,,"0|i2nddr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Oct/15 09:41;jira-bot;Commit 6f524bfea0df670fe0db5ca1fa759123ac6b47e0 in activemq's branch refs/heads/master from [~dejanb]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=6f524bf ]

https://issues.apache.org/jira/browse/AMQ-6017 - respect ioBufferSize for nio transport
;;;","22/Oct/15 09:43;dejanb;Fixed on master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
java.lang.IllegalArgumentException: Comparison method violates its general contract!,AMQ-6016,12906524,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,21/Oct/15 12:55,16/Dec/15 14:42,14/Jul/23 05:44,21/Oct/15 13:07,5.10.0,,,,,,,,,5.12.2,5.13.0,,,Broker,,,,,0,,,,,,"The message group balancing is based on state in the consumer that can be shared across destinations in error. Under load this can lead to:{code}
2015-04-13 10:24:20,034 | WARN  | IO Worker 308792 | Service                          | ivemq.broker.TransportConnection  312 | 121 - org.apache.activemq.activemq-osgi - 5.9.0 | Async error occurred: 
java.lang.IllegalArgumentException: Comparison method violates its general contract!
	at java.util.TimSort.mergeHi(TimSort.java:868)[:1.7.0_65]
	at java.util.TimSort.mergeAt(TimSort.java:485)[:1.7.0_65]
	at java.util.TimSort.mergeCollapse(TimSort.java:410)[:1.7.0_65]
	at java.util.TimSort.sort(TimSort.java:214)[:1.7.0_65]
	at java.util.TimSort.sort(TimSort.java:173)[:1.7.0_65]
	at java.util.Arrays.sort(Arrays.java:659)[:1.7.0_65]
	at java.util.Collections.sort(Collections.java:217)[:1.7.0_65]
	at org.apache.activemq.broker.region.Queue.addToConsumerList(Queue.java:2131)[121:org.apache.activemq.activemq-osgi:5.9.0]
	at org.apache.activemq.broker.region.Queue.doActualDispatch(Queue.java:2067)[121:org.apache.activemq.activemq-osgi:5.9.0]
	at org.apache.activemq.broker.region.Queue.doDispatch(Queue.java:1972)[121:org.apache.activemq.activemq-osgi:5.9.0]
	at org.apache.activemq.broker.region.Queue.removeSubscription(Queue.java:587)[121:org.apache.activemq.activemq-osgi:5.9.0]
	at org.apache.activemq.broker.region.DestinationFilter.removeSubscription(DestinationFilter.java:127)[121:org.apache.activemq.activemq-osgi:5.9.0]
	at ......
	at java.lang.Thread.run(Thread.java:745)[:1.7.0_65]{code}",,gtully,jira-bot,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-2106,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Dec 16 14:42:19 UTC 2015,,,,,,,,,,,"0|i2naav:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Oct/15 13:03;jira-bot;Commit 5d697cff3b0f98a2d4d4f7176508bbbc77305d5d in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=5d697cf ]

https://issues.apache.org/jira/browse/AMQ-6016 - rework fix for https://issues.apache.org/jira/browse/AMQ-2106 - account group assignment on a per destination basis to prevent modification during consumer ordering
;;;","21/Oct/15 13:07;gtully;The implementation from https://issues.apache.org/jira/browse/AMQ-2106 needed to be reworked to maintain group assignment per destination. Otherwise dispatch on one destination could flip order during consumer sort on another destination. Window is tiny (duration of sort coinciding with consumer remove) which proved very difficult to reproduce. hence no additional unit test.;;;","30/Oct/15 11:56;gtully;xstream needs a tweek to ensure transients are initialised, it bypasses the default creation b/c it uses object serialisation into a generic java.lang.Object. Stack trace from some of the HttpTransportBrokerTest tests - {code}java.lang.NullPointerException
	at org.apache.activemq.command.ConsumerInfo.getAssignedGroupCount(ConsumerInfo.java:523)
	at org.apache.activemq.broker.region.Queue$3.compare(Queue.java:224)
	at org.apache.activemq.broker.region.Queue$3.compare(Queue.java:215)
	at java.util.TimSort.countRunAndMakeAscending(TimSort.java:324)
	at java.util.TimSort.sort(TimSort.java:189)
	at java.util.TimSort.sort(TimSort.java:173)
	at java.util.Arrays.sort(Arrays.java:659)
	at java.util.Collections.sort(Collections.java:217)
	at org.apache.activemq.broker.region.Queue.addToConsumerList(Queue.java:2128)
	at org.apache.activemq.broker.region.Queue.doActualDispatch(Queue.java:2064)
	at org.apache.activemq.broker.region.Queue.doDispatch(Queue.java:1976)
	at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:2122)
	at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1598)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:133)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:48)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
	at java.lang.Thread.run(Thread.java:722){code};;;","30/Oct/15 12:02;jira-bot;Commit 8136e67b408a3d756241ebdf8de9347eb6135363 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=8136e67 ]

https://issues.apache.org/jira/browse/AMQ-6016 - ensure xstream inits transients to default values when it bypasses the default creation method through object deserialization. Can make it more general if there are ever more instances of this. It avoids the need to check for null and sync
;;;","16/Dec/15 14:42;jira-bot;Commit b84785d5d035a2c5d46cdda22fac9051fb5d7786 in activemq's branch refs/heads/activemq-5.12.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b84785d ]

https://issues.apache.org/jira/browse/AMQ-6016 - rework fix for https://issues.apache.org/jira/browse/AMQ-2106 - account group assignment on a per destination basis to prevent modification during consumer ordering

(cherry picked from commit 5d697cff3b0f98a2d4d4f7176508bbbc77305d5d)
;;;","16/Dec/15 14:42;jira-bot;Commit c3339bc0fb12492f039a290930ea989d939cafb2 in activemq's branch refs/heads/activemq-5.12.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=c3339bc ]

https://issues.apache.org/jira/browse/AMQ-6016 - ensure xstream inits transients to default values when it bypasses the default creation method through object deserialization. Can make it more general if there are ever more instances of this. It avoids the need to check for null and sync

(cherry picked from commit 8136e67b408a3d756241ebdf8de9347eb6135363)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Offline Durable Topic Subscription exceeds memory limits,AMQ-6014,12905926,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,19/Oct/15 12:28,05/Jan/16 15:08,14/Jul/23 05:44,19/Oct/15 16:19,5.12.0,,,,,,,,,5.12.2,5.13.0,,,Broker,,,,,0,,,,,,"To reproduce:
1) Start two durable subscriptions using the openwire swissarmy examples:

ant consumer -Dtopic=true -Ddurable=true -Dsubject=test -Duser=admin -Dpassword=admin -Dmax 500000

ant consumer -Dtopic=true -Ddurable=true -Dsubject=test -Duser=admin -Dpassword=admin -DclientId=c2

2) Start a producer using the following command:

ant producer -Dtopic=true -Ddurable=true -Dsubject=test -Duser=admin -Dpassword=admin -Dmax=500000

3) Kill one of the durable topic subscribers and let the test run

4) the broker will go OOM

The cache for the offline durable sub is not recording is cached messages against system memory usage as it should. Hence the limits are not hit.",,brianjohnson,cshannon,darora.asf@gmail.com,gtully,jira-bot,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6094,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jan 05 15:08:49 UTC 2016,,,,,,,,,,,"0|i2n6q7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/Oct/15 15:23;jira-bot;Commit 1ad0117932ae73603b963860c92c0980a3572b9e in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=1ad0117 ]

https://issues.apache.org/jira/browse/AMQ-6014 - fix up reference counting for durable subs such that ack on one sub does not decrement usage for offline subs. Fix and test
;;;","19/Oct/15 16:19;gtully;ref count was off, causing an ack on one sub to decrement usage shared across other offline or slow subs.;;;","21/Oct/15 12:06;jira-bot;Commit 92d5efc32ca79b23225a2fa5225fe07083a0c3e5 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=92d5efc ]

https://issues.apache.org/jira/browse/AMQ-6014 - test needs more time in ci. need to figure why it is sooo slow
;;;","13/Nov/15 18:42;jira-bot;Commit e54c9ccfa0a2bbc419fc10c39825610bf078c3db in activemq's branch refs/heads/activemq-5.12.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e54c9cc ]

https://issues.apache.org/jira/browse/AMQ-6014 - fix up reference counting for durable subs such that ack on one sub does not decrement usage for offline subs. Fix and test

(cherry picked from commit 1ad0117932ae73603b963860c92c0980a3572b9e)
;;;","13/Nov/15 18:42;jira-bot;Commit 14f6abc552f535ee5bfcdf1e4f1d5f6caa89a4ef in activemq's branch refs/heads/activemq-5.12.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=14f6abc ]

https://issues.apache.org/jira/browse/AMQ-6014 - test needs more time in ci. need to figure why it is sooo slow

(cherry picked from commit 92d5efc32ca79b23225a2fa5225fe07083a0c3e5)
;;;","22/Nov/15 14:33;cshannon;[~gtully],

Looks like this fix is causing a test failure in this test: org.apache.activemq.usecases.DurableSubscriberNonPersistentMessageTest.testDurableSubscriberNonPersistentMessage

It seems that the issue is the extra call node.incrementReferenceCount() in the createMessageDispatch() method of DurableTopicSubscription is causing the cursorMemoryUsage value checked in the test to no longer be 0.  Not sure if this is an actual regression or if the failing test just needs to be adjusted for the new behavior that you added in this patch.;;;","23/Nov/15 12:37;jira-bot;Commit 4318eba4a34ad64b1dad549ba94dadd155149b4a in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=4318eba ]

https://issues.apache.org/jira/browse/AMQ-6014 - topic store prefetch should take ownership like in the non persistent case - DurableSubscriberNonPersistentMessageTest regression
;;;","23/Nov/15 12:41;gtully;[~cshannon] thanks for the heads up. that test was in a browser tab on the todo list but was not getting the priority it deserved. It is indeed a regression. I added a comment at the time and I think it was on the money, the cursor should take ownership of the reference.;;;","23/Nov/15 12:56;cshannon;Thanks for looking at that so quickly Gary.  I'm just trying to get some of these tests cleaned up in preparation of a 5.13.0 release next week :);;;","05/Jan/16 14:09;jira-bot;Commit e3df09b9db09d6cf2834b0beb901c253be9b6120 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e3df09b ]

https://issues.apache.org/jira/browse/AMQ-6094 - regression via https://issues.apache.org/jira/browse/AMQ-6014 - incorrect ref count on message expiry event during cursor move for dispatch. Fix and test - thanks for the test
;;;","05/Jan/16 15:08;jira-bot;Commit 26665fa1b98a9004fc90a6eeea26ca06eb53d118 in activemq's branch refs/heads/activemq-5.13.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=26665fa ]

https://issues.apache.org/jira/browse/AMQ-6094 - regression via https://issues.apache.org/jira/browse/AMQ-6014 - incorrect ref count on message expiry event during cursor move for dispatch. Fix and test - thanks for the test

(cherry picked from commit e3df09b9db09d6cf2834b0beb901c253be9b6120)
;;;","05/Jan/16 15:08;jira-bot;Commit 6f8942387e98f3dd41612dc331fa72f3fa718613 in activemq's branch refs/heads/activemq-5.12.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=6f89423 ]

https://issues.apache.org/jira/browse/AMQ-6094 - regression via https://issues.apache.org/jira/browse/AMQ-6014 - incorrect ref count on message expiry event during cursor move for dispatch. Fix and test - thanks for the test

(cherry picked from commit e3df09b9db09d6cf2834b0beb901c253be9b6120)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Restrict classes that can be serialized in ObjectMessages,AMQ-6013,12905534,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,16/Oct/15 13:40,12/Aug/22 16:43,14/Jul/23 05:44,16/Oct/15 13:53,5.12.0,,,,,,,,,5.11.3,5.12.2,5.13.0,,,,,,,0,,,,,,"At some points we do (de)serialization of JMS Object messages inside the broker (HTTP, Stomp, Web Console, ...). We need to restrict classes that can be serialized in this way.",,3riverdev,dejanb,djencks,donnchadh,iali,jira-bot,mbechler,sobkowiak,trejkaz,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Apr 26 01:03:51 UTC 2017,,,,,,,,,,,"0|i2n4bb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Oct/15 13:46;jira-bot;Commit a7e2a44fe8d4435ae99532eb0ab852e6247f7b16 in activemq's branch refs/heads/master from [~dejanb]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=a7e2a44 ]

https://issues.apache.org/jira/browse/AMQ-6013 - restrict classes which can be serialized inside the broker
;;;","16/Oct/15 13:53;dejanb;The classes are restricted by default to the following packages

{code}java.lang
java.util
org.apache.activemq
org.fusesource.hawtbuf
com.thoughtworks.xstream.mapper{code}

which are needed for normal functioning of http and stomp packages. If you need to send object messages via http, you need to add desired packages. You can do that with by using {{org.apache.activemq.SERIALIZABLE_PACKAGES}} system property. For example:

{code}-Dorg.apache.activemq.SERIALIZABLE_PACKAGES=""java.lang,java.util,org.apache.activemq,org.fusesource.hawtbuf,com.thoughtworks.xstream.mapper,com.mycompany.myapp""{code};;;","20/Oct/15 10:31;jira-bot;Commit e100638244c4ca5eb2a1f16bcdc671c9859c2694 in activemq's branch refs/heads/master from [~dejanb]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e100638 ]

https://issues.apache.org/jira/browse/AMQ-6013 - init serializable packages statically
;;;","28/Oct/15 13:43;jira-bot;Commit 6f03921b31d9fefeddb0f4fa63150ed1f94a14b1 in activemq's branch refs/heads/activemq-5.11.x from [~dejanb]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=6f03921 ]

https://issues.apache.org/jira/browse/AMQ-6013 - restrict classes which can be serialized inside the broker
;;;","28/Oct/15 13:43;jira-bot;Commit 73a0caf758f9e4916783a205c7e422b4db27905c in activemq's branch refs/heads/activemq-5.11.x from [~dejanb]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=73a0caf ]

https://issues.apache.org/jira/browse/AMQ-6013 - init serializable packages statically
;;;","13/Nov/15 16:28;djencks;I'd expect you'd want to check if the class is allowed based on its name before loading it in case it has static initialization code that does something unwanted.
Loading the allowed packages list only once might be considerably more efficient.;;;","13/Nov/15 17:15;dejanb;Hi David,
yes, it makes sense to check security only on the class name without loading it. Thanks for that, I'll fix it on Monday. I'll need to check how XStream is doing it and if this problem exists there as well.

As for loading the list only once, it's done by the second commit so that should be in there already. Let me know if you thought of something else, or I missed something.
;;;","16/Nov/15 12:54;dejanb;Hi David,

I looked at this some more and I don't think we have a problem. If you take a look at

https://github.com/apache/activemq/blob/master/activemq-client/src/main/java/org/apache/activemq/util/ClassLoadingAwareObjectInputStream.java#L125

we load the class without initializing it (second parameter is false), so the static code is not executed until the class if used the first time.;;;","18/Nov/15 16:21;jira-bot;Commit d7a3b9406b8496c3f1508bebf3c7ff5367374b90 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=d7a3b94 ]

https://issues.apache.org/jira/browse/AMQ-6029 - make certs available to tunnle servlet - HttpsNeedClientAuthSendAndReceiveTest regression, add javax.security so login exceptions can propogate over http - https://issues.apache.org/jira/browse/AMQ-6013
;;;","03/Dec/15 18:39;jira-bot;Commit e7a4b53f799685e337972dd36ba0253c04bcc01f in activemq's branch refs/heads/activemq-5.12.x from [~dejanb]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e7a4b53 ]

https://issues.apache.org/jira/browse/AMQ-6013 - restrict classes which can be serialized inside the broker
;;;","03/Dec/15 18:39;jira-bot;Commit 7eb9b218b2705cf9273e30ee2da026e43b6dd4e0 in activemq's branch refs/heads/activemq-5.12.x from [~dejanb]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=7eb9b21 ]

https://issues.apache.org/jira/browse/AMQ-6013 - init serializable packages statically
;;;","04/Dec/15 05:51;3riverdev;Is there any explanation available for why this change was made?  Why are the restrictions necessary?;;;","05/Dec/15 12:55;mbechler;Btw, you might want to have a look at your own org.apache.activemq.web.WebClient (as this is still on the whitelist). Have not checked under which conditition the static factory gets initialized exactly (it seems to be for the web console), but one can certainly do some mischief (I'd say mainly DOS) if it is.

I'd also suggest that you announce this change in a much more prominent way (maybe even get a CVE for it), as it both has very serious security implications if it goes unpatched and also very well might break some peoples code. And you should also make it very clear that one should be very careful what to add to the whitelist.

To answer Brett (as a third party):
Java deserialization on not completely trusted input is inherently dangerous. The amount of code reachable by just deseralizing some input is insane. There are many instances where developers are careless (or even simply don't care) what can be done with their deserialization routines (also there can be nasty interactions between different pieces of code) and the default deserialization routine allows one to use anything you have on your classpath. We have seen three major libraries contain code that leads to remote arbitrary code execution. And there are more to come.
Imho, we really need to either fix the primitive or drop it from all the specs that are/allow using it in potentially dangerous way.;;;","07/Dec/15 16:44;3riverdev;Fair enough on the reasoning -- makes sense.  However, I'd definitely agree that this fix needs to be announced through several channels, since it's a breaking change for many users.

Also consider supporting additional means to set org.apache.activemq.SERIALIZABLE_PACKAGES (other than a system property), perhaps through a ActiveMQComponent property, etc.

Additionally, provide logging on startup that communicates the restriction and how to customize it.;;;","08/Dec/15 10:27;dejanb;Hi Brett, yes we already discussed this on the dev list and decided to tackle this problem. I raised [AMQ-6077] for this work and we should address it with 5.13.1 release.;;;","08/Dec/15 10:27;iali;Based on [~mbechler] comment:  
Can you please confirm if this fix is also based on 
http://cwe.mitre.org/data/definitions/502.html

for following CVEs
CVE-2015-8103 and CVE-2015-4852

http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-8103
http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-4852

If so you are right as a note on Vulnerability Notes Database suggest following
{quote}
Developers need to re-architect their applications, and should be suspicious of deserialized data from untrusted sources
{quote};;;","08/Dec/15 10:42;dejanb;Hi Imran, yes it's the same root of the issue. I'm working on documenting and disclosing everything, so more information will be available in the coming days.;;;","08/Dec/15 10:54;mbechler;Yes, that's correct.

There has been some discussion about how to assign CVE's for these issues on oss-security that imho has not really come to a sensible conclusion (these both directly refer to commons-collections, I think we should have a more general one). If you don't want to go through that again, I think refering to CVE-2015-4852 would be most appropriate choice (at least Oracle has suggested that they are okay with it's reuse: http://seclists.org/oss-sec/2015/q4/306). 
Maybe you should check back with the Apache Security Team to see what's their opinion on this.;;;","08/Dec/15 17:02;dejanb;This issue is related to CVE-2015-5254 as described at http://activemq.apache.org/security-advisories.data/CVE-2015-5254-announcement.txt;;;","26/Apr/17 01:03;trejkaz;The commit to fix this makes serializablePackages a public mutable array:

{code}
    public static final String[] serializablePackages;
{code}

That in itself is not the best idea for security.;;;",,,,,,,,,,,,,,,,,,,,,
please fix navigation links on ActiveMQ - Getting started page,AMQ-6012,12905177,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,ludvicekj,ludvicekj,15/Oct/15 12:15,15/Oct/15 19:04,14/Jul/23 05:44,15/Oct/15 18:31,5.12.0,,,,,,,,,,,,,Documentation,,,,,0,,,,,,"Hi,  could you please fix navigation links on page http://activemq.apache.org/getting-started.html ?

*  Section Document Organization
",,ludvicekj,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Oct 15 18:31:37 UTC 2015,,,,,,,,,,,"0|i2n23z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Oct/15 18:31;tabish;Site updated with working links now;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"AMQP SSL Transport ""leaking"" currentTransportCounts",AMQ-6010,12904662,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,mmeulemans,mmeulemans,13/Oct/15 20:43,14/Oct/15 15:43,14/Jul/23 05:44,14/Oct/15 15:43,5.11.1,5.12.0,,,,,,,,5.12.2,5.13.0,,,AMQP,,,,,0,,,,,,"When using the AMQP SSL transport the currentTransportCount (variable that tracks connection count in TcpTransportServer.java) can ""leak"" when the SSL connection is aborted during handshake. In this case the TcpTransportServer class the currentTransportCount is incremented in handleSocket but never decremented in stopped. This eventually leads to ExceededMaximumConnectionsException being thrown from handleSocket. The SSL connection is aborted during handshake if needClientAuth is configured on the transport and a client with an invalid certificate tries to connect.

*Reproduction*
1. Enable the AMQP SSL transport: {{<transportConnector name=""amqp+ssl"" uri=""amqp+ssl://0.0.0.0:5671?needClientAuth=true&amp;maximumConnections=10""/>}}
2. Try to connect with no/invalid client certificate: {{openssl s_client -connect localhost:5671}}
3. After 10 attempts ActiveMQ logs will start showing ExceededMaximumConnectionsException exceptions.

*Bug*
During the SSL handshake phase the protocol converter in the AMQP transport is set to the AMQPProtocolDiscriminator which silently swallows exceptions:
{code:java}
public void onAMQPException(IOException error) {
}
{code}
Which in turn cause the normal stop sequence (via asyncStop) to be skipped.

*Fix*
Change the AMQPProtocolDiscriminator to handle the error instead of swallow it:
{code:java}
public void onAMQPException(IOException error) {
    transport.sendToActiveMQ(error);
}
{code}
",,jira-bot,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Oct 14 15:43:30 UTC 2015,,,,,,,,,,,"0|i2myxj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Oct/15 20:56;tabish;You should take a shot at creating a unit test to reproduce and supply a patch to fix if you feel so inclined.  ;;;","14/Oct/15 15:40;jira-bot;Commit 95a9a8035145bea04126e924a38ba133a2d6f7e4 in activemq's branch refs/heads/activemq-5.12.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=95a9a80 ]

https://issues.apache.org/jira/browse/AMQ-6010

Fix for failed SSL connections not releasing the connection count in the
transport which leads to connections being rejected as having eceeded
the maximum configured connections.
(cherry picked from commit 80b526be7df3471876eceaa2c610747ca7fb89da)
;;;","14/Oct/15 15:40;jira-bot;Commit 80b526be7df3471876eceaa2c610747ca7fb89da in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=80b526b ]

https://issues.apache.org/jira/browse/AMQ-6010

Fix for failed SSL connections not releasing the connection count in the
transport which leads to connections being rejected as having eceeded
the maximum configured connections.;;;","14/Oct/15 15:43;tabish;Created a test case to reproduce and applied the suggested fix.  All working now.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Slave broker startup corrupts shared PList storage,AMQ-6005,12903653,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,volkerk,volkerk,09/Oct/15 08:02,10/Dec/15 15:52,14/Jul/23 05:44,10/Dec/15 14:26,5.10.0,5.7.0,,,,,,,,5.13.1,5.14.0,,,KahaDB,,,,,0,,,,,,"h4. Background

When multiple JVMs run AMQ in a master/slave configuration with the broker directory in a shared filesystem location (as is required e.g. for kahaPersistence), and when due to high message volume or slow producers the broker's memory needs exceed the configured memory usage limit, AMQ will overflow asynchronous messages to a PList store inside the ""tmp_storage"" subdirectory of said shared broker directory.

h4. Issue

We frequently observed this tmpDB store getting corrupted with ""stale NFS filehandle"" errors for tmpDB.data, tmpDB.redo, and some journal files, all of which suddenly went missing from the tmp_storage folder. This puts the entire broker into a bad state from which it cannot recover. Only restarting the service (which causes a broker slave to take over and loses the yet-undelivered messages) gets a working state back.

h4. Symptoms

Stack trace:
{noformat}
...
Caused by: java.io.IOException: Stale file handle
	at java.io.RandomAccessFile.readBytes0(Native Method)
	at java.io.RandomAccessFile.readBytes(RandomAccessFile.java:350)
	at java.io.RandomAccessFile.read(RandomAccessFile.java:385)
	at java.io.RandomAccessFile.readFully(RandomAccessFile.java:444)
	at java.io.RandomAccessFile.readFully(RandomAccessFile.java:424)
	at org.apache.kahadb.page.PageFile.readPage(PageFile.java:876)
	at org.apache.kahadb.page.Transaction$2.readPage(Transaction.java:446)
	at org.apache.kahadb.page.Transaction$2.<init>(Transaction.java:437)
	at org.apache.kahadb.page.Transaction.openInputStream(Transaction.java:434)
	at org.apache.kahadb.page.Transaction.load(Transaction.java:410)
	at org.apache.kahadb.page.Transaction.load(Transaction.java:367)
	at org.apache.kahadb.index.ListIndex.loadNode(ListIndex.java:306)
	at org.apache.kahadb.index.ListIndex.getHead(ListIndex.java:99)
	at org.apache.kahadb.index.ListIndex.iterator(ListIndex.java:284)
	at org.apache.activemq.store.kahadb.plist.PList$PListIterator.<init>(PList.java:199)
	at org.apache.activemq.store.kahadb.plist.PList.iterator(PList.java:189)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor$DiskIterator.<init>(FilePendingMessageCursor.java:496)
{noformat}

h4. Cause

During BrokerThread startup, the BrokerService.startPersistenceAdapter() method is called, which  via doStartPersistenceAdapter() and getProducerSystemUsage() invokes getSystemUsage(), that calls getTempDataStore(), and that method summarily cleans out the existing contents of the tmp_storage directory.
All of this happens *before* the broker lock is obtained in the PersistenceAdapter.start() method at the end of doStartPersistenceAdapter().

So a JVM that doesn't get to be the broker (because there already is one) and runs in slave mode (waiting to obtain the broker lock) interferes with and corrupts the running broker's tmp_storage and thus breaks the broker. That's a critical bug. The slave has no business starting up the persistence adapter and cleaning out data as it hasn't gotten the lock yet, so isn't allowed to do any work, period. 

h4. Workaround

As workaround, an unshared local directory needs to be specified as tempDirectory for the broker, even if the main broker directory is shared. Also, since broker startup will clear the tmp_storage out anyway, there really is no advantage to having this in a shared location - since the next broker that starts up after a broker failure will never re-use that data anyway.",RHLinux6,gtully,jira-bot,tabish,volkerk,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Dec 10 15:52:52 UTC 2015,,,,,,,,,,,"0|i2mswf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Oct/15 13:27;tabish;Have you tested against the latest release, 5.10 is relatively old at this point.  ;;;","13/Oct/15 04:01;volkerk;Not yet - we have an AMQ 5.12 upgrade in the pipeline, but not in production use yet, and this problem is only reproduced in production use, since you need to create quite a few asynchronous topic messages to even get to use tmp_storage - while there's few messages they all stay in memory and this issue doesn't arise. Plus you need a multi-server environment. So this isn't easily reproduced in the lab.

However the relevant code has not changed in 5.12, I've verified that. It's all in one class and should be easy enough to follow the outline in the ticket description. I've added some additional detail to make it easier to follow.;;;","21/Oct/15 19:20;volkerk;Also, to replicate the source of the problem, you can simply hand-create empty tmpDB.data, tmpDB.redo, and db-1.log files in the shared tmp_storage folder, then restart one of the slave nodes while the master broker is still running - you will see that those files get deleted by the slave startup, which would corrupt the master broker's tmpDB if it were currently using it. So for issue replication it's not necessary to actually create enough asynchronous message load to be using tmp_storage - it's the tmpDB deletion by a *slave* that is the problem.

I should also note that we'd originally been seeing this in action only when using JDBC persistence (where there's technically no need for a shared dataDirectory at all anymore). With kahaPersistence things used to go south before ever reaching this point, due to unreliable file locking over NFS, so we've moved away from that.
(Update: it does happen with kahaPersistence too, seen it just recently, with 160 GB of error logging as a result);;;","10/Dec/15 14:25;jira-bot;Commit 768fa17085ac938441915a82987c99b37ac52515 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=768fa17 ]

https://issues.apache.org/jira/browse/AMQ-6005 - have plist whack it existing state on start. Start the temp store after the primary persistence adapter which does the locking
;;;","10/Dec/15 14:26;gtully;clearing out temp store is deferred till temp store start which is now done after locking by primary store;;;","10/Dec/15 14:49;jira-bot;Commit 9e8f0203015dd842ecc0804231da9a62ed3b02ec in activemq's branch refs/heads/activemq-5.13.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=9e8f020 ]

https://issues.apache.org/jira/browse/AMQ-6005 - have plist whack it existing state on start. Start the temp store after the primary persistence adapter which does the locking

(cherry picked from commit 768fa17085ac938441915a82987c99b37ac52515)
;;;","10/Dec/15 15:52;volkerk;Thanks for the fix, much appreciated!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TcpTransportServer#socketHandlerThread should be intterrupted to stop the socket handler (daemon) thread,AMQ-6004,12903308,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,erikgb,erikgb,08/Oct/15 09:25,18/Nov/15 16:21,14/Jul/23 05:44,08/Oct/15 12:15,5.12.0,,,,,,,,,5.12.1,5.13.0,,,,,,,,0,,,,,,"I am trying to achieve a clean shutdown of an embedded broker in a web application running in Tomcat. When the web application is shut down, Tomcat is always complaining about a running thread:
{code}
09:09:55.948 WARN  [o.a.c.loader.WebappClassLoaderBase] [] The web application [xxx] appears to have started a thread named [ActiveMQ Transport Server Thread Handler: tcp://0.0.0.0:12345] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.LinkedBlockingQueue.poll(Unknown Source)
 org.apache.activemq.transport.tcp.TcpTransportServer$2.run(TcpTransportServer.java:427)
 java.lang.Thread.run(Unknown Source)
{code}

I am pretty sure this can be easily fixed by interrupting the socket handler thread, as suggested by Andreas Hartmann in [AMQ-3451|https://issues.apache.org/jira/browse/AMQ-3451?focusedCommentId=13170863&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13170863]. Please see attached patch.",,cshannon,erikgb,jira-bot,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Oct/15 09:25;erikgb;Interrupt_socket_handler_thread_to_stop_daemon_thread.patch;https://issues.apache.org/jira/secure/attachment/12765554/Interrupt_socket_handler_thread_to_stop_daemon_thread.patch",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Nov 18 16:21:38 UTC 2015,,,,,,,Patch Available,,,,"0|i2mqrr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Oct/15 12:13;jira-bot;Commit 4adc8e4f4e57a4335643f49c3072e5fd531c7f27 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=4adc8e4 ]

https://issues.apache.org/jira/browse/AMQ-6004

Calling socketHandlerThread.interrupt() on TcpTransportServer stop to
make sure the broker shutsdown cleanly.

Patch applied with thanks to Erik Godding Boye
;;;","08/Oct/15 12:14;jira-bot;Commit a0d8a15465eccec04e1273acfb7594f042ffdf46 in activemq's branch refs/heads/activemq-5.12.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=a0d8a15 ]

https://issues.apache.org/jira/browse/AMQ-6004

Calling socketHandlerThread.interrupt() on TcpTransportServer stop to
make sure the broker shutsdown cleanly.

Patch applied with thanks to Erik Godding Boye

(cherry picked from commit 4adc8e4f4e57a4335643f49c3072e5fd531c7f27)
;;;","08/Oct/15 12:15;cshannon;This is a good idea to do to make sure things shutdown cleanly.  Patch applied with thanks.;;;","18/Nov/15 16:21;jira-bot;Commit 15412bae64bf265687b1099e19cba008bac9c825 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=15412ba ]

AMQ4221Test - remove system exit as it breaks surefire fork, https://issues.apache.org/jira/browse/AMQ-6004 interrupt causes errors on shutdown. Two are sorted but the check for errors in the logs may still cause intermittent failures
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MQTT virtual topic strategy doesn't escape client id properly,AMQ-6002,12902937,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,07/Oct/15 09:27,07/Oct/15 16:51,14/Jul/23 05:44,07/Oct/15 09:31,5.12.0,,,,,,,,,5.12.1,5.13.0,,,MQTT,,,,,0,,,,,,"If client id contains special characters like ""."", the consumer will not receive messages properly",,dejanb,jira-bot,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Oct 07 16:47:32 UTC 2015,,,,,,,,,,,"0|i2mohb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Oct/15 09:29;jira-bot;Commit aa743cbd7ab7815bfa84e11aee9d3783c08e9eea in activemq's branch refs/heads/master from [~dejanb]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=aa743cb ]

https://issues.apache.org/jira/browse/AMQ-6002 - escape client id in virtual topic mqtt subscription
;;;","07/Oct/15 09:31;dejanb;Fixed on master. I reorganised some tests as well.;;;","07/Oct/15 09:42;jira-bot;Commit 816e8dfe5413cf9316bf1946afe6f236d85f8351 in activemq's branch refs/heads/master from [~dejanb]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=816e8df ]

https://issues.apache.org/jira/browse/AMQ-6002 - escape client id in virtual topic mqtt subscription; add test
;;;","07/Oct/15 16:47;jira-bot;Commit 147400c231e4da740e844453a5c7abd653ba8b66 in activemq's branch refs/heads/activemq-5.12.x from [~dejanb]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=147400c ]

https://issues.apache.org/jira/browse/AMQ-6002 - escape client id in virtual topic mqtt subscription

(cherry picked from commit aa743cbd7ab7815bfa84e11aee9d3783c08e9eea)
;;;","07/Oct/15 16:47;jira-bot;Commit 503b62c17671fc812eca5c76106f74a30fd999cc in activemq's branch refs/heads/activemq-5.12.x from [~dejanb]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=503b62c ]

https://issues.apache.org/jira/browse/AMQ-6002 - escape client id in virtual topic mqtt subscription; add test

(cherry picked from commit 816e8dfe5413cf9316bf1946afe6f236d85f8351)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pause/resume feature of ActiveMQ not resuming properly,AMQ-6000,12902658,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,mrapache,mrapache,06/Oct/15 10:16,13/Nov/15 16:43,14/Jul/23 05:44,10/Nov/15 20:40,5.12.0,,,,,,,,,5.12.2,5.13.0,,,Broker,JMX,,,,0,features,,,,,"The problem is that, when you *resume* the message delivery,

# If there is a message entering the queue: the broker will immediately send the pending messages to the consumer which is totally OK.
# But if no message _enters_ the queue: the pending messages in the queue will not be sent to the consumers until the expiration checking is performed on the queue (which by default is 30 seconds and can be controlled by the _expireMessagesPeriod_ attribute) and non-expired messages will be sent to the consumers afterwards.

Obviously we can change the _expireMessagesPeriod_ to limit this delay, but when you need a milisec precision, performing the expiration check every milisec will not make sense.
How is it possible to force the queue to start sending messages immediately after resumption?",,gtully,jira-bot,mrapache,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Important,,,,,,,,,9223372036854775807,,,Fri Nov 13 16:40:56 UTC 2015,,,,,,,,,,,"0|i2mmrj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Oct/15 11:15;gtully;To sort this, I think there should be a call to wakeup() in org.apache.activemq.broker.region.Queue#resumeDispatch;;;","10/Nov/15 20:39;jira-bot;Commit 078a101cf735ae23ebf96b3bbe3f53003dccc0c7 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=078a101 ]

https://issues.apache.org/jira/browse/AMQ-6000

Fix and test, wakeup queue dispatch when resume is called.;;;","13/Nov/15 16:40;jira-bot;Commit 7875e978cdea617b22b95d40755b8f761a8be1f7 in activemq's branch refs/heads/activemq-5.12.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=7875e97 ]

https://issues.apache.org/jira/browse/AMQ-6000

Fix and test, wakeup queue dispatch when resume is called.
(cherry picked from commit 078a101cf735ae23ebf96b3bbe3f53003dccc0c7)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Durable subscription no updated when reactivated sub changes noLocal value,AMQ-5996,12902000,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,01/Oct/15 21:26,21/Sep/16 13:36,14/Jul/23 05:44,03/Oct/15 23:59,5.10.2,5.11.2,5.12.0,,,,,,,5.12.1,5.13.0,,,Broker,,,,,0,,,,,,"When a durable subscription that was offline is reactivated and the selector or noLocal value is changed the subscription is supposed to be removed and re-added as if it was a new subscription.  We currently handle the selector part to a certain extent but the DurableSubscription instance that backs the offline durable sub contains a selectorExpression that is not updated so subscription will not apply the new selector value unless the broker was restarted before the reactivation.  

We don't as of yet handle the change of noLocal on the subscription due to the fact that prior to v5.12.0 the value was not stored in the persistence layer.  Now that we store the noLocal value we can check that along with the selector and update the subscription, which also needs to update the selectorExpression as the noLocal value is filtered via its own expression on the selector chain.  ",,jira-bot,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6430,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Sat Oct 03 23:59:12 UTC 2015,,,,,,,,,,,"0|i2mipb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Oct/15 23:25;jira-bot;Commit 81b4b9ae3d17c83c42c17290348e2aed6f17d28b in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=81b4b9a ]

https://issues.apache.org/jira/browse/AMQ-5996

When possible check for noLocl changes on durable subscription
reactivation and recreate the durable sub if it changes.  For both
selector change and noLocal change also update the AbstractSubscription
selectorExpression so it matches with what was requested. ;;;","01/Oct/15 23:31;jira-bot;Commit 82a2c0553a97cc087ddfceeddef0ea677d39ee9d in activemq's branch refs/heads/activemq-5.12.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=82a2c05 ]

https://issues.apache.org/jira/browse/AMQ-5996

When possible check for noLocl changes on durable subscription
reactivation and recreate the durable sub if it changes.  For both
selector change and noLocal change also update the AbstractSubscription
selectorExpression so it matches with what was requested.
(cherry picked from commit 81b4b9ae3d17c83c42c17290348e2aed6f17d28b)
;;;","03/Oct/15 23:59;tabish;Changes added, tests still stable so doesn't seem to have broken anything. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broker can't recover Durable Subscription on index deletion,AMQ-5994,12901886,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,cshannon,cshannon,01/Oct/15 13:12,07/Oct/15 16:53,14/Jul/23 05:44,06/Oct/15 11:18,5.12.0,,,,,,,,,5.12.1,5.13.0,,,Broker,KahaDB,,,,0,,,,,,"The broker is unable to recover a durable subscription when replaying the journal to rebuild the index, if the original index was deleted.  The problem is that when the index is recovered, any KahaSubscriptionCommand is ignored so the messages are never recovered because when the messages are replayed the subscriptions don't exist.

I modified AMQ4212Test.java to demonstrate this issue and I have attached it.

It looks like the fix for AMQ-4000 is what introduces this problem. 

The commit for that issue is is : https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=0061f6f75538ede8fe3443925e64beb839abfb90

",,brianjohnson,cshannon,gtully,jira-bot,lichtin,paulgale,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Oct/15 13:12;cshannon;SubscriptionRecoveryTest.java;https://issues.apache.org/jira/secure/attachment/12764599/SubscriptionRecoveryTest.java",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Oct 07 12:03:33 UTC 2015,,,,,,,,,,,"0|i2mhzz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Oct/15 13:22;cshannon;[~gtully],

It looks like you had made the change for this and I don't want to back it out as it would cause a regression for AMQ-4000.  However, I'm not sure how else to recover the messages on a complete rebuild of the index if the KahaSubscriptionCommand is skipped at that point.;;;","01/Oct/15 15:42;gtully;[~cshannon] thanks for the heads up. That does look like a problem. I will peek at it in the next day or so and figure out what the correct fix is.;;;","05/Oct/15 11:40;cshannon;Thanks [~gtully]. I'd like to back port this to 5.12.1 if there is a good solution for it.;;;","06/Oct/15 11:17;jira-bot;Commit dc06c8dc7540233aad6722afe554c2ea505754e2 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=dc06c8d ]

https://issues.apache.org/jira/browse/AMQ-5994 https://issues.apache.org/jira/browse/AMQ-4000 - proper fix for duplicate sub info from the store on recovery failure from AMQ2149Test. Additional test from Christopher L
;;;","06/Oct/15 11:18;gtully;[~cshannon] thanks for the test!;;;","07/Oct/15 12:02;jira-bot;Commit 8ef31b91e6db5a10cebc79785f075649d8ba0a56 in activemq's branch refs/heads/activemq-5.12.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=8ef31b9 ]

https://issues.apache.org/jira/browse/AMQ-5994 https://issues.apache.org/jira/browse/AMQ-4000 - proper fix for duplicate sub info from the store on recovery failure from AMQ2149Test. Additional test from Christopher L

(cherry picked from commit dc06c8dc7540233aad6722afe554c2ea505754e2)
;;;","07/Oct/15 12:03;cshannon;Thanks Gary, I went ahead and cherry picked the fix to 5.12.x as well.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PooledConnectionFactory does not allow disabling JMX on GenericKeyObjectPool,AMQ-5990,12901642,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,Aravind.Chennuru,Aravind.Chennuru,30/Sep/15 17:29,08/Oct/15 12:02,14/Jul/23 05:44,01/Oct/15 18:14,,,,,,,,,,5.12.1,5.13.0,,,,,,,,0,,,,,,"initConnectionPool does not allow us to configure the GenericKeyObjectPool.
Suggestion:
PooledConnectionFactory
{code}
private GenericKeyedObjectPoolConfig config;
public void setBasePoolConfig(final GenericKeyedObjectPoolConfig config) {
        this.config = config;
}

public void initConnectionsPool() {
     if (this.connectionsPool == null) {
            this.connectionsPool = new GenericKeyedObjectPool<ConnectionKey, ConnectionPool>(blah, config==null?new GenericKeyedObjectPoolConfig():config);
     }
}

protected ConnectionPool createConnectionPool(Connection connection) {
        return new ConnectionPool(connection, config);
    }
{code}
ConnectionPool
{code}
public ConnectionPool(Connection connection) {
      this(connection, new GenericKeyedObjectPoolConfig());
}

public ConnectionPool(Connection connection, GenericKeyedObjectPoolConfig config) {
      this.connection = wrap(connection);
      this.sessionPool = new GenericKeyedObjectPool<SessionKey, SessionHolder>(blah, config==null?new GenericKeyedObjectPoolConfig():config);
}
{code}
",,Aravind.Chennuru,cshannon,jira-bot,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Sep/15 21:15;Aravind.Chennuru;patchfile.txt;https://issues.apache.org/jira/secure/attachment/12764485/patchfile.txt",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Important,Patch,,,,,,,,9223372036854775807,,,Thu Oct 08 12:02:35 UTC 2015,,,,,,,Patch Available,,,,"0|i2mgqf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"30/Sep/15 21:17;Aravind.Chennuru;{code}
diff --git a/activemq-jms-pool/src/main/java/org/apache/activemq/jms/pool/ConnectionPool.java b/activemq-jms-pool/src/main/java/org/apache/activemq/jms/pool/ConnectionPool.java
index 6b6fe65..22d0517 100644
--- a/activemq-jms-pool/src/main/java/org/apache/activemq/jms/pool/ConnectionPool.java
+++ b/activemq-jms-pool/src/main/java/org/apache/activemq/jms/pool/ConnectionPool.java
@@ -29,13 +29,11 @@ import javax.jms.Session;
 import javax.jms.TemporaryQueue;
 import javax.jms.TemporaryTopic;
 
-import org.apache.commons.pool2.BasePooledObjectFactory;
-import org.apache.commons.pool2.KeyedObjectPool;
 import org.apache.commons.pool2.KeyedPooledObjectFactory;
 import org.apache.commons.pool2.PooledObject;
 import org.apache.commons.pool2.impl.DefaultPooledObject;
 import org.apache.commons.pool2.impl.GenericKeyedObjectPool;
-import org.apache.commons.pool2.impl.GenericObjectPool;
+import org.apache.commons.pool2.impl.GenericKeyedObjectPoolConfig;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@@ -66,6 +64,9 @@ public class ConnectionPool implements ExceptionListener {
     private ExceptionListener parentExceptionListener;
 
     public ConnectionPool(Connection connection) {
+    	this(connection, new GenericKeyedObjectPoolConfig());
+    }
+    public ConnectionPool(Connection connection, GenericKeyedObjectPoolConfig config) {
 
         this.connection = wrap(connection);
 
@@ -96,7 +97,7 @@ public class ConnectionPool implements ExceptionListener {
                 public void passivateObject(SessionKey sessionKey, PooledObject<SessionHolder> pooledObject) throws Exception {
                 }
             }
-        );
+            , config == null ? new GenericKeyedObjectPoolConfig() : config);
     }
 
     // useful when external failure needs to force expiry
diff --git a/activemq-jms-pool/src/main/java/org/apache/activemq/jms/pool/PooledConnectionFactory.java b/activemq-jms-pool/src/main/java/org/apache/activemq/jms/pool/PooledConnectionFactory.java
index ab251c5..4415683 100644
--- a/activemq-jms-pool/src/main/java/org/apache/activemq/jms/pool/PooledConnectionFactory.java
+++ b/activemq-jms-pool/src/main/java/org/apache/activemq/jms/pool/PooledConnectionFactory.java
@@ -32,6 +32,7 @@ import org.apache.commons.pool2.KeyedPooledObjectFactory;
 import org.apache.commons.pool2.PooledObject;
 import org.apache.commons.pool2.impl.DefaultPooledObject;
 import org.apache.commons.pool2.impl.GenericKeyedObjectPool;
+import org.apache.commons.pool2.impl.GenericKeyedObjectPoolConfig;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@@ -80,6 +81,11 @@ public class PooledConnectionFactory implements ConnectionFactory, QueueConnecti
     private boolean createConnectionOnStartup = true;
     private boolean useAnonymousProducers = true;
     private boolean reconnectOnException = true;
+    private GenericKeyedObjectPoolConfig config;
+    
+    public void setBasePoolConfig(final GenericKeyedObjectPoolConfig config) {
+    	this.config = config;
+    }
 
     // Temporary value used to always fetch the result of makeObject.
     private final AtomicReference<ConnectionPool> mostRecentlyCreated = new AtomicReference<ConnectionPool>(null);
@@ -147,7 +153,7 @@ public class PooledConnectionFactory implements ConnectionFactory, QueueConnecti
                     public void passivateObject(ConnectionKey connectionKey, PooledObject<ConnectionPool> pooledObject) throws Exception {
                     }
 
-                });
+                }, config == null ? new GenericKeyedObjectPoolConfig() : config);
 
             // Set max idle (not max active) since our connections always idle in the pool.
             this.connectionsPool.setMaxIdlePerKey(1);
@@ -535,7 +541,7 @@ public class PooledConnectionFactory implements ConnectionFactory, QueueConnecti
      * @return instance of a new ConnectionPool.
      */
     protected ConnectionPool createConnectionPool(Connection connection) {
-        return new ConnectionPool(connection);
+        return new ConnectionPool(connection, config);
     }
 
     /**
{code};;;","01/Oct/15 17:03;cshannon;This seems fine to me, I can apply the patch with a couple of tweaks.;;;","01/Oct/15 17:06;tabish;Allowing access to the configuration of the underlying pool could result in a broker Connection pool given how the PooledConnection bits work, I'd recommend just turning off the JMX bits by default in the pool. ;;;","01/Oct/15 18:11;jira-bot;Commit 7c7c505057ec350eada8d5194b7e30337277f9b2 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=7c7c505 ]

https://issues.apache.org/jira/browse/AMQ-5990

Disabling JMX for the Commons Pool implementation inside of
PooledConnectionFactory.  In the future if we want JMX we should
enable our own JMX stats that are independent of Commons Pool.
;;;","01/Oct/15 18:12;jira-bot;Commit 90122ec49f8fb54595b77ee2811f3c36be160716 in activemq's branch refs/heads/activemq-5.12.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=90122ec ]

https://issues.apache.org/jira/browse/AMQ-5990

Disabling JMX for the Commons Pool implementation inside of
PooledConnectionFactory.  In the future if we want JMX we should
enable our own JMX stats that are independent of Commons Pool.

(cherry picked from commit 7c7c505057ec350eada8d5194b7e30337277f9b2)
;;;","01/Oct/15 18:14;cshannon;Based on the fact that we want to encapsulate the use of Commons Pool and not expose it, I turned of JMX by default and did not expose the configuration option.  There's already an open ticket for adding JMX statistics to the PooledConnectionFactory which should be turned on in the future: AMQ-4025;;;","01/Oct/15 19:27;Aravind.Chennuru;Perfect this serves my purpose. Thanks.
[~cshannon] Do you know when activemq 5.12.1 is scheduled to be released?
Based on that date we should adjust our product release.;;;","01/Oct/15 19:36;cshannon;I'd like to do a release soon as there are already a good number of fixes ready to go. (maybe call a vote next week) But, there are a couple of other tickets that I want to get resolved first, notably AMQ-5966 and AMQ-5994 so we'll see how those go and if anything else critical pops up.;;;","02/Oct/15 20:58;Aravind.Chennuru;How can I download the snapshot build for this change?;;;","05/Oct/15 11:43;cshannon;The snapshot maven repo is here: https://repository.apache.org/content/repositories/snapshots/

You can download the latest binaries here: 

https://repository.apache.org/content/repositories/snapshots/org/apache/activemq/apache-activemq/ ;;;","07/Oct/15 15:24;Aravind.Chennuru;Could you please point me in the direction on how to vote for the release? I don't want to use a snapshot version in production.;;;","08/Oct/15 12:02;cshannon;You can subscribe to the developers list by using these instructions: http://activemq.apache.org/mailing-lists.html

When a vote is called it will be on the developers list.  There's still one issue that needs to be resolved before putting out a 5.12.1 release.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unsafe use of access-order LinkedHashMap via  ActiveMQMessageAuditNoSync - can lead to loop and hang,AMQ-5984,12901009,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,28/Sep/15 12:00,28/Sep/15 13:43,14/Jul/23 05:44,28/Sep/15 13:43,5.12.0,,,,,,,,,5.13.0,,,,Broker,KahaDB,,,,0,,,,,,"A thread looping in{code}""ActiveMQ Transport: tcp:///xxx:yyy@61616"" daemon prio=10 tid=0x00007efff40a3000 nid=0x74f0 runnable [0x00007eff6f0f9000]
   java.lang.Thread.State: RUNNABLE
	at java.util.LinkedHashMap.transfer(LinkedHashMap.java:253)
	at java.util.HashMap.resize(HashMap.java:581)
	at java.util.HashMap.addEntry(HashMap.java:879)
	at java.util.LinkedHashMap.addEntry(LinkedHashMap.java:427)
	at java.util.HashMap.put(HashMap.java:505)
	at org.apache.activemq.ActiveMQMessageAuditNoSync.isDuplicate(ActiveMQMessageAuditNoSync.java:133)
	at org.apache.activemq.store.kahadb.MessageDatabase.upadateIndex(MessageDatabase.java:1238)
	at org.apache.activemq.store.kahadb.MessageDatabase$AddOpperation.execute(MessageDatabase.java:2196)
	at org.apache.activemq.store.kahadb.MessageDatabase$15.execute(MessageDatabase.java:1141)
	at org.apache.activemq.store.kahadb.disk.page.Transaction.execute(Transaction.java:779)
	at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:1137)
	at org.apache.activemq.store.kahadb.MessageDatabase$10.visit(MessageDatabase.java:1005)
	at org.apache.activemq.store.kahadb.data.KahaCommitCommand.visit(KahaCommitCommand.java:130)....{code}

points to the need for a write lock on access to the LRUCache used for duplicate detection for failover producers.
The index lock protects modifications on put etc but clearly a get needs to have exclusive access. Tis in the javadoc in bold - ""In access-ordered linked hash maps, merely querying the map with get is a structural modification""",,gtully,jira-bot,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Sep 28 13:43:39 UTC 2015,,,,,,,,,,,"0|i2mcrz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Sep/15 13:41;jira-bot;Commit f6e1054a4b7eb67568982acc2a3dd488db21e509 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=f6e1054 ]

https://issues.apache.org/jira/browse/AMQ-5984 - fix sync on get for access ordered LinkedHashMap
;;;","28/Sep/15 13:43;gtully;ensure serial access to the message audit in kahaDB;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Restoring MQTT client virtual topic queue uses wrong prefix.,AMQ-5983,12901004,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,28/Sep/15 11:08,07/Oct/15 16:51,14/Jul/23 05:44,28/Sep/15 11:11,5.12.0,,,,,,,,,5.12.1,5.13.0,,,MQTT,,,,,0,,,,,,Restoring durable queues on mqtt client connect is broker as it does not lookup for queues properly. This can lead to wrong subscriptions on virtual topic queues.,,dejanb,jira-bot,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Oct 07 16:47:29 UTC 2015,,,,,,,,,,,"0|i2mcqv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Sep/15 11:10;jira-bot;Commit 4a8fec4a6698552ee14c232f122f3c7387679b38 in activemq's branch refs/heads/master from [~dejanb]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=4a8fec4 ]

https://issues.apache.org/jira/browse/AMQ-5983 - mqtt virtual topic queue restore
;;;","28/Sep/15 11:11;dejanb;Fixed on master;;;","07/Oct/15 16:47;jira-bot;Commit 69e894cda89144641c9f3d61f3fd0a474be17a09 in activemq's branch refs/heads/activemq-5.12.x from [~dejanb]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=69e894c ]

https://issues.apache.org/jira/browse/AMQ-5983 - mqtt virtual topic queue restore

(cherry picked from commit 4a8fec4a6698552ee14c232f122f3c7387679b38)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ 5.12.0 Spring CustomScopeConfigurer class conflict,AMQ-5978,12895554,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,divvu224,divvu224,22/Sep/15 19:05,22/Sep/15 19:34,14/Jul/23 05:44,22/Sep/15 19:12,5.12.0,,,,,,,,,5.13.0,,,,,,,,,0,,,,,,"CustomScopeConfigurer class poses a conflict in a Spring based application when there's a dependency on activemq-all (5.12.0)

The spring class packaged inside of activemq-all.jar conflicts with the application's Spring dependency. The method ""addScope(String, Session)"" is NOT found and is causing runtime errors.",,cshannon,divvu224,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5973,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Sep 22 19:32:34 UTC 2015,,,,,,,,,,,"0|i2lf47:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Sep/15 19:12;cshannon;This has already been fixed for 5.13.0.  The method {{addScope}} was added in the Spring Framework in version 4.1.1.  The Spring dependency was just updated to 4.1.7.RELEASE in AMQ-5973, with this commit: https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=ebf27cb

For 5.12.0 you will have to avoid using the activemq-all jar if you want to use a newer version of Spring and instead use the exact ActiveMQ jars that you need which don't include Spring.;;;","22/Sep/15 19:32;divvu224;You guys rock! thank you!

I was able to avert the issue for 5.12.0 by including individual jars instead of the activemq-all. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Policy entries not applied in correct order,AMQ-5972,12873234,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,17/Sep/15 09:03,28/Dec/15 16:42,14/Jul/23 05:44,17/Sep/15 09:13,5.12.0,,,,,,,,,5.12.1,5.13.0,,,,,,,,0,,,,,,"When we have multiple policy entries with wildcards that matches a single destination, we want the most specific one to be applied. In some cases at the moment, the wrong policy can be applied. For example

{code}
     <policyMap>
       <policyEntries>
         <policyEntry queue=""DomainA.DomainB.>"" memoryLimit=""20mb"" />
         <policyEntry queue=""DomainA.DomainB.*.*.Prioritised.Queue"" memoryLimit=""5000000"" prioritizedMessages=""true"" />
       </policyEntries>
     </policyMap>{code}",,cshannon,dejanb,jira-bot,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6109,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Sep 17 12:07:20 UTC 2015,,,,,,,,,,,"0|i2kakn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Sep/15 09:08;jira-bot;Commit ee4672baaf190782c197b886f13aea566ba3253f in activemq's branch refs/heads/master from [~dejanb]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=ee4672b ]

https://issues.apache.org/jira/browse/AMQ-5972 - wildcard policy entries not applied in correct order
;;;","17/Sep/15 09:13;dejanb;Fixed by improving destination comparing logic;;;","17/Sep/15 11:50;cshannon;[~dejanb], Mind cherry picking this fix to the 5.12.x branch?  Seems like this would be a good fix to backport.;;;","17/Sep/15 11:59;dejanb;[~cshannon], not at all. I'll do it after I finish the current stuff I'm looking at. If you're at it already, just do it (it should be straight forward).;;;","17/Sep/15 12:03;jira-bot;Commit 70a49b0fa25f97bb7c6c579286acd88abb4e44e5 in activemq's branch refs/heads/activemq-5.12.x from [~dejanb]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=70a49b0 ]

https://issues.apache.org/jira/browse/AMQ-5972 - wildcard policy entries not applied in correct order

(cherry picked from commit ee4672baaf190782c197b886f13aea566ba3253f)
;;;","17/Sep/15 12:04;cshannon;I took care of it, just wanted to make sure you thought it was a good idea to apply it to that branch before doing so.;;;","17/Sep/15 12:07;dejanb;Cool, thanks. Yeah, it makes sense. I ran the tests and didn't find any regressions.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
schedulerSupport,AMQ-5968,12864031,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cumafo,cumafo,14/Sep/15 21:07,21/Sep/15 17:40,14/Jul/23 05:44,21/Sep/15 17:39,5.12.0,,,,,,,,,5.12.1,5.13.0,,,LevelDB,,,,,0,newbie,,,,,"Setting schedulerSupport=""true"" in <broker.. causes:

INFO: Loading '/opt/apache-activemq-5.12.0//bin/env'
INFO: Using java '/usr/bin/java'
INFO: Starting in foreground, this is just for debugging purposes (stop process by pressing CTRL+C)
INFO: Creating pidfile /opt/apache-activemq-5.12.0//data/activemq.pid
Java Runtime: Oracle Corporation 1.7.0_76 /usr/lib/jvm/java-7-oracle/jre
  Heap sizes: current=63488k  free=61452k  max=932352k
    JVM args: -Xms64M -Xmx1G -Djava.util.logging.config.file=logging.properties -Djava.security.auth.login.config=/opt/apache-activemq-5.12.0//conf/login.config -Dcom.sun.management.jmxremote -Djava.awt.headless=true -Djava.io.tmpdir=/opt/apache-activemq-5.12.0//tmp -Dactivemq.classpath=/opt/apache-activemq-5.12.0//conf:/opt/apache-activemq-5.12.0//../lib/ -Dactivemq.home=/opt/apache-activemq-5.12.0/ -Dactivemq.base=/opt/apache-activemq-5.12.0/ -Dactivemq.conf=/opt/apache-activemq-5.12.0//conf -Dactivemq.data=/opt/apache-activemq-5.12.0//data
Extensions classpath:
  [/opt/apache-activemq-5.12.0/lib,/opt/apache-activemq-5.12.0/lib/camel,/opt/apache-activemq-5.12.0/lib/optional,/opt/apache-activemq-5.12.0/lib/web,/opt/apache-activemq-5.12.0/lib/extra]
ACTIVEMQ_HOME: /opt/apache-activemq-5.12.0
ACTIVEMQ_BASE: /opt/apache-activemq-5.12.0
ACTIVEMQ_CONF: /opt/apache-activemq-5.12.0/conf
ACTIVEMQ_DATA: /opt/apache-activemq-5.12.0/data
Loading message broker from: xbean:activemq.xml
2015-09-14 23:02:05,931 | Refreshing org.apache.activemq.xbean.XBeanBrokerFactory$1@4d25c934: startup date [Mon Sep 14 23:02:05 CEST 2015]; root of context hierarchy
2015-09-14 23:02:07,713 | Exception encountered during context initialization - cancelling refresh attempt
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.RuntimeException: java.lang.NullPointerException
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1514)[spring-beans-3.2.11.RELEASE.jar:3.2.11.RELEASE]
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:521)[spring-beans-3.2.11.RELEASE.jar:3.2.11.RELEASE]
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)[spring-beans-3.2.11.RELEASE.jar:3.2.11.RELEASE]
    at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:293)[spring-beans-3.2.11.RELEASE.jar:3.2.11.RELEASE]
    at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)[spring-beans-3.2.11.RELEASE.jar:3.2.11.RELEASE]
    at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:290)[spring-beans-3.2.11.RELEASE.jar:3.2.11.RELEASE]
    at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:191)[spring-beans-3.2.11.RELEASE.jar:3.2.11.RELEASE]
    at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:636)[spring-beans-3.2.11.RELEASE.jar:3.2.11.RELEASE]
    at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:934)[spring-context-3.2.11.RELEASE.jar:3.2.11.RELEASE]
    at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)[spring-context-3.2.11.RELEASE.jar:3.2.11.RELEASE]
    at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)[xbean-spring-3.18.jar:3.18]
    at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)[xbean-spring-3.18.jar:3.18]
    at org.apache.activemq.xbean.XBeanBrokerFactory$1.<init>(XBeanBrokerFactory.java:104)[activemq-spring-5.12.0.jar:5.12.0]
    at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:104)[activemq-spring-5.12.0.jar:5.12.0]
    at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:67)[activemq-spring-5.12.0.jar:5.12.0]
    at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)[activemq-broker-5.12.0.jar:5.12.0]
    at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)[activemq-broker-5.12.0.jar:5.12.0]
    at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:87)[activemq-console-5.12.0.jar:5.12.0]
    at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:62)[activemq-console-5.12.0.jar:5.12.0]
    at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:154)[activemq-console-5.12.0.jar:5.12.0]
    at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:62)[activemq-console-5.12.0.jar:5.12.0]
    at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:104)[activemq-console-5.12.0.jar:5.12.0]
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)[:1.7.0_76]
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)[:1.7.0_76]
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)[:1.7.0_76]
    at java.lang.reflect.Method.invoke(Method.java:606)[:1.7.0_76]
    at org.apache.activemq.console.Main.runTaskClass(Main.java:262)[activemq.jar:5.12.0]
    at org.apache.activemq.console.Main.main(Main.java:115)[activemq.jar:5.12.0]
2015-09-14 23:02:07,728 | Failed to load: class path resource [activemq.xml], reason: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.RuntimeException: java.lang.NullPointerException
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.RuntimeException: java.lang.NullPointerException
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1514)[spring-beans-3.2.11.RELEASE.jar:3.2.11.RELEASE]
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:521)[spring-beans-3.2.11.RELEASE.jar:3.2.11.RELEASE]
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)[spring-beans-3.2.11.RELEASE.jar:3.2.11.RELEASE]
    at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:293)[spring-beans-3.2.11.RELEASE.jar:3.2.11.RELEASE]
    at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)[spring-beans-3.2.11.RELEASE.jar:3.2.11.RELEASE]
    at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:290)[spring-beans-3.2.11.RELEASE.jar:3.2.11.RELEASE]
    at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:191)[spring-beans-3.2.11.RELEASE.jar:3.2.11.RELEASE]
    at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:636)[spring-beans-3.2.11.RELEASE.jar:3.2.11.RELEASE]
    at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:934)[spring-context-3.2.11.RELEASE.jar:3.2.11.RELEASE]
    at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)[spring-context-3.2.11.RELEASE.jar:3.2.11.RELEASE]
    at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)[xbean-spring-3.18.jar:3.18]
    at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)[xbean-spring-3.18.jar:3.18]
    at org.apache.activemq.xbean.XBeanBrokerFactory$1.<init>(XBeanBrokerFactory.java:104)[activemq-spring-5.12.0.jar:5.12.0]
    at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:104)[activemq-spring-5.12.0.jar:5.12.0]
    at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:67)[activemq-spring-5.12.0.jar:5.12.0]
    at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)[activemq-broker-5.12.0.jar:5.12.0]
    at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)[activemq-broker-5.12.0.jar:5.12.0]
    at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:87)[activemq-console-5.12.0.jar:5.12.0]
    at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:62)[activemq-console-5.12.0.jar:5.12.0]
    at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:154)[activemq-console-5.12.0.jar:5.12.0]
    at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:62)[activemq-console-5.12.0.jar:5.12.0]
    at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:104)[activemq-console-5.12.0.jar:5.12.0]
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)[:1.7.0_76]
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)[:1.7.0_76]
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)[:1.7.0_76]
    at java.lang.reflect.Method.invoke(Method.java:606)[:1.7.0_76]
    at org.apache.activemq.console.Main.runTaskClass(Main.java:262)[activemq.jar:5.12.0]
    at org.apache.activemq.console.Main.main(Main.java:115)[activemq.jar:5.12.0]
ERROR: java.lang.RuntimeException: Failed to execute start task. Reason: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.RuntimeException: java.lang.NullPointerException
java.lang.RuntimeException: Failed to execute start task. Reason: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.RuntimeException: java.lang.NullPointerException
    at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:91)
    at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:62)
    at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:154)
    at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:62)
    at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:104)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
    at org.apache.activemq.console.Main.runTaskClass(Main.java:262)
    at org.apache.activemq.console.Main.main(Main.java:115)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.RuntimeException: java.lang.NullPointerException
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1514)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:521)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
    at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:293)
    at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
    at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:290)
    at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:191)
    at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:636)
    at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:934)
    at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)
    at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
    at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
    at org.apache.activemq.xbean.XBeanBrokerFactory$1.<init>(XBeanBrokerFactory.java:104)
    at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:104)
    at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:67)
    at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
    at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
    at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:87)
    ... 10 more
Caused by: java.lang.RuntimeException: java.lang.NullPointerException
    at org.apache.activemq.broker.BrokerService.getJobSchedulerStore(BrokerService.java:1894)
    at org.apache.activemq.xbean.XBeanBrokerService.ensureSystemUsageHasStore(XBeanBrokerService.java:91)
    at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1640)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1581)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1511)
    ... 27 more
Caused by: java.lang.NullPointerException
    at org.apache.activemq.leveldb.replicated.ProxyLevelDBStore.createJobSchedulerStore(ProxyLevelDBStore.scala:49)
    at org.apache.activemq.broker.BrokerService.getJobSchedulerStore(BrokerService.java:1884)
    ... 36 more
ERROR: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.RuntimeException: java.lang.NullPointerException
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.RuntimeException: java.lang.NullPointerException
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1514)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:521)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
    at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:293)
    at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
    at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:290)
    at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:191)
    at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:636)
    at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:934)
    at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)
    at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
    at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
    at org.apache.activemq.xbean.XBeanBrokerFactory$1.<init>(XBeanBrokerFactory.java:104)
    at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:104)
    at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:67)
    at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
    at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
    at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:87)
    at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:62)
    at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:154)
    at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:62)
    at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:104)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
    at org.apache.activemq.console.Main.runTaskClass(Main.java:262)
    at org.apache.activemq.console.Main.main(Main.java:115)
Caused by: java.lang.RuntimeException: java.lang.NullPointerException
    at org.apache.activemq.broker.BrokerService.getJobSchedulerStore(BrokerService.java:1894)
    at org.apache.activemq.xbean.XBeanBrokerService.ensureSystemUsageHasStore(XBeanBrokerService.java:91)
    at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1640)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1581)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1511)
    ... 27 more
Caused by: java.lang.NullPointerException
    at org.apache.activemq.leveldb.replicated.ProxyLevelDBStore.createJobSchedulerStore(ProxyLevelDBStore.scala:49)
    at org.apache.activemq.broker.BrokerService.getJobSchedulerStore(BrokerService.java:1884)
    ... 36 more
","ubuntu 14.04, 3.16.0-45-generic",cshannon,cumafo,jira-bot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Sep 21 17:39:59 UTC 2015,,,,,,,,,,,"0|i2k5vz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Sep/15 18:36;cshannon;It looks like you are using Replicated LevelDB and trying to enable scheduling support which isn't supported yet.  Take a look at this page at the bottom: http://activemq.apache.org/replicated-leveldb-store.html

There's a ticket to add support for it here: https://issues.apache.org/jira/browse/AMQ-5498

That being said, a null pointer probably shouldn't be happening either way.  Can you paste the xml configuration you are using?;;;","19/Sep/15 08:43;cumafo;Sorry - missed that. 
Heres my activemq.xml without the scheduler support.

<!--
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the ""License""); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an ""AS IS"" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<!-- START SNIPPET: example -->
<beans
  xmlns=""http://www.springframework.org/schema/beans""
  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
  http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd"">

    <!-- Allows us to use system properties as variables in this configuration file -->
    <bean class=""org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"">
        <property name=""locations"">
            <value>file:${activemq.conf}/credentials.properties</value>
        </property>
    </bean>

   <!-- Allows accessing the server log -->
    <bean id=""logQuery"" class=""io.fabric8.insight.log.log4j.Log4jLogQuery""
          lazy-init=""false"" scope=""singleton""
          init-method=""start"" destroy-method=""stop"">
    </bean>

    <!--
        The <broker> element is used to configure the ActiveMQ broker.
    -->
    <!--broker xmlns=""http://activemq.apache.org/schema/core"" brokerName=""localhost"" dataDirectory=""${activemq.data}"" schedulerSupport=""true""-->
    <broker xmlns=""http://activemq.apache.org/schema/core"" brokerName=""localhost"" dataDirectory=""${activemq.data}"">

        <destinationPolicy>
            <policyMap>
              <policyEntries>
                <policyEntry topic="">"" >
                    <!-- The constantPendingMessageLimitStrategy is used to prevent
                         slow topic consumers to block producers and affect other consumers
                         by limiting the number of messages that are retained
                         For more information, see:

                         http://activemq.apache.org/slow-consumer-handling.html

                    -->
                  <pendingMessageLimitStrategy>
                    <constantPendingMessageLimitStrategy limit=""1000""/>
                  </pendingMessageLimitStrategy>
                </policyEntry>
              </policyEntries>
            </policyMap>
        </destinationPolicy>


        <!--
            The managementContext is used to configure how ActiveMQ is exposed in
            JMX. By default, ActiveMQ uses the MBean server that is started by
            the JVM. For more information, see:

            http://activemq.apache.org/jmx.html
        -->
        <managementContext>
            <managementContext createConnector=""false""/>
        </managementContext>

        <!--
            Configure message persistence for the broker. The default persistence
            mechanism is the KahaDB store (identified by the kahaDB tag).
            For more information, see:

            http://activemq.apache.org/persistence.html
        -->
        <persistenceAdapter>
			<!-- cml: setting the delay seems to disable the locking -->
			<!--
            <kahaDB directory=""${activemq.data}/kahadb"" />
			-->

            <replicatedLevelDB
                directory=""/var/lib/activemq"" 
                replicas=""3"" 
                zkAddress=""10.201.31.151:2181,10.201.31.152:2181,10.201.31.153:2181"" 
                zkPassword="""" 
                zkPath=""/activemq-prod/leveldb-stores"" 
				sync=""quorum_disk""
				bind=""tcp://0.0.0.0:62619""
				<hostname=""172.1.1.161"">
            />
        </persistenceAdapter>


          <!--
            The systemUsage controls the maximum amount of space the broker will
            use before disabling caching and/or slowing down producers. For more information, see:
            http://activemq.apache.org/producer-flow-control.html
          -->
          <systemUsage>
            <systemUsage>
                <memoryUsage>
                    <memoryUsage percentOfJvmHeap=""70"" />
                </memoryUsage>
                <storeUsage>
                    <storeUsage limit=""100 gb""/>
                </storeUsage>
                <tempUsage>
                    <tempUsage limit=""50 gb""/>
                </tempUsage>
            </systemUsage>
        </systemUsage>

        <!--
            The transport connectors expose ActiveMQ over a given protocol to
            clients and other brokers. For more information, see:

            http://activemq.apache.org/configuring-transports.html
        -->
        <transportConnectors>
            <!-- DOS protection, limit concurrent connections to 1000 and frame size to 100MB -->
            <transportConnector name=""openwire"" uri=""tcp://0.0.0.0:61616?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600""/>
            <!--transportConnector name=""amqp"" uri=""amqp://0.0.0.0:5672?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600""/-->
            <!--transportConnector name=""stomp"" uri=""stomp://0.0.0.0:61613?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600""/-->
            <!--transportConnector name=""mqtt"" uri=""mqtt://0.0.0.0:1883?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600""/-->
            <!--transportConnector name=""ws"" uri=""ws://0.0.0.0:61614?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600""/-->
        </transportConnectors>

        <!-- destroy the spring context on shutdown to stop jetty -->
        <shutdownHooks>
            <bean xmlns=""http://www.springframework.org/schema/beans"" class=""org.apache.activemq.hooks.SpringContextHook"" />
        </shutdownHooks>

		<!-- cml added 14-09-21-->
		<plugins>
				<statisticsBrokerPlugin/>
		</plugins>

    </broker>

    <!--
        Enable web consoles, REST and Ajax APIs and demos
        The web consoles requires by default login, you can disable this in the jetty.xml file

        Take a look at ${ACTIVEMQ_HOME}/conf/jetty.xml for more details
    -->
    <import resource=""jetty.xml""/>

</beans>
<!-- END SNIPPET: example -->
;;;","21/Sep/15 15:44;tabish;I think the issue here is that the ProxyLevelDBStore attempt to pass along the creation of the job scheduler to the contained target store instance, which in this stack trace appears to be null.  Since the LevelDBStore doesn't implement a JobScheduler anyway and just throws an UnsupportedOperationException it is probably safest to just do the same from the ProxyLevelDBStore as well to avoid the NPE.;;;","21/Sep/15 17:38;jira-bot;Commit 130455c925786c4bf3333e59240ff0789b9d026f in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=130455c ]

https://issues.apache.org/jira/browse/AMQ-5968

Fixing a potential null pointer exception when attempting to use
scheduler support with replicated levelDB, which is currently not
supported.
;;;","21/Sep/15 17:38;jira-bot;Commit 5488d8a030ca5e97ac4f4892f87ff96e5b4437d1 in activemq's branch refs/heads/activemq-5.12.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=5488d8a ]

https://issues.apache.org/jira/browse/AMQ-5968

Fixing a potential null pointer exception when attempting to use
scheduler support with replicated levelDB, which is currently not
supported.

(cherry picked from commit 130455c925786c4bf3333e59240ff0789b9d026f)
;;;","21/Sep/15 17:39;cshannon;Switched ProxyLevelDBStore to use UnsupportedOperationException when attempting to use scheduler support which prevents a NPE.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Temporary disk usage check doesn't take into account what its already  using,AMQ-5967,12863973,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,cshannon,cshannon,cshannon,14/Sep/15 18:34,14/Sep/15 19:51,14/Jul/23 05:44,14/Sep/15 19:51,5.12.0,,,,,,,,,5.12.1,5.13.0,,,,,,,,0,,,,,,"The temporary usage disk check doesn't take into account what it is already using.  This is fine for the normal case of checking on start up since temporary storage will be empty.  However, with the addition of the new disk limit check task introduced in AMQ-5393 , this causes a bug as we need to take into account the used space already in the temp store when recomputing this value.",,cshannon,jira-bot,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4832,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Sep 14 19:50:40 UTC 2015,,,,,,,,,,,"0|i2k5jb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Sep/15 19:48;jira-bot;Commit 4f8d56aaf60f99abe643e79c6c4940a571289a86 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=4f8d56a ]

https://issues.apache.org/jira/browse/AMQ-5967

Updating temporary limit disk check to take into account space being
used by the temporary store itself
;;;","14/Sep/15 19:50;jira-bot;Commit 44810964284bee17eb95b8ef3d20b3f760c17852 in activemq's branch refs/heads/activemq-5.12.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=4481096 ]

https://issues.apache.org/jira/browse/AMQ-5967

Updating temporary limit disk check to take into account space being
used by the temporary store itself

(cherry picked from commit 4f8d56aaf60f99abe643e79c6c4940a571289a86)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deadlock in client blocks all application server threads,AMQ-5961,12863111,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,erik.wramner,erik.wramner,10/Sep/15 16:38,01/Oct/15 13:36,14/Jul/23 05:44,01/Oct/15 13:36,5.11.0,5.11.1,,,,,,,,5.13.0,,,,JMS client,RAR,,,,0,,,,,,"When we run JBoss EAP 6.4 with high load using AMQ 6.2 (ActiveMQ 5.11) everything grinds to a halt after a few hours. We have 170 threads blocked on the same lock:

""default-threads - 1400"" #406720 prio=5 os_prio=0 tid=0x00007f1b8402b800 nid=0xfe2d waiting for monitor entry [0x00007f19ccdd5000]
   java.lang.Thread.State: BLOCKED (on object monitor)
	at org.apache.activemq.TransactionContext.setXid(TransactionContext.java:729)
	- waiting to lock <0x000000063ac688b8> (a java.util.HashMap)
	at org.apache.activemq.TransactionContext.end(TransactionContext.java:418)
	at org.apache.activemq.ra.LocalAndXATransaction.end(LocalAndXATransaction.java:98)
	at org.jboss.jca.core.tx.jbossts.XAResourceWrapperImpl.end(XAResourceWrapperImpl.java:118)
	at com.arjuna.ats.internal.jta.resources.arjunacore.XAResourceRecord.topLevelPrepare(XAResourceRecord.java:208)
	at com.arjuna.ats.arjuna.coordinator.BasicAction.doPrepare(BasicAction.java:2530)
	at com.arjuna.ats.arjuna.coordinator.BasicAction.doPrepare(BasicAction.java:2497)
	at com.arjuna.ats.arjuna.coordinator.BasicAction.prepare(BasicAction.java:2074)
	- locked <0x000000067461c090> (a com.arjuna.ats.internal.jta.transaction.arjunacore.AtomicAction)
	at com.arjuna.ats.arjuna.coordinator.BasicAction.End(BasicAction.java:1485)
	- locked <0x000000067461c090> (a com.arjuna.ats.internal.jta.transaction.arjunacore.AtomicAction)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.end(TwoPhaseCoordinator.java:98)
	at com.arjuna.ats.arjuna.AtomicAction.commit(AtomicAction.java:162)

This lock is owned by a thread that is waiting for another lock:

""default-threads - 1381"" #404073 prio=5 os_prio=0 tid=0x00007f1a6403c000 nid=0x7d49 waiting on condition [0x00007f19d8a91000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x000000063ab2a260> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:870)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1199)
	at java.util.concurrent.locks.ReentrantLock$NonfairSync.lock(ReentrantLock.java:209)
	at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:285)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:66)
	at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
	at org.apache.activemq.ActiveMQConnection.doAsyncSendPacket(ActiveMQConnection.java:1309)
	at org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1303)
	at org.apache.activemq.ActiveMQSession.asyncSendPacket(ActiveMQSession.java:2008)
	at org.apache.activemq.ActiveMQSession$5.afterRollback(ActiveMQSession.java:973)
	at org.apache.activemq.TransactionContext.afterRollback(TransactionContext.java:162)
	at org.apache.activemq.TransactionContext.prepare(TransactionContext.java:482)
	- locked <0x000000063ac688b8> (a java.util.HashMap)
	at org.apache.activemq.ra.LocalAndXATransaction.prepare(LocalAndXATransaction.java:130)
	at com.arjuna.ats.internal.jta.resources.arjunacore.XAResourceRecord.topLevelPrepare(XAResourceRecord.java:213)
	at com.arjuna.ats.arjuna.coordinator.BasicAction.doPrepare(BasicAction.java:2530)
	at com.arjuna.ats.arjuna.coordinator.BasicAction.doPrepare(BasicAction.java:2497)

The locked object is ENDED_XA_TRANSACTION_CONTEXTS in TransactionContext. The thread that has the lock calls afterRollback without first releasing it and afterRollback does not return promptly (not at all in fact, we need to restart the server to fix this). The same can happen with afterCommit, which is also called from within a synchronized block causing a potential deadlock.

I think I have a fix for this and will create a pull request in github, or if you prefer I can send a patch? It simply means moving the external calls out from the synchronized blocks and would both remove the very real deadlock risks and improve performance.",Platform independent,cshannon,erik.wramner,githubbot,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Sep/15 09:29;erik.wramner;edited-trace.txt;https://issues.apache.org/jira/secure/attachment/12762510/edited-trace.txt",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Oct 01 13:36:56 UTC 2015,,,,,,,Patch Available,,,,"0|i2k093:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/Sep/15 16:51;githubbot;GitHub user erik-wramner opened a pull request:

    https://github.com/apache/activemq/pull/141

    https://issues.apache.org/jira/browse/AMQ-5961

    Prevent deadlock by moving calls to afterCommit
    and afterRollback out of synchronized blocks.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/erik-wramner/activemq master

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/141.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #141
    
----
commit bb2a9acaca34be9a96fa785396cca8d34255e8cd
Author: erik-wramner <erik@wramner.name>
Date:   2015-09-10T16:44:36Z

    https://issues.apache.org/jira/browse/AMQ-5961
    
    Prevent deadlock by moving calls to afterCommit
    and afterRollback out of synchronized blocks.

----
;;;","19/Sep/15 18:56;githubbot;Github user erik-wramner closed the pull request at:

    https://github.com/apache/activemq/pull/141
;;;","20/Sep/15 08:10;erik.wramner;Pull request submitted, tests passed. How do I go about getting this into the release?;;;","20/Sep/15 12:06;cshannon;It looks like the pull request is closed and doesn't show any commits, can you reopen it so I can take a look?;;;","20/Sep/15 12:44;erik.wramner;Sorry, I moved the commit to a dedicated branch in order to rebase. I have created a new pull request with the same code now, I didn't know that moving the commit would close the pull request.;;;","20/Sep/15 13:12;githubbot;GitHub user erik-wramner opened a pull request:

    https://github.com/apache/activemq/pull/143

    https://issues.apache.org/jira/browse/AMQ-5961

    Prevent deadlock by moving calls to afterCommit and afterRollback out of synchronized blocks.
    Same commit as before, moved it to separate branch.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/erik-wramner/activemq amq5961-deadlock

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/143.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #143
    
----
commit 7c98fdd2819a34fe06b38555601ceaecd5f53aaa
Author: erik-wramner <erik@wramner.name>
Date:   2015-09-10T16:44:36Z

    https://issues.apache.org/jira/browse/AMQ-5961
    
    Prevent deadlock by moving calls to afterCommit
    and afterRollback out of synchronized blocks.

----
;;;","20/Sep/15 13:57;cshannon;That patch might work but I'm a little concerned that the iteration of the list outside of a synchronization block could cause other issues such as concurrent modification exceptions if another thread tried to insert into the list.

Since this is only a partial thread dump, I am wondering why the afterRollback() call is never returning and stuck waiting for the MutexTransport write lock.  Is there an actual deadlock in that sense that the thread that has acquired the MutexTransport lock is waiting to acquire the ENDED_XA_TRANSACTION_CONTEXTS lock or is there some other reason why the MutexTransport lock can't be acquired? ;;;","20/Sep/15 18:40;erik.wramner;That is a valid point. I have changed the code so that it synchronizes on the list, keeping the global lock on the map short.

The thread with the MutexTransport is waiting for the communication channel to the broker to be reestablished. I'm not sure why that doesn't happen. It may be that the thread that should take care of that is blocked on the global map or it may be due to something else. We have two issues here. We are trying to sort out the communication issue with Red Hat. The broker is live and working, but obviously something is wrong.

However, even if everything had worked out the global lock must hurt performance. It makes all other threads working with other destinations and transactions wait for this specific thread and transaction to complete its afterCommit or afterRollback calls. That must hurt. And it may cause the server to hang as it does in this case.;;;","21/Sep/15 20:12;cshannon;Looks like the PR got closed again. 

And as you pointed out, we can look at seeing if it makes sense to get rid of the global lock for performance reasons.  But this specific bug in this case certainly seems to be that the afterRollback is stuck.  Even if you took away the locking, you'd have all of your threads stuck waiting forever for afterRollback to finish which would still cause the broker to quit working eventually.;;;","23/Sep/15 06:08;erik.wramner;Pull request 143 (https://github.com/apache/activemq/pull/143) is open, 141 is closed.

As for all threads becoming stuck I don't agree for two reasons. First it might be that the thread that is supposed to reestablish communication is blocked on the locked HashMap. I don't know the code base well enough to easily find out, but I can dig into the stack trace. If that is the case we have a true deadlock and it would help to get rid of the global lock. Second even if afterRollback blocks forever that will kill one thread and one transaction, but without the global lock it may be possible for the other 169 threads to proceed with their work for new transactions (possibly for other queues/topics if the queue/topic is broken). They may also get blocked by other things, but it is possible that they can proceed. That could make the difference between a panic and a planned restart after peak times.

By the way, I changed the code again so that it doesn't lock the list when it has been removed from the map. Instead all additions to the list are within the map's lock. That way additions are protected and nothing can modify the list when it has been removed, so it can be processed safely without locks. That gets rid of the possible global lock in isInXATransaction, where the previous version locked the map and then tried to get a lock on the list.;;;","24/Sep/15 10:30;cshannon;[~gtully], Can you take a look at this when you get a chance to see what you think about the proposed changes of to the transactional behavior here? ;;;","25/Sep/15 15:31;gtully;[~erik.wramner] can you attach the full thread dump, just to determine why there is no response from the broker. thanks;;;","26/Sep/15 09:29;erik.wramner;Stack trace, application-specific package/class names replaced.;;;","28/Sep/15 15:49;gtully;peeking at the thread dump the root cause is: {code}at org.apache.activemq.transport.failover.FailoverTransport.oneway(FailoverTransport.java:614){code}. There was a recent fix (https://issues.apache.org/jira/browse/AMQ-5951) in that area but there is also a workaround via timeout=1 for the failover transport.
The RAR does it's own reconnection and as a result the failover transport should not block on a reconnect and rather propagate the failure back to the caller, ie: maxReconnectAttempts=0 needs to be used on the failover url.
Peeking more at the fix, I think the canReconnect check may also be needed at line 609. Need to verify that.;;;","28/Sep/15 19:40;erik.wramner;I'm quite sure we were using maxReconnectAttempts=0, but not timeout=1. Good to know.

Still, unless you think the global lock is needed in order to ensure correctness somehow I would still argue for getting rid of it. It must hurt performance to make all the other threads wait for the afterCommit/afterRollback processing to complete and as illustrated here there is always a risk for liveness problems.;;;","30/Sep/15 10:52;gtully;I think the pull request looks fine and I see your point about liveness. The only issue is the lack of tests in this area and no additional test are included. However if you found some benefit in your use case it can make some sense to include this.
I can't see any point in holding the lock for callback processing from an transaction integrity point of view :-);;;","01/Oct/15 09:05;erik.wramner;Good. I like tests, but I can't see how I could write a good one for this. It happens after a few hours of heavy load. I guess I can mock it, but then the test would just work the way I intended...

If you are happy with the pull request perhaps you or Christopher can accept it?

-Erik;;;","01/Oct/15 13:26;cshannon;I can merge this in and we can let Jenkins run and see if it causes any regressions on the existing tests.  Thanks for reviewing this Gary.;;;","01/Oct/15 13:35;jira-bot;Commit 9a78bc689f06dde61ba38be1ebc840a53ca02b68 in activemq's branch refs/heads/master from [~erik.wramner]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=9a78bc6 ]

https://issues.apache.org/jira/browse/AMQ-5961

Prevent deadlock by moving calls to afterCommit
and afterRollback out of synchronized blocks.

https://issues.apache.org/jira/browse/AMQ-5961
Lock list but keep global hashmap out for deadlock protection.

https://issues.apache.org/jira/browse/AMQ-5961
Lock safely in isInXATransaction.

https://issues.apache.org/jira/browse/AMQ-5961
Don't synchronize on list as we have an exclusive reference.
;;;","01/Oct/15 13:35;jira-bot;Commit 9a78bc689f06dde61ba38be1ebc840a53ca02b68 in activemq's branch refs/heads/master from [~erik.wramner]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=9a78bc6 ]

https://issues.apache.org/jira/browse/AMQ-5961

Prevent deadlock by moving calls to afterCommit
and afterRollback out of synchronized blocks.

https://issues.apache.org/jira/browse/AMQ-5961
Lock list but keep global hashmap out for deadlock protection.

https://issues.apache.org/jira/browse/AMQ-5961
Lock safely in isInXATransaction.

https://issues.apache.org/jira/browse/AMQ-5961
Don't synchronize on list as we have an exclusive reference.
;;;","01/Oct/15 13:35;jira-bot;Commit 9a78bc689f06dde61ba38be1ebc840a53ca02b68 in activemq's branch refs/heads/master from [~erik.wramner]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=9a78bc6 ]

https://issues.apache.org/jira/browse/AMQ-5961

Prevent deadlock by moving calls to afterCommit
and afterRollback out of synchronized blocks.

https://issues.apache.org/jira/browse/AMQ-5961
Lock list but keep global hashmap out for deadlock protection.

https://issues.apache.org/jira/browse/AMQ-5961
Lock safely in isInXATransaction.

https://issues.apache.org/jira/browse/AMQ-5961
Don't synchronize on list as we have an exclusive reference.
;;;","01/Oct/15 13:35;jira-bot;Commit 9a78bc689f06dde61ba38be1ebc840a53ca02b68 in activemq's branch refs/heads/master from [~erik.wramner]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=9a78bc6 ]

https://issues.apache.org/jira/browse/AMQ-5961

Prevent deadlock by moving calls to afterCommit
and afterRollback out of synchronized blocks.

https://issues.apache.org/jira/browse/AMQ-5961
Lock list but keep global hashmap out for deadlock protection.

https://issues.apache.org/jira/browse/AMQ-5961
Lock safely in isInXATransaction.

https://issues.apache.org/jira/browse/AMQ-5961
Don't synchronize on list as we have an exclusive reference.
;;;","01/Oct/15 13:35;jira-bot;Commit 450a5226e01a6a75e5dda4efbf088933fc0878a4 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=450a522 ]

https://issues.apache.org/jira/browse/AMQ-5961

This closes #143

Applying patch with thanks to Erik Wramner
;;;","01/Oct/15 13:35;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/143
;;;","01/Oct/15 13:36;cshannon;I squashed the commits/rebased and applied the change.  If everything looks good after CI runs I can backport the fix to 5.12.1.;;;",,,,,,,,,,,,,,,,
Durable subscriber pendingQueueSize wrong after force shutdown of the broker,AMQ-5960,12862989,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,10/Sep/15 09:09,16/May/19 11:59,14/Jul/23 05:44,10/Sep/15 09:16,5.12.0,,,,,,,,,5.13.0,,,,,,,,,0,,,,,,"The main reason for this is that ackPositions (based on which pendingQueueSize is calculated) is not rebuilt correctly during index recover.

To reproduce it:
1. Start the broker
2. Start producer and durable consumer on a topic, making a load
3. Kill the broker with -9
4. Restart the broker

The durable consumer pendingQueueSize is off by one and is never corrected",,cshannon,dejanb,gtully,jira-bot,jreock,windeyu,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-7091,,,,,,,,,,AMQ-7129,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu May 16 11:59:42 UTC 2019,,,,,,,,,,,"0|i2jzhz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/Sep/15 09:10;jira-bot;Commit 4ab55f13ae4097de1dad14af36b65a89eda9b81d in activemq's branch refs/heads/master from [~dejanb]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=4ab55f1 ]

https://issues.apache.org/jira/browse/AMQ-5960 - durable sub pendingQueueSize after force shutdown
;;;","10/Sep/15 11:49;cshannon;[~dejanb],

Looks like your patch caused this failure:

https://builds.apache.org/view/All/job/ActiveMQ-Java8/org.apache.activemq$activemq-kahadb-store/471/testReport/junit/org.apache.activemq.store.kahadb/JournalCorruptionEofIndexRecoveryTest/testRecoverIndex/

Probably just need a null check added.;;;","10/Sep/15 12:14;jira-bot;Commit f4a2543def0d7240fc97f850a53f6be48dc74562 in activemq's branch refs/heads/master from [~dejanb]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=f4a2543 ]

https://issues.apache.org/jira/browse/AMQ-5960 - durable sub pendingQueueSize after force shutdown - fix npe test failure
;;;","10/Sep/15 12:16;dejanb;Thanks [~cshannon]! I missed that, it should be OK now.;;;","23/Sep/15 12:15;jira-bot;Commit fcabcd282dc01c6faaff3c7627882f42a64543b4 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=fcabcd2 ]

https://issues.apache.org/jira/browse/AMQ-5960 - rework fix to reset the next sequence so that the next ack position and message reference gets cleared up in normal operation
;;;","05/Apr/17 14:58;jreock;I don't believe this issue is fixed, it is still reproducible in 5.14.4.  Same test case, create durable subs with persistent messages, connect consumers and start draining.  Hard-kill the broker and restart it, allow consumers to drain.  There will be ""lingering"" pendingQueueSize counts, although there is no actual message loss.  KahaDB just doesn't update the ack position.  Tested with LevelDB and cannot recreate, this only happens with Kaha.;;;","16/May/19 11:59;gtully;[~jreock] I was investigating a similar issue just now, it looks like the fix for AMQ-7129 and its dependent AMQ-7091 fully resolves this issue, they are in 5.15.9;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException in finally blocks,AMQ-5959,12862124,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,wjmcdonald,wjmcdonald,06/Sep/15 22:44,28/Oct/15 14:42,14/Jul/23 05:44,08/Sep/15 14:06,5.12.0,5.8.0,,,,,,,,5.11.3,5.12.1,5.13.0,,Broker,,,,,0,easyfix,,,,,"Try blocks including a finally block that references a potential null object generating a NullPointerException.

In The DestinationView.sendTextMessage(java.util.Map, ...) method for example (http://grepcode.com/file/repo1.maven.org/maven2/org.apache.activemq/activemq-broker/5.11.1/org/apache/activemq/broker/jmx/DestinationView.java#DestinationView.sendTextMessage%28java.util.Map%2Cjava.lang.String%2Cjava.lang.String%2Cjava.lang.String%29), I noticed code like the following:  
        Connection connection = null;
        try {
            connection = cf.createConnection(userName, password);
         ...
             return msg.getJMSMessageID();
        } finally {
            connection.close();
        }

There is no catch block and since an exception in the createConnection method could be thrown, connection would be null in the finally block, causing a NPE and masking the real exception.

There may be other forms of this bad style which a code style checker should be able to locate for you.",,jira-bot,tabish,wjmcdonald,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Oct 28 14:42:53 UTC 2015,,,,,,,,,,,"0|i2ju8v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Sep/15 14:03;jira-bot;Commit f58683ea07c49aa567a3dc888b12b7de92918ed6 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=f58683e ]

https://issues.apache.org/jira/browse/AMQ-5959

Add check to avoid NPE;;;","08/Sep/15 14:06;tabish;Added a check to avoid this NPE;;;","08/Sep/15 14:07;jira-bot;Commit f5b83cbc8f162eb0ff09aee2d78486f766d8e50b in activemq's branch refs/heads/activemq-5.12.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=f5b83cb ]

https://issues.apache.org/jira/browse/AMQ-5959

Add check to avoid NPE
(cherry picked from commit f58683ea07c49aa567a3dc888b12b7de92918ed6)
;;;","28/Oct/15 14:42;jira-bot;Commit 6626f9171830bebd85dfa26904f23be71982061f in activemq's branch refs/heads/activemq-5.11.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=6626f91 ]

https://issues.apache.org/jira/browse/AMQ-5959

Add check to avoid NPE
(cherry picked from commit f58683ea07c49aa567a3dc888b12b7de92918ed6)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix for failing activeMq bridge ,AMQ-5954,12861802,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,darkvalley,darkvalley,04/Sep/15 10:13,25/Apr/16 16:25,14/Jul/23 05:44,25/Apr/16 16:25,5.11.1,,,,,,,,,5.14.0,,,,Broker,,,,,0,,,,,,"We have a system using activeMQ and weblogic, where we found that after upgrading weblogic server from 12.1.1 to 12.1.3 the bridge stopped working. We've found the cause and fixed it (oracle refused to fix their code), and would like you to add the fix to activemq so we can remove the local hack we've made. Look for the ""//new code"" in the code sample furthest down in this description

Cause: Oracle changed the method getQueueName() in weblogic.jms.common.DestinationImpl.java so that it returns null if the object received is not the correct type (a Topic instead of a Queue for instance). In previous version the method returned the name regardless of type. The missing name casues the bridge to fail. 

The object received in our case is an implementation of the Destination interface, DistributedDestinationImpl, which implements both these interfaces in its parent class DestinationImpl. In org.apache.activemq.ActiveMQMessageTransformation.transformDestination(...) where the instanceof TemporaryQueue/TemporaryTopic++ tests will always return true for both TemporaryQueue and TemporaryTopic. The code will enter the first if() in the code below because of this and call the getQueueName() method even if it is a Topic, and will return null.  

ActiveMQMessageTransformation.java (old version): 
{code}
    public static ActiveMQDestination transformDestination(Destination destination) throws JMSException {
        ActiveMQDestination activeMQDestination = null;

        if (destination != null) {
            if (destination instanceof ActiveMQDestination) {
                return (ActiveMQDestination)destination;

            } else {
                if (destination instanceof TemporaryQueue) {
                    activeMQDestination = new ActiveMQTempQueue(((Queue)destination).getQueueName());
                } else if (destination instanceof TemporaryTopic) {
                    activeMQDestination = new ActiveMQTempTopic(((Topic)destination).getTopicName());
                } else if (destination instanceof Queue) {
                    activeMQDestination = new ActiveMQQueue(((Queue)destination).getQueueName());
                } else if (destination instanceof Topic) {
                    activeMQDestination = new ActiveMQTopic(((Topic)destination).getTopicName());
                }
            }
        }

        return activeMQDestination;
    }
{code}

The fixed version test for this case and calls the UnresolvableDestinationTransformer which was added to activemq as a response to issue AMQ-3401: 
{code}
    public static ActiveMQDestination transformDestination(Destination destination) throws JMSException {
        ActiveMQDestination activeMQDestination = null;

        if (destination != null) {
            if (destination instanceof ActiveMQDestination) {
                return (ActiveMQDestination)destination;

            } else {
                //start new code
                if (destination instanceof TemporaryQueue && destination instanceof TemporaryTopic) {
                    activeMQDestination = ActiveMQDestination.getUnresolvableDestinationTransformer().transform(destination);
                } else
                //end new code
                if (destination instanceof TemporaryQueue) {
                    activeMQDestination = new ActiveMQTempQueue(((Queue)destination).getQueueName());
                } else if (destination instanceof TemporaryTopic) {
                    activeMQDestination = new ActiveMQTempTopic(((Topic)destination).getTopicName());
                } else if (destination instanceof Queue) {
                    activeMQDestination = new ActiveMQQueue(((Queue)destination).getQueueName());
                } else if (destination instanceof Topic) {
                    activeMQDestination = new ActiveMQTopic(((Topic)destination).getTopicName());
                }
            }
        }

        return activeMQDestination;
    }
{code}
",,darkvalley,jira-bot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Apr 25 16:24:58 UTC 2016,,,,,,,,,,,"0|i2jsan:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Sep/15 15:38;tabish;I would suggest that it makes more sense to update the ActiveMQMessageTransformation#transformDestination to delegate to ActiveMQDestiantion#transform by default instead of having two destination transformation code paths.;;;","25/Apr/16 16:24;jira-bot;Commit e996dbe7c28d928c701daef6b3afd5770ae4c2ed in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e996dbe ]

https://issues.apache.org/jira/browse/AMQ-5954

Use a single destination transformation method instead of having to
different implementations.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
XA Transaction 'XID:[...]' has not been started. xaErrorCode:-4 on MessageAck,AMQ-5953,12861603,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,03/Sep/15 15:14,03/Sep/15 16:07,14/Jul/23 05:44,03/Sep/15 16:07,5.12.0,,,,,,,,,5.13.0,,,,Broker,,,,,0,,,,,,"There is a sync issue in TransactionBroker, that can result in contention on the xatransaction map.
The result is a get returning null for something present. So an Ack cannot resolve the corresponding transaction. 
The error - transaction not started - xaErrorCode:-4

Either a resize or unrelated remove op could cause inconsistency and presumably allow a transient null.
Trying to reproduce reliably in a test case is elusive. ",,ben_nisbet,gtully,jira-bot,sam.ma,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Sep 03 16:07:37 UTC 2015,,,,,,,,,,,"0|i2jr3j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Sep/15 16:01;jira-bot;Commit c7b93d123228a8501e41956493859e581ef0533b in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=c7b93d1 ]

https://issues.apache.org/jira/browse/AMQ-5953 - transaction broker, fix sync of xatransaction get with insert
;;;","03/Sep/15 16:07;gtully;fixed up the sync around get access to the shared xatransaction map;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
failover maxReconnect=0 url can block on reconnect,AMQ-5951,12860703,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,31/Aug/15 14:54,28/Oct/15 17:44,14/Jul/23 05:44,31/Aug/15 14:57,5.12.0,,,,,,,,,5.11.3,5.12.1,5.13.0,,JMS client,,,,,0,,,,,,"client with {code}failover:(tcp://localhost:61616)?maxReconnectAttempts=0{code}
with exception listener that attempts to use the connection, ie: do a rollback/ack/shutdown, can block pending transport close.
A retrying failover oneway send will block the mutex transport in error.",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Oct 28 14:42:54 UTC 2015,,,,,,,,,,,"0|i2jlnj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"31/Aug/15 14:56;jira-bot;Commit ae9af4b8b29e792db213ca2cc2879ddc7c4118e5 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=ae9af4b ]

https://issues.apache.org/jira/browse/AMQ-5951 - ensure failover oneway won't retry if reconnect will not happen
;;;","31/Aug/15 14:57;gtully;Fix is to not retry in the oneway with the lock held if there won't be any reconnect.;;;","31/Aug/15 17:35;jira-bot;Commit 3619724d971c64717d304bfb1ebeba47bc904789 in activemq's branch refs/heads/activemq-5.12.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=3619724 ]

https://issues.apache.org/jira/browse/AMQ-5951 - ensure failover oneway won't retry if reconnect will not happen

(cherry picked from commit ae9af4b8b29e792db213ca2cc2879ddc7c4118e5)
;;;","30/Sep/15 10:41;jira-bot;Commit 8514e38135cf3c4da913806f3677a89785613e10 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=8514e38 ]

https://issues.apache.org/jira/browse/AMQ-5951 - scenario wheere transaction command can block, additional test and further fix
;;;","28/Oct/15 14:42;jira-bot;Commit 7706b5aa6ea4c7f764bc1b0ac0eb70209d130550 in activemq's branch refs/heads/activemq-5.11.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=7706b5a ]

https://issues.apache.org/jira/browse/AMQ-5951 - ensure failover oneway won't retry if reconnect will not happen

(cherry picked from commit ae9af4b8b29e792db213ca2cc2879ddc7c4118e5)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update commons-pool2 to handle OSGi classloading issue,AMQ-5944,12858347,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,lichtin,lichtin,24/Aug/15 17:44,04/Sep/15 16:17,14/Jul/23 05:44,04/Sep/15 16:16,5.12.0,,,,,,,,,5.12.1,5.13.0,,,,,,,,0,,,,,,"As mentioned in http://activemq.2283324.n4.nabble.com/OSGi-ClassNotFoundException-when-trying-to-upgrade-from-5-11-1-to-5-12-0-td4701124.html there's a classloading issue with commons-pool2.

It's apparently been fixed in more recent versions: POOL-289 POOL-292",Karaf3,lichtin,sobkowiak,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5861,AMQ-5721,,AMQ-5958,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Sep 04 16:16:12 UTC 2015,,,,,,,,,,,"0|i2jam7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Aug/15 11:18;sobkowiak;I have described the problem and provided a pull request with fix in AMQ-5861;;;","04/Sep/15 16:16;tabish;updated on master and on the 5.12.x branch;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
network bridge fails when using jaasDualAuthenticationPlugin,AMQ-5943,12858254,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,tmielke,tmielke,24/Aug/15 09:58,10/Nov/15 18:02,14/Jul/23 05:44,25/Aug/15 11:08,5.12.0,,,,,,,,,5.13.0,,,,Broker,Security/JAAS,,,,0,broker,jaas,security,,,"If a network bridge is to be established to another broker's ssl transport as in 

{code:xml}
<networkConnector duplex=""true"" dynamicOnly=""true"" name=""to-A"" networkTTL=""2"" uri=""static://(ssl://localhost:61626)"" >
{code}

and the other broker is configured for 
{code:xml}
<jaasDualAuthenticationPlugin configuration=""activemq-domain"" sslConfiguration=""activemq-ssl-domain""/>
{code}

then the network bridge will fail. Note the network connector does not set username and password but is supposed to be authenticated via its SSL certificate. 
",,gtully,jira-bot,lionel.cons,tmielke,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5408,,,,,,,,,,,,,,,,,,,,,,,,"24/Aug/15 12:57;tmielke;AMQ-5943.patch;https://issues.apache.org/jira/secure/attachment/12752008/AMQ-5943.patch",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Aug 27 10:10:34 UTC 2015,,,,,,,Patch Available,,,,"0|i2ja1j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Aug/15 09:58;tmielke;The network bridge internally creates a VM transport that fails to be authenticated via the JaasDualAuthenticationBroker. 

{code:java}
    @Override
    public void addConnection(ConnectionContext context, ConnectionInfo info) throws Exception {
        if (context.getSecurityContext() == null) {
            boolean isSSL = false;
            Connector connector = context.getConnector();
            if (connector instanceof TransportConnector) {
                TransportConnector transportConnector = (TransportConnector) connector;
                isSSL = transportConnector.getServer().isSslServer();
            }

            if (isSSL) {
                this.sslBroker.addConnection(context, info);
            } else {
                this.nonSslBroker.addConnection(context, info);
            }
            super.addConnection(context, info);
        }
    }
{code}

For the VM transport isSSL will evaluate to false and hence it calls this.nonSslBroker.addConnection(context, info) which calls into the JaasAuthenticationBroker and expects a username and password.;;;","24/Aug/15 12:57;tmielke;Attaching possible patch including unit test in AMQ-5943.patch. 
Unit test establishes network bridge between two broker instances where the bridge is authenticated via SSL cert, not via username / password. 

;;;","25/Aug/15 11:07;jira-bot;Commit 10a74ce7374d717defca0905f62e2181a93c6b20 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=10a74ce ]

https://issues.apache.org/jira/browse/AMQ-5943 - patch, with test, applied with thanks to Torsten Mielke
;;;","25/Aug/15 11:08;gtully;patch applied (small tweaks) with thanks.;;;","27/Aug/15 10:10;jira-bot;Commit 1ea289736b998f76668f66985c6e03770b5db3a3 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=1ea2897 ]

https://issues.apache.org/jira/browse/AMQ-5943 - rename resources so that they don't match the surefire *Test* filter which will try to execute them as tests
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ REST GET request is always encoded in ISO-8859-1,AMQ-5939,12857849,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,cshannon,kdubovikov,kdubovikov,21/Aug/15 13:20,29/Nov/16 17:44,14/Jul/23 05:44,29/Nov/16 16:54,5.12.0,,,,,,,,,5.15.0,,,,Web Console,,,,,0,,,,,,"ActiveMQ REST protocol does not support encodings other than ISO-8859-1.
1) response.setContentType is called after response.getWriter - this contradicts servlet specification, so setContentType does not work at all 
2) Content-Type header for the GET response is hardcoded inside MessageServlet class

I've changed the class so that Content-Type header is being read from request. This way users now can specify message body encoding through Content-Type header.",,cshannon,davsclaus,githubbot,jira-bot,kdubovikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Nov 29 17:44:30 UTC 2016,,,,,,,,,,,"0|i2j7lr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Aug/15 13:26;githubbot;GitHub user kernelmode opened a pull request:

    https://github.com/apache/activemq/pull/140

    fix for AMQ-5939

    See https://issues.apache.org/jira/browse/AMQ-5939

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/Cinimex-Informatica/activemq AMQ-5939

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/140.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #140
    
----
commit 7b41bf21758623755504773ac51300dc307c7b56
Author: Kirill Dubovikov <dubovikov.kirill@gmail.com>
Date:   2015-08-21T13:22:48Z

    fix for AMQ-5939

----
;;;","21/Aug/15 13:27;githubbot;Github user kernelmode closed the pull request at:

    https://github.com/apache/activemq/pull/140
;;;","21/Aug/15 13:27;githubbot;GitHub user kernelmode reopened a pull request:

    https://github.com/apache/activemq/pull/140

    fix for AMQ-5939

    See https://issues.apache.org/jira/browse/AMQ-5939

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/Cinimex-Informatica/activemq AMQ-5939

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/140.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #140
    
----
commit 7b41bf21758623755504773ac51300dc307c7b56
Author: Kirill Dubovikov <dubovikov.kirill@gmail.com>
Date:   2015-08-21T13:22:48Z

    fix for AMQ-5939

----
;;;","21/Aug/15 13:28;kdubovikov;Fixed this bug here: https://github.com/apache/activemq/pull/140;;;","27/Nov/15 13:39;kdubovikov;Could anyone accept pull request? 6 months passed since it was open.;;;","01/Dec/15 20:30;cshannon;One issue with this patch is it breaks backwards compatibility.  Because you got rid of getContentType(request), users who were specifying type with a request parameter would now break.  See http://activemq.apache.org/rest.html

There is an example on that page: {{wget --user admin --password admin http://localhost:8161/api/message/TEST?type=queue\&clientId=A\&json=true}} that would possibly not work since the json=true would no longer be checked.

Another issue is that request.getContentType() is supposed to be used to specify the content of the request, not to specify what the response type is.  The accept header is what should be used instead to specify what the response type is.

That being said, your point about the content type being set in the wrong spot is correct and should be called before response.getWriter().;;;","29/Nov/16 16:54;jira-bot;Commit f888cc2729832c6c71f0da9b5586d731e7a41648 in activemq's branch refs/heads/master from [~davsclaus]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=f888cc2 ]

AMQ-5939: ActiveMQ REST GET request is always encoded in ISO-8859-1. Thanks to Kirill Dubovikov for the patch. This fixes 140.
;;;","29/Nov/16 16:54;davsclaus;Thanks for the PR;;;","29/Nov/16 17:44;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/140
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException in SelectorAwareVirtualTopicInterceptor,AMQ-5933,12857039,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,gtully,alt_alt,alt_alt,18/Aug/15 21:38,28/Oct/15 14:42,14/Jul/23 05:44,07/Oct/15 19:04,5.11.1,5.11.2,5.12.0,,,,,,,5.11.3,5.12.1,5.13.0,,Broker,,,,,0,,,,,,"Check the following call stack, should check whether selectors is null first

javax.jms.JMSException: java.lang.NullPointerException
	at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:54)
	at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1420)
	at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1346)
	at org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1904)
	at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:288)
	at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:223)
	at org.apache.activemq.ActiveMQMessageProducerSupport.send(ActiveMQMessageProducerSupport.java:241)
	at Active.Sample.SampleSender.sendTopic(SampleSender.java:59)
	at Active.Sample.SampleActiveMQTest.main(SampleActiveMQTest.java:15)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
Caused by: java.lang.NullPointerException
	at org.apache.activemq.broker.region.virtual.SelectorAwareVirtualTopicInterceptor.tryMatchingCachedSubs(SelectorAwareVirtualTopicInterceptor.java:90)
	at org.apache.activemq.broker.region.virtual.SelectorAwareVirtualTopicInterceptor.matchesSomeConsumer(SelectorAwareVirtualTopicInterceptor.java:76)
	at org.apache.activemq.broker.region.virtual.SelectorAwareVirtualTopicInterceptor.send(SelectorAwareVirtualTopicInterceptor.java:57)
	at org.apache.activemq.broker.region.virtual.VirtualTopicInterceptor.send(VirtualTopicInterceptor.java:53)
	at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:419)
	at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:468)
	at org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:297)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:152)
	at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)
	at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:307)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:152)
	at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:157)
	at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:541)
	at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:768)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:334)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:188)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:270)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)
	at java.lang.Thread.run(Thread.java:745)
",,alt_alt,cshannon,gtully,jira-bot,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Oct 28 14:42:51 UTC 2015,,,,,,,,,,,"0|i2j2pb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/Aug/15 12:46;cshannon;Can you provide a small unit test that demonstrates this problem?;;;","19/Aug/15 14:01;gtully;I peeked at this and have a unit test, it can only happen when setIgnoreWildcardSelectors is true from what I gather. ;;;","19/Aug/15 14:14;jira-bot;Commit 3c2ed9352b38f39ba57b322b9006ab82d7a4470f in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=3c2ed93 ]

AMQ-5933 - add test and fix
;;;","19/Aug/15 15:23;jira-bot;Commit e546d299972fd2a4e7c72d18f62781d372a78f28 in activemq's branch refs/heads/activemq-5.12.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e546d29 ]

AMQ-5933 - add test and fix

(cherry picked from commit 3c2ed9352b38f39ba57b322b9006ab82d7a4470f)
;;;","07/Oct/15 17:02;tabish;[~gtully] Is there anything else to do here or can this be marked resolved now?;;;","07/Oct/15 19:04;gtully;all done.;;;","28/Oct/15 14:42;jira-bot;Commit cdf13b20d86d3da4ad77d77306f51bf5128e25cc in activemq's branch refs/heads/activemq-5.11.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=cdf13b2 ]

AMQ-5933 - add test and fix

(cherry picked from commit 3c2ed9352b38f39ba57b322b9006ab82d7a4470f)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
test script typo,AMQ-5929,12856191,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,,gerard@charlesconsulting.com,gerard@charlesconsulting.com,14/Aug/15 15:37,14/Aug/15 16:32,14/Jul/23 05:44,14/Aug/15 16:32,,,,,,,,,,,,,,Documentation,,,,,0,,,,,,"http://activemq.apache.org/unix-shell-script.html#UnixShellScript-Runningmultipleinstances

in example script change ""2>>&1"" to ""2>&1""",,gerard@charlesconsulting.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,2015-08-14 15:37:20.0,,,,,,,,,,,"0|i2ixm7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Missing transitive dependency,AMQ-5926,12855834,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,tobb,tobb,13/Aug/15 12:10,20/Aug/15 16:38,14/Jul/23 05:44,20/Aug/15 16:38,5.11.1,5.9.1,,,,,,,,5.12.1,5.13.0,,,,,,,,0,,,,,,"I have a dependency to activemq-all in my maven project, which in turn has an optional dependency to activemq-camel. This leads to activemq-camel not being added as a transtive dependency. But classes in activemq-all depends on apache camel (CamelContext and CamelContextAware in org.apache.activemq.camel.CamelConnection), which then does not exists. This yields an error upon deploying my application, classnotfoundexception.",,cshannon,jira-bot,tobb,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Aug 20 16:38:04 UTC 2015,,,,,,,,,,,"0|i2ivfj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Aug/15 16:28;jira-bot;Commit 45e37e97884484ba9c71ed21a19827b8271b9191 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=45e37e9 ]

https://issues.apache.org/jira/browse/AMQ-5926

Adding camel and related dependencies to the activemq-all shaded jar
;;;","20/Aug/15 16:37;jira-bot;Commit c709831d8b1f8b7ef5beb654928c5d4c1616ba8c in activemq's branch refs/heads/activemq-5.12.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=c709831 ]

https://issues.apache.org/jira/browse/AMQ-5926

Adding camel and related dependencies to the activemq-all shaded jar

(cherry picked from commit 45e37e97884484ba9c71ed21a19827b8271b9191)
;;;","20/Aug/15 16:38;cshannon;Added in dependencies to activemq-all so Camel will work.  Pushed to master and 5.12.x branch in case a 5.12.1 is released.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ OSGi metadata excludes compatibility with Spring 4.X,AMQ-5922,12852710,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,cshannon,soleger,soleger,06/Aug/15 21:35,21/Sep/15 20:00,14/Jul/23 05:44,21/Sep/15 20:00,5.10.0,,,,,,,,,5.13.0,,,,OSGi/Karaf,,,,,0,patch,,,,,"The OSGi metadata for ActiveMQ should be updated to include Spring 4.X in the version range. Despite the fact that Spring no longer includes OSGi metadata in their own 4.X packages, Apache Servicemix repackages Spring 4.X so that it can be used in OSGi containers like Apache Karaf.

This change is necessary in order for projects with Spring 4.X to coexist in the same Apache Karaf container where ActiveMQ is running as a bundle/Karaf feature.

This change has already been made in the activemq-camel submodule.

I've submitted the change as a pull request on the github mirror of ActiveMQ: https://github.com/apache/activemq/pull/121",,cshannon,githubbot,jira-bot,soleger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Sep 21 20:00:42 UTC 2015,,,,,,,Patch Available,,,,"0|i2ifwv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Sep/15 19:59;jira-bot;Commit c08efbe6c2e490b1c00593df8fdbf93b847b971d in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=c08efbe ]

https://issues.apache.org/jira/browse/AMQ-5922

This closes #121

Thanks to Seth Leger
;;;","21/Sep/15 19:59;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/121
;;;","21/Sep/15 20:00;cshannon;PR applied with thanks;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ClassLoadingAwareObjectInputStream no longer handles void type,AMQ-5921,12852604,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,pmweiss,pmweiss,06/Aug/15 15:25,07/Aug/15 15:06,14/Jul/23 05:44,07/Aug/15 15:01,5.11.1,,,,,,,,,5.12.0,,,,,,,,,0,,,,,,"The change made in AMQ-1584 changed how primitive classes are handled which is fine, but it got rid of the check for ""void"".

Just need to add a check to the end of the ""loadSimpleType(String name)"" method:

...
else if (""void"".equals(name)) {
    return void.class;
}
...
",,jira-bot,pmweiss,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,300,300,,0%,300,300,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Aug/15 12:19;pmweiss;Consumer.java;https://issues.apache.org/jira/secure/attachment/12749255/Consumer.java","07/Aug/15 12:19;pmweiss;ObjectMsgPayload.java;https://issues.apache.org/jira/secure/attachment/12749254/ObjectMsgPayload.java","07/Aug/15 12:19;pmweiss;Producer.java;https://issues.apache.org/jira/secure/attachment/12749256/Producer.java","07/Aug/15 12:52;pmweiss;proposed_diffs.txt;https://issues.apache.org/jira/secure/attachment/12749260/proposed_diffs.txt",,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Aug 07 15:06:38 UTC 2015,,,,,,,,,,,"0|i2ifav:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Aug/15 17:12;tabish;A good way to progress this is to provide a test case that shows the problem. ;;;","06/Aug/15 19:47;pmweiss;Thanks, I'll type one up in the morning.;;;","07/Aug/15 12:19;pmweiss;Uploading test case that demonstrates the problem.  I apologize for any typos - had to retype by hand in Notepad.  

Basically the Producer class tries to send an ActiveMQObjectMessage that contains an object of type Class<?> to the Consumer class.  If the value is something like int.class things work fine, but if you set the value to void.class you get a JMSException: Failed to build body from content.  Serializable class not available to broker.  Reason java.lang.ClassNotFoundException: void

org.apache.activemq.util.ClassLoadingAwareObjectInputStream.java used to include a check for void.class, but it appears that when that class was reworked for ticket AMQ-1584, the check for void.class was lost.

Thanks.;;;","07/Aug/15 12:52;pmweiss;Uploading possible/proposed change.;;;","07/Aug/15 15:01;jira-bot;Commit 41ee3ec8dea1df70cb12f722dcf797f50b24fc54 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=41ee3ec ]

https://issues.apache.org/jira/browse/AMQ-5921

Add back support for type void and test.;;;","07/Aug/15 15:01;tabish;Created a unit test from the files provided and applied the fix, thanks!;;;","07/Aug/15 15:06;pmweiss;Thanks so much!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"networkConnectorStartAsync=""true"" results in ""WARN  | Could not connect to remote URI: ssl://... SSLContextImpl is not initialized"" and failure to connect",AMQ-5917,12852257,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gsaffell,gsaffell,05/Aug/15 14:54,20/Aug/18 11:36,14/Jul/23 05:44,20/Aug/18 11:36,5.10.0,5.11.1,,,,,,,,5.16.0,,,,Broker,,,,,0,,,,,,"With both 5.10.0 and 5.11.1, the networkConnectorStartAsync=""true"" is broken for ssl.  With two networkConnectors defined, only one connection is made and a warning is logged for the other. 

Snippets from my activemq.xml:
<broker xmlns=""http://activemq.apache.org/schema/core"" ... networkConnectorStartAsync=""true""> 
...
<networkConnector name=""GSTEST-96_ILSTECHNOLOGY_COM-SSO"" uri=""static:(ssl://172.27.11.96:5902)?useExponentialBackOff=false&amp;initialReconnectDelay=5000&amp;maxReconnectDelay=5000"" duplex=""true"" conduitSubscriptions=""true"" >
...
networkConnector name=""ECENTRESERVER_ILSTECHNOLOGY_COM-SSO"" uri=""static:(ssl://172.27.11.95:5902)?useExponentialBackOff=false&amp;initialReconnectDelay=5000&amp;maxReconnectDelay=5000"" duplex=""true"" conduitSubscriptions=""true"" >

The specific warning that was generated is:

2015-08-05 10:46:31,569 | WARN  | Could not connect to remote URI: ssl://172.27.11.96:5902: SSLContextImpl is not initialized | org.apache.activemq.network.DiscoveryNetworkConnector | NetworkConnector Start Thread-0




",,gsaffell,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Aug 20 11:36:35 UTC 2018,,,,,,,,,,,"0|i2id7b:",9223372036854775807,Regression,,,,,,,,,,,,,,,,,,,,"19/Aug/15 14:51;gsaffell;I found that if I make the org.apache.activemq.broker.SslContext methods getSSLContext() and setSSLContext(SSLContext sslContext) synchronized, the problem goes away.

I'm not going to submit a patch because it's possible the original intent of whoever maintains the SslContext class was for the users of that class to use getCurrentSslContext() and setCurrentSslContext(SslContext bs) instead (because the ""current"" SSLContext is wrapped by ThreadLocal).  ;;;","20/Aug/18 11:36;gtully;https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=8bb3a77270775e69c1053ed789c5a1999cae2f51;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Creation of durable subscriber fails via broker AdminView due to lack of SecurityContext  on ConnectionContext,AMQ-5916,12851399,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,gmurthy,gmurthy,04/Aug/15 14:03,04/Aug/15 18:55,14/Jul/23 05:44,04/Aug/15 18:55,5.11.1,,,,,,,,,5.12.0,,,,Broker,,,,,0,,,,,,"When JAAS authentication and authorization are setup, creation of durable subscriber fails due to lack of securityContext. 

The ConnectionContext object does not inherit the securityContext of the broker's shared connection context",,gmurthy,jira-bot,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Aug/15 14:33;gmurthy;AMQ-5916-GMURTHY-PATCH.TXT;https://issues.apache.org/jira/secure/attachment/12748676/AMQ-5916-GMURTHY-PATCH.TXT","04/Aug/15 17:47;gmurthy;AMQ-5916-GMURTHY-PATCH2.TXT;https://issues.apache.org/jira/secure/attachment/12748693/AMQ-5916-GMURTHY-PATCH2.TXT",,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Aug 04 18:55:22 UTC 2015,,,,,,,,,,,"0|i2ibef:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Aug/15 14:06;gmurthy;The org.apache.activemq.broker.jmx.BrokerView class has a createDurableSubscriber(String clientId, String subscriberName, String topicName, String selector) function and it instantiates a new connection context like this - 

ConnectionContext connectionContext = new ConnectionContext();

this fails to copy the securityContext from the shared global connectionContext.

The above line must be replaced with 
ConnectionContext sharedContext = BrokerSupport.getConnectionContext(broker.getContextBroker());
ConnectionContext context = sharedContext.copy();;;;","04/Aug/15 14:12;gmurthy;Attached a patch for this issue - AMQ-5916-GMURTHY-PATCH.TXT;;;","04/Aug/15 16:44;tabish;With the patch applied the test BrokerViewSlowStoreStartupTest#testBrokerViewOnSlowStoreStart fails when it calls createDurableSubscriber due to an exception not being thrown.  Should investigate if the test is wrong or the fix has broker something. ;;;","04/Aug/15 17:47;gmurthy;Please take a look at my attached new patch AMQ-5916-GMURTHY-PATCH2.TXT
BrokerViewSlowStoreStartupTest#testBrokerViewOnSlowStoreStart should not fail after applying AMQ-5916-GMURTHY-PATCH2.TXT
I added a null check in the code.
Thanks.
;;;","04/Aug/15 18:54;jira-bot;Commit 82e3ce805ee349a83c0684c908d6ebe0d546f432 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=82e3ce8 ]

https://issues.apache.org/jira/browse/AMQ-5916

Apply patch from Ganesh Murthy to resolve issue of creation of durable
subscriber fails via broker AdminView due to lack of SecurityContext on
ConnectionContext;;;","04/Aug/15 18:55;tabish;patch applied with thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pull consumer hang when message expires in flight.,AMQ-5914,12851139,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,03/Aug/15 16:30,12/Aug/15 23:07,14/Jul/23 05:44,03/Aug/15 18:42,5.10.2,5.11.0,5.11.1,,,,,,,5.12.0,,,,JMS client,,,,,0,,,,,,If a message expires in-flight or while in a rolled back transaction the pull consumer does not send another pull request and can hang when sending the poison Ack for the expired message.,,jira-bot,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQCPP-582,AMQNET-508,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Aug 03 18:42:02 UTC 2015,,,,,,,,,,,"0|i2i9uf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Aug/15 18:42;jira-bot;Commit 3348ade99b2be00eb5452785a1325afc2a39b066 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=3348ade ]

https://issues.apache.org/jira/browse/AMQ-5914

Ensure a new pull request is sent, adds test.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Receive delay not applied on async receive by count,AMQ-5908,12850566,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,jkorab,jkorab,31/Jul/15 10:21,06/Aug/15 14:02,14/Jul/23 05:44,06/Aug/15 14:02,5.11.1,,,,,,,,,5.12.0,,,,Performance Test,,,,,0,,,,,,The -Dconsumer.recvDelay flag has no effect when -Dconsumer.recvType=async (the default). ,,githubbot,jkorab,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Aug 06 14:02:18 UTC 2015,,,,,,,,,,,"0|i2i6c7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"31/Jul/15 11:28;jkorab;Pull request coming in soon.;;;","04/Aug/15 09:01;githubbot;GitHub user jkorab opened a pull request:

    https://github.com/apache/activemq/pull/138

    AMQ-5908 - Added sleep for receive delay to receiveAsyncCountBasedMessages().

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/jkorab/activemq AMQ-5908

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/138.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #138
    
----
commit 5380891d7ac1e661df583522d21c231db996783e
Author: Jakub Korab <jakub.korab@gmail.com>
Date:   2015-07-31T12:26:31Z

    Added code to sleep for the receive delay to receiveAsyncCountBasedMessages().

----
;;;","06/Aug/15 14:01;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/138
;;;","06/Aug/15 14:02;tabish;applied with thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pull consumer can hang in receive if RedeliveryPolicy is configured with max redeliveries ,AMQ-5907,12850385,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,30/Jul/15 20:48,12/Aug/15 23:00,14/Jul/23 05:44,30/Jul/15 21:19,5.11.0,5.11.1,,,,,,,,5.12.0,,,,JMS client,,,,,0,,,,,,"For a pull consumer (prefetch = 0) with a redelivery policy that enforces maximum redeliveries we now eagerly poison the incoming messages if they exceed the maximum redelivery value.  The consumer does not attempt to issue another pull request in this case which can stall receive().  

Also the consumer does not recompute the timeout if one is set leading to a longer wait than might otherwise be expected. ",,jira-bot,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQCPP-581,AMQNET-507,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jul 30 21:18:01 UTC 2015,,,,,,,,,,,"0|i2i593:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"30/Jul/15 21:18;jira-bot;Commit b84413a31471e0c9e949cd7198ee952d063dfb61 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b84413a ]

https://issues.apache.org/jira/browse/AMQ-5907

recompute the timeout value and send a new pull request if the message
received exceeds the configure redelivery maximum. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Message headers are lost when using the Broker Component for Camel,AMQ-5903,12849466,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,charly,charly,27/Jul/15 23:06,30/Jul/15 14:57,14/Jul/23 05:44,30/Jul/15 14:57,5.11.1,,,,,,,,,5.11.2,5.12.0,,,Camel,,,,,0,,,,,,"When using the broker camel component as defined here:  http://activemq.apache.org/broker-camel-component.html

There appears to be an undocumented limitation of the broker component's current implementation. I need to know whether said limitation is by design or an oversight. If it's an oversight then I can submit a patch for it.

This example route does not work as expected - the JMSXGroupID header is lost when received by the broker component.

<route> 
<from uri=""broker:queue:test""/> 
<setHeader headerName=""JMSXGroupID""> 
<constant>123</constant> 
</setHeader> 
<to uri=""broker:queue:test""/> 
</route>

After single stepping with a debugger the component executes this code: https://github.com/apache/activemq/blob/master/activemq-camel/src/main/java/org/apache/activemq/camel/component/broker/BrokerProducer.java#L102

As you can see from the method's implementation it only copies over a fixed set of six well-known headers. All other headers on the inbound message are discarded. Why not copy over every header? Consequently the JMSXGroupID header is not copied, despite being present on the inbound message.

This would appear to be a bug in my opinion as I do not believe we should be loosing any headers on a message in this case.  ",,artnaseef,charly,githubbot,jgenender,jira-bot,paulgale,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Jul/15 22:07;charly;amq-5903.patch;https://issues.apache.org/jira/secure/attachment/12747865/amq-5903.patch",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jul 30 14:55:46 UTC 2015,,,,,,,,,,,"0|i2hzqv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/Jul/15 22:07;charly;A special thanks to Paul Gale for supplying the patch.  ;;;","29/Jul/15 23:56;githubbot;GitHub user heathkesler opened a pull request:

    https://github.com/apache/activemq/pull/137

    AMQ-5903 - add patch that fixes the broker camel component 

    AMQ-5903 - add patch that fixes the broker camel component to take all header values

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/savoirtech/activemq trunk

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/137.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #137
    
----
commit 8f407a78dc5ed868c1b59ccb68f489c8ceae875f
Author: Heath Kesler <heathkesler@gmail.com>
Date:   2015-07-29T23:48:16Z

    AMQ-5903 - add patch that fixes the broker camel component to take all header values

----
;;;","30/Jul/15 00:28;jira-bot;Commit 8f407a78dc5ed868c1b59ccb68f489c8ceae875f in activemq's branch refs/heads/master from [~charly]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=8f407a7 ]

AMQ-5903 - add patch that fixes the broker camel component to take all header values
;;;","30/Jul/15 00:28;jira-bot;Commit de86f473f776fe3a8ca32d7f929ecec7993c458b in activemq's branch refs/heads/master from [~jgenender]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=de86f47 ]

 This closes #137

Fix for AMQ-5903 - thanks Heath and Paul
;;;","30/Jul/15 00:29;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/137
;;;","30/Jul/15 00:34;artnaseef;Closing with thanks to Heath Kesler;;;","30/Jul/15 00:35;jgenender;and Paul Gale ;-);;;","30/Jul/15 14:55;jira-bot;Commit 256bcf3342ea8c31f4f06cfcab3330d396a845d6 in activemq's branch refs/heads/activemq-5.11.x from [~charly]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=256bcf3 ]

AMQ-5903 - add patch that fixes the broker camel component to take all header values
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Physical queues forwarded from many virtual destinations no longer supported,AMQ-5898,12846902,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,furn,furn,22/Jul/15 14:00,25/Nov/15 19:23,14/Jul/23 05:44,25/Nov/15 13:49,5.11.1,,,,,,,,,5.12.2,5.13.0,,,,,,,,1,,,,,,"Hi Tim,

AMQ-5187 breaks some of our message routing where we use virtual queues to control mirroring/replication of messages.

A simple example...

{code}
VIRTUAL.PUB.ALL
-> queue://SUBSCRIBER1
-> queue://SUBSCRIBER2

VIRTUAL.PUB.SUBSCRIBER1
-> queue://SUBSCRIBER1
{code}

...fails [this assert|https://github.com/apache/activemq/commit/f55edcfa25de1b55659a7113be60360c531ffa8a#diff-0def63df6ee6c0e4f8adcf00011b2f07R70] because there are two composite destinations that route to {{queue://SUBSCRIBER1}}. With asserts disabled messages are routed as expected.

I have attached a test case exemplifying this.

We use layers of composite queues to achieve explicit routing of messages to either one consumer or all consumers, and (also with static subscriptions) to target optimal routes across a mixture of LAN and WAN links.

Fully appreciate that subscription recovery from virtual topics of a mapped queue is a beneficial thing to do, however from our perspective it is also useful to retain the behaviour of being able to have a many-to-one mapping between composite queues and physical queues. For our own use case we don't have any requirement for subscription recovery - we require cast-iron guarantees around messaging so all messages persistent and are delivered to one or more physical queues on brokers with persistence enabled, so this obviates the need for subscription recovery.

Could this validation relaxed, could it be made possible for the new behaviour to be disabled or do you have any suggestions as to how else we could achieve our use case?

Thanks,
James",,cshannon,furn,jira-bot,leebutts,mahisam,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5187,,,,,,,,"22/Jul/15 14:50;furn;ActiveManyCompositeQueuesToOnePhysicalQueueTest.java;https://issues.apache.org/jira/secure/attachment/12746551/ActiveManyCompositeQueuesToOnePhysicalQueueTest.java",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Nov 25 19:23:01 UTC 2015,,,,,,,,,,,"0|i2hk1j:",9223372036854775807,Regression,,,,,,,,,,,,,,,,,,,,"22/Jul/15 14:50;furn;Add test case - passes with asserts disabled.

With {{-ea}} fails:

{code}
Caused by: java.lang.Throwable: java.lang.AssertionError: null
	at org.apache.activemq.broker.region.virtual.VirtualDestinationInterceptor.intercept(VirtualDestinationInterceptor.java:70)
	at org.apache.activemq.broker.region.CompositeDestinationInterceptor.intercept(CompositeDestinationInterceptor.java:38)
	at org.apache.activemq.broker.region.AbstractRegion.addDestination(AbstractRegion.java:139)
	at org.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:348)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:172)
	at org.apache.activemq.advisory.AdvisoryBroker.addDestination(AdvisoryBroker.java:197)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:172)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:172)
	at org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:177)
	at org.apache.activemq.broker.region.AbstractRegion.lookup(AbstractRegion.java:467)
	at org.apache.activemq.broker.region.AbstractRegion.addConsumer(AbstractRegion.java:261)
	at org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:427)
	at org.apache.activemq.broker.jmx.ManagedRegionBroker.addConsumer(ManagedRegionBroker.java:244)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:102)
	at org.apache.activemq.advisory.AdvisoryBroker.addConsumer(AdvisoryBroker.java:104)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:102)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:102)
	at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:107)
	at org.apache.activemq.broker.TransportConnection.processAddConsumer(TransportConnection.java:663)
	at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:348)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:334)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:188)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:270)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)
	... 1 more
{code};;;","25/Nov/15 03:54;leebutts;[~cshannon] this is a showstopper for us upgrading from 5.10 -  could we get a fix for this into 5.13?;;;","25/Nov/15 12:44;cshannon;If you don't run with assertions turned on, does your use case work? 

It seems like the only fix here is to just drop the assertion line because I can't really think of a good reason not to allow multiple composite destinations to route to the same queue. In fact, I have done this several times but never noticed this problem because I don't use assertions accept during unit testing.;;;","25/Nov/15 12:50;furn;Hi, yep passes with asserts disabled. We don't run our application with assertions turned on in production but we do for UAT and unit tests so would be good to get this fixed. Obviously the concern was that [~tabish121] added that assert to trap some undesirable edge case. If removing it is valid we'd be happy with this fix.

Thanks,
James;;;","25/Nov/15 13:45;jira-bot;Commit 35b7ac250b5fa0b8c8dbf728881cc9dbf6edce19 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=35b7ac2 ]

https://issues.apache.org/jira/browse/AMQ-5898

Removing assertion in VirtualDestinationInterceptor to allow
multiple composite destinations to forward to a physical destination
;;;","25/Nov/15 13:47;jira-bot;Commit a38c3d4b6b9a4e828c80e88dd5a33c86fae99a06 in activemq's branch refs/heads/activemq-5.12.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=a38c3d4 ]

https://issues.apache.org/jira/browse/AMQ-5898

Removing assertion in VirtualDestinationInterceptor to allow
multiple composite destinations to forward to a physical destination

(cherry picked from commit 35b7ac250b5fa0b8c8dbf728881cc9dbf6edce19)
;;;","25/Nov/15 13:49;cshannon;I have applied a patch for this because the assertion doesn't make any sense to me to have it in there.

Thanks for the test case [~furn], I have applied a modified version of it to this patch to make sure that this doesn't happen again.;;;","25/Nov/15 13:50;furn;Great, thanks for your help.;;;","25/Nov/15 19:23;jira-bot;Commit 95f58fa7c4e26b5b2d73a80bd8e1cb2bee8ebf47 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=95f58fa ]

https://issues.apache.org/jira/browse/AMQ-6027

Adding back in test case now that AMQ-5898 is resolved
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Problem getting jmx queue when another is deleting during request,AMQ-5896,12846236,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,wouterv,wouterv,20/Jul/15 10:15,01/Aug/15 00:18,14/Jul/23 05:44,31/Jul/15 12:01,,,,,,,,,,5.12.0,,,,,,,,,0,,,,,,"When calling RemoteJMXBrokerFacade to get information on a queue, but while doing this another queue can be removed, leaving the method to throw an exception:

{noformat}
Caused by: java.lang.reflect.UndeclaredThrowableException
	at com.sun.proxy.$Proxy228.getName(Unknown Source)
	at org.apache.activemq.web.BrokerFacadeSupport.getDestinationByName(BrokerFacadeSupport.java:131)
	at org.apache.activemq.web.BrokerFacadeSupport.getQueue(BrokerFacadeSupport.java:118)
	... 3 more
Caused by: javax.management.InstanceNotFoundException: org.apache.activemq:type=Broker,brokerName=localhost,destinationType=Queue,destinationName=20150720083000_82a7f1c6-2eb9-11e5-9d34-0242ac110091
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getMBean(DefaultMBeanServerInterceptor.java:1095)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getAttribute(DefaultMBeanServerInterceptor.java:643)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.getAttribute(JmxMBeanServer.java:678)
	at javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1464)
	at javax.management.remote.rmi.RMIConnectionImpl.access$300(RMIConnectionImpl.java:97)
	at javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1328)
	at javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1420)
	at javax.management.remote.rmi.RMIConnectionImpl.getAttribute(RMIConnectionImpl.java:657)
	at sun.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:322)
	at sun.rmi.transport.Transport$2.run(Transport.java:202)
	at sun.rmi.transport.Transport$2.run(Transport.java:199)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.Transport.serviceCall(Transport.java:198)
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:567)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.access$400(TCPTransport.java:619)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$1.run(TCPTransport.java:684)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$1.run(TCPTransport.java:681)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:681)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
	at sun.rmi.transport.StreamRemoteCall.exceptionReceivedFromServer(StreamRemoteCall.java:275)
	at sun.rmi.transport.StreamRemoteCall.executeCall(StreamRemoteCall.java:252)
	at sun.rmi.server.UnicastRef.invoke(UnicastRef.java:161)
	at com.sun.jmx.remote.internal.PRef.invoke(Unknown Source)
	at javax.management.remote.rmi.RMIConnectionImpl_Stub.getAttribute(Unknown Source)
	at javax.management.remote.rmi.RMIConnector$RemoteMBeanServerConnection.getAttribute(RMIConnector.java:906)
	at javax.management.MBeanServerInvocationHandler.invoke(MBeanServerInvocationHandler.java:267)
	... 7 more
{noformat}

So what happens is that method getDestinationByName first gets a list of all the queue names. Then it iterates through them when meanwhile a queue gets deleted and thus throwing an exception. Fix should probably be in BrokerFacadeSupport:

{noformat}
        protected DestinationViewMBean getDestinationByName(Collection<? extends DestinationViewMBean> collection, String name) {
            Iterator<? extends DestinationViewMBean> iter = collection.iterator();
            while (iter.hasNext()) {
                DestinationViewMBean destinationViewMBean = iter.next();
                try {
                    String destName = destinationViewMBean.getName();
                    if (name.equals(destName)) {
                        return destinationViewMBean;
                    }
                } catch (Exception e){
                    continue;
                }
            }
            return null;
        }
{noformat}",,cshannon,jira-bot,wouterv,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Sat Aug 01 00:18:59 UTC 2015,,,,,,,,,,,"0|i2hg0v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Jul/15 02:59;cshannon;Thanks for the report, I was able to reproduce this pretty easy.  This is a little tricky because we can't really add synchronization between the getQueues query and the actual getName() method call where it fails because many asynchronous processes can delete destinations.

It seems like the best thing to do here is to just catch the InstanceNotFoundException and continue checking the rest of the destinations in the list.  If the destination that was being queried was the one deleted then null would be returned which is the same behavior one would expect normally.

I can fix this when I get a chance and I can look at the rest of the class to see if there are any other areas with the same problem.;;;","31/Jul/15 11:59;jira-bot;Commit ac3d088647cacfe298a61ba5b9f1b3941249142d in activemq's branch refs/heads/master from [~christopher.l.shannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=ac3d088 ]

https://issues.apache.org/jira/browse/AMQ-5896

Fixing a potential race condition with BrokerFacacdeSupport that could
cause an InstanceNotFoundException when getting a destination from
a RemoteJMXBrokerFacade instance
;;;","31/Jul/15 12:01;cshannon;Applied a fix to master;;;","01/Aug/15 00:18;jira-bot;Commit b64b8ba27e876a011f62f70ffdfc6e7cde1fff24 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b64b8ba ]

https://issues.apache.org/jira/browse/AMQ-5896

Removing the dependency on the ExceptionUtils class in Apache Commons
as that dependency is only available at test time
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FilteredDestinations do not work when loaded by runtimeConfigurationPlugin,AMQ-5895,12845910,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,AndersAaberg,AndersAaberg,17/Jul/15 15:34,29/Jul/15 11:50,14/Jul/23 05:44,29/Jul/15 11:50,5.11.1,,,,,,,,,5.12.0,,,,Broker,,,,,0,runtime-configuration,virtualDestinations,,,,"When adding a FilteredDestination to VirtualDestinations in activemq.xml, the runtimeConfigurationPlugin will not update the configuration correct for the filteredDestination. The log does not give any errors until we send a message towards the CompositeTopic/Queue that contains the FilteredDestination, then the message is not forwarded and the following error is written in the log:
{code}java.lang.IllegalArgumentException: Unknown mapped destination type java.lang.Object@7a141450
        at org.apache.activemq.broker.region.virtual.CompositeDestination.getMappedDestinations(CompositeDestination.java:124)[activemq-broker-5.11.1.jar:5.11.1] {code}

It works if we restart activeMQ, because then the configuration is not loaded by the runtimeConfigurationPlugin, however we really want to avoid that.

Solution: It seems that the translation from JAXB objects to ActiveMQ objects is not translating DtoFilteredDestination to FilteredDestinations in org.apache.activemq.plugin.JAXBUtils.

When I added the following code to the method ""inferTargetObject"", then the problem was solved:
{code}
        } else if (DtoFilteredDestination.class.isAssignableFrom(elementContent.getClass())) {
            return new FilteredDestination();
{code}

Why this matters: In my organisation we really like to use ActiveMQ VirtualDestinations with FilteredDestinations, because it is a much more minimalistic than having to make many simple subscriptions in Camel and it has many benefits compared to durable subscribers. However, we do not wish to restart ActiveMQ every time we modify the VirtualDestinations, hence we need to be able to updated the VirtualDestinations using runtimeConfigurationPlugin and this does not work right now due to this bug.

I have added some files to this issue: a patch file, a full stacktrace and some steps to reproduce the problem.

Perhaps I can also commit the bug fix myself if that can speed up the process.","Both windows / linux, IBM java 6 / Oracle Java 7",AndersAaberg,gtully,jira-bot,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Jul/15 22:26;AndersAaberg;activemq.patch;https://issues.apache.org/jira/secure/attachment/12746032/activemq.patch","17/Jul/15 15:37;AndersAaberg;stacktrace.txt;https://issues.apache.org/jira/secure/attachment/12745829/stacktrace.txt","17/Jul/15 15:47;AndersAaberg;steps_to_reproduce.txt;https://issues.apache.org/jira/secure/attachment/12745831/steps_to_reproduce.txt",,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jul 29 11:50:58 UTC 2015,,,,,,,Patch Available,,,,"0|i2he2f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Jul/15 22:25;gtully;thanks for the patch. if you add a junit test case it will be golden! ;;;","19/Jul/15 22:26;AndersAaberg;The fix is in JAXBUtils.java - the rest is unittest.;;;","19/Jul/15 22:34;AndersAaberg;Thanks for the quick reply and sorry about the missing test. I have extended VirtualDestTest (added a unittest that tests basic composite queue filtering and update using runtimeConfigurationPlugin) such that the test will fail if the fix is not implemented in the JABXUtils class. I have updated the activemq.patch file to also include the unittest.;;;","29/Jul/15 11:49;jira-bot;Commit 4a603a9936b1880eba501d7f0e6fff812ae29d2f in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=4a603a9 ]

AMQ-5895 - apply patch with thanks to Anders Aaberg
;;;","29/Jul/15 11:50;gtully;Patch (with lovely test) applied with thanks :-);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Individual Ack Session with Message Audit in play can detect false positive duplicates,AMQ-5893,12845598,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,16/Jul/15 13:55,12/Aug/15 21:07,14/Jul/23 05:44,16/Jul/15 14:48,5.10.0,5.10.1,5.10.2,5.11.0,5.11.1,,,,,5.12.0,,,,JMS client,,,,,0,,,,,,When connected via a failover transport the connection enables its ConnectionAudit by default to filter duplicates.  For messages consumed using a consumer created from a Session in Individual Acknowledgement mode the unacknowledged messages are not removed from the message audit when the consumer is closed.  If a new consumer is opened on that same connection on the same destination the previously delivered messages get tagged as duplicates and are poisoned ack'd.,,jira-bot,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQNET-506,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jul 16 14:46:17 UTC 2015,,,,,,,,,,,"0|i2hc8f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Jul/15 14:46;jira-bot;Commit b9b27b968b53748cfaf0520f45609097c2879db7 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b9b27b9 ]

https://issues.apache.org/jira/browse/AMQ-5893

Ensure that unacknowledged messages are removed from the Audit so they
are able to be redelivered to another consumer on this connection;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQP: update to proton-j 0.10,AMQ-5891,12845549,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,robbie,robbie,robbie,16/Jul/15 11:40,18/Dec/15 23:31,14/Jul/23 05:44,14/Aug/15 14:18,,,,,,,,,,5.12.2,5.13.0,,,AMQP,,,,,0,,,,,,"We should upgrade to proton-j 0.10 once released.

I will attach a patch with the changes needed to update the tests for the latest snapshots.",,jira-bot,robbie,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6045,,,,"16/Jul/15 11:55;robbie;0001-AMQ-5891-changes-to-update-to-curent-proton-j-0.10-s.patch;https://issues.apache.org/jira/secure/attachment/12745615/0001-AMQ-5891-changes-to-update-to-curent-proton-j-0.10-s.patch",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Dec 18 23:14:48 UTC 2015,,,,,,,,,,,"0|i2hbxj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Aug/15 14:17;jira-bot;Commit 049f8da23605e13f60a8a53a519661cfb226edc1 in activemq's branch refs/heads/master from Robert Gemmell
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=049f8da ]

AMQ-5891: update to the proton 0.10 release
;;;","17/Nov/15 11:44;robbie;Superceded by AMQ-6045;;;","18/Dec/15 23:14;jira-bot;Commit 61890098dd534753a6bc755a55ef4b8dde21c63e in activemq's branch refs/heads/activemq-5.12.x from Robert Gemmell
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=6189009 ]

AMQ-5891: update to the proton 0.10 release

(cherry picked from commit 049f8da23605e13f60a8a53a519661cfb226edc1)

Conflicts:
	pom.xml
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQP: possible NPE when handling disposition with Modified state,AMQ-5890,12845547,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,robbie,robbie,robbie,16/Jul/15 11:36,23/Jul/15 14:01,14/Jul/23 05:44,16/Jul/15 11:50,,,,,,,,,,5.12.0,,,,AMQP,,,,,0,,,,,,"If a consumer sends a disposition with Modified state in which the 'deliveryFailed' field is not populated, the broker will NPE. This is because the relevant value is a Boolean object rather than boolean primitive. That appears to be because there is actually no default value specified for the field in the specification, and it is defined only to be set when delivery actually failed (values that are not set are encoded nulls in the AMQP frame).

The implementation needs updated to handle this value being null, but will be left permissive of it being set false.",,jira-bot,robbie,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jul 23 14:01:30 UTC 2015,,,,,,,,,,,"0|i2hbx3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Jul/15 11:47;jira-bot;Commit 0cfd22591260540301b18a893cd229c59e43dcf6 in activemq's branch refs/heads/master from Robert Gemmell
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=0cfd225 ]

AMQ-5890: prevent NPE if Modified disposition is applied without the delivery-failed flag set, add some general tests of Modified handling

https://issues.apache.org/jira/browse/AMQ-5890
;;;","16/Jul/15 11:47;jira-bot;Commit 0cfd22591260540301b18a893cd229c59e43dcf6 in activemq's branch refs/heads/master from Robert Gemmell
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=0cfd225 ]

AMQ-5890: prevent NPE if Modified disposition is applied without the delivery-failed flag set, add some general tests of Modified handling

https://issues.apache.org/jira/browse/AMQ-5890
;;;","16/Jul/15 11:50;robbie;Hmm, think I might mention that duplicate posting thing to infra, but for now will avoid mentioning the ref twice :);;;","23/Jul/15 14:01;robbie;Duplicate comment issue raised as INFRA-10038.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Transport Connection to: tcp://127.0.0.1:41062 failed: java.io.EOFException shows up in log when closing connection normally,AMQ-5888,12845246,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,gmurthy,gmurthy,15/Jul/15 12:38,02/Oct/19 17:55,14/Jul/23 05:44,16/Jul/15 11:18,5.11.1,,,,,,,,,5.12.0,,,,JMS client,,,,,0,,,,,,"Closing an ActiveMQConnection by calling the close() method caused the following warning message to show in the log

17:59:05,384 | WARN  | org.apache.activemq.broker.TransportConnection:245 Transport Connection to: tcp://127.0.0.1:41062 failed: java.io.EOFException

This exception is harmless but this WARN message appears repeatedly in the logs which is a source of false alarm.",,gmurthy,gtully,jira-bot,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Jul/15 15:52;gmurthy;AMQ-5888-GMURTHY-NEW-PATCH.TXT;https://issues.apache.org/jira/secure/attachment/12745468/AMQ-5888-GMURTHY-NEW-PATCH.TXT","15/Jul/15 13:10;gmurthy;AMQ-5888-GMURTHY-PATCH.TXT;https://issues.apache.org/jira/secure/attachment/12745439/AMQ-5888-GMURTHY-PATCH.TXT","15/Jul/15 13:12;gmurthy;TcpTransportCloseConnectionTest.java;https://issues.apache.org/jira/secure/attachment/12745440/TcpTransportCloseConnectionTest.java",,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jul 16 11:18:47 UTC 2015,,,,,,,,,,,"0|i2ha4n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Jul/15 13:09;gmurthy;The log message is output from the public void serviceTransportException(IOException e) method of the org.apache.activemq.broker.TransportConnection class only if the stopping and the pendingStop flags have not been already set before the serviceTransportException(IOException e)  is called as seen from the following code snippet - 

        if (!stopping.get() && !pendingStop) {
            transportException.set(e);
            if (TRANSPORTLOG.isDebugEnabled()) {
                TRANSPORTLOG.debug(this + "" failed: "" + e, e);
            } else if (TRANSPORTLOG.isWarnEnabled() && !expected(e)) {
                TRANSPORTLOG.warn(this + "" failed: "" + e);   //--> This is where the WARN is written to the log.
            }
            stopAsync(e);
        }

Sequence of events - 
1. The close() method on the ActiveMQConnection sends a ShutdownInfo to the server and immediately closes the socket from the client side. 
2. The broker's TcpTransportConnection is handling this ShutdownInfo but it so happens that the Inactivity monitor also fires off a write to the closed socket and fails with an EOFException or SocketException.
3. The public void stopAsync() in the org.apache.activemq.broker.jmx.ManagedTransportConnection makes a call to unregister the MBeans and then sets the  stopping flag. The latency involved in unregistering the beans is causing the stopping flag to not be set in time, so the WARN message is caused. 

Moving the stopping flag to be set before the unregister bean call should set the stopping flag to be set and prevent the WARN message from being written to the log.

I have attached a patch a test.

Thanks.;;;","15/Jul/15 14:28;gtully;[~gmurthy]  peeking at the patch - it looks like the mbeans won't get unregistered b/c the stopping flag will be flipped by the super stopAsync.;;;","15/Jul/15 15:15;gmurthy;Good catch Gary. Gosh, I introduced a regression. I have attached a new patch after doing some testing. I removed the if(!isStopping()) conditional. The unregister now gets called.

Please see patch AMQ-5888-GMURTHY-NEW-PATCH.TXT  ;;;","16/Jul/15 11:16;jira-bot;Commit 2b5b890db9810ff282479d7688c36e3c78e32c73 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=2b5b890 ]

AMQ-5888 add patch from GMURTHY with thanks - fix and test
;;;","16/Jul/15 11:18;gtully;fix and test applied via patch with thanks to Ganesh Murthy

https://git1-us-west.apache.org/repos/asf/activemq/repo?p=activemq.git;a=commit;h=2b5b890db9810ff282479d7688c36e3c78e32c73 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"AMQ accepts illegal MQTT protocol level (5, only 3 and 4 are defined)",AMQ-5886,12845019,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,ckrey,ckrey,14/Jul/15 17:12,03/Aug/17 08:08,14/Jul/23 05:44,03/Mar/16 17:47,5.11.1,,,,,,,,,5.13.4,5.14.0,,,,,,,,0,,,,,,"MQTT spec says:

[MQTT-3.1.2-2]
The Server MUST respond to the CONNECT Packet with a CONNACK return code 0x01 (unacceptable protocol level) and then disconnect the Client if the Protocol Level is not supported by the Server.
[MQTT-3.2.2-5]
If a server sends a CONNACK packet containing a non-zero return code it MUST then close the Network Connection.","OSX 10.10
https://github.com/ckrey/MQTT-Client-Framework testcases",ckrey,jira-bot,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Aug 03 08:08:48 UTC 2017,,,,,,,,,,,"0|i2h8sv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Jul/15 19:16;tabish;Can you clarify on these issues, is this tested against ActiveMQ 5.11.1 or Apollo?  Given your component selection this is not clear.  ;;;","15/Jul/15 04:23;ckrey;Issue happens against ActiveMQ 5.11.1;;;","15/Jul/15 05:41;ckrey;Issue happens against Apollo 1.7.1 too!;;;","15/Jul/15 09:58;tabish;You need to open an issue for Apollo as well as that is a separate Broker with its own issue tracker. ;;;","03/Mar/16 17:45;jira-bot;Commit f3544f248ffdce8d4c4bb80698b0d69a7e7492d9 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=f3544f2 ]

https://issues.apache.org/jira/browse/AMQ-5886

Ensure we reject protocol version that we don't currently support.;;;","11/Jul/16 16:49;jira-bot;Commit 21cd612098248971772de65f7789f12d74437878 in activemq's branch refs/heads/activemq-5.13.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=21cd612 ]

https://issues.apache.org/jira/browse/AMQ-5886

Ensure we reject protocol version that we don't currently support.
(cherry picked from commit f3544f248ffdce8d4c4bb80698b0d69a7e7492d9)
;;;","03/Aug/17 08:08;ckrey;Verfied with activemq 5.15.0 and apollo 1.7.1
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQ accepts illegal wildcard usage in MQTT SUBSCRIBE and UNSUBSCRIBE,AMQ-5885,12845015,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,ckrey,ckrey,14/Jul/15 17:09,03/Aug/17 08:39,14/Jul/23 05:44,02/Mar/16 17:36,5.11.1,,,,,,,,,5.14.0,,,,,,,,,0,,,,,,"AMQ accepts: ""#MQTTClient"" , ""MQTTClient/#/def"", ""MQTTClient+""

MQTT spec says:
[MQTT-4.7.1-2]
The multi-level wildcard character MUST be specified either on its own or following a topic level separator. In either case it MUST be the last character specified in the Topic Filter.
[MQTT-4.7.1-3]
The single-level wildcard can be used at any level in the Topic Filter, including first and last levels. Where it is used it MUST occupy an entire level of the filter.","OSX 10.10
https://github.com/ckrey/MQTT-Client-Framework testcases",ckrey,jira-bot,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Aug 03 08:39:59 UTC 2017,,,,,,,,,,,"0|i2h8rz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Jul/15 04:23;ckrey;Issue happens against ActiveMQ 5.11.1;;;","15/Jul/15 05:41;ckrey;Issue happens against Apollo 1.7.1 too!;;;","02/Mar/16 17:32;jira-bot;Commit 5d6d42ce97a8a6cacd630574e54b330275d041a7 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=5d6d42c ]

https://issues.apache.org/jira/browse/AMQ-5883
https://issues.apache.org/jira/browse/AMQ-5884
https://issues.apache.org/jira/browse/AMQ-5885

Add additional validation of Topic names used in subscribe and
unsubscriobe that test for spec compliance.  ;;;","03/Aug/17 08:39;ckrey;Verified with apollo 1.7.1 and activemq 5.15.1
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQ accepts MQTT UNSUBSCRIBE with zero length topic filter,AMQ-5884,12845013,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,ckrey,ckrey,14/Jul/15 17:05,03/Aug/17 08:40,14/Jul/23 05:44,02/Mar/16 17:36,5.11.1,,,,,,,,,5.14.0,,,,,,,,,0,,,,,,"MQTT spec says:
MQTT-4.7.3-1]
All Topic Names and Topic Filters MUST be at least one character long.","OSX 10.10
https://github.com/ckrey/MQTT-Client-Framework testcases",ckrey,jira-bot,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Aug 03 08:40:42 UTC 2017,,,,,,,,,,,"0|i2h8rj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Jul/15 04:22;ckrey;Issue happens against ActiveMQ 5.11.1;;;","15/Jul/15 05:42;ckrey;Issue happens against Apollo 1.7.1 too!;;;","02/Mar/16 17:32;jira-bot;Commit 5d6d42ce97a8a6cacd630574e54b330275d041a7 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=5d6d42c ]

https://issues.apache.org/jira/browse/AMQ-5883
https://issues.apache.org/jira/browse/AMQ-5884
https://issues.apache.org/jira/browse/AMQ-5885

Add additional validation of Topic names used in subscribe and
unsubscriobe that test for spec compliance.  ;;;","03/Aug/17 08:40;ckrey;Verified with apollo 1.7.1 and activemq 5.15.0;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQ accepts MQTT SUBSCRIBE and UNSUBSCRIBE with no topic filters,AMQ-5883,12845012,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,ckrey,ckrey,14/Jul/15 17:03,03/Aug/17 17:11,14/Jul/23 05:44,03/Aug/17 17:11,5.11.1,,,,,,,,,5.14.0,,,,,,,,,0,,,,,,"MQTT spec says:

[MQTT-3.8.3-3]
The payload of a SUBSCRIBE packet MUST contain at least one Topic Filter / QoS pair. A SUBSCRIBE packet with no payload is a protocol violation.

[MQTT-3.10.3-2]
The Payload of an UNSUBSCRIBE packet MUST contain at least one Topic Filter. An UNSUBSCRIBE packet with no payload is a protocol violation.
","OSX 10.10
https://github.com/ckrey/MQTT-Client-Framework testcases",ckrey,jira-bot,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Aug 03 17:11:23 UTC 2017,,,,,,,,,,,"0|i2h8rb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Jul/15 04:22;ckrey;Issue happens against ActiveMQ 5.11.1;;;","15/Jul/15 05:42;ckrey;Issue happens against Apollo 1.7.1 too!;;;","02/Mar/16 17:32;jira-bot;Commit 5d6d42ce97a8a6cacd630574e54b330275d041a7 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=5d6d42c ]

https://issues.apache.org/jira/browse/AMQ-5883
https://issues.apache.org/jira/browse/AMQ-5884
https://issues.apache.org/jira/browse/AMQ-5885

Add additional validation of Topic names used in subscribe and
unsubscriobe that test for spec compliance.  ;;;","03/Aug/17 08:55;ckrey;I cannot verify this to be fixed in either apollo 1.7.1 nor in activemq 5.15.0

-> activemq `a2020002`
<- activemq `b0020002;;;","03/Aug/17 17:11;tabish;There is a fix and test for this.  If you can create a test that shows an issue with 5.15.0 then please create a new issue and attach it there.  Apollo is a separate and no longer maintained project.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQ accepts MQTT PUBLISH with wildcard characters in topic,AMQ-5882,12845009,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,cshannon,ckrey,ckrey,14/Jul/15 16:57,29/Feb/16 13:30,14/Jul/23 05:44,28/Feb/16 17:59,5.11.1,,,,,,,,,5.14.0,,,,,,,,,0,,,,,,"publish to topic ""MQTTClient/+-[MQTTClientPublishTests"" is accepted
publish to topic ""MQTTClient/#-[MQTTClientPublishTests"" is accepted

MQTT spec says:
[MQTT-3.3.2-2]
The Topic Name in the PUBLISH Packet MUST NOT contain wildcard characters.","OSX 10.10
https://github.com/ckrey/MQTT-Client-Framework testcases",ckrey,jira-bot,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Feb 29 13:30:54 UTC 2016,,,,,,,,,,,"0|i2h8qn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Jul/15 04:22;ckrey;Issue happens against ActiveMQ 5.11.1;;;","15/Jul/15 05:42;ckrey;Issue happens against Apollo 1.7.1 too!;;;","28/Feb/16 17:58;jira-bot;Commit 1b38b27ed23a5ac604e5a4dd509dd854afdfde07 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=1b38b27 ]

https://issues.apache.org/jira/browse/AMQ-5882

Fail to publish if the topic name in the publish packet contains a wild
card character as per the MQTT V3.1 and V3.1.1 spec.
;;;","29/Feb/16 13:30;jira-bot;Commit 19c9404916e83abac2eb630e416e16c3218c621b in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=19c9404 ]

https://issues.apache.org/jira/browse/AMQ-5882

removing illegal wildcard characters used in topics for some MQTT tests
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQ accepts MQTT connect with password without username,AMQ-5881,12845007,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,ckrey,ckrey,14/Jul/15 16:55,26/Feb/16 00:09,14/Jul/23 05:44,26/Feb/16 00:09,5.11.1,,,,,,,,,5.14.0,,,,,,,,,0,,,,,,"
MQTT spec says:
[MQTT-3.1.2-22]
If the User Name Flag is set to 0, the Password Flag MUST be set to 0.","OSX 10.10
https://github.com/ckrey/MQTT-Client-Framework testcases",ckrey,jira-bot,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Feb 26 00:08:32 UTC 2016,,,,,,,,,,,"0|i2h8q7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Jul/15 04:22;ckrey;Issue happens against ActiveMQ 5.11.1;;;","26/Feb/16 00:08;jira-bot;Commit c530b69e16372232bef19dcd353cbe91e4a511d2 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=c530b69 ]

https://issues.apache.org/jira/browse/AMQ-5881

Fail the connect if the password is set but the username bit is not as
per the V3.1.1 spec requirements. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQ does not accept long (>32kb) MQTT topic filters in SUBSCRIBE,AMQ-5880,12845006,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,ckrey,ckrey,14/Jul/15 16:52,02/May/16 20:27,14/Jul/23 05:44,02/May/16 20:27,5.11.1,,,,,,,,,5.14.0,,,,,,,,,0,,,,,,"Trying to send topic length 32767 works
65521, 65534, 65535 do not work

AMQ says:
WARN | Transport Connection to: tcp://0:0:0:0:0:0:0:1:52308 failed: java.io.IOException: Unexpected error occurred: java.lang.ArrayIndexOutOfBoundsException: -1
 WARN | Transport Connection to: tcp://0:0:0:0:0:0:0:1:52612 failed: java.io.IOException: Unexpected error occurred: java.lang.ArrayIndexOutOfBoundsException: -1
 WARN | Transport Connection to: tcp://0:0:0:0:0:0:0:1:52625 failed: java.io.IOException: Unexpected error occurred: java.lang.ArrayIndexOutOfBoundsException: -11

MQTT spec says:
[MQTT-4.7.3-3]
Topic Names and Topic Filters are UTF-8 encoded strings, they MUST NOT encode to more than 65535 bytes.","OSX 10.10
https://github.com/ckrey/MQTT-Client-Framework testcases",ckrey,jira-bot,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon May 02 20:27:09 UTC 2016,,,,,,,,,,,"0|i2h8pz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Jul/15 04:21;ckrey;Issue happens against ActiveMQ 5.11.1;;;","15/Jul/15 05:42;ckrey;Issue happens against Apollo 1.7.1 too!;;;","01/Mar/16 21:21;jira-bot;Commit 8ef44452a24685dea52b0757960c1a750abd4246 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=8ef4445 ]

https://issues.apache.org/jira/browse/AMQ-5880

Adds a test for the issue that is ignored for now while we wait for a
fixed MQTT client release.;;;","01/Mar/16 21:21;tabish;This is caused by a bug in the FuseSource MQTT client codecs used in the protocol converter.  I've committed a fix there for this but a new release is needed before this will be fixed broker side. ;;;","02/May/16 20:27;jira-bot;Commit 27799fec97b9ed7d685169593f7e6da06d52df0b in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=27799fe ]

https://issues.apache.org/jira/browse/AMQ-5880

Update to latest MQTT client release to resolve this issue. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The Queue got hanged with a scenario said in description with version 5.11.1 but this works with version 5.5.1,AMQ-5877,12844064,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,,sivaphani.kothuri@gmail.com,sivaphani.kothuri@gmail.com,10/Jul/15 06:21,12/Aug/15 13:06,14/Jul/23 05:44,12/Aug/15 13:06,5.11.1,,,,,,,,,5.12.0,,,,Broker,,,,,0,,,,,,"We are unable to read the message with message selector if we follow the below steps in ActiveMQ 5.11.1 
* Start ActiveMQ
* Send Two messages
* Read one message with our selector,Using consumer.recieve() API
* Send One more message, And hold the messageId
* Read the message with the above message Id which we are holding as a selector(""JMSMessageID='"" + messageId + ""'"") immediately.
* Now message we wont able to read, consumer thread will be waiting infinitely

*Note :*  Its required activemq-all-5.11.1.jar,Junit jars need to be in classpath.

Issue reproducible prgoram
{code:java}
import java.util.Properties;

import javax.jms.Connection;
import javax.jms.ConnectionFactory;
import javax.jms.Message;
import javax.jms.MessageConsumer;
import javax.jms.MessageProducer;
import javax.jms.Queue;
import javax.jms.Session;
import javax.naming.Context;
import javax.naming.InitialContext;

import org.junit.AfterClass;
import org.junit.Assert;
import org.junit.BeforeClass;
import org.junit.Test;

/**
 * We are unable to read the message with message selector if we follow the
 * below steps in ActiveMQ 5.11.1
 * <ul>
 * <li>Start ActiveMQ</li>
 * <li>Send Two messages</li>
 * <li>Read one message with our selector,Using consumer.recieve() API</li>
 * <li>Send One more message, And hold the messageId</li>
 * <li>Read the message with the above message Id which we are holding as a
 * selector(""JMSMessageID='"" + messageId + ""'"") immediately.</li>
 * <li>Now message we wont able to read, consumer thread will be waiting
 * infinitely</li>
 * </ul>
 * <b>Note : </b> Its required activemq-all-5.11.1.jar,Junit jars need to be in classpath.
 *
 */
public final class MessageSelectorJunit {

	private static Connection connection = null;
	private static final String CONTEXT_FACTORY = ""org.apache.activemq.jndi.ActiveMQInitialContextFactory"";
	private static final String URL = ""tcp://localhost:61616"";
	private static final String QUEUE_NAME = ""TestQueue"";

	@BeforeClass
	public static void oneTimeSetUp() throws Exception {
		Properties properties = new Properties();
		properties.setProperty(Context.INITIAL_CONTEXT_FACTORY, CONTEXT_FACTORY);
		properties.setProperty(Context.PROVIDER_URL, URL);

		// Connection Creation
		Context context = new InitialContext(properties);
		ConnectionFactory connectionFactory = (ConnectionFactory) context.lookup(""QueueConnectionFactory"");
		connection = connectionFactory.createConnection();
		connection.start();
	}

	@Test
	public void testScenario() throws Exception {
		// Message1
		sendJMSMessage();
		sendJMSMessage();
		getJMSMessage(null);

		// Message2
		String messageId2 = sendJMSMessage();
		String messageSelector = ""JMSMessageID='"" + messageId2 + ""'"";
		Assert.assertNotNull(""Expected message to be read with message selector : "" + messageSelector,
				getJMSMessage(messageSelector));
	}

	private String sendJMSMessage() throws Exception {
		String messageId = null;
		Session session = null;
		MessageProducer producer = null;
		try {
			session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
			producer = session.createProducer(session.createQueue(QUEUE_NAME));

			Message msg = session.createTextMessage(""Test Message"");
			producer.send(msg);

			messageId = msg.getJMSMessageID();
			System.out.println(""Send MessageId : "" + messageId);
		} finally {
			producer.close();
			session.close();
		}
		return messageId;
	}

	private String getJMSMessage(String messageSelector) throws Exception {
		String recievedId = null;
		MessageConsumer consumer = null;
		Session session = null;
		try {
			session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
			Queue queue = session.createQueue(QUEUE_NAME);
			System.out.println(""Started Recieving the message with the message selector : "" + messageSelector);
			consumer = session.createConsumer(queue, messageSelector);
			connection.start();
			Message msg = consumer.receive(1000);
			if (msg != null) {
				recievedId = msg.getJMSMessageID();
				System.out.println(""Message Recieved, Id : "" + msg.getJMSMessageID());
			} else {
				System.out.println(""Message not recieved."");
			}
		} finally {
			consumer.close();
			session.close();
		}
		return recievedId;
	}

	@AfterClass
	public static void oneTimeTearDown() throws Exception {
		if (connection != null) {
			connection.close();
		}
	}
}
{code}","Window 7 Enterprise Edition,  64 bit
JDK 1.8.0_25, 64 bit 
apache-activemq-5.11.1
",cshannon,sivaphani.kothuri@gmail.com,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Aug/15 20:56;tabish;AMQ5877Test.java;https://issues.apache.org/jira/secure/attachment/12749345/AMQ5877Test.java",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Aug 12 13:06:10 UTC 2015,,,,,,,,,,,"0|i2h333:",9223372036854775807,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"10/Jul/15 11:38;cshannon;I would recommend 2 things...first you should try this against the latest 5.12-SNAPSHOT as there have been a lot of fixes that have gone into it.  Second, your test case doesn't include the BrokerService being started and relies on an external broker.  You should include an embedded broker in your test case because it will be much easier to run your test plus a Broker can be configured many different ways so by including a Broker in your test you can include the exact configuration that is causing your issue.  Take a look at some of the unit tests in the ActiveMQ build under the activemq-unit-tests project if you need some examples on how to configure an embedded broker in a test case.;;;","07/Aug/15 20:56;tabish;Proper unit test, problem is not reproduced. ;;;","07/Aug/15 20:57;tabish;Attempted to reproduce using the information provided, test passes without issue. ;;;","12/Aug/15 08:47;sivaphani.kothuri@gmail.com;I downloaded activemq 5.11.1 from http://www.apache.org/dyn/closer.cgi?path=/activemq/5.11.1/apache-activemq-5.11.1-bin.zip  unzipped and placed the 'activemq-all-5.11.1.jar' in classpath and run attached AMQ5877Test.java.

Then i  get the same old error.
{code}
java.lang.AssertionError: Expected message to be read with message selector : JMSMessageID='ID:SKOTHURI4T5ZD02-54709-1439369166722-3:1:4:1:1'
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at org.junit.Assert.assertNotNull(Assert.java:621)
	at AMQ5877Test.testScenario(AMQ5877Test.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
{code}

I am missing something to configure?;;;","12/Aug/15 13:06;cshannon;This test fails in 5.11.1 and 5.11.2 but passes in 5.12.0.  5.12.0 is currently under vote and should be released in a day or two.

I'm closing this out because this has been fixed already by one of the other 200 issues that apply to 5.12.0.

If necessary, I suppose we could use git-bisect to try and figure out which commit or commits fixed this issue and put it into the 5.11.x branch in case there is a 5.11.3 release.

;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Removing a destination when using mKahaDB can cause an IllegalStateException,AMQ-5875,12843216,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,cshannon,cshannon,07/Jul/15 15:42,19/Sep/18 09:26,14/Jul/23 05:44,29/Jul/15 11:30,5.11.1,,,,,,,,,5.12.0,,,,Broker,,,,,0,,,,,,"This issue occurs when using multiKahaDB and a wild card destination.  The problem is that with a wild card topic, multiple destinations can be attached to the same store.  If one of the destinations is deleted and the other destinations are empty, the entire store is deleted.  This causes an exception later on if trying to do something like subscribe to a destination that wasn't deleted.  I've attached a test case to show this issue.  

The problem seems to be that the removeMessageStore method in MultiKahaDBPersistenceAdapter relies on adapter.getDestinations.isEmpty() to determine whether the store is eligible for deleting.  Unfortunately, the getDestinations method in KahaDBStore excludes destinations that are empty therefore the method doesn't return any destinations even though there is one still attached to the store so the logic goes ahead and deletes the store.

The stack trace from running against 5.12.0-SNAPSHOT is below:

{noformat}
java.lang.IllegalStateException: PageFile is not loaded
        at org.apache.activemq.store.kahadb.disk.page.PageFile.assertLoaded(PageFile.java:811)
        at org.apache.activemq.store.kahadb.disk.page.PageFile.tx(PageFile.java:304)
        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBTopicMessageStore.getMessageCount(KahaDBStore.java:866)
        at org.apache.activemq.store.ProxyTopicMessageStore.getMessageCount(ProxyTopicMessageStore.java:140)
        at org.apache.activemq.store.ProxyTopicMessageStore.getMessageCount(ProxyTopicMessageStore.java:140)
        at org.apache.activemq.broker.region.cursors.TopicStorePrefetch.getStoreSize(TopicStorePrefetch.java:97)
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.resetSize(AbstractStoreCursor.java:73)
        at org.apache.activemq.broker.region.cursors.TopicStorePrefetch.<init>(TopicStorePrefetch.java:58)
        at org.apache.activemq.broker.region.cursors.StoreDurableSubscriberCursor.add(StoreDurableSubscriberCursor.java:119)
        at org.apache.activemq.broker.region.PrefetchSubscription.add(PrefetchSubscription.java:584)
        at org.apache.activemq.broker.region.DurableTopicSubscription.add(DurableTopicSubscription.java:113)
        at org.apache.activemq.broker.region.Topic.addSubscription(Topic.java:161)
        at org.apache.activemq.broker.region.AbstractRegion.addConsumer(AbstractRegion.java:400)
        at org.apache.activemq.broker.region.TopicRegion.addConsumer(TopicRegion.java:168)
        at org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:427)
        at org.apache.activemq.broker.jmx.ManagedRegionBroker.addConsumer(ManagedRegionBroker.java:244)
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:102)
        at org.apache.activemq.advisory.AdvisoryBroker.addConsumer(AdvisoryBroker.java:107)
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:102)
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:102)
        at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:107)
        at org.apache.activemq.broker.TransportConnection.processAddConsumer(TransportConnection.java:667)
        at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:348)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:334)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:188)
        at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
        at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:300)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)
        at java.lang.Thread.run(Thread.java:745)
{noformat}",,brianjohnson,cshannon,githubbot,gtully,jira-bot,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6901,,,,,,,,,,,,,,"07/Jul/15 15:42;cshannon;MultiKahaDBDeletionTest.java;https://issues.apache.org/jira/secure/attachment/12743974/MultiKahaDBDeletionTest.java",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Sep 19 09:26:46 UTC 2018,,,,,,,,,,,"0|i2gxyv:",9223372036854775807,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"07/Jul/15 15:47;cshannon;[~tabish121] and [~gtully],

My first thought here is to simply update the getDestinations() method in KahaDBStore to include empty topics in the returned set.  The other PersistenceAdapter implementations don't seem to filter out empty topics so that would keep things consistent.  Do you think there would be any unintended side effects of doing that?;;;","08/Jul/15 11:31;gtully;[~christopher.l.shannon] - I don't think so. that seems like a sensible fix. your additional test and the existing tests will confirm.;;;","08/Jul/15 11:52;cshannon;Ok, thanks Gary.  I will create a patch and test and upload the PR later today if the tests all seem to pass.;;;","08/Jul/15 18:34;githubbot;GitHub user cshannon opened a pull request:

    https://github.com/apache/activemq/pull/130

    https://issues.apache.org/jira/browse/AMQ-5875

    Resolves an issue when using mKahaDB that caused a MessageStore
    being used by more than one destination to be deleted even though
    there was still at least 1 other destination using the store.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/cshannon/activemq AMQ-5875

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/130.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #130
    
----
commit 73d1bcd7ac4fe7bd94da9fe178f6f17d30bc41f2
Author: Christopher L. Shannon (cshannon) <christopher.l.shannon@gmail.com>
Date:   2015-07-08T13:02:43Z

    https://issues.apache.org/jira/browse/AMQ-5875
    
    Resolves an issue when using mKahaDB that caused a MessageStore
    being used by more than one destination to be deleted even though
    there was still at least 1 other destination using the store.

----
;;;","08/Jul/15 21:18;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/130
;;;","08/Jul/15 21:21;tabish;Patch applied, thanks!;;;","10/Jul/15 11:49;gtully;there is logic in a network bridge to recreate durable demand eagerly. It uses the getDestinations list to figure of there was demand in the past. So a topic with some durable subscribers.
It appears that it is now re-creating demand for topics that have no durables. Something needs to gate that, or the other use case needs a different fix.

Test that shows the problem in a not so obvious way:
org.apache.activemq.usecases.ThreeBrokerVirtualTopicNetworkTest#testNetworkVirtualTopic


This needs a little revisit - but it turns out there were some negative consequences :-);;;","10/Jul/15 12:00;cshannon;[~gtully],

How do you feel about returning the getDestinations() method behavior to how it was previously but adding another method to the PersistenceAdapter called something like getAllDestinations() that would return empty destinations as well?  Or do the opposite and add a method called getDestinations(Filter) and then a filter could be used for the case of a network bridge to filter out empty topics.;;;","10/Jul/15 12:16;cshannon;I did a more thorough search and in AbstractRegion, getInactiveDestinations relies on destinationFactory.getDestinations().  So I guess that could be affected by this too.;;;","10/Jul/15 12:35;cshannon;I think I have a good way to fix this, I'm working on a PR now and I will push it up shortly.;;;","10/Jul/15 14:09;githubbot;GitHub user cshannon opened a pull request:

    https://github.com/apache/activemq/pull/131

    https://issues.apache.org/jira/browse/AMQ-5875

    Fixing a regression that caused a network bridge to recreate durable
    demand improperly.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/cshannon/activemq AMQ-5875-regression

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/131.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #131
    
----
commit 3b704209ee391d0505889d35831108650035d660
Author: Christopher L. Shannon (cshannon) <christopher.l.shannon@gmail.com>
Date:   2015-07-10T13:55:19Z

    https://issues.apache.org/jira/browse/AMQ-5875
    
    Fixing a regression that caused a network bridge to recreate durable
    demand improperly.

----
;;;","10/Jul/15 15:01;gtully;thanks for the fast patch.
I am not sure we need another method because I think there should be enough there with org.apache.activemq.broker.Broker#getDurableDestinations
org.apache.activemq.broker.Broker#getDestinations
and:
org.apache.activemq.broker.region.DestinationFactory#getAllDurableSubscriptions

The difficult bit is tying down the usage to the correct method and ensuring consistency with the impls across the stores.

the network bridge only wants to create demand when org.apache.activemq.broker.region.DestinationFactory#getAllDurableSubscriptions is non empty, I think maybe it needs to use that method and maybe then the isEmpty check is negated and that method in kahadb can be more in line with others.
I need to research where that isEmpty check came from.
;;;","10/Jul/15 15:10;gtully;I think the root cause maybe is https://issues.apache.org/jira/browse/AMQ-2720 changing the impl of getDestinations;;;","10/Jul/15 16:12;gtully;I think org.apache.activemq.network.DurableConduitBridge#setupStaticDestinations needs to be reworked to query the topic region, I think it should be using its clientid and subname also in the match. ;;;","10/Jul/15 16:12;cshannon;So how do you feel about this fix:

We could pass the destinationFactory to the NetworkConnector object and then change the configureBridge method to check durableSubscriptions.

Then the loop iterating over the durableDestinations in configureBridge around line 140 or so could be changed from:
 {{if(d.isTopic())}} to {{if(d.isTopic() && destinationFactory.getAllDurableSubscriptions((ActiveMQTopic)d).length > 0)}};;;","10/Jul/15 16:35;cshannon;[~gtully],

I think your proposed fix of changing DurableConduitBridge makes more sense than mine.  I will create a new PR with the fix and submit it shortly.  I will include the expanded unit tests that I had in my other PR.;;;","10/Jul/15 16:43;githubbot;Github user cshannon closed the pull request at:

    https://github.com/apache/activemq/pull/131
;;;","10/Jul/15 17:02;githubbot;GitHub user cshannon opened a pull request:

    https://github.com/apache/activemq/pull/132

    https://issues.apache.org/jira/browse/AMQ-5875

    Fixing a regression that caused a network bridge to recreate durable
    demand improperly.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/cshannon/activemq AMQ-5875-regression-2

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/132.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #132
    
----
commit 6635f32f095cd5b367a5e1176b0cc8b2c8b3b346
Author: Christopher L. Shannon (cshannon) <christopher.l.shannon@gmail.com>
Date:   2015-07-10T16:43:26Z

    https://issues.apache.org/jira/browse/AMQ-5875
    
    Fixing a regression that caused a network bridge to recreate durable
    demand improperly.

----
;;;","10/Jul/15 17:05;cshannon;[~gtully],

See what you think of my PR.  org.apache.activemq.usecases.ThreeBrokerVirtualTopicNetworkTest#testNetworkVirtualTopic is now fixed and the PR smoke tests all pass.  A full run through CI would confirm that nothing else broke.;;;","10/Jul/15 17:10;cshannon;Hmm, locally the smoke test profile ran and passed but on CI it failed.  I just ran it again and it is passing for me.

Failed tests: 
  MDBTest.testMessageExceptionReDelivery:631 Delivery policy delay not working

Is that test unreliable?;;;","10/Jul/15 17:15;tabish;That one seems to pass in CI but I noticed locally that it tends to fail about 50% of the time.;;;","17/Jul/15 15:57;jira-bot;Commit 2117768e0a6c7bab0225f5ba4e960bfb443188c7 in activemq's branch refs/heads/master from [~christopher.l.shannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=2117768 ]

https://issues.apache.org/jira/browse/AMQ-5875

Fixing a regression that caused a network bridge to recreate durable
demand improperly.
;;;","17/Jul/15 15:57;jira-bot;Commit a439a0c6bf693e3fd68dcb190d22187c53ec8e9f in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=a439a0c ]

AMQ-5875 - rework the patch a bit to only call createDemandSubscription when we have a match to avoid trcking state in error via the bridge subscriptionMap* from configureDemandSubscription
;;;","17/Jul/15 15:58;gtully;merged the patch with a little tweak.
thankyou :-);;;","17/Jul/15 20:03;cshannon;Thanks for applying that Gary.;;;","27/Jul/15 17:06;tabish;Noticed that after these changes the following test fails across all the Jenkins test runs:

{quote}
org.apache.activemq.usecases.DurableSubscriberWithNetworkRestartTest.testSendOnAReceiveOnBWithTransportDisconnect
{quote};;;","27/Jul/15 18:41;githubbot;GitHub user cshannon opened a pull request:

    https://github.com/apache/activemq/pull/136

    https://issues.apache.org/jira/browse/AMQ-5875

    Reworking DurableConduitBridge to look up subscriptions from the
    msesage store instead of the RegionBroker since inactive subscriptions
    need to be looked at as well when dynamicOnly is false for a
    network bridge.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/cshannon/activemq AMQ-5875-regression3

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/136.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #136
    
----
commit 15f390130bfc8645b067544572d80a75a242a9f9
Author: Christopher L. Shannon (cshannon) <christopher.l.shannon@gmail.com>
Date:   2015-07-27T18:38:58Z

    https://issues.apache.org/jira/browse/AMQ-5875
    
    Reworking DurableConduitBridge to look up subscriptions from the
    msesage store instead of the RegionBroker since inactive subscriptions
    need to be looked at as well when dynamicOnly is false for a
    network bridge.

----
;;;","27/Jul/15 18:44;cshannon;So the issue with org.apache.activemq.usecases.DurableSubscriberWithNetworkRestartTest.testSendOnAReceiveOnBWithTransportDisconnect seems to be that the message store needs to be queried instead of the region broker for destinations since inactive destinations need to be checked as well.  I created a pull request with a fix for this.

[~gtully], can you take a look at my fix and see if it makes sense?  I verified that it fixes org.apache.activemq.usecases.DurableSubscriberWithNetworkRestartTest.testSendOnAReceiveOnBWithTransportDisconnect and org.apache.activemq.usecases.ThreeBrokerVirtualTopicNetworkTest#testNetworkVirtualTopic is still fixed as well.  However, I could have broke something else :);;;","28/Jul/15 17:02;tabish;Test failing in CI;;;","28/Jul/15 17:16;tabish;TopicRegion keeps around a mapping of all durable subscriptions including inactive one's I think which might allow you to get at the info you need without dipping into the store. ;;;","28/Jul/15 17:48;cshannon;I just updated the PR to use that durable subscriptions mapping instead of the store.  I re-ran both tests and they pass.;;;","29/Jul/15 11:23;jira-bot;Commit 5684d093c0fe643c9967b03dbf4d0661f2e0227a in activemq's branch refs/heads/master from [~christopher.l.shannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=5684d09 ]

https://issues.apache.org/jira/browse/AMQ-5875

Reworking DurableConduitBridge to look up subscriptions from the
TopicRegion  instead of the RegionBroker since inactive subscriptions
need to be looked at as well when dynamicOnly is false for a
network bridge.
;;;","29/Jul/15 11:29;githubbot;Github user cshannon closed the pull request at:

    https://github.com/apache/activemq/pull/132
;;;","29/Jul/15 11:30;gtully;Thanks for the update. I applied your fix. Having peeked at that test for a bit yesterday I am not convinced it is verifying what it should with the asserts, the mbeans are for the bridge rather than for durable sub that are active etc.
However, I think the dynamicOnly=false use case is of dubious value so keeping the status quo for now is sufficient.;;;","29/Jul/15 11:30;githubbot;Github user cshannon closed the pull request at:

    https://github.com/apache/activemq/pull/136
;;;","29/Jul/15 11:33;cshannon;[~gtully],

Thanks for looking at that.  Hopefully there are no more failures after this :);;;","17/Feb/16 14:09;jira-bot;Commit fd760888147b1db69a330c32a3630ddd87c2a53c in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=fd76088 ]

https://issues.apache.org/jira/browse/AMQ-5875 - additional test that shows durable sub registration does not error out with this fix
;;;","06/Dec/16 14:54;jira-bot;Commit dc68ad89678eba9d18184f1a5342eb7ecf774596 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=dc68ad8 ]

[AMQ-5875] add queue test variant to validate shared mkahaDb remains when one dest is deleted
;;;","31/May/18 09:21;jira-bot;Commit 4c972d97b95ea521493db5def6869eab663e5f64 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=4c972d9 ]

AMQ-5875 - fix test regression in MultiKahaDBQueueDeletionTest
;;;","31/May/18 09:38;gtully;w.r.t the test regression - it is most likely the fix from AMQ-6901 that precipitated the test failure. ;;;","19/Sep/18 09:26;jira-bot;Commit 77784061c590dafd81a458ca20ec8efd1484a10f in activemq's branch refs/heads/activemq-5.15.x from gtully
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=7778406 ]

AMQ-5875 - fix test regression in MultiKahaDBQueueDeletionTest

(cherry picked from commit 4c972d97b95ea521493db5def6869eab663e5f64)
;;;"
MQTT subscribe fails after unsubscribe,AMQ-5872,12842266,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,mathia.vandepoel,mathia.vandepoel,02/Jul/15 09:38,16/Jul/15 17:43,14/Jul/23 05:44,02/Jul/15 21:07,5.11.1,,,,,,,,,5.12.0,,,,KahaDB,,,,,0,,,,,,"We have a problem subscribing after unsubscribing (same topic). The messages are put in a queue, but not delivered to the client (the queue is created on the server).

We use .NET M2MQTT as our client library.

Full scenario:

1) Connect to server.
2) Subscribe to topic ""TEST""
3) Publish message ""TEST 1"" to topic ""TEST"" => message is received
4) Unsubscribe from topic ""TEST""
5) Subscribe to topic ""TEST""
6) Publish message ""TEST 2"" to topic ""TEST"" => message is not received
7) Subscribe to topic ""TEST"" => message ""TEST 2"" is received
8) Publish message ""TEST 3"" to topic ""TEST"" => message is received

On our server, we see the following error:
2015-07-02 10:57:05,621 | WARN  | Error subscribing to TEST | org.apache.activemq.transport.mqtt.strategy.AbstractMQTTSubscriptionStrategy | ActiveMQ Transport: tcp:///10.2.6.86:56778@8884
java.lang.NullPointerException
	at org.apache.activemq.store.kahadb.MessageDatabase.addAckLocationForRetroactiveSub(MessageDatabase.java:2220)[activemq-kahadb-store-5.11.1.jar:5.11.1]
	at org.apache.activemq.store.kahadb.MessageDatabase.updateIndex(MessageDatabase.java:1472)[activemq-kahadb-store-5.11.1.jar:5.11.1]
	at org.apache.activemq.store.kahadb.MessageDatabase$15.execute(MessageDatabase.java:1207)[activemq-kahadb-store-5.11.1.jar:5.11.1]
	at org.apache.activemq.store.kahadb.disk.page.Transaction.execute(Transaction.java:779)[activemq-kahadb-store-5.11.1.jar:5.11.1]
	at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:1204)[activemq-kahadb-store-5.11.1.jar:5.11.1]
	at org.apache.activemq.store.kahadb.MessageDatabase$10.visit(MessageDatabase.java:1103)[activemq-kahadb-store-5.11.1.jar:5.11.1]
	at org.apache.activemq.store.kahadb.data.KahaSubscriptionCommand.visit(KahaSubscriptionCommand.java:187)[activemq-kahadb-store-5.11.1.jar:5.11.1]
	at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:1070)[activemq-kahadb-store-5.11.1.jar:5.11.1]
	at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:977)[activemq-kahadb-store-5.11.1.jar:5.11.1]
	at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:957)[activemq-kahadb-store-5.11.1.jar:5.11.1]
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBTopicMessageStore.addSubscription(KahaDBStore.java:796)[activemq-kahadb-store-5.11.1.jar:5.11.1]
	at org.apache.activemq.store.ProxyTopicMessageStore.addSubscription(ProxyTopicMessageStore.java:98)[activemq-broker-5.11.1.jar:5.11.1]
	at org.apache.activemq.broker.region.Topic.activate(Topic.java:258)[activemq-broker-5.11.1.jar:5.11.1]
	at org.apache.activemq.broker.region.DurableTopicSubscription.add(DurableTopicSubscription.java:121)[activemq-broker-5.11.1.jar:5.11.1]
	at org.apache.activemq.broker.region.Topic.addSubscription(Topic.java:160)[activemq-broker-5.11.1.jar:5.11.1]
	at org.apache.activemq.broker.region.AbstractRegion.addConsumer(AbstractRegion.java:319)[activemq-broker-5.11.1.jar:5.11.1]
	at org.apache.activemq.broker.region.TopicRegion.addConsumer(TopicRegion.java:163)[activemq-broker-5.11.1.jar:5.11.1]
	at org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:427)[activemq-broker-5.11.1.jar:5.11.1]
	at org.apache.activemq.broker.jmx.ManagedRegionBroker.addConsumer(ManagedRegionBroker.java:244)[activemq-broker-5.11.1.jar:5.11.1]
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:102)[activemq-broker-5.11.1.jar:5.11.1]
	at org.apache.activemq.advisory.AdvisoryBroker.addConsumer(AdvisoryBroker.java:104)[activemq-broker-5.11.1.jar:5.11.1]
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:102)[activemq-broker-5.11.1.jar:5.11.1]
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:102)[activemq-broker-5.11.1.jar:5.11.1]
	at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:107)[activemq-broker-5.11.1.jar:5.11.1]
	at org.apache.activemq.broker.TransportConnection.processAddConsumer(TransportConnection.java:663)[activemq-broker-5.11.1.jar:5.11.1]
	at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:348)[activemq-client-5.11.1.jar:5.11.1]
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:334)[activemq-broker-5.11.1.jar:5.11.1]
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:188)[activemq-broker-5.11.1.jar:5.11.1]
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:45)[activemq-client-5.11.1.jar:5.11.1]
	at org.apache.activemq.transport.mqtt.MQTTInactivityMonitor.onCommand(MQTTInactivityMonitor.java:147)[activemq-mqtt-5.11.1.jar:5.11.1]
	at org.apache.activemq.transport.mqtt.MQTTTransportFilter.sendToActiveMQ(MQTTTransportFilter.java:106)[activemq-mqtt-5.11.1.jar:5.11.1]
	at org.apache.activemq.transport.mqtt.MQTTProtocolConverter.sendToActiveMQ(MQTTProtocolConverter.java:173)[activemq-mqtt-5.11.1.jar:5.11.1]
	at org.apache.activemq.transport.mqtt.strategy.AbstractMQTTSubscriptionStrategy.doSubscribe(AbstractMQTTSubscriptionStrategy.java:200)[activemq-mqtt-5.11.1.jar:5.11.1]
	at org.apache.activemq.transport.mqtt.strategy.MQTTDefaultSubscriptionStrategy.onSubscribe(MQTTDefaultSubscriptionStrategy.java:87)[activemq-mqtt-5.11.1.jar:5.11.1]
	at org.apache.activemq.transport.mqtt.strategy.AbstractMQTTSubscriptionStrategy.onSubscribe(AbstractMQTTSubscriptionStrategy.java:108)[activemq-mqtt-5.11.1.jar:5.11.1]
	at org.apache.activemq.transport.mqtt.MQTTProtocolConverter.onSubscribe(MQTTProtocolConverter.java:352)[activemq-mqtt-5.11.1.jar:5.11.1]
	at org.apache.activemq.transport.mqtt.MQTTProtocolConverter.onMQTTCommand(MQTTProtocolConverter.java:204)[activemq-mqtt-5.11.1.jar:5.11.1]
	at org.apache.activemq.transport.mqtt.MQTTTransportFilter.onCommand(MQTTTransportFilter.java:94)[activemq-mqtt-5.11.1.jar:5.11.1]
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)[activemq-client-5.11.1.jar:5.11.1]
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)[activemq-client-5.11.1.jar:5.11.1]
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)[activemq-client-5.11.1.jar:5.11.1]
	at java.lang.Thread.run(Unknown Source)[:1.8.0_31]",Windows server 2012,cshannon,mathia.vandepoel,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Jul/15 17:39;tabish;MQTTNullPointerTest.java;https://issues.apache.org/jira/secure/attachment/12743355/MQTTNullPointerTest.java","02/Jul/15 16:03;cshannon;MQTTNullPointerTest.java;https://issues.apache.org/jira/secure/attachment/12743335/MQTTNullPointerTest.java",,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jul 16 17:43:37 UTC 2015,,,,,,,,,,,"0|i2gs7z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Jul/15 13:53;tabish;Would first suggest trying the latest 5.12-SNAPSHOT and see if your issue is resolved.  If not a test case would be needed that can reproduce this so we can track down what it going on.  ;;;","02/Jul/15 14:07;mathia.vandepoel;Hey, thanks for responding this quickly! We will try the 5.12 snapshot.

If it does not work, I will try working on a test case, but I am not a java developer, so maybe you can point me in the right direction?

Cheers!;;;","02/Jul/15 14:12;tabish;There are a number of tests in the activemq-mqtt module that you can work from.  

https://github.com/apache/activemq/tree/master/activemq-mqtt/src/test/java/org/apache/activemq/transport/mqtt
;;;","02/Jul/15 16:04;cshannon;I played around with this a little and I couldn't reproduce this using the exact same steps as described. So I tried a few things and I was able to get the null pointer after restarting the broker and then switching the topic to a wildcard on the new consumer.  I uploaded my test case as an attachment and if it is run the same exception is printed as described in this ticket.

A null pointer check can always be added but I'm not sure what the underlying issue is yet that causes this.
;;;","02/Jul/15 17:39;tabish;Updated test so that it does not use fixed ports, they cause havoc if used in CI.;;;","02/Jul/15 21:07;tabish;Updated the code to account for the fact that there may not be a message reference value for the last ack location marker as that is always the next to use value.  ;;;","06/Jul/15 11:14;mathia.vandepoel;Hey, thanks to both of you for figuring out our problem.

We have succesfully installed v5.12 snapshot on our development environment, and our issue is resolved!

I will close the issue, but I have one more question: do you have any ETA on the 5.12 final release? Because we don't want to use a development snapshot in our production environment.

Kind regards,
Mathia;;;","16/Jul/15 08:08;mathia.vandepoel;Snapshot build fixed our problem in DEV, still need to wait for final release for PRD.;;;","16/Jul/15 17:43;cshannon;I don't have an exact date but I believe the plan is to try and wrap up 5.12 soon.  A good amount of work has already gone into it.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Lazy create if MQTTProtocolConverter in the WebSocket transport needs to be thread safe,AMQ-5870,12841802,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,30/Jun/15 21:14,30/Jun/15 21:17,14/Jul/23 05:44,30/Jun/15 21:17,5.10.2,5.11.1,,,,,,,,5.12.0,,,,MQTT,Transport,,,,0,,,,,,The MQTT WebSocket class creates its MQTTProtocolConverter lazily which can lead to a race as the method that does this is no thread safe and the race between connection create and the send of the BrokerInfo can lead two instances getting created and a stalled connect attempt. ,,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jun 30 21:17:23 UTC 2015,,,,,,,,,,,"0|i2gpfb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"30/Jun/15 21:17;tabish;Fixed on master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"activemq.apache.org/mqtt.html page is saying ""Can't find brush for : xml""",AMQ-5868,12841519,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,,rafael jeon,rafael jeon,30/Jun/15 01:47,01/Jul/15 10:55,14/Jul/23 05:44,01/Jul/15 10:55,,,,,,,,,,,,,,MQTT,,,,,0,,,,,,"activemq.apache.org/mqtt.html page is saying ""Can't find brush for : xml""

{code}SyntaxHighlighter
Can't find brush for: xml{code}

So I can't looking into configuration for MQTT.",,rafael jeon,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Important,,,,,,,,,9223372036854775807,,,Wed Jul 01 10:55:48 UTC 2015,,,,,,,,,,,"0|i2gno7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"30/Jun/15 19:11;tabish;Try it now, the site has been refreshed and seems to back in order. ;;;","01/Jul/15 10:55;tabish;Site working now after a rebuild. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Missing sample code in http://activemq.apache.org/how-should-i-implement-request-response-with-jms.html,AMQ-5866,12841190,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,ceefour,ceefour,28/Jun/15 17:34,30/Jun/15 11:27,14/Jul/23 05:44,29/Jun/15 19:20,5.11.1,,,,,,,,,,,,,Documentation,,,,,1,,,,,,In page http://activemq.apache.org/how-should-i-implement-request-response-with-jms.html all sample code is empty.,,ceefour,gregtom,jsherman1,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,CAMEL-8911,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jun 30 11:27:44 UTC 2015,,,,,,,,,,,"0|i2glnr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Jun/15 17:37;ceefour;Also affects CAMEL-8911 so probably affects all pages as well.;;;","29/Jun/15 04:01;gregtom;Yes, sample codes are definitely missing in every web page of activemq.apache.org site.
;;;","29/Jun/15 18:12;jsherman1;Looks like this issue has been resolved.

Daniel Kulp was looking into this via a Camel User Forum thread:

http://camel.465427.n5.nabble.com/Camel-website-is-not-showing-the-code-blocks-td5768644.html#a5768690;;;","29/Jun/15 19:20;tabish;Pages look good now. ;;;","30/Jun/15 11:27;ceefour;It's only resolved partially. XML codes are still now showing:

http://camel.apache.org/zeromq.html

I know that's a Camel page, but I think the underlying engine is the same.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Enable ""getRemoteAddress()"" method in WebSocket Requests",AMQ-5865,12840740,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,tabish,xgadkem,xgadkem,26/Jun/15 05:13,30/Jun/15 05:24,14/Jul/23 05:44,29/Jun/15 19:41,5.11.0,5.11.1,,,,,,,,5.12.0,,,,MQTT,STOMP,,,,0,easyfix,easytest,features,javascript,patch,"The method (getRemoteAddress()) in class ""org.apache.activemq.transport.ws.AbstractStompSocket"" does not return the correct address; it returns always """"StompSocket_"" + hashCode();"" 

We need the correct address (e.g. ""wss://127.0.0.1:63114"") for our use case. 

The implementation whould be very simple. 
In class ""org.apache.activemq.transport.ws.jetty8.WSServlet"" (and also in jetty9 package) pass the address during creation of class StompSocket in the same package: 

String scheme = request.getScheme();
if (""http"".equalsIgnoreCase(scheme)) {
	scheme = ""ws"";
} else if (""https"".equalsIgnoreCase(scheme)) {
	scheme = ""wss"";
		}
WebSocket socket = new CustomStompSocket(scheme + ""://"" + request.getRemoteAddr() + "":"" + request.getRemotePort());

It meight be that MQTT is also affected; a fix should be done by the same way.",all,githubbot,tabish,xgadkem,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Jun/15 05:21;xgadkem;CustomStompSocket.java;https://issues.apache.org/jira/secure/attachment/12742058/CustomStompSocket.java","26/Jun/15 05:21;xgadkem;CustomWebSocketServlet.java;https://issues.apache.org/jira/secure/attachment/12742059/CustomWebSocketServlet.java",,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Important,,,,,,,,,9223372036854775807,,,Tue Jun 30 05:24:55 UTC 2015,,,,,,,,,,,"0|i2gix3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Jun/15 05:23;xgadkem;Attached sample files for my fix (STOMP over wss).
Should be easy to change the real implementation with this samples ;-);;;","26/Jun/15 05:25;xgadkem;see also http://activemq.2283324.n4.nabble.com/Enable-quot-getRemoteAddress-quot-method-in-WebSocket-Requests-tt4698179.html;;;","29/Jun/15 12:50;githubbot;GitHub user cshannon opened a pull request:

    https://github.com/apache/activemq/pull/124

    https://issues.apache.org/jira/browse/AMQ-5865

    StompSocket and MQTTSocket will now return the appropriate web socket
    remote address based on the HttpRequestServlet that initialized
    the web socket connection.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/cshannon/activemq AMQ-5865

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/124.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #124
    
----
commit be10b866a7c530ab7efefef1dda82270506f25f7
Author: Christopher L. Shannon (cshannon) <christopher.l.shannon@gmail.com>
Date:   2015-06-29T12:35:17Z

    https://issues.apache.org/jira/browse/AMQ-5865
    
    StompSocket and MQTTSocket will now return the appropriate web socket
    remote address based on the HttpRequestServlet that initialized
    the web socket connection.

----
;;;","29/Jun/15 19:39;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/124
;;;","29/Jun/15 19:41;tabish;Fix applied on master  ;;;","30/Jun/15 05:22;xgadkem;Used current snapshot of 5.12 and it worked fine :-)

Thanks Christian;;;","30/Jun/15 05:24;xgadkem;Used current snapshot (apache-activemq-5.12-20150630.034116-191-bin.zip) to verify the fix.
Works as expected in our environment.

Thanks Christian;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KahaDB recovery with persisteRedeliveryFlag=true can lead to stuck message,AMQ-5864,12840560,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,25/Jun/15 14:51,26/Jun/15 10:51,14/Jul/23 05:44,26/Jun/15 10:51,5.11.0,,,,,,,,,5.12.0,,,,KahaDB,,,,,0,,,,,,"I send a message to queue ""in"" and then kill -9 the broker. After the restart, sometimes the message is lost and I can see following in broker log:
Duplicate message add attempt rejected. Destination: QUEUE://in, Message id: ID:abe-ThinkPad-T430s-55936-1434452370587-1:1:1:1:1
Without the {code}<policyEntry ... persistJMSRedelivery=true/>{code} I'm unable to reproduce this issue.",,gtully,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jun 26 10:51:11 UTC 2015,,,,,,,,,,,"0|i2ghtz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Jun/15 10:51;gtully;fix and test in http://git-wip-us.apache.org/repos/asf/activemq/commit/2c53dbcc;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Composite Send with useCache=false leaves messages pending till restart,AMQ-5863,12840510,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,25/Jun/15 11:37,25/Jun/15 11:53,14/Jul/23 05:44,25/Jun/15 11:53,5.11.0,,,,,,,,,5.12.0,,,,KahaDB,Message Store,,,,0,,,,,,"With a composite send, the message id is shared across destinations so the effect of the first store is visible to subsequent stores. This results in the message store considering the second send to be async in error. The relevant state in the message id needs to be reset prior to attempting a send.
It is sensible to copy the sequence Id state when a message id is copied so that acks can take advantage of the presence of the sequence id without reference to the store.",,gtully,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5585,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jun 25 11:53:06 UTC 2015,,,,,,,,,,,"0|i2ghjj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Jun/15 11:43;gtully;The fix reworks the fix for https://issues.apache.org/jira/browse/AMQ-5585 
a resend and composite send share the same issue with reuse of the messageId sequence state;;;","25/Jun/15 11:53;gtully;fix and test in http://git-wip-us.apache.org/repos/asf/activemq/commit/b6fea831

sequence id is cleared *before* store;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to create connection factory using jms:create,AMQ-5861,12840316,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,sobkowiak,sobkowiak,24/Jun/15 20:25,02/Nov/19 05:25,14/Jul/23 05:44,07/Sep/15 19:18,5.12.0,5.13.0,,,,,,,,5.12.1,5.13.0,,,OSGi/Karaf,,,,,1,,,,,,"I have installed successfully ActiveMQ on Karaf and tried to create a connection factory using {{jms:create}}

{code}
karaf@root()> feature:repo-add activemq 
Adding feature url mvn:org.apache.activemq/activemq-karaf/LATEST/xml/features
karaf@root()> feature:install activemq-broker-noweb activemq-blueprint jms 
Refreshing bundles org.apache.activemq.activemq-osgi (105)
karaf@root()> jms:create -t ActiveMQ --username karaf --password karaf --url tcp://localhost:61616 test1
{code}

The last operation fails with following error

{code}
2015-06-24 22:16:10,932 | ERROR | raf-3.0.3/deploy | BlueprintContainerImpl           | 15 - org.apache.aries.blueprint.core - 1.4.2 | Unable to start blueprint container for bundle connectionfactory-test1.xml
org.osgi.service.blueprint.container.ComponentDefinitionException: Error setting property: PropertyDescriptor <name: maxConnections, getter: class org.apache.activemq.jms.pool.PooledConnectionFactory.getMaxConnections(), setter: [class org.apache.activemq.jms.pool.PooledConnectionFactory.setMaxConnections(int)]
	at org.apache.aries.blueprint.container.BeanRecipe.setProperty(BeanRecipe.java:941)[15:org.apache.aries.blueprint.core:1.4.2]
	at org.apache.aries.blueprint.container.BeanRecipe.setProperties(BeanRecipe.java:907)[15:org.apache.aries.blueprint.core:1.4.2]
	at org.apache.aries.blueprint.container.BeanRecipe.setProperties(BeanRecipe.java:888)[15:org.apache.aries.blueprint.core:1.4.2]
	at org.apache.aries.blueprint.container.BeanRecipe.internalCreate2(BeanRecipe.java:820)[15:org.apache.aries.blueprint.core:1.4.2]
	at org.apache.aries.blueprint.container.BeanRecipe.internalCreate(BeanRecipe.java:787)[15:org.apache.aries.blueprint.core:1.4.2]
	at org.apache.aries.blueprint.di.AbstractRecipe$1.call(AbstractRecipe.java:79)[15:org.apache.aries.blueprint.core:1.4.2]
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)[:1.7.0_80]
	at org.apache.aries.blueprint.di.AbstractRecipe.create(AbstractRecipe.java:88)[15:org.apache.aries.blueprint.core:1.4.2]
	at org.apache.aries.blueprint.container.BlueprintRepository.createInstances(BlueprintRepository.java:245)[15:org.apache.aries.blueprint.core:1.4.2]
	at org.apache.aries.blueprint.container.BlueprintRepository.createAll(BlueprintRepository.java:183)[15:org.apache.aries.blueprint.core:1.4.2]
	at org.apache.aries.blueprint.container.BlueprintContainerImpl.instantiateEagerComponents(BlueprintContainerImpl.java:682)[15:org.apache.aries.blueprint.core:1.4.2]
	at org.apache.aries.blueprint.container.BlueprintContainerImpl.doRun(BlueprintContainerImpl.java:377)[15:org.apache.aries.blueprint.core:1.4.2]
	at org.apache.aries.blueprint.container.BlueprintContainerImpl.run(BlueprintContainerImpl.java:269)[15:org.apache.aries.blueprint.core:1.4.2]
	at org.apache.aries.blueprint.container.BlueprintExtender.createContainer(BlueprintExtender.java:294)[15:org.apache.aries.blueprint.core:1.4.2]
	at org.apache.aries.blueprint.container.BlueprintExtender.createContainer(BlueprintExtender.java:263)[15:org.apache.aries.blueprint.core:1.4.2]
	at org.apache.aries.blueprint.container.BlueprintExtender.modifiedBundle(BlueprintExtender.java:253)[15:org.apache.aries.blueprint.core:1.4.2]
	at org.apache.aries.util.tracker.hook.BundleHookBundleTracker$Tracked.customizerModified(BundleHookBundleTracker.java:500)[9:org.apache.aries.util:1.1.0]
	at org.apache.aries.util.tracker.hook.BundleHookBundleTracker$Tracked.customizerModified(BundleHookBundleTracker.java:433)[9:org.apache.aries.util:1.1.0]
	at org.apache.aries.util.tracker.hook.BundleHookBundleTracker$AbstractTracked.track(BundleHookBundleTracker.java:725)[9:org.apache.aries.util:1.1.0]
	at org.apache.aries.util.tracker.hook.BundleHookBundleTracker$Tracked.bundleChanged(BundleHookBundleTracker.java:463)[9:org.apache.aries.util:1.1.0]
	at org.apache.aries.util.tracker.hook.BundleHookBundleTracker$BundleEventHook.event(BundleHookBundleTracker.java:422)[9:org.apache.aries.util:1.1.0]
	at org.apache.felix.framework.util.SecureAction.invokeBundleEventHook(SecureAction.java:1103)[org.apache.felix.framework-4.2.1.jar:]
	at org.apache.felix.framework.util.EventDispatcher.createWhitelistFromHooks(EventDispatcher.java:695)[org.apache.felix.framework-4.2.1.jar:]
	at org.apache.felix.framework.util.EventDispatcher.fireBundleEvent(EventDispatcher.java:483)[org.apache.felix.framework-4.2.1.jar:]
	at org.apache.felix.framework.Felix.fireBundleEvent(Felix.java:4403)[org.apache.felix.framework-4.2.1.jar:]
	at org.apache.felix.framework.Felix.startBundle(Felix.java:2092)[org.apache.felix.framework-4.2.1.jar:]
	at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:955)[org.apache.felix.framework-4.2.1.jar:]
	at org.apache.felix.fileinstall.internal.DirectoryWatcher.startBundle(DirectoryWatcher.java:1245)[7:org.apache.felix.fileinstall:3.4.2]
	at org.apache.felix.fileinstall.internal.DirectoryWatcher.startBundles(DirectoryWatcher.java:1217)[7:org.apache.felix.fileinstall:3.4.2]
	at org.apache.felix.fileinstall.internal.DirectoryWatcher.doProcess(DirectoryWatcher.java:509)[7:org.apache.felix.fileinstall:3.4.2]
	at org.apache.felix.fileinstall.internal.DirectoryWatcher.process(DirectoryWatcher.java:358)[7:org.apache.felix.fileinstall:3.4.2]
	at org.apache.felix.fileinstall.internal.DirectoryWatcher.run(DirectoryWatcher.java:310)[7:org.apache.felix.fileinstall:3.4.2]
Caused by: java.lang.IllegalArgumentException: Unable to create EvictionPolicy instance of type org.apache.commons.pool2.impl.DefaultEvictionPolicy
	at org.apache.commons.pool2.impl.BaseGenericObjectPool.setEvictionPolicyClassName(BaseGenericObjectPool.java:607)
	at org.apache.commons.pool2.impl.GenericKeyedObjectPool.setConfig(GenericKeyedObjectPool.java:257)
	at org.apache.commons.pool2.impl.GenericKeyedObjectPool.<init>(GenericKeyedObjectPool.java:111)
	at org.apache.commons.pool2.impl.GenericKeyedObjectPool.<init>(GenericKeyedObjectPool.java:86)
	at org.apache.activemq.jms.pool.PooledConnectionFactory.initConnectionsPool(PooledConnectionFactory.java:89)
	at org.apache.activemq.jms.pool.PooledConnectionFactory.getConnectionsPool(PooledConnectionFactory.java:496)
	at org.apache.activemq.jms.pool.PooledConnectionFactory.setMaxConnections(PooledConnectionFactory.java:396)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)[:1.7.0_80]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)[:1.7.0_80]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)[:1.7.0_80]
	at java.lang.reflect.Method.invoke(Method.java:606)[:1.7.0_80]
	at org.apache.aries.blueprint.utils.ReflectionUtils$MethodPropertyDescriptor.internalSet(ReflectionUtils.java:628)[15:org.apache.aries.blueprint.core:1.4.2]
	at org.apache.aries.blueprint.utils.ReflectionUtils$PropertyDescriptor.set(ReflectionUtils.java:378)[15:org.apache.aries.blueprint.core:1.4.2]
	at org.apache.aries.blueprint.container.BeanRecipe.setProperty(BeanRecipe.java:939)[15:org.apache.aries.blueprint.core:1.4.2]
	... 31 more
Caused by: java.lang.ClassNotFoundException: org.apache.commons.pool2.impl.DefaultEvictionPolicy
	at java.net.URLClassLoader$1.run(URLClassLoader.java:366)[:1.7.0_80]
	at java.net.URLClassLoader$1.run(URLClassLoader.java:355)[:1.7.0_80]
	at java.security.AccessController.doPrivileged(Native Method)[:1.7.0_80]
	at java.net.URLClassLoader.findClass(URLClassLoader.java:354)[:1.7.0_80]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)[:1.7.0_80]
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)[:1.7.0_80]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)[:1.7.0_80]
	at java.lang.Class.forName0(Native Method)[:1.7.0_80]
	at java.lang.Class.forName(Class.java:278)[:1.7.0_80]
	at org.apache.commons.pool2.impl.BaseGenericObjectPool.setEvictionPolicyClassName(BaseGenericObjectPool.java:598)
	... 44 more
{code}

ActiveMQ 5.11.1 works with no problem","ActiveMQ 5.12-SNAPSHOT, Karaf 4.0.0, Karaf 3.0.3",githubbot,jbonofre,lichtin,sobkowiak,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5944,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Sep 07 19:18:05 UTC 2015,,,,,,,,,,,"0|i2ggd3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Jun/15 05:45;jbonofre;It sounds like we have to install commons-pool2 bundle. Let me take a look.;;;","10/Aug/15 21:39;sobkowiak;The {{commons-pool2}} bundle is installed (as part of {{activemq-client}} feature) and the package containing the missing class is exported by the bundle

{code}
karaf@root()> exports | grep org.apache.commons.pool2.impl
org.apache.commons.pool2.impl                          | 2.3.0                              | 100 | org.apache.commons.pool2 
{code}

Moreover, it seems to be correctly resolved by the {{activemq-osgi}} bundle

{code}
karaf@root()> imports | grep org.apache.commons.pool2.impl
(&(osgi.wiring.package=org.apache.commons.pool2.impl)(version>=2.3.0)(!(version>=3.0.0)))                         | optional | 104 | org.apache.activemq.activemq-osgi                           | true 
{code};;;","10/Aug/15 22:26;sobkowiak;The problem seems to be introduced in Commons Pool 2.3.0 by this change https://github.com/apache/commons-pool/commit/3a3e763c90aa6bc04a0537b4480f9e005a45ba22. After the change the evictionPolicyClass is loaded using the ContextClassLoader. The problem has been probably solved by this change https://github.com/apache/commons-pool/commit/b10ac03321076bb6a71fac9d2124220abdbbcd3c which is available in 2.4.0.;;;","10/Aug/15 22:28;sobkowiak;I have replaced Commons Pool 2.3.0 by 2.4.2 (2.4.0 has another problem) and it solved the problem. Commons Pool needs to be upgraded to 2.4.2.;;;","11/Aug/15 04:47;githubbot;GitHub user sobkowiak opened a pull request:

    https://github.com/apache/activemq/pull/139

    AMQ-5861: Unable to create connection factory using jms:create

    This is a patch for 5.12.x. Please see https://issues.apache.org/jira/browse/AMQ-5861 for details. Please merge this change to master as well.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/sobkowiak/activemq AMQ-5861

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/139.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #139
    
----
commit 4e073f5b6eebc12c619db4c11bd5ef4565467a55
Author: Krzysztof Sobkowiak <krzys.sobkowiak@gmail.com>
Date:   2015-08-11T04:42:37Z

    AMQ-5861: Unable to create connection factory using jms:create

----
;;;","04/Sep/15 16:09;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/139
;;;","04/Sep/15 16:15;tabish;The commons-pool2 dep has been updated, please resolve this if the issue is now fixed.;;;","07/Sep/15 19:18;sobkowiak;Tested with current {{5.12.x}} and {{master}} snapshots on Karaf {{3.0.4}} and {{4.0.0}}. The problem seems to be fixed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Reconnection attempt logic seems wrong in JmsConnector#doInitializeConnection,AMQ-5859,12839891,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,benoitw,benoitw,23/Jun/15 16:49,29/Nov/16 16:46,14/Jul/23 05:44,30/Jun/15 17:01,5.10.2,5.11.1,,,,,,,,5.12.0,,,,Broker,,,,,1,,,,,,"the reconnection attempts logic  based on the reconnection policy seems wrong.

In JmsConnector#doInitializeConnection the loop trying to reconnect to the foreign broker only execute once due to the erroneous test in the while
{code}
while (maxRetries < ++attempt && !connectionSerivce.isTerminating());
{code}
should be
{code}
while (maxRetries > ++attempt && !connectionSerivce.isTerminating());
{code}
",,apanvalkar,benoitw,githubbot,pmouawad,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jun/15 18:24;benoitw;0001-AMQ-5859-Reconnection-attempt-logic-seems-wrong-in-J.patch;https://issues.apache.org/jira/secure/attachment/12741346/0001-AMQ-5859-Reconnection-attempt-logic-seems-wrong-in-J.patch",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Patch,,,,,,,,,9223372036854775807,,,Tue Nov 29 16:46:56 UTC 2016,,,,,,,Patch Available,,,,"0|i2ge73:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Jun/15 18:23;benoitw;patch from branch 5.10.X;;;","24/Jun/15 21:47;githubbot;GitHub user benbenw opened a pull request:

    https://github.com/apache/activemq/pull/122

    AMQ-5859 JmsConnector Reconnection logic seems wrong

    https://issues.apache.org/jira/browse/AMQ-5859

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/benbenw/activemq AMQ-5859

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/122.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #122
    
----
commit 1feaf75dd6e42d256e92b5432abe2219d4c65e40
Author: benbenw <benoit.wiart@gmail.com>
Date:   2015-06-24T21:45:53Z

    AMQ-5859 Reconnection attempt logic seems wrong in JmsConnector#doInitializeConnection

----
;;;","30/Jun/15 17:01;tabish;Added a fix based on the original patch that keeps the original idea of infinite retries if the max is set to -1 and also fixed an NPE case seen in the tests.  ;;;","26/Nov/16 01:09;apanvalkar;Hi All,

I am investigating an issue where in if the Database goes down we get closed connection errors for transactions through AMQ.

The setup we have is as per below:

Websphere 8557
AMQ 5.10.2
Datastore (SIBUS) for message persistence - oracle database

Just would like to know, if this issue talks about the same problem we are facing?

Any advice will be highly appreciated.

Thanks!
Aniruddh;;;","29/Nov/16 16:46;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/122
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error when sending message in webconsole: NoClassDefFoundError: javax/xml/bind/DatatypeConverter,AMQ-5858,12839853,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,cschneider,cschneider,23/Jun/15 14:12,25/Jun/15 04:01,14/Jul/23 05:44,25/Jun/15 04:01,5.11.1,,,,,,,,,5.11.2,5.12.0,,,Web Console,,,,,0,,,,,,"Install webconsole feature in karaf and send a message using the webconsole with default values. You will see the exception below.

The reason is a missing import package for javax.xml.bind.

-----

org.springframework.web.util.NestedServletException: Handler processing failed; nested exception is java.lang.NoClassDefFoundError: javax/xml/bind/DatatypeConverter
	at org.springframework.web.servlet.DispatcherServlet.triggerAfterCompletionWithError(DispatcherServlet.java:1260)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:939)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:851)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:953)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:855)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:829)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:808)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)
	at org.apache.activemq.web.AuditFilter.doFilter(AuditFilter.java:59)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:106)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:102)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
	at org.ops4j.pax.web.service.jetty.internal.HttpServiceServletHandler.doHandle(HttpServiceServletHandler.java:70)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
	at org.ops4j.pax.web.service.jetty.internal.HttpServiceContext.doHandle(HttpServiceContext.java:267)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.ops4j.pax.web.service.jetty.internal.JettyServerHandlerCollection.handle(JettyServerHandlerCollection.java:80)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:497)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)
	at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.NoClassDefFoundError: javax/xml/bind/DatatypeConverter
	at org.apache.activemq.web.WebClient.createWebClient(WebClient.java:375)
	at org.apache.activemq.web.WebClient.getWebClient(WebClient.java:105)
	at org.apache.activemq.web.controller.SendMessage.handleRequest(SendMessage.java:53)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:919)
	... 35 more
Caused by: java.lang.ClassNotFoundException: javax.xml.bind.DatatypeConverter not found by org.apache.activemq.activemq-web-console [62]
	at org.apache.felix.framework.BundleWiringImpl.findClassOrResourceByDelegation(BundleWiringImpl.java:1558)
	at org.apache.felix.framework.BundleWiringImpl.access$400(BundleWiringImpl.java:79)
	at org.apache.felix.framework.BundleWiringImpl$BundleClassLoader.loadClass(BundleWiringImpl.java:1998)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	... 40 more
",,cschneider,githubbot,jbonofre,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jun 25 04:01:28 UTC 2015,,,,,,,,,,,"0|i2gdyn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Jun/15 14:15;githubbot;GitHub user cschneider opened a pull request:

    https://github.com/apache/activemq/pull/120

    [AMQ-5858] add import package

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/cschneider/activemq AMQ-5858

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/120.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #120
    
----
commit 97b0619b26947c9170230e6969df13116f4a2463
Author: Christian Schneider <chris@die-schneider.net>
Date:   2015-06-23T14:14:31Z

    [AMQ-5858] add import package

----
;;;","24/Jun/15 04:17;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/120
;;;","24/Jun/15 04:17;jbonofre;Fixed on master: https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commitdiff;h=97b0619b26947c9170230e6969df13116f4a2463;;;","24/Jun/15 04:27;jbonofre;On activemq-5.11.x, we have an another error even with the fix:

{code}
javax.jms.JMSException: Cannot add a producer to a session that had not been registered: ID:latitude-58030-1435119975729-1:1:1
	at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:54)
	at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1420)
	at org.apache.activemq.ActiveMQSession.syncSendPacket(ActiveMQSession.java:2018)
	at org.apache.activemq.ActiveMQMessageProducer.<init>(ActiveMQMessageProducer.java:124)
	at org.apache.activemq.ActiveMQSession.createProducer(ActiveMQSession.java:1048)
	at org.apache.activemq.web.WebClient.getProducer(WebClient.java:307)
	at org.apache.activemq.web.WebClient.send(WebClient.java:240)
	at org.apache.activemq.web.controller.SendMessage.sendMessages(SendMessage.java:77)
	at org.apache.activemq.web.controller.SendMessage.handleRequest(SendMessage.java:56)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:919)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:851)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:953)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:855)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:829)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:808)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)
	at org.apache.activemq.web.AuditFilter.doFilter(AuditFilter.java:59)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:106)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:102)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
	at org.ops4j.pax.web.service.jetty.internal.HttpServiceServletHandler.doHandle(HttpServiceServletHandler.java:70)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
	at org.ops4j.pax.web.service.jetty.internal.HttpServiceContext.doHandle(HttpServiceContext.java:267)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.ops4j.pax.web.service.jetty.internal.JettyServerHandlerCollection.handle(JettyServerHandlerCollection.java:80)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:497)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)
	at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.IllegalStateException: Cannot add a producer to a session that had not been registered: ID:latitude-58030-1435119975729-1:1:1
	at org.apache.activemq.broker.TransportConnection.processAddProducer(TransportConnection.java:599)
	at org.apache.activemq.command.ProducerInfo.visit(ProducerInfo.java:108)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:334)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:188)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:270)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)
{code};;;","25/Jun/15 04:01;jbonofre;Fixed on activemq-5.11.x: https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commitdiff;h=c4a83c9e084b81cc5a0d6c40816e229de9aac5c2;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Message content stored twice while sending,AMQ-5857,12839815,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,graben,graben,23/Jun/15 11:14,07/Apr/16 14:27,14/Jul/23 05:44,31/Jul/15 18:50,5.10.0,5.11.0,5.7.0,5.8.0,5.9.0,,,,,5.12.0,,,,JMS client,,,,,0,,,,,,The storeContent method in ActiveMQTextMessage does not clean text field after storing content. Therefor the message temporary exists twice which can lead to OOM problems for large or many text messages concurrently processing. ,,cshannon,githubbot,graben,jira-bot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-2103,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jul 31 18:50:45 UTC 2015,,,,,,,,,,,"0|i2gdqf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/Jun/15 16:08;cshannon;I don't think it is necessary to change this as there's already another method called {{storeContentAndClear()}} which does this and you can call the method after setting the text on the message if memory could be an issue.  I would be hesitent to change the default behavior to always clear out the text because then a call to {{getText}} on a TextMessage would require an additional decoding of the content.;;;","29/Jun/15 18:02;graben;Well, do you think anyone would call getText() anymore after calling setText()? I think calling storeContentAndClear() is not a good solution esspecially if your using JMS API (eg. camel-jms) and do not want to depend on ActiveMQ proprietary API. Why not use storeContentAndClear in beforeMarshall()?;;;","29/Jun/15 18:55;cshannon;You do make a good point about storeContentAndClear not being a great solution if you want to stick with a pure JMS client.  I wouldn't expect getText() to be called too often but I could see it being useful in some cases like if a client was logging full messages before or after a send.  

[~tabish121], What do you think? I could go either way on this. ;;;","29/Jun/15 22:02;tabish;I don't think it'd be a bad thing if the message cleared the content on marshal, however, it is possible that this could have some unintended consequences.  The broker and the client both share this code and on the client side it probably works fine, on the broker side there could be cases where we might see something go wrong when things like concurrent store and dispatch is enabled so changing this bit should be thoroughly tested.  ;;;","29/Jun/15 22:57;cshannon;Coming from the broker side, this change actually makes more sense to me as messages will be in memory longer term than a typical client where they go out of scope after being sent and are eligible for GC.

I can start testing this out tomorrow and see if anything obvious breaks (ie run through the full test suite, etc);;;","12/Jul/15 19:29;graben;Any test results yet?;;;","13/Jul/15 12:09;cshannon;Sorry, got side tracked a bit the past couple of weeks.  So, I ran through some tests locally and everything looked ok.  A full run on the CI server would still be needed though as some of the tests are unreliable when run locally for me so I'd want to run it on the CI server to make sure.

I guess I would defer to [~tabish121] on this.  Tim, do you think running through the existing test suite and seeing if anything fails is good enough for testing?;;;","13/Jul/15 15:24;tabish;I think that should show if there is an impact.  I think the change is safe other than the risk that the broker logs a message an causes the content to become unmarshaled which could cause compressed content to no longer be compressed but that seems unlikely.  ;;;","13/Jul/15 16:00;githubbot;GitHub user cshannon opened a pull request:

    https://github.com/apache/activemq/pull/134

    https://issues.apache.org/jira/browse/AMQ-5857

    Changing ActiveMQTextMessage to clear out the text field on marshal to
    a ByteSequence to prevent the data from being stored in memory twice.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/cshannon/activemq AMQ-5857

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/134.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #134
    
----
commit 4e10e046d42a2b794ef830517bfaf651562c970a
Author: Christopher L. Shannon (cshannon) <christopher.l.shannon@gmail.com>
Date:   2015-07-13T15:31:14Z

    https://issues.apache.org/jira/browse/AMQ-5857
    
    Changing ActiveMQTextMessage to clear out the text field on marshal to
    a ByteSequence to prevent the data from being stored in memory twice.

----
;;;","13/Jul/15 18:16;cshannon;[~tabish121],

I pushed up this small change so you can either test it or apply it and see what happens with the full CI build.  Something seems to be up with the PR Jenkins build though.  It failed again for this PR (while working locally) and someone else pushed a minor PR up today and the same thing happened.  It took 3 tries to get it to pass the tests.  I'll probably ping Gary to give him a heads up.;;;","30/Jul/15 17:44;jira-bot;Commit 84ec047d2ffdee9630f74bf939746cd5ff2d0e12 in activemq's branch refs/heads/master from [~christopher.l.shannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=84ec047 ]

https://issues.apache.org/jira/browse/AMQ-5857

Changing ActiveMQTextMessage to clear out the text field on marshal to
a ByteSequence to prevent the data from being stored in memory twice.
;;;","30/Jul/15 17:47;githubbot;Github user cshannon closed the pull request at:

    https://github.com/apache/activemq/pull/134
;;;","30/Jul/15 17:49;cshannon;Fix applied on master and will be included in 5.12.0;;;","31/Jul/15 17:20;cshannon;This fix has caused a test to fail: 

org.apache.activemq.camel.CamelVMTransportRoutingTest.testSendReceiveWithCamelRouteIntercepting

There appears to be a race condition.;;;","31/Jul/15 18:46;jira-bot;Commit 310c2bb05916811a25b84d76f11fb84b40087914 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=310c2bb ]

https://issues.apache.org/jira/browse/AMQ-5857

Fixing a potential race condition in the storeContent
method of ActiveMQTextMessage
;;;","31/Jul/15 18:50;cshannon;There was a race condition in the storeContext() method of ActiveMQTextMessage where in between checking the text field for null and writing the content of text to the stream, the text field was set to null.  A fix has been applied that caches the reference to the text string locally in the method to prevent having to synchronize.  I also tweaked a couple other methods with a similar change to prevent the same issue.

CamelVmTransportRoutingTest is now passing again.  I will double check with Jenkins tomorrow to make sure the test failure has been cleared up.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
allowLinkStealing option is not working when using mqtt over websocket ,AMQ-5856,12839385,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,tabish,rafael jeon,rafael jeon,21/Jun/15 05:04,29/Jun/15 22:37,14/Jul/23 05:44,29/Jun/15 22:37,5.11.1,,,,,,,,,5.12.0,,,,MQTT,,,,,0,,,,,,"A first tcp/ip connection is still alive even if a second client with the same clientId connects with allowLinkStealing as true.

There is a server log as follows in this scenario.

{code}jvm 1 | WARN | Stealing link for clientId abc From Connection Transport Conn ection to: MQTTSocket_12700349 –{code}

I tested this scenario by using hivemq websocket.
",,rafael jeon,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,http://stackoverflow.com/questions/30913815/is-it-possible-to-disconnect-old-mqtt-connection-with-same-client-id-in-server-s,,Important,,,,,,,,,9223372036854775807,,,Mon Jun 29 22:37:15 UTC 2015,,,,,,,,,,,"0|i2gb4n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/Jun/15 22:37;tabish;Fixed this issue along with several other problems with the existing MQTT over WebSocket implementation.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Duplicate messages when failover is done during prepare phase of two phase commit.,AMQ-5854,12839158,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,michael.s,michael.s,19/Jun/15 15:36,22/Nov/15 18:37,14/Jul/23 05:44,28/Sep/15 14:13,5.10.2,5.11.1,5.9.1,,,,,,,5.13.0,,,,Broker,JMS client,,,,1,,,,,,"Use case :
                With Spring DMLC, Read a jms message in a queue, produce a jms message in an output queue and write data in database.

Problem description :

                Due to hight CPU usage, the inactity monitor closes connections between clients and broker while 16 messages were processed.

{noformat}
2015-06-01 04:39:01,130 | WARN  | Transport Connection to: tcp://*** failed: org.apache.activemq.transport.InactivityIOException: Channel was inactive for too (>30000) long: tcp://*** | org.apache.activemq.broker.TransportConnection.Transport | ActiveMQ InactivityMonitor Worker
{noformat}
                15 messages are rolled back and redilevered to another consummer.

                In the log we got 15 warnings :
{noformat}
ActiveMQMessageConsumer   |WARN |jmsContainer-173|rolling back transaction (XID:***) post failover recovery. 1 previously delivered message(s) not replayed to consumer: ***
{noformat}
                But one message is not rolled back (the transaction commit) and is also redileverd to another consummer. So it's processed twice by two different consummers (two inserts in database and two output JMS messages generated) and is not deduplicated.

                In the activeMq log we got the message :

{noformat}
WARN  | Async error occurred:  | org.apache.activemq.broker.TransportConnection.Service | ActiveMQ Transport: tcp:///***
                       javax.jms.JMSException: Unmatched acknowledge: MessageAck {commandId = 6665, responseRequired = false, ackType = 2, consumerId = ID:***, firstMessageId = ID:***-50800-1433109620591-1:2:31356:1:1, lastMessageId = ID:***-50800-1433109620591-1:2:31356:1:1, destination = queue://***, transactionId = XID:[1096044365,globalId=47524f55505f3030303038736572766963657472616974656d656e7431363536373030343133,branchId=47524f55505f3030303038736572766963657472616974656d656e743137343737], messageCount = 1, poisonCause = null}; Could not find Message-ID ID:***-50800-1433109620591-1:2:31356:1:1 in dispatched-list (start of ack)
{noformat}

                For this duplicated message, the failover occur during prepare phase of commit :

{noformat}
[{2015/06/01 04:39:50,322 |FailoverTransport         |WARN |jmsContainer-152|Transport (tcp://***) failed, reason:  , attempting to automatically reconnect}]
org.apache.activemq.transport.InactivityIOException: Cannot send, channel has already failed: ***
                at org.apache.activemq.transport.AbstractInactivityMonitor.doOnewaySend(AbstractInactivityMonitor.java:297)
                at org.apache.activemq.transport.AbstractInactivityMonitor.oneway(AbstractInactivityMonitor.java:286)
                at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:85)
                at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:104)
                at org.apache.activemq.transport.failover.FailoverTransport.oneway(FailoverTransport.java:658)
                at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:68)
                at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
                at org.apache.activemq.ActiveMQConnection.doAsyncSendPacket(ActiveMQConnection.java:1321)
                at org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1315)
                at org.apache.activemq.ActiveMQSession.asyncSendPacket(ActiveMQSession.java:1933)
                at org.apache.activemq.ActiveMQSession.sendAck(ActiveMQSession.java:2099)
                at org.apache.activemq.ActiveMQSession.sendAck(ActiveMQSession.java:2094)
                at org.apache.activemq.ActiveMQMessageConsumer.acknowledge(ActiveMQMessageConsumer.java:1083)
                at org.apache.activemq.ActiveMQMessageConsumer$5.beforeEnd(ActiveMQMessageConsumer.java:1041)
                at org.apache.activemq.TransactionContext.beforeEnd(TransactionContext.java:202)
                at org.apache.activemq.TransactionContext.end(TransactionContext.java:409)
                at com.atomikos.datasource.xa.XAResourceTransaction.suspend(XAResourceTransaction.java:457)
                at com.atomikos.datasource.xa.XAResourceTransaction.prepare(XAResourceTransaction.java:608)
                at com.atomikos.icatch.imp.PrepareMessage.send(PrepareMessage.java:61)
                at com.atomikos.icatch.imp.PropagationMessage.submit(PropagationMessage.java:111)
                at com.atomikos.icatch.imp.Propagator$PropagatorThread.run(Propagator.java:87)
                at com.atomikos.icatch.imp.Propagator.submitPropagationMessage(Propagator.java:66)
                at com.atomikos.icatch.imp.ActiveStateHandler.prepare(ActiveStateHandler.java:173)
                at com.atomikos.icatch.imp.CoordinatorImp.prepare(CoordinatorImp.java:832)
                at com.atomikos.icatch.imp.CoordinatorImp.terminate(CoordinatorImp.java:1159)
                at com.atomikos.icatch.imp.CompositeTerminatorImp.commit(CompositeTerminatorImp.java:92)
                at com.atomikos.icatch.jta.TransactionImp.commit(TransactionImp.java:236)
                at com.atomikos.icatch.jta.TransactionManagerImp.commit(TransactionManagerImp.java:498)
                at com.atomikos.icatch.jta.UserTransactionImp.commit(UserTransactionImp.java:129)
                at org.springframework.transaction.jta.JtaTransactionManager.doCommit(JtaTransactionManager.java:1011)
                at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:755)
                at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:724)
                at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:257)
                at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1101)
                at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:995)
                at java.lang.Thread.run(Thread.java:761)
{noformat}

Our analysis :

                We think that the duplicate message is caused by the failover during the prepare phase of the commit so we modify the source code to reproduce the case.

                Our modifications in config to produce failovers:
                               broker : transport.useKeepAlive=false
                               client : wireFormat.maxInactivityDuration=5000


                We add Thread.sleep in the source code of org.apache.activemq.ActiveMQMessageConsumer to force failover to be done exactly where we think it causes problems :

{code:title=org.apache.activemq.ActiveMQMessageConsumer#acknowledge()|borderStyle=solid}                

                    public void acknowledge() throws JMSException {
                               clearDeliveredList();
                               waitForRedeliveries();
                               synchronized(deliveredMessages) {

                                   // BEGIN MODIFIED CODE
                                   LOG.warn(""start sleeping 20 seconds to test failover"");
                                   try{
                                       Thread.sleep(1000 * 20 );
                                   }catch (InterruptedException e){
                                       LOG.error(""Exception :"",e);
                                   }
                                   LOG.warn(""end sleeping 20 seconds to test failover"");
                                   // END MODIFIED CODE

                                   // Acknowledge all messages so far.
                                   MessageAck ack = makeAckForAllDeliveredMessages(MessageAck.STANDARD_ACK_TYPE);
                                   if (ack == null)
                                       return; // no msgs

                                   if (session.getTransacted()) {
                                       rollbackOnFailedRecoveryRedelivery();
                                       session.doStartTransaction();
                                       ack.setTransactionId(session.getTransactionContext().getTransactionId());
                                   }

                                   pendingAck = null;
                                    session.sendAck(ack);

                                   // Adjust the counters
                                   deliveredCounter = Math.max(0, deliveredCounter - deliveredMessages.size());
                                   additionalWindowSize = Math.max(0, additionalWindowSize - deliveredMessages.size());

                                   if (!session.getTransacted()) {
                                       deliveredMessages.clear();
                                   }
                               }
                    }
{code}                               
                
                With these changes on the configuration and the code, the problem is easily reproduced.

                We also try with transactedIndividualAck=true, and we add a Thread.sleep in the code :

{code:title=org.apache.activemq.ActiveMQMessageConsumer#registerSync()|borderStyle=solid}                
                    private void registerSync() throws JMSException {
                               session.doStartTransaction();
                               if (!synchronizationRegistered) {
                                   synchronizationRegistered = true;
                                   session.getTransactionContext().addSynchronization(new Synchronization() {
                                       @Override
                                       public void beforeEnd() throws Exception {
                                           if (transactedIndividualAck) {
                                               clearDeliveredList();
                                               waitForRedeliveries();
                                               synchronized(deliveredMessages) {
                                                   
                                                   // BEGIN MODIFIED CODE
                                                   LOG.warn(""start sleeping 20 seconds to test failover"");
                                                   try{
                                                       Thread.sleep(1000 * 20 );
                                                   }catch (InterruptedException e){
                                                       LOG.error(""Exception :"",e);
                                                   }
                                                   LOG.warn(""end sleeping 20 seconds to test failover"");
                                                   // END MODIFIED CODE                            

                                                   rollbackOnFailedRecoveryRedelivery();
                                               }
                                           } else {
                                               acknowledge();
                                           }
                                           synchronizationRegistered = false;
                                       }

                                       @Override
                                       public void afterCommit() throws Exception {
                                           commit();
                                           synchronizationRegistered = false;
                                       }

                                       @Override
                                       public void afterRollback() throws Exception {
                                           rollback();
                                           synchronizationRegistered = false;
                                       }
                                   });
                               }
                    }
{code}                                               
                With these modifications, we still get duplicates messages.

                We think that the problem is that the statement synchronized(deliveredMessages) prevents the call of clearDeliveredList() by another ActiveMQConnection thread that clears messages in progress.
                By adding logs we observe that a thread is waiting deliveredMessages ‘s lock in clearDeliveredList() method.

                
Question :
                
                We tried fixes described in https://issues.apache.org/jira/browse/AMQ-5068 and https://issues.apache.org/jira/browse/AMQ-3519 but it doesn’t help to solve our problem.
                Is there a workaround or a config parameter that can help to prevent this problem ?
                
                We are working on our side to find a correction. An option may be to force rolling back transaction if there is a failover during the prepare phase of commit in ConnectionStateTracker.restoreTransactions().


","Ubuntu or AIX
ActiveMQ 5.9.1 (problem is reproduced in 5.10.2 and 5.11.1)
Spring DMLC
XA transactions with atomikos 3.7.0 (problem is also reproduced with 3.9.15)
Persistent messages
Multithreading (this problem occur when there is at least 2 consummers on a queue)
",gtully,hakim.acharifi,jira-bot,michael.s,nannou9,tmielke,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Sep/15 14:03;hakim.acharifi;ActiveMQMessageConsumer-5.10.2-ModifyWithThreadSleep.java;https://issues.apache.org/jira/secure/attachment/12753991/ActiveMQMessageConsumer-5.10.2-ModifyWithThreadSleep.java","03/Sep/15 14:03;hakim.acharifi;ActiveMQMessageConsumer-5.11.1-ModifyWithThreadSleep.java;https://issues.apache.org/jira/secure/attachment/12753992/ActiveMQMessageConsumer-5.11.1-ModifyWithThreadSleep.java","03/Sep/15 14:03;hakim.acharifi;amq5854.tar.gz;https://issues.apache.org/jira/secure/attachment/12753990/amq5854.tar.gz",,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Sun Nov 22 18:37:16 UTC 2015,,,,,,,,,,,"0|i2g9qf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/Jun/15 16:19;michael.s;We think that our issue is related to issue AMQ-2590.

In the AMQ-2590 issue, only one phase commit transactions are rolled back in case of failover.

We change the ConnectionStateTracker code (in 5.10.2) to rollback others type of transaction (BEGIN and PREPARE).


{code:title=org.apache.activemq.state.ConnectionStateTracker.java|borderStyle=solid}
    private void restoreTransactions(Transport transport, ConnectionState connectionState) throws IOException {
        Vector<TransactionInfo> toRollback = new Vector<TransactionInfo>();
        for (TransactionState transactionState : connectionState.getTransactionStates()) {
            if (LOG.isDebugEnabled()) {
                LOG.debug(""tx: "" + transactionState.getId());
            }

            // rollback any completed transactions - no way to know if commit got there
            // or if reply went missing
            //
            if (!transactionState.getCommands().isEmpty()) {
                Command lastCommand = transactionState.getCommands().get(transactionState.getCommands().size() - 1);
                if (lastCommand instanceof TransactionInfo) {
                    TransactionInfo transactionInfo = (TransactionInfo) lastCommand;
                    if (transactionInfo.getType() == TransactionInfo.COMMIT_ONE_PHASE
                            // BEGIN MODIFIED CODE					
                            || transactionInfo.getType() == TransactionInfo.BEGIN
                            || transactionInfo.getType() == TransactionInfo.PREPARE
                            // END MODIFIED CODE							
                            ) {
                        if (LOG.isDebugEnabled()) {
                            LOG.debug(""rolling back potentially completed tx: "" + transactionState.getId());
                        }
                        toRollback.add(transactionInfo);
                        continue;
                    }
                }
            }
{code}

With this change we can not reproduce our duplicated messages issue.

Is there a specific reason why only one phase transactions are rolled back in AMQ-2590 ?

We are working on our side to provide a test case to reproduce the duplicated message issue.

Thanks.;;;","10/Aug/15 17:07;nannou9;Hi Michael!

1st of all thank you for your work you've done so far, it is very helpful.

So basing on your work, I was able to reproduce the problem with Atomikos 3.9.26 (which include important fix for rollback to fail) but also confirmed this problem to occur with Apache Geronimo transaction manger.
This proves that problem is purely ActiveMQ related.
I've also tested JBoss A-MQ 6.1 (5.9 based) and 6.2 (5.11 based)- all affected with same problem!

What is important to say here is that this problem will occur significantly more often on slow envs which prone to freeze/restart (virtual machines especially).

Let's see now what will happen and whether someone will grab that task.

Thanks
;;;","03/Sep/15 13:58;hakim.acharifi;In order to reproduce the AMQ5854 issue, we have created a maven project amq5854 (see the attached amq5854.tar.gz).

The abnormal behavior has been reproduced in 2 versions of AMQ : 5.10.2 and 5.11.1

The goal is to feign an overloaded CPU by modifying the activemq-client-xxx.jar with a sleep of 20 seconds during the consumption of the message.

Prerequisites to be able to reproduce the abnormal behavior :
-	Consumer : failover, wireFormat.maxInactivityDuration=5000 and RedeliveryPolicy with a maximumRedeliveries of 3 times
-	Broker : transport.useKeepAlive=false
-	activemq-client-xxx.jar : add Thread.sleep(20*1000) on the org.apache.activemq.ActiveMQMessageConsumer (see the attached sources) 


Use case :
 
A producer send a message to the INPUT_QUEUE queue on an embedded broker.
Then a consumer implemented by a Spring Listener consume this message from the INPUT_QUEUE, transform it and send it to another queue (OUTPUT_QUEUE).
The read from INPUT_QUEUE and the write to OUTPUT_QUEUE are included in a same transaction XA.

With the activemq-client modification, the consumption of the message is superior of 20 seconds and the maxInactivatyDuration for the consumer is 5 seconds.
Hence, we will be always in the case where an InactivityIOException prevent the arrival of the message on the OUTPUT_QUEUE because of the rollback transaction request.
So the expected result is to have 1 message in DLQ (Dead Letter Queue) and no message in the OUTPUT_QUEUE.
But due to the abnormal behavior, Activemq do not rollback the write on the OUTPUT_QUEUE. 
So After 3 retries,  we have 1 message on DLQ and  3 duplicate messages on the OUTPUT_QUEUE.

;;;","03/Sep/15 14:03;hakim.acharifi;maven project amq5854 and the modified activemq-client-xxx.jar ;;;","23/Sep/15 15:58;gtully;[~michael.s] the intent of the tracker to to maintain the transaction state, and recover it, if it can. If the commit request gets a failure then it is impossible to know if the message got there or if the reply was lost so notifying the client is the only option. Otherwise failover can try and recreate the transaction state and allow it to complete.
In hindsight, trying to maintain transaction semantics across failover (especially in the context of multiple consumers) seems too complex.
I want to investigate the fix for this issue and see if it is better to implement the fix or remove this feature altogether and just rollback any indoubt transaction on failover.;;;","28/Sep/15 13:41;jira-bot;Commit 8d982479e9a5579fc3f6da04109a1b3ef69431eb in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=8d98247 ]

https://issues.apache.org/jira/browse/AMQ-5854 - fix and test. Ensure transaction rollback if there are pending acks during a failover reconnect. Reliably tracking pending acks to eusure possible redelivery is too complex in the context of acks getting dropped by failover or ignored by the subscription, in addition to being sent async. Couple that with multiple consumers on the same connection and the locking of message delivery; only safe course is to ensure rollback outcome.
;;;","28/Sep/15 14:13;gtully;I have implemented a rollback only option on the transaction context that is triggered by a failover, the initial disconnect that will trigger a reconnect.
If there are pending acks, so messages that need an ack in the transaction, a rollback is forced. This seems the only sensible option.
There is a new unit test that simulates a delayed or slow ack, consumer side, with an additional transaction synchronization and can reliably reproduce the missed ack.;;;","28/Sep/15 14:43;nannou9;Excellent news!
Thanks Gary!;;;","29/Sep/15 12:15;jira-bot;Commit 92e1f60d984d0e29eade47dbb6d2d30d838254c2 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=92e1f60 ]

https://issues.apache.org/jira/browse/AMQ-5854 - tidy up test
;;;","30/Sep/15 09:05;hakim.acharifi;Thanks Gary for fixing this issue !

Looks okay to us.;;;","30/Sep/15 10:25;gtully;good to know. thank for the verification;;;","30/Sep/15 10:41;jira-bot;Commit fc25535748fb8dbaea588203086c4802d1ccf091 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=fc25535 ]

https://issues.apache.org/jira/browse/AMQ-5854 - fix intermittent test failure
;;;","22/Nov/15 18:37;jira-bot;Commit de5d0d9430838948196f573c5278c75fbee9f25e in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=de5d0d9 ]

https://issues.apache.org/jira/browse/AMQ-5854

Fix intermittent test failure caused by the test reconnecting before
the failure assertion had a chance to assert the expected failure
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
JDBC store - pending high priority messages batch cannot be consumed after low priority message batch ,AMQ-5853,12839153,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,gtully,gtully,gtully,19/Jun/15 15:05,22/Jan/16 22:46,14/Jul/23 05:44,06/Jul/15 14:40,5.11.0,,,,,,,,,5.12.0,,,,JDBC,Message Store,,,,0,,,,,,"With priority message enabled a batch of low priority messages can leave the cursor unable to load subsequent high priority messages.
More visible when useCache=false.
A new consumer or browse will not be able to see pending messages.

Issue occurs after dispatch of low priority messages, an empty store and the addition of high priority messages.",,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4489,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jul 09 09:34:18 UTC 2015,,,,,,,,,,,"0|i2g9pj:",9223372036854775807,Regression,,,,,,,,,,,,,,,,,,,,"19/Jun/15 15:12;gtully;fix in http://git-wip-us.apache.org/repos/asf/activemq/commit/f2a335c2

a next message can have >= last recovered priority and be in sequence or not be in sequence if it has lower priority.

setter for two statements was missing so not possible to configure via xml. Sorted now.;;;","02/Jul/15 21:07;gtully;There is a problem with the fix, higher priority messages that are dispatched but where the ack has not yet committed are pulled from the store in error and are suppressed as duplicates, filling up the DLQ. This is not good.
Am working on a fix.;;;","03/Jul/15 10:07;gtully;The underlying issue was the tracked last recovered priority. This needed to be reset in the presence of newly added higher priority messages.
Fix and updated tests in http://git-wip-us.apache.org/repos/asf/activemq/commit/eece28ac
;;;","06/Jul/15 13:43;gtully;this needs yet another revisit. long lived transactions show that the limitations of the current approach. The message store needs to keep track of the last recovered sequence on a per priority basis, in a similar manner to the topic store. Having the db select from all available messages seems like the simplest solution b/c the priorities via jms are limited to 0-9 ;;;","06/Jul/15 14:40;gtully;fix and additional test in: http://git-wip-us.apache.org/repos/asf/activemq/commit/a2697b84

select clause is now explicit for each [0-9] supported priority wit the store tracking the last recovered sequence.;;;","09/Jul/15 09:34;gtully;additional fix and test - both kahadb and jdbc stores needed fixes for cacheEnabled case - http://git-wip-us.apache.org/repos/asf/activemq/commit/3985e722;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Unmatched acknowledge: MessageAck {commandId = 77, responseRequired = false, ackType = 2, ...Could not find Message-ID XXX in dispatched-list (start of ack)",AMQ-5851,12838767,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,grijesh.saini,grijesh.saini,18/Jun/15 11:43,09/Jul/15 16:20,14/Jul/23 05:44,09/Jul/15 16:04,5.10.0,5.11.0,5.11.1,,,,,,,5.12.0,,,,JMS client,,,,,1,ttl,,,,,"When lot of messages got expired because of JMS client Time to Live (TTL) property then below error will appear and consumer will freeze

{code:xml}
 Connection to broker failed: Unmatched acknowledge: MessageAck {commandId = 77, responseRequired = false, ackType = 2, consumerId =XXX firstMessageId = ID:XXX
 lastMessageId = ID:XXX
, destination = queue://abc, transactionId = null, messageCount = 1, poisonCause = null}; Could not find Message-ID in dispatched-list (start of ack)
         at org.apache.activemq.broker.region.PrefetchSubscription.assertAckMatchesDispatched(PrefetchSubscription.java:477) [activemq-broker-5.11.1.jar:5.11.1
 at org.apache.activemq.broker.region.PrefetchSubscription.acknowledge(PrefetchSubscription.java:212) [activemq-broker-5.11.1.jar:5.11.1]
 at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:441) [activemq-broker-5.11.1.jar:5.11.1]
 at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:484) [activemq-broker-5.11.1.jar:5.11.1]
 at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:87) [activemq-broker-5.11.1.jar:5.11.1]
 at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:87) [activemq-broker-5.11.1.jar:5.11.1]
 at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:277) [activemq-broker-5.11.1.jar:5.11.1]
 at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:97) [activemq-broker-5.11.1.jar:5.11.1]
 at org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:550) [activemq-broker-5.11.1.jar:5.11.1]
 at org.apache.activemq.command.MessageAck.visit(MessageAck.java:245) [activemq-client-5.11.1.jar:5.11.1]
 at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:334) [activemq-broker-5.11.1.jar:5.11.1]
 at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:188) [activemq-broker-5.11.1.jar:5.11.1]
 at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50) [activemq-client-5.11.1.jar:5.11.1]
 at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113) [activemq-client-5.11.1.jar:5.11.1]
 at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:270) [activemq-client-5.11.1.jar:5.11.1]
 at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83) [activemq-client-5.11.1.jar:5.11.1]
 at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214) [activemq-client-5.11.1.jar:5.11.1]
 at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196) [activemq-client-5.11.1.jar:5.11.1]
 at java.lang.Thread.run(Thread.java:745) [rt.jar:1.8.0_25]
{code}


Steps to reproduce :
1. Enable TTL property for JMS client
2. Keep TTL value very low say 5 sec
3. Send lot of messages so some message will get expired
4. Make sure that some message should expired when they are in MDB means running inside MDB


Then we will see above error in the logs",,cshannon,githubbot,grijesh.saini,gtully,homes2001,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5476,,,,,,,,,,,,,,"19/Jun/15 07:35;grijesh.saini;AcknowledgeIssue.zip;https://issues.apache.org/jira/secure/attachment/12740594/AcknowledgeIssue.zip",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jul 09 16:20:47 UTC 2015,,,,,,,,,,,"0|i2g7dj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Jun/15 12:48;tabish;Recommend you create a unit test to reproduce.  ;;;","19/Jun/15 07:36;grijesh.saini;[~tabish121]

Hi Timothy I attached the test case project which will be able to replicate given issue.

Please find README.txt inside zip file to run the test case .
As it is only happening when we are using resource adapter so I created a small ear file with a junit test case.

Please let me know if you will face any issue while running above project.;;;","19/Jun/15 11:26;cshannon;[~grijesh.saini], Thanks for uploading a test case.  I'll take a look at this when I get a chance.;;;","19/Jun/15 12:17;grijesh.saini;[~christopher.l.shannon]

Yes sure Christopher, Thanks.;;;","21/Jun/15 02:25;cshannon;[~gtully] and [~tabish121],

Sorry in advance for the long message but this is a kind of complicated issue and was pretty hard to track down.

There is a race condition of sorts and it is caused by the unique circumstances of this test case and the environment.  The short version is that message acks are being received out of order due to messages being handled concurrently in different threads.  Sometimes this causes an exception because by the time some of the acks are received by the broker, the broker has already expired the messages so the acknowledgement check fails.  This is happening in Wildfly because the container is creating a pool of threads to handle multiple messages at the same time (ie ServerSession pool).  This is unique to application servers because of the use of a ConnectionConsumer and ServerSessions so multiple threads can handle messages from 1 consumer.

What's going on is as a message producer is sending messages to the broker with a TTL value set at 10 milliseconds, the Wildfly consumer is quickly dequeing messages in parallel.  The run() method in ActiveMQSession is being executed for each new message in different threads.  The first thing that happens is the message is checked to see if it has expired (around line 885 of ActiveMQSession).  If it's not expired, then the code continues on and the messageListener (in this case the MDB) eventually runs (around line 1037). The example that was submitted here has the MDB sleeping for 1 second which is  longer than the TTL of the messages being sent.  So a bunch of threads are sleeping for 1 second and then when they are finished the run() method continues on and at the end sends a normal acknowledgement back to the broker in the finally block (around line 1052)

However, as the ConnectionConsumer is rapidly consuming more messages and dispatching to different Sessions, eventually one of the threads runs into a message that is expired because the time out period is so short.  Since the message is expired, it is acked early and sent to the broker.  The MDB never fires when the message is expired.   This triggers the broker to iterate through all of the dispatched messages and to expire ones that it can.  This happens in the PrefetchSubscription class around line 325 when an expired Ack is received.  So, all of the messages that were dispatched essentially get removed from that dispatch list since all of the messages are expired.  Then, when some of the threads in Wildfly finish sleeping they continue on and get around to sending back an ack.  Except that by the time this acknowledgement is sent to the broker, the messages have already been expired because the thread that detected the expired message already sent an expired ack to the broker so the message attempting to be acked doesn't exist in the dispatched list.

Below is a printout from my log file with some extra debug statements that I added.  The ""handling message"" line is a debug statement that I added to print right after a message is dequeued in the run() method.  You can see multiple threads executing at the same time in Wildfly.  ""Expired Message"" prints out when a message is detected as being expired. ""Sending Ack"" prints out when the thread finishes the normal execution and sends a normal ack back to the broker.  As you can see below, we run into trouble when the thread handling the 4th message finishes and sends an acknowledgement to the broker.  During the period of time that the thread handling message 4 was sleeping for 1 second, 13 other messages were handled in parallel.  Just before thread 4 finished, one of the other threads had detected that message 13 expired and sent back an expiration ack which triggered all of the acks to be expired(including message 4) so by the time the ack for the 4th message reached the broker that message was already removed from the dispatch list and we get an exception.

So, as far as solutions go, I'm not sure what the best approach would be.  This situation could happen anytime messages are processed slowly in parallel and there is a TTL set.  Obviously one work around is to not concurrently process messages off the same subscription but that is pretty common with MDBs and application servers.  One solution could be to check a second time to see if the message has expired after the messageListener has been called and send an expired ack instead of a normal ack in that case.  But we'd need to change the server logic to not fail if it couldn't find the message to ack because it was already expired.  I think another solution could be to keep track of of which messages have already been expired on a subscription for some window of time so that so that if an acknowledgement comes later it could be detected as being for an expired message and no error would be thrown.  What do you guys thing?  I can work on a PR and introduce a fix but wanted to discuss what you thought would be the best approach.

{noformat}
20:20:52,347 INFO  [org.apache.activemq.ra.ActiveMQEndpointWorker] (default-threads - 1) Successfully established connection to broker [tcp://localhost:61616]
20:21:00,745 INFO  [stdout] (default-threads - 2) handling message: ID:localhost.localdomain-53475-1434846046033-2:1:1:3:1
20:21:00,747 INFO  [stdout] (default-threads - 2) Expired Ack (ActiveMQSession) for: null,ID:localhost.localdomain-53475-1434846046033-2:1:1:3:1
20:21:00,763 INFO  [stdout] (default-threads - 3) handling message: ID:localhost.localdomain-53475-1434846046033-2:1:1:4:1
20:21:00,868 INFO  [stdout] (default-threads - 4) handling message: ID:localhost.localdomain-53475-1434846046033-2:1:1:5:1
20:21:00,980 INFO  [stdout] (default-threads - 5) handling message: ID:localhost.localdomain-53475-1434846046033-2:1:1:6:1
20:21:01,087 INFO  [stdout] (default-threads - 6) handling message: ID:localhost.localdomain-53475-1434846046033-2:1:1:7:1
20:21:01,199 INFO  [stdout] (default-threads - 7) handling message: ID:localhost.localdomain-53475-1434846046033-2:1:1:8:1
20:21:01,315 INFO  [stdout] (default-threads - 8) handling message: ID:localhost.localdomain-53475-1434846046033-2:1:1:9:1
20:21:01,316 INFO  [stdout] (default-threads - 8) Expired Ack (ActiveMQSession) for: null,ID:localhost.localdomain-53475-1434846046033-2:1:1:9:1
20:21:01,423 INFO  [stdout] (default-threads - 9) handling message: ID:localhost.localdomain-53475-1434846046033-2:1:1:10:1
20:21:01,539 INFO  [stdout] (default-threads - 10) handling message: ID:localhost.localdomain-53475-1434846046033-2:1:1:11:1
20:21:01,655 INFO  [stdout] (default-threads - 11) handling message: ID:localhost.localdomain-53475-1434846046033-2:1:1:12:1
20:21:01,768 INFO  [stdout] (default-threads - 12) handling message: ID:localhost.localdomain-53475-1434846046033-2:1:1:13:1
20:21:01,806 INFO  [stdout] (default-threads - 12) Expired Ack (ActiveMQSession) for: null,ID:localhost.localdomain-53475-1434846046033-2:1:1:13:1
20:21:01,809 INFO  [stdout] (default-threads - 3) Hello world!3
20:21:01,810 INFO  [stdout] (default-threads - 3) Sending Ack (ActiveMQSession line 1010) for: 2; ID:localhost.localdomain-53475-1434846046033-2:1:1:4:1,ID:localhost.localdomain-53475-1434846046033-2:1:1:4:1
20:21:01,872 INFO  [stdout] (default-threads - 4) Hello world!4
20:21:01,872 INFO  [stdout] (default-threads - 4) Sending Ack (ActiveMQSession line 1010) for: 2; ID:localhost.localdomain-53475-1434846046033-2:1:1:5:1,ID:localhost.localdomain-53475-1434846046033-2:1:1:5:1
20:21:01,874 INFO  [stdout] (default-threads - 13) handling message: ID:localhost.localdomain-53475-1434846046033-2:1:1:14:1
20:21:01,888 ERROR [org.apache.activemq.ra.ActiveMQEndpointWorker] (ActiveMQ Connection Executor: tcp://localhost/127.0.0.1:61616@43165) Connection to broker failed: Unmatched acknowledge: MessageAck {commandId = 16, responseRequired = false, ackType = 2, consumerId = ID:localhost.localdomain-46056-1434846051491-1:1:-1:2, firstMessageId = ID:localhost.localdomain-53475-1434846046033-2:1:1:4:1, lastMessageId = ID:localhost.localdomain-53475-1434846046033-2:1:1:4:1, destination = queue://TEST.FOO, transactionId = null, messageCount = 1, poisonCause = null}; Could not find Message-ID ID:localhost.localdomain-53475-1434846046033-2:1:1:4:1 in dispatched-list (start of ack): javax.jms.JMSException: Unmatched acknowledge: MessageAck {commandId = 16, responseRequired = false, ackType = 2, consumerId = ID:localhost.localdomain-46056-1434846051491-1:1:-1:2, firstMessageId = ID:localhost.localdomain-53475-1434846046033-2:1:1:4:1, lastMessageId = ID:localhost.localdomain-53475-1434846046033-2:1:1:4:1, destination = queue://TEST.FOO, transactionId = null, messageCount = 1, poisonCause = null}; Could not find Message-ID ID:localhost.localdomain-53475-1434846046033-2:1:1:4:1 in dispatched-list (start of ack)
{noformat}
;;;","23/Jun/15 11:46;gtully;[~christopher.l.shannon] great detail ;-). Seems that the broker reaction to the expiredAck is excessive. maybe that should be treated as a single/individual ack and just remove the single message that has expired, it can check the count attribute to ensure it should match a single message. Currently in prefetchsub there is a check on all dispatched messages which seems excessive in this scenario. I think that is the crux of the problem.

For a long time, there was no message expiry processing thread so the only checks were on dispatch, it seems when there is periodic expiry some of the additional checks are candidates from removal.;;;","23/Jun/15 14:13;cshannon;It seems like switching the logic to only remove the message or messages that the ack refers to might be the best way to go. The rest of the acknowledgements seem to work like this already so it seems like a good idea to make them behave the same.

Besides expiring pending messages waiting to be dispatched, does the expiry task also look at dispatched messages? ;;;","23/Jun/15 14:25;gtully;the expiry task does not deal with dispatched messages. that was sorted via : https://issues.apache.org/jira/browse/AMQ-5274?focusedCommentId=14130650&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14130650;;;","23/Jun/15 14:56;cshannon;I can work on a patch for this for this week.  Some of the users that connect to the brokers that my team manages use message driven beans so it would be nice to try and get this sorted out in time for 5.12.0.;;;","25/Jun/15 18:41;githubbot;GitHub user cshannon opened a pull request:

    https://github.com/apache/activemq/pull/123

    https://issues.apache.org/jira/browse/AMQ-5851

    This commit resolves an issue where unmatched acknowledgement
    messages could be received when running a MDB consumer and
    sending messages with a short TTL.  The expiration logic when
    receiveing an expired Message Ack will now only expire messages
    in dispatch relating to the received ack, not all expired messages
    in the dispatch list.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/cshannon/activemq AMQ-5851

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/123.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #123
    
----
commit 1bce29ac6f55394fa9ebf2ee347dcde415bac7e0
Author: Christopher L. Shannon (cshannon) <christopher.l.shannon@gmail.com>
Date:   2015-06-25T18:22:32Z

    https://issues.apache.org/jira/browse/AMQ-5851
    
    This commit resolves an issue where unmatched acknowledgement
    messages could be received when running a MDB consumer and
    sending messages with a short TTL.  The expiration logic when
    receiveing an expired Message Ack will now only expire messages
    in dispatch relating to the received ack, not all expired messages
    in the dispatch list.

----
;;;","25/Jun/15 18:43;cshannon;I created a pull request to address this issue and to update the expired ack to only expire the messages in dispatched relating to the ack, and not all expired messages.  I added a unit test that simulates the issue with how it would be run in an application container.  The test passes with my patch but fails without it.  Take a look and let me know what you think.;;;","26/Jun/15 09:55;gtully;[~christopher.l.shannon] the changes look good - however I did a sanity check with some tests and the first one I tried - org.apache.activemq.JMSConsumerTest#testMessageListenerWithConsumerCanBeStoppedConcurently had a failure that seems related.
Can you investigate and possibly validate with a full test run of the unit tests.;;;","26/Jun/15 11:12;cshannon;[~gtully],  
 
Thanks for pointing that out, my logic was slightly off when I tried to move the isAckRange check into a helper method, so I will back that part of the patch out.

I had run through a bunch of tests already that I could find relating to expired messages and they had passed but of course there are a lot of tests.  The JMSConsumerTest seems like a good one to run for a sanity check though.

I'll go ahead and do a full run through all the tests and amend my pull request if everything looks good.;;;","26/Jun/15 11:28;gtully;great. A good trick is to poke around the git annotations in the code you are changing to find relevant commits and corresponding tests. That is why I chose JMSConsumerTest. 
This does point to the need to have some good sanity tests in the PR build.;;;","26/Jun/15 18:52;cshannon;Thanks Gary, that's a good point.  I pushed up my modified PR.  The tests have been running for 6+ hours and I think it is good to go.  There were a couple that failed but those tests always fail on my machine so it doesn't have anything to do with the patch.  For example, TopicClusterTest always fails for me but seems to work fine in the Apache Jenkins setup.

I agree it would be nice to run some sanity tests that hit core parts of the code base on the PR build, just as long as the build isn't too long, maybe something that can run in 15 or 20 minutes.;;;","09/Jul/15 15:48;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/123
;;;","09/Jul/15 16:04;gtully;patch applied with thanks to cshannon in http://git-wip-us.apache.org/repos/asf/activemq/commit/f10aab64;;;","09/Jul/15 16:20;grijesh.saini;[~christopher.l.shannon] [~gtully]

Thank you for the fix :)
;;;",,,,,,,,,,,,,,,,,,,,,,,
The noLocal state for a durable subscription is not stored and recovered.,AMQ-5848,12838315,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,16/Jun/15 21:57,08/Jul/15 21:45,14/Jul/23 05:44,08/Jul/15 21:45,5.10.0,5.10.1,5.10.2,5.11.0,5.11.1,,,,,5.12.0,,,,AMQP,Broker,JMS client,KahaDB,,0,,,,,,"The broker does not store the noLocal value as part of the SubscriptionInfo object that represents stored durable subscriptions.  This means that on restart the value for previous subscriptions is not recovered from the store which means we can fail tests for this bit in the JMS spec:

{quote}
If an unshared durable subscription already exists with the same name and client identifier but a different topic, message selector or noLocal value has been specified, and there is no consumer already active (i.e. not closed) on the durable subscription then this is equivalent to unsubscribing (deleting) the old one and creating a new one. 
{quote}

This also means that an AMQP receiver that tries to recover a previous durable subscription won't be able to validate the remote Source to validate that its state matches the requested subscription configuration. ",,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jul 08 21:45:54 UTC 2015,,,,,,,,,,,"0|i2g4nj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Jun/15 18:32;tabish;Initial work introduces OpenWire v11 which adds the noLocal value to the SubscriptionInfo command.  This allows the store to persist the complete subscription information.  KahaDB can be configured on what version of the OpenWire marshallers to use via the setStoreOpenWireVersion accessor (default is currently v6).;;;","07/Jul/15 14:45;tabish;The final bit of this is to up the openwire version that we use in the KahaDB store to v11, current default is v6.  This would cause any existing stores that people tried to reuse when updating the broker (not recommended but people do it).  We currently do track the version used in the store in the index metadata so the solution would be to ignore the default or any set value and use the one from the existing store and log a warning that some newer broker features may not work while operating with a legacy store.;;;","08/Jul/15 21:45;tabish;Broker will now default to the latest openwire version v11 marshallers in the KahaDB store but fallback to the version that was used in an existing store.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Introduce logic into the failover transport not to recreate ""aborted"" slow consumers.",AMQ-5844,12837940,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,gmurthy,gmurthy,15/Jun/15 19:38,16/Jun/15 14:56,14/Jul/23 05:44,16/Jun/15 14:56,5.11.1,,,,,,,,,5.12.0,,,,JMS client,,,,,0,,,,,,"AbortSlowConsumerStrategy can forcefully abort a slow consumer on the broker side if the consumer (client side) is not responding to the request to gracefully shutdown.

If the connection between broker and consumer is subsequently lost, the failover transport recreates the connection and transparently re-registers all consumers on the broker side including those slow consumers that were previously forcefully aborted. 

It would be good to introduce some logic into the failover transport to avoid recreating slow consumers that have already been ""forcefully"" aborted on broker. ",,gmurthy,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Jun/15 20:08;gmurthy;AMQ-5844-GMURTHY-PATCH.TXT;https://issues.apache.org/jira/secure/attachment/12739679/AMQ-5844-GMURTHY-PATCH.TXT","15/Jun/15 20:08;gmurthy;FailoverTransportDeleteSlowConsumerTest.java;https://issues.apache.org/jira/secure/attachment/12739680/FailoverTransportDeleteSlowConsumerTest.java",,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jun 16 14:56:03 UTC 2015,,,,,,,,,,,"0|i2g2cv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Jun/15 20:05;gmurthy;The FailoverTransport must remove slow consumer from its state so that the slow consumer is not re-registered if the connection falters. Please see attached patch and unit test;;;","16/Jun/15 14:56;gtully;thanks for the test and patch - applied in http://git-wip-us.apache.org/repos/asf/activemq/commit/ffef4dc5;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq script returns a non zero exit code for successful operations,AMQ-5841,12837797,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,15/Jun/15 10:29,15/Jun/15 10:32,14/Jul/23 05:44,15/Jun/15 10:32,5.11.0,,,,,,,,,5.12.0,,,,,,,,,0,,,,,,"By default operations return 1 when broker is not running. That's not necessary for many script operations like create, encrypt, etc. We should always rely on what the actual task returns.",,dejanb,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Jun 15 10:32:17 UTC 2015,,,,,,,,,,,"0|i2g1hr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Jun/15 10:32;dejanb;Fixed with http://git-wip-us.apache.org/repos/asf/activemq/commit/e2221e31;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQP: NoLocal Filter Name is wrong,AMQ-5839,12837504,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,12/Jun/15 20:04,12/Jun/15 20:49,14/Jul/23 05:44,12/Jun/15 20:49,5.12.0,,,,,,,,,5.12.0,,,,AMQP,,,,,0,,,,,,The name used for the AMQP NoLocal filter value is wrong and maps to the selector string leading to incorrectly enabling noLocal for consumers that set a selector using the name in the filter described value.  ,,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jun 12 20:49:05 UTC 2015,,,,,,,,,,,"0|i2fzp3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Jun/15 20:49;tabish;Fixed on master. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MQTT: Publish when not authorized can stall due to missing server ACK.,AMQ-5834,12836914,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,10/Jun/15 18:29,10/Jun/15 18:59,14/Jul/23 05:44,10/Jun/15 18:59,5.11.0,5.11.1,,,,,,,,5.12.0,,,,MQTT,,,,,0,,,,,,"An MQTT client can freeze during publishing when the client is not logged in with credentials necessary to write to the target destination.

Both MQTT 3.1 specification and the updated 3.1.1 specification stipulate that the broker should reply with a positive acknowledgement even if the client has no rights to publish on a topic.   

v3.1 Updated specification for PUBLISH

{quote}
MQTT 3.1 ( http://public.dhe.ibm.com/software/dw/webservices/ws-mqtt/mqtt-v3r1.html#publish )
""...
Note that if a server implementation does not authorize a PUBLISH to be made by a client, it has no way of informing that client. It must therefore make a positive acknowledgement, according to the normal QoS rules, and the client will not be informed that it was not authorized to publish the message.
...""
{quote}

And v3.1.1 Updated specification for PUBLISH

{quote}
MQTT 3.1.1 ( http://docs.oasis-open.org/mqtt/mqtt/v3.1.1/os/mqtt-v3.1.1-os.html#_Toc398718037 )
""...
If a Server implementation does not authorize a PUBLISH to be performed by a Client; it has no way of informing that Client. It MUST either make a positive acknowledgement, according to the normal QoS rules, or close the Network Connection [MQTT-3.3.5-2].
...""
{quote}

In v3.1.1 we would be allowed to close the connection but given that there is no indication to the client as to why it lost its connection it would most likely just reconnect and continue on.

We can log a warning on each failed PUBLISH due to security constraints to make it easier to debug missing messages.  ",,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jun 10 18:59:45 UTC 2015,,,,,,,,,,,"0|i2fw6f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/Jun/15 18:59;tabish;Fixed on master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Broker duplex network connection is shutdown when ""javax.jms.ResourceAllocationException: Usage Manager memory limit"" is sent across the network",AMQ-5830,12836503,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,09/Jun/15 10:27,09/Jun/15 14:14,14/Jul/23 05:44,09/Jun/15 14:14,5.11.0,,,,,,,,,5.12.0,,,,Broker,Network of Brokers,,,,0,,,,,,"With ""sendFailIfNoSpaceAfterTimeout"" or ""sendFailIfNoSpace"" is configured, producer flow control will send a javax.jms.ResourceAllocationException. 

This message is not supposed to be sent across the broker network.
In a duplex network connection, the javax.jms.ResourceAllocationException is being sent across the network. This exception is received by the peer broker and the peer broker will subsequently shutdown the network connection.

Note: it only seems to happen if the javax.jms.ResourceAllocationException is thrown from the broker that has the duplex network connector configured.

Potential workaround: use non duplex network connectors ( one defined on each peer broker)",,gtully,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jun 09 14:14:13 UTC 2015,,,,,,,,,,,"0|i2fton:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Jun/15 14:14;gtully;http://git-wip-us.apache.org/repos/asf/activemq/commit/31009090

setting network property on connection info was missing on the inbound vm transport. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQP: Messages default to Durable,AMQ-5828,12835537,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,chug,chug,04/Jun/15 21:06,05/Jun/15 15:21,14/Jul/23 05:44,05/Jun/15 15:21,5.12.0,,,,,,,,,5.12.0,,,,AMQP,,,,,0,,,,,,"Running SNAPSHOT-2015-602

If the broker receives a message with no header or with an empty header then the message is accepted as Durable. If the message has a header in which Durable=false then the message is accepted as Non-Durable.

The default for Amqp 1.0 is durable=false.
",Windows and Linux,chug,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Jun/15 21:13;chug;durable-default.html;https://issues.apache.org/jira/secure/attachment/12737697/durable-default.html",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jun 05 15:21:57 UTC 2015,,,,,,,,,,,"0|i2fnnj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Jun/15 21:13;chug;Here's a trace that has three transfers.
1. No header at all.
2. Empty header
3. Header with Durable=false
In the ActiveMQ web browser the first two messages are durable and the third is not.
;;;","04/Jun/15 21:40;tabish;Looks like the JMS Transformer code defaults to the JMS default value for Messages if that header is not present.  I'll update ours to use the AMQP expected non-durable default.  ;;;","05/Jun/15 15:21;tabish;Fixed on master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NIO Transport for OpenWire doesn't track bytes read,AMQ-5822,12835048,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,03/Jun/15 13:39,03/Jun/15 14:12,14/Jul/23 05:44,03/Jun/15 14:12,5.10.0,5.10.1,5.10.2,5.11.0,5.11.1,,,,,5.12.0,,,,Broker,JMS client,,,,0,,,,,,The NIO Transport used for OpenWire connections does not track the bytes read in the Transport's receiveCounter which can lead to incorrectly flagged inactive connections over slow links or with large messages.  ,,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,2015-06-03 13:39:15.0,,,,,,,,,,,"0|i2fkrj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Activator can trigger unwanted behaviour when loading classes from other bundles,AMQ-5821,12835046,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,cschneider,cschneider,03/Jun/15 13:37,30/Jun/15 12:23,14/Jul/23 05:44,30/Jun/15 12:23,5.11.1,,,,,,,,,5.11.2,5.12.0,,,Broker,,,,,1,,,,,,"Currently org.apache.activemq.util.osgi.Activator watches all other bundles and tries to load some classes using their classloader to check if they might implement extensions. 

This can go wrong if the bundle uses dynamic imports like e.g. jline does. In this case the jline bundle is triggered to load classes from ActiveMQ. This establishes a wiring from jline to ActiveMQ. If the ActiveMQ bundle are now refreshed or uninstalled jline also has to be refreshed which triggers refreshs of a lot more bundles.

I propose to replace the class probing with checking of the bundle requirements. We simply check if the bundle has an import for the packages of the interface classes of ActiveMQ. So we avoid triggering classloading and the creation of unwanted wirings. ",,cschneider,githubbot,gnodet,lichtin,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,KARAF-3758,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jun 30 12:22:53 UTC 2015,,,,,,,,,,,"0|i2fkr3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Jun/15 13:41;githubbot;GitHub user cschneider opened a pull request:

    https://github.com/apache/activemq/pull/107

    [AMQ-5821] Avoid probing of classes in Activator

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/cschneider/activemq AMQ-5821

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/107.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #107
    
----
commit 63cd4eef067c5e3294ade40c0ed3f1c60b8e6c9e
Author: Christian Schneider <chris@die-schneider.net>
Date:   2015-06-03T13:40:03Z

    [AMQ-5821] Avoid probing of classes in Activator

----
;;;","10/Jun/15 08:21;gnodet;The patch is wrong.
The goal is not to verify that the bundle actually imports *some* known packages, but the fact that the bundle imports *our* package.
So the use of the wiring API is good, but we need to ensure that the provider is *our* bundle, or at least the same bundle which is used to load the classes.;;;","11/Jun/15 15:12;cschneider;I updated the pull request to use wiring to check for the same imports we use.;;;","23/Jun/15 11:16;githubbot;GitHub user cschneider opened a pull request:

    https://github.com/apache/activemq/pull/119

    AMQ-5821

    Improved fix based on current master

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/cschneider/activemq AMQ-5821-2

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/119.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #119
    
----
commit 8301dfa2bb69a69d5f843bdaf3861cfa3918bb18
Author: Christian Schneider <chris@die-schneider.net>
Date:   2015-06-03T13:40:03Z

    [AMQ-5821] Avoid probing of classes in Activator

commit e7500d643a59dd8a9545c2331ee80063a86f8039
Author: Christian Schneider <chris@die-schneider.net>
Date:   2015-06-11T15:11:13Z

    [AMQ-5821] Check if imports come from our bundle

----
;;;","24/Jun/15 13:06;githubbot;Github user cschneider closed the pull request at:

    https://github.com/apache/activemq/pull/107
;;;","24/Jun/15 16:31;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/119
;;;","30/Jun/15 12:22;cschneider;I think this issue is done now.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failover Transport - Sleep for Reconnect Delay happens twice per iteration,AMQ-5819,12834644,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,eric.wyles,eric.wyles,02/Jun/15 15:52,15/Apr/16 16:51,14/Jul/23 05:44,15/Apr/16 16:51,5.10.0,5.10.1,5.10.2,5.11.0,5.11.1,,,,,5.13.3,5.14.0,,,JMS client,,,,,0,,,,,,"When the failover transport is attempting to reconnect, it appears to sleep two different times, resulting in more than the expected reconnect delay.

To reproduce:
- start a jms client with brokerUrl: failover:(tcp://hostname:61616)?randomize=false&warnAfterReconnectAttempts=1
- turn on debug logging for logger 'org.apache.activemq.transport.failover.FailoverTransport'
- Once the application has connected, stop the broker on hostname


While the broker is down, observe the logs from org.apache.activemq.transport.failover.FailoverTransport, and you will see the following pattern for each iteration:

=====================
WARN - Failed to connect to [tcp://hostname:61616] after: n attempt(s) continuing to retry.
DEBUG - Waiting <reconnectDelay> ms before attempting connection
-- sleep happens here
DEBUG - urlList connectionList:[tcp://hostname:61616], from: [tcp://hostname:61616]
DEBUG - Waiting <reconnectDelay> ms before attempting connection
--- sleep happens here
DEBUG - Attempting  nth  connect to: tcp://hostname:61616
DEBUG - Connect fail to: tcp://hostname:61616, reason: java.net.ConnectException: Connection refused: connect
=====================

The above sequence is repeated for as long as the broker is down, with the exponent applied to the reconnectDelay in between the above two instances of sleep. In the configuration above, once the maxReconnectDelay is reached (30 seconds) it is actually 1 minute between attempts to reconnect to the broker. Log output with timestamps is shown below, and you can see that it is 1 minute between attempting the 13th connection and attempting to 14th connection, even though maxReconnectDelay is 30 seconds:


log4j.appender.CONSOLE.layout.ConversionPattern=%d [%C:%-4L] %-5p - %m%n
=====================
2015-06-02 10:39:19,824 [org.apache.activemq.transport.failover.FailoverTransport:1024] DEBUG - Attempting  13th  connect to: tcp://hostname:61616
2015-06-02 10:39:20,860 [org.apache.activemq.transport.failover.FailoverTransport:1075] DEBUG - Connect fail to: tcp://hostname:61616, reason: java.net.ConnectException: Connection refused: connect
2015-06-02 10:39:20,860 [org.apache.activemq.transport.failover.FailoverTransport:1119] WARN  - Failed to connect to [tcp://hostname:61616] after: 14 attempt(s) continuing to retry.
2015-06-02 10:39:20,860 [org.apache.activemq.transport.failover.FailoverTransport:1135] DEBUG - Waiting 30000 ms before attempting connection
2015-06-02 10:39:50,868 [org.apache.activemq.transport.failover.FailoverTransport:814 ] DEBUG - urlList connectionList:[tcp://hostname:61616], from: [tcp://hostname:61616]
2015-06-02 10:39:50,868 [org.apache.activemq.transport.failover.FailoverTransport:1000] DEBUG - Waiting 30000 ms before attempting connection.
2015-06-02 10:40:20,870 [org.apache.activemq.transport.failover.FailoverTransport:1024] DEBUG - Attempting  14th  connect to: tcp://hostname:61616
=====================
",,eric.wyles,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Apr 15 16:51:04 UTC 2016,,,,,,,,,,,"0|i2fiuf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Jun/15 15:57;eric.wyles;Workarounds:
- If using exponential backoff, set maxReconnectDelay to half of actual max you want to configure
- if not using exponential backoff, set initialReconnectDelay to half of the reconnect delay you want;;;","15/Apr/16 16:49;jira-bot;Commit c8af70f0949e38270b313b7b8ce305c5870362da in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=c8af70f ]

https://issues.apache.org/jira/browse/AMQ-5819

Only apply the initialReconnectDelay on the first reconnection attempt
after a connected transport has failed.  ;;;","15/Apr/16 16:51;jira-bot;Commit 2f935a260b00577eea64d8c50fa1437b6874e5b9 in activemq's branch refs/heads/activemq-5.13.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=2f935a2 ]

https://issues.apache.org/jira/browse/AMQ-5819

Only apply the initialReconnectDelay on the first reconnection attempt
after a connected transport has failed.
(cherry picked from commit c8af70f0949e38270b313b7b8ce305c5870362da)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LevelDB file handle leak,AMQ-5817,12834279,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,steven.fox,steven.fox,01/Jun/15 16:02,16/Feb/16 15:57,14/Jul/23 05:44,16/Feb/16 15:56,5.11.1,,,,,,,,,5.14.0,,,,LevelDB,,,,,0,,,,,,"Non-persistent messages either from high message producer or slow consumer left unchecked could cause a file handle leak.  The effect is many files being created under directory /<activemq_install>/data/leveldb/plist.index and ActiveMQ become unresponsive to where it cannot processing any messages until its process is bounced.



2015-06-01 10:58:21,674 | ERROR | Caught an Exception adding a message: ActiveMQTextMessage {commandId = 6904, responseRequired = false, messageId = ID:testico180l-45369-1432936489601-1:83688:1:1:6900, originalDestination = null, originalTransactionId = null, producerId = ID:testico180l-45369-1432936489601-1:83688:1:1, destination = queue://FOX.DEV.ERROR, transactionId = null, expiration = 0, timestamp = 1433174297512, arrival = 0, brokerInTime = 1433174301674, brokerOutTime = 0, correlationId = null, replyTo = null, persistent = false, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = org.apache.activemq.util.ByteSequence@10a9ac16, marshalledProperties = org.apache.activemq.util.ByteSequence@7360e0e5, dataStructure = null, redeliveryCounter = 0, size = 0, properties = {umh_call_chain=testico189l\testico189l_CIT\AMQ\20150601105821674\queue://FOX.DEV.ERROR, umh_origin_host=testico180l, umh_process_key=activemq_client, umh_application_version=5.11.1, umh_application_id=ActiveMQ, umh_routing_environment=DEV, umh_header_version=1.0.0, umh_routing_sub_environment=DEV, umh_message_id=EF81B0F3BD3740E1941EC1C44AB2F6D5, umh_release_id=20150522000000, tgenv=DEV, umh_channel=MQ}, readOnlyProperties = false, readOnlyBody = false, droppable = false, jmsXGroupFirstForConsumer = false, text = Test message} first to FilePendingMessageCursor  | org.apache.activemq.broker.region.cursors.FilePendingMessageCursor | ActiveMQ NIO Worker 2224
org.iq80.leveldb.impl.DbImpl$BackgroundProcessingException: java.io.FileNotFoundException: /activemq/data/leveldb/plist.index/291781.sst (Too many open files)
        at org.iq80.leveldb.impl.DbImpl.checkBackgroundException(DbImpl.java:411)[leveldb-0.6.jar:]
        at org.iq80.leveldb.impl.DbImpl.writeInternal(DbImpl.java:664)[leveldb-0.6.jar:]
        at org.iq80.leveldb.impl.DbImpl.put(DbImpl.java:630)[leveldb-0.6.jar:]
        at org.apache.activemq.leveldb.LevelDBClient$RichDB.put(LevelDBClient.scala:224)[activemq-leveldb-store-5.11.1.jar:5.11.1]
        at org.apache.activemq.leveldb.LevelDBClient.plistPut(LevelDBClient.scala:1716)[activemq-leveldb-store-5.11.1.jar:5.11.1]
        at org.apache.activemq.leveldb.DBManager.plistPut(DBManager.scala:884)[activemq-leveldb-store-5.11.1.jar:5.11.1]
        at org.apache.activemq.leveldb.LevelDBStore$LevelDBPList.add(LevelDBStore.scala:1050)[activemq-leveldb-store-5.11.1.jar:5.11.1]
        at org.apache.activemq.leveldb.LevelDBStore$LevelDBPList.addLast(LevelDBStore.scala:1037)[activemq-leveldb-store-5.11.1.jar:5.11.1]
        at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.tryAddMessageLast(FilePendingMessageCursor.java:237)[activemq-broker-5.11.1.jar:5.11.1]
        at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.addMessageLast(FilePendingMessageCursor.java:207)[activemq-broker-5.11.1.jar:5.11.1]
        at org.apache.activemq.broker.region.cursors.StoreQueueCursor.addMessageLast(StoreQueueCursor.java:97)[activemq-broker-5.11.1.jar:5.11.1]
        at org.apache.activemq.broker.region.Queue.cursorAdd(Queue.java:1796)[activemq-broker-5.11.1.jar:5.11.1]
        at org.apache.activemq.broker.region.Queue.orderedCursorAdd(Queue.java:878)[activemq-broker-5.11.1.jar:5.11.1]
        at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:854)[activemq-broker-5.11.1.jar:5.11.1]
        at org.apache.activemq.broker.region.Queue.send(Queue.java:733)[activemq-broker-5.11.1.jar:5.11.1]
        at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:419)[activemq-broker-5.11.1.jar:5.11.1]
        at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:468)[activemq-broker-5.11.1.jar:5.11.1]
        at org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:297)[activemq-broker-5.11.1.jar:5.11.1]
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:152)[activemq-broker-5.11.1.jar:5.11.1]
        at org.apache.activemq.broker.scheduler.SchedulerBroker.send(SchedulerBroker.java:169)[activemq-broker-5.11.1.jar:5.11.1]
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:152)[activemq-broker-5.11.1.jar:5.11.1]
        at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)[activemq-broker-5.11.1.jar:5.11.1]
        at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:307)[activemq-broker-5.11.1.jar:5.11.1]
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:152)[activemq-broker-5.11.1.jar:5.11.1]
        at main.com.test.activemq.broker.plugin.umh.UnifiedMessageHeaderFilter.send(UnifiedMessageHeaderFilter.java:417)[test_activemq_broker_plugins.jar:]
        at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:157)[activemq-broker-5.11.1.jar:5.11.1]
        at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:541)[activemq-broker-5.11.1.jar:5.11.1]
        at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:768)[activemq-client-5.11.1.jar:5.11.1]
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:334)[activemq-broker-5.11.1.jar:5.11.1]
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:188)[activemq-broker-5.11.1.jar:5.11.1]
        at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)[activemq-client-5.11.1.jar:5.11.1]
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)[activemq-client-5.11.1.jar:5.11.1]
        at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:270)[activemq-client-5.11.1.jar:5.11.1]
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)[activemq-client-5.11.1.jar:5.11.1]
        at org.apache.activemq.transport.nio.NIOTransport.serviceRead(NIOTransport.java:138)[activemq-client-5.11.1.jar:5.11.1]
        at org.apache.activemq.transport.nio.NIOTransport$1.onSelect(NIOTransport.java:69)[activemq-client-5.11.1.jar:5.11.1]
        at org.apache.activemq.transport.nio.SelectorSelection.onSelect(SelectorSelection.java:97)[activemq-client-5.11.1.jar:5.11.1]
        at org.apache.activemq.transport.nio.SelectorWorker$1.run(SelectorWorker.java:119)[activemq-client-5.11.1.jar:5.11.1]
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)[:1.7.0_75]
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)[:1.7.0_75]
        at java.lang.Thread.run(Thread.java:745)[:1.7.0_75]
",,steven.fox,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5404,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Feb 16 15:57:16 UTC 2016,,,,,,,,,,,"0|i2fgnr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Feb/16 15:57;tabish;This seems a lot like AMQ-5404 and should be fixed, recommend testing with 5.13.2 once it is released. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE during sending a message when using http transport and leveldb store,AMQ-5816,12834223,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,eugene.tarasov,eugene.tarasov,01/Jun/15 12:40,02/Jun/15 11:43,14/Jul/23 05:44,01/Jun/15 22:10,5.11.0,5.11.1,,,,,,,,5.12.0,,,,Broker,LevelDB,,,,0,,,,,,"It is impossible to use combination of HTTP transport with LevelDB as persistent store: when trying to send a persistent message the broker throws a NullPointerException (see attachment Exception).

This happens because HTTP transport uses XStream library for deserealization, which follows Java Serialization rules. As a result, transient field [dataLocator|https://github.com/apache/activemq/blob/activemq-5.11.1/activemq-client/src/main/java/org/apache/activemq/command/MessageId.java#L37] is null after deserialization. Later, LevelDB invokes getDataLocator, and that's when NPE is thrown.

Proposed patch adds private method readResolve, which is invoked after deserialization, and which initializes dataLocator field.",,eugene.tarasov,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Jun/15 12:42;eugene.tarasov;Exception;https://issues.apache.org/jira/secure/attachment/12736547/Exception","01/Jun/15 12:47;eugene.tarasov;http-leveldb.patch;https://issues.apache.org/jira/secure/attachment/12736548/http-leveldb.patch",,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jun 02 11:43:36 UTC 2015,,,,,,,Patch Available,,,,"0|i2fgdb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Jun/15 22:10;tabish;Patch applied, added a test to cover.  Thanks!;;;","02/Jun/15 11:43;eugene.tarasov;Thank you!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Frequency IOException cast dead lock while using kahadb in high concurrency environment,AMQ-5815,12834219,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,bopbopbaby,bopbopbaby,01/Jun/15 12:21,15/Aug/16 10:41,14/Jul/23 05:44,15/Aug/16 10:41,5.10.0,,,,,,,,,5.15.0,,,,Broker,,,,,1,,,,,,"When the concurrency is in high level, iops more than 3000/s, we find that most of the amq connections are blocked.We can't either get or push any data through them unless restart.This issue appears *frequency*.

There is many IOExceptions in the amq logs.

{code}
2015-05-28 00:37:08,544 | ERROR | Checkpoint failed | org.apache.activemq.store.kahadb.MessageDatabase | ActiveMQ Journal Checkpoint Worker
java.io.IOException: Input/output error
        at java.io.RandomAccessFile.write(Native Method)[:1.6.0_30]
        at java.io.RandomAccessFile.writeLong(RandomAccessFile.java:1001)[:1.6.0_30]
        at org.apache.activemq.util.RecoverableRandomAccessFile.writeLong(RecoverableRandomAccessFile.java:305)[activemq-kahadb-store-5.10.0.jar:5.10.0]
        at org.apache.activemq.store.kahadb.disk.page.PageFile.writeBatch(PageFile.java:1062)[activemq-kahadb-store-5.10.0.jar:5.10.0]
        at org.apache.activemq.store.kahadb.disk.page.PageFile.flush(PageFile.java:516)[activemq-kahadb-store-5.10.0.jar:5.10.0]
        at org.apache.activemq.store.kahadb.MessageDatabase.checkpointUpdate(MessageDatabase.java:1512)[activemq-kahadb-store-5.10.0.jar:5.10.0]
        at org.apache.activemq.store.kahadb.MessageDatabase$17.execute(MessageDatabase.java:1484)[activemq-kahadb-store-5.10.0.jar:5.10.0]
        at org.apache.activemq.store.kahadb.disk.page.Transaction.execute(Transaction.java:779)[activemq-kahadb-store-5.10.0.jar:5.10.0]
        at org.apache.activemq.store.kahadb.MessageDatabase.checkpointUpdate(MessageDatabase.java:1481)[activemq-kahadb-store-5.10.0.jar:5.10.0]
        at org.apache.activemq.store.kahadb.MessageDatabase.checkpointCleanup(MessageDatabase.java:929)[activemq-kahadb-store-5.10.0.jar:5.10.0]
        at org.apache.activemq.store.kahadb.MessageDatabase$3.run(MessageDatabase.java:357)[activemq-kahadb-store-5.10.0.jar:5.10.0]
2015-05-28 00:37:08,547 | INFO  | Ignoring IO exception, java.io.IOException: Input/output error | org.apache.activemq.util.DefaultIOExceptionHandler | ActiveMQ Journal Checkpoint Worker
java.io.IOException: Input/output error
        at java.io.RandomAccessFile.write(Native Method)[:1.6.0_30]
        at java.io.RandomAccessFile.writeLong(RandomAccessFile.java:1001)[:1.6.0_30]
        at org.apache.activemq.util.RecoverableRandomAccessFile.writeLong(RecoverableRandomAccessFile.java:305)[activemq-kahadb-store-5.10.0.jar:5.10.0]
        at org.apache.activemq.store.kahadb.disk.page.PageFile.writeBatch(PageFile.java:1062)[activemq-kahadb-store-5.10.0.jar:5.10.0]
        at org.apache.activemq.store.kahadb.disk.page.PageFile.flush(PageFile.java:516)[activemq-kahadb-store-5.10.0.jar:5.10.0]
        at org.apache.activemq.store.kahadb.MessageDatabase.checkpointUpdate(MessageDatabase.java:1512)[activemq-kahadb-store-5.10.0.jar:5.10.0]
        at org.apache.activemq.store.kahadb.MessageDatabase$17.execute(MessageDatabase.java:1484)[activemq-kahadb-store-5.10.0.jar:5.10.0]
        at org.apache.activemq.store.kahadb.disk.page.Transaction.execute(Transaction.java:779)[activemq-kahadb-store-5.10.0.jar:5.10.0]
        at org.apache.activemq.store.kahadb.MessageDatabase.checkpointUpdate(MessageDatabase.java:1481)[activemq-kahadb-store-5.10.0.jar:5.10.0]
        at org.apache.activemq.store.kahadb.MessageDatabase.checkpointCleanup(MessageDatabase.java:929)[activemq-kahadb-store-5.10.0.jar:5.10.0]
        at org.apache.activemq.store.kahadb.MessageDatabase$3.run(MessageDatabase.java:357)[activemq-kahadb-store-5.10.0.jar:5.10.0]
2015-05-28 00:37:08,580 | INFO  | KahaDB: Recovering checkpoint thread after death | org.apache.activemq.store.kahadb.MessageDatabase | ActiveMQ Transport: tcp:///10.40.50.31:58171@61616
2015-05-28 00:37:17,285 | INFO  | Journal failed while writing at: 2359276 | org.apache.activemq.store.kahadb.disk.journal.DataFileAppender | ActiveMQ Data File Writer
2015-05-28 00:37:17,287 | ERROR | KahaDB failed to store to Journal | org.apache.activemq.store.kahadb.MessageDatabase | ActiveMQ Transport: tcp:///10.40.50.17:4487@61616
java.io.IOException: Input/output error
        at sun.nio.ch.FileChannelImpl.force0(Native Method)[:1.6.0_30]
        at sun.nio.ch.FileChannelImpl.force(FileChannelImpl.java:348)[:1.6.0_30]
        at org.apache.activemq.util.RecoverableRandomAccessFile.sync(RecoverableRandomAccessFile.java:402)[activemq-kahadb-store-5.10.0.jar:5.10.0]
        at org.apache.activemq.store.kahadb.disk.journal.DataFileAppender.processQueue(DataFileAppender.java:373)[activemq-kahadb-store-5.10.0.jar:5.10.0]
        at org.apache.activemq.store.kahadb.disk.journal.DataFileAppender$1.run(DataFileAppender.java:193)[activemq-kahadb-store-5.10.0.jar:5.10.0]
2015-05-28 00:37:17,291 | ERROR | KahaDB failed to store to Journal | org.apache.activemq.store.kahadb.MessageDatabase | ActiveMQ Transport: tcp:///10.40.50.17:4442@61616
java.io.IOException: Input/output error
        at sun.nio.ch.FileChannelImpl.force0(Native Method)[:1.6.0_30]
        at sun.nio.ch.FileChannelImpl.force(FileChannelImpl.java:348)[:1.6.0_30]
        at org.apache.activemq.util.RecoverableRandomAccessFile.sync(RecoverableRandomAccessFile.java:402)[activemq-kahadb-store-5.10.0.jar:5.10.0]
        at org.apache.activemq.store.kahadb.disk.journal.DataFileAppender.processQueue(DataFileAppender.java:373)[activemq-kahadb-store-5.10.0.jar:5.10.0]
        at org.apache.activemq.store.kahadb.disk.journal.DataFileAppender$1.run(DataFileAppender.java:193)[activemq-kahadb-store-5.10.0.jar:5.10.0]
2015-05-28 00:37:17,293 | INFO  | Ignoring IO exception, java.io.IOException: Input/output error | org.apache.activemq.util.DefaultIOExceptionHandler | ActiveMQ Transport: tcp:///10.40.50.17:4442@61616
java.io.IOException: Input/output error
        at sun.nio.ch.FileChannelImpl.force0(Native Method)[:1.6.0_30]
        at sun.nio.ch.FileChannelImpl.force(FileChannelImpl.java:348)[:1.6.0_30]
        at org.apache.activemq.util.RecoverableRandomAccessFile.sync(RecoverableRandomAccessFile.java:402)[activemq-kahadb-store-5.10.0.jar:5.10.0]
        at org.apache.activemq.store.kahadb.disk.journal.DataFileAppender.processQueue(DataFileAppender.java:373)[activemq-kahadb-store-5.10.0.jar:5.10.0]
        at org.apache.activemq.store.kahadb.disk.journal.DataFileAppender$1.run(DataFileAppender.java:193)[activemq-kahadb-store-5.10.0.jar:5.10.0]
{code}


With the aid of jstack ,we find dead lock(How can I upload the whole jtack log?)
The blocked connections are all waiting for 0x00007f90500034e0
{code}
[01:08:01] ""ActiveMQ Transport: tcp:///10.40.50.17:4479@61616"" daemon prio=10 tid=0x00007f8f8c015000 nid=0x2ece waiting for monitor entry [0x00007f8f1f6e4000]
[01:08:01]    java.lang.Thread.State: BLOCKED (on object monitor)
[01:08:01]         at org.apache.activemq.transaction.LocalTransaction.rollback(LocalTransaction.java:94)
[01:08:01]         - waiting to lock <0x00007f90500034e0> (a org.apache.activemq.store.kahadb.KahaDBTransactionStore)
[01:08:01]         at org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:74)
[01:08:01]         at org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:253)
[01:08:01]         at org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:112)
[01:08:01]         at org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:453)
[01:08:01]         at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100)
[01:08:01]         at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:294)
[01:08:01]         at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:148)
[01:08:01]         at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
[01:08:01]         at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
[01:08:01]         at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:270)
[01:08:01]         at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
[01:08:01]         at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)
[01:08:01]         at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)
[01:08:01]         at java.lang.Thread.run(Thread.java:662)
{code}

Only one connection(Thread) get this lock.But it is waiting for another Read lock 0x00007f90530ed8d8
{code}
[01:08:01] ""ActiveMQ Transport: tcp:///10.40.50.17:4484@61616"" daemon prio=10 tid=0x00007f8fa8039800 nid=0x2ed2 waiting on condition [0x00007f8f1f2e0000]
[01:08:01]    java.lang.Thread.State: WAITING (parking)
[01:08:01]         at sun.misc.Unsafe.park(Native Method)
[01:08:01]         - parking to wait for  <0x00007f90530ed8d8> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)
[01:08:01]         at java.util.concurrent.locks.LockSupport.park(LockSupport.java:156)
[01:08:01]         at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:811)
[01:08:01]         at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireShared(AbstractQueuedSynchronizer.java:941)
[01:08:01]         at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireShared(AbstractQueuedSynchronizer.java:1261)
[01:08:01]         at java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock.lock(ReentrantReadWriteLock.java:594)
[01:08:01]         at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:972)
[01:08:01]         at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:958)
[01:08:01]         at org.apache.activemq.store.kahadb.KahaDBTransactionStore.rollback(KahaDBTransactionStore.java:312)
[01:08:01]         at org.apache.activemq.transaction.LocalTransaction.rollback(LocalTransaction.java:94)
[01:08:01]         - locked <0x00007f90500034e0> (a org.apache.activemq.store.kahadb.KahaDBTransactionStore)
[01:08:01]         at org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:74)
[01:08:01]         at org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:253)
[01:08:01]         at org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:112)
[01:08:01]         at org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:453)
[01:08:01]         at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100)
[01:08:01]         at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:294)
[01:08:01]         at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:148)
[01:08:01]         at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
[01:08:01]         at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
[01:08:01]         at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:270)
[01:08:01]         at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
[01:08:01]         at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)
[01:08:01]         at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)
[01:08:01]         at java.lang.Thread.run(Thread.java:662)
{code}

At last we find 0x00007f90530ed8d8 is in many write lock waiting.But none write lock hodes it. The dead lock occurs.
{code}
[01:07:56] ""ActiveMQ Transport: tcp:///10.40.50.47:60701@61616"" daemon prio=10 tid=0x00007f8f7cbc5000 nid=0x3ec8 waiting on condition [0x00007f900d864000]
[01:07:56]    java.lang.Thread.State: WAITING (parking)
[01:07:56]         at sun.misc.Unsafe.park(Native Method)
[01:07:56]         - parking to wait for  <0x00007f90530ed8d8> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)
[01:07:56]         at java.util.concurrent.locks.LockSupport.park(LockSupport.java:156)
[01:07:56]         at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:811)
[01:07:56]         at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireShared(AbstractQueuedSynchronizer.java:941)
[01:07:56]         at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireShared(AbstractQueuedSynchronizer.java:1261)
[01:07:56]         at java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock.lock(ReentrantReadWriteLock.java:594)
[01:07:56]         at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:972)
[01:07:56]         at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:958)
[01:07:56]         at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.removeMessage(KahaDBStore.java:453)
[01:07:56]         at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.removeAsyncMessage(KahaDBStore.java:407)
[01:07:56]         at org.apache.activemq.store.kahadb.KahaDBTransactionStore.removeAsyncMessage(KahaDBTransactionStore.java:498)
[01:07:56]         at org.apache.activemq.store.kahadb.KahaDBTransactionStore$1.removeAsyncMessage(KahaDBTransactionStore.java:185)
[01:07:56]         at org.apache.activemq.broker.region.Queue.acknowledge(Queue.java:998)
[01:07:56]         at org.apache.activemq.broker.region.Queue.removeMessage(Queue.java:1781)
[01:07:56]         at org.apache.activemq.broker.region.QueueSubscription.acknowledge(QueueSubscription.java:63)
[01:07:56]         at org.apache.activemq.broker.region.PrefetchSubscription.acknowledge(PrefetchSubscription.java:235)
[01:07:56]         - locked <0x00007f905d10b1e8> (a java.lang.Object)
[01:07:56]         at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:446)
[01:07:56]         at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:461)
[01:07:56]         at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:82)
[01:07:56]         at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:277)
[01:07:56]         at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:92)
[01:07:56]         at org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:505)
[01:07:56]         at org.apache.activemq.command.MessageAck.visit(MessageAck.java:245)
[01:07:56]         at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:294)
[01:07:56]         at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:148)
[01:07:56]         at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
[01:07:56]         at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
[01:07:56]         at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:270)
[01:07:56]         at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
[01:07:56]         at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)
[01:07:56]         at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)
[01:07:56]         at java.lang.Thread.run(Thread.java:662)
{code}

In my opinion, IOExceptions may lead to losing persisten messages and so on ,but the broker shouldn't stop service.",Master/Slave AMQ + kahadb(NAS using NFS),bopbopbaby,gtully,irodionov,jira-bot,liuruidey@gmail.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,604800,604800,,0%,604800,604800,,,,,,,,,,,,,,,,,,,AMQ-2594,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Important,,,,,,,,,9223372036854775807,,,Mon Aug 15 10:41:36 UTC 2016,,,,,,,,,,,"0|i2fgcf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/May/16 10:52;irodionov;We had similar issue with KahaDB. AMQ version is 5.12.1.
Sometimes IOException occurs (we use windows net drive and we had slow disk on our VM and a lot of persistent messages) which blocks the broker.

KahaDB property enableIndexWriteAsync is setted to TRUE. In case of IOException ""KahaDB Page Writer"" thread dies so it blocks """"ActiveMQ Journal Checkpoint Worker"" thread which waits for CountDownLatch (in PageFile.flush) which will never countDown.

Full thread dump:
{code}
2016-05-12 06:56:44
Full thread dump Java HotSpot(TM) 64-Bit Server VM (25.60-b23 mixed mode):

""ActiveMQ BrokerService[dcrd] Task-135"" #464 daemon prio=5 os_prio=0 tid=0x0000000020a6e000 nid=0xfe8 waiting on condition [0x000000004e5ae000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x0000000081dc1450> (a java.util.concurrent.SynchronousQueue$TransferStack)
	at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
	at java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:460)
	at java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:362)
	at java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:941)
	at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1066)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1127)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)

   Locked ownable synchronizers:
	- None

""ActiveMQ VMTransport: vm://localhost#1-20"" #428 daemon prio=5 os_prio=0 tid=0x0000000020a66800 nid=0xce4 waiting on condition [0x000000005314d000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x0000000081e52c50> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireShared(AbstractQueuedSynchronizer.java:967)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireShared(AbstractQueuedSynchronizer.java:1283)
	at java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock.lock(ReentrantReadWriteLock.java:727)
	at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:994)
	at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:980)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.removeMessage(KahaDBStore.java:482)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.removeAsyncMessage(KahaDBStore.java:417)
	at org.apache.activemq.store.kahadb.KahaDBTransactionStore.removeAsyncMessage(KahaDBTransactionStore.java:506)
	at org.apache.activemq.store.kahadb.KahaDBTransactionStore$1.removeAsyncMessage(KahaDBTransactionStore.java:184)
	at org.apache.activemq.broker.region.Queue.acknowledge(Queue.java:915)
	at org.apache.activemq.broker.region.Queue.removeMessage(Queue.java:1719)
	at org.apache.activemq.broker.region.QueueSubscription.acknowledge(QueueSubscription.java:55)
	at org.apache.activemq.broker.region.PrefetchSubscription.acknowledge(PrefetchSubscription.java:234)
	- locked <0x0000000081e60f08> (a java.lang.Object)
	at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:526)
	at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:484)
	at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:87)
	at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:87)
	at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:276)
	at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:97)
	at org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:555)
	at org.apache.activemq.command.MessageAck.visit(MessageAck.java:245)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:338)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:188)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
	at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:270)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:133)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:48)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)

   Locked ownable synchronizers:
	- <0x00000000def1aa98> (a java.util.concurrent.ThreadPoolExecutor$Worker)

""ActiveMQ InactivityMonitor WriteCheckTimer"" #427 daemon prio=5 os_prio=0 tid=0x0000000020a6f800 nid=0x1918 in Object.wait() [0x0000000052a1f000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at java.util.TimerThread.mainLoop(Timer.java:552)
	- locked <0x00000000da73e8d8> (a java.util.TaskQueue)
	at java.util.TimerThread.run(Timer.java:505)

   Locked ownable synchronizers:
	- None

""ActiveMQ Transport: ssl:///127.0.0.1:60001"" #425 daemon prio=5 os_prio=0 tid=0x0000000020a6d000 nid=0x9b4 waiting on condition [0x000000002016e000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x0000000081e52c50> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireShared(AbstractQueuedSynchronizer.java:967)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireShared(AbstractQueuedSynchronizer.java:1283)
	at java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock.lock(ReentrantReadWriteLock.java:727)
	at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:994)
	at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:980)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.addMessage(KahaDBStore.java:434)
	at org.apache.activemq.store.kahadb.KahaDBTransactionStore.asyncAddQueueMessage(KahaDBTransactionStore.java:405)
	at org.apache.activemq.store.kahadb.KahaDBTransactionStore$1.asyncAddQueueMessage(KahaDBTransactionStore.java:174)
	at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:831)
	at org.apache.activemq.broker.region.Queue.send(Queue.java:724)
	at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:503)
	at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:468)
	at org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:297)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:152)
	at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)
	at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:293)
	at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:157)
	at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:546)
	at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:768)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:338)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:188)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:300)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.SslTransport.doConsume(SslTransport.java:102)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)
	at java.lang.Thread.run(Thread.java:745)

   Locked ownable synchronizers:
	- <0x0000000081e5a148> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)

""ActiveMQ InactivityMonitor ReadCheckTimer"" #424 daemon prio=5 os_prio=0 tid=0x0000000020a68800 nid=0xab0 in Object.wait() [0x000000001c60e000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at java.util.TimerThread.mainLoop(Timer.java:552)
	- locked <0x00000000d930c2c0> (a java.util.TaskQueue)
	at java.util.TimerThread.run(Timer.java:505)

   Locked ownable synchronizers:
	- None

""ActiveMQ InactivityMonitor Worker"" #382 daemon prio=5 os_prio=0 tid=0x000000001dae3800 nid=0xe70 waiting on condition [0x0000000052b1e000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x00000000825203f0> (a java.util.concurrent.SynchronousQueue$TransferStack)
	at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
	at java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:460)
	at java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:362)
	at java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:941)
	at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1066)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1127)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)

   Locked ownable synchronizers:
	- None

""105542689@qtp-1219161283-10"" #181 prio=5 os_prio=0 tid=0x000000001dae1000 nid=0x1720 in Object.wait() [0x000000004fb4e000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:626)
	- locked <0x0000000082aea590> (a org.mortbay.thread.QueuedThreadPool$PoolThread)

   Locked ownable synchronizers:
	- None

""MultiThreadedHttpConnectionManager cleanup"" #180 daemon prio=5 os_prio=0 tid=0x000000001dadd800 nid=0x221c in Object.wait() [0x000000004fa4e000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:143)
	- locked <0x0000000082af2600> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:164)
	at org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$ReferenceQueueThread.run(MultiThreadedHttpConnectionManager.java:1122)

   Locked ownable synchronizers:
	- None

""ActiveMQ BrokerService.worker.1"" #81 daemon prio=5 os_prio=0 tid=0x0000000020a6a000 nid=0x1308 waiting on condition [0x000000002006e000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x0000000081e561f8> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
	at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)
	at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1067)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1127)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)

   Locked ownable synchronizers:
	- None

""RMI TCP Connection(4)-127.0.0.1"" #70 daemon prio=5 os_prio=0 tid=0x0000000020a6b800 nid=0x1074 runnable [0x000000004f16e000]
   java.lang.Thread.State: RUNNABLE
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:170)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:265)
	- locked <0x0000000082178a50> (a java.io.BufferedInputStream)
	at java.io.DataInputStream.readInt(DataInputStream.java:387)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:722)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$256(TCPTransport.java:683)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$1/711930559.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)

   Locked ownable synchronizers:
	- <0x0000000081e756a0> (a java.util.concurrent.ThreadPoolExecutor$Worker)

""DestroyJavaVM"" #68 prio=5 os_prio=0 tid=0x0000000020a69800 nid=0x111c waiting on condition [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

   Locked ownable synchronizers:
	- None

""Timer-3"" #67 daemon prio=5 os_prio=0 tid=0x0000000020a68000 nid=0x924 in Object.wait() [0x000000004f06f000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at java.util.TimerThread.mainLoop(Timer.java:552)
	- locked <0x0000000081f48498> (a java.util.TaskQueue)
	at java.util.TimerThread.run(Timer.java:505)

   Locked ownable synchronizers:
	- None

""Zabbix-agent"" #66 daemon prio=5 os_prio=0 tid=0x0000000020a65800 nid=0xad4 runnable [0x000000004ef6e000]
   java.lang.Thread.State: RUNNABLE
	at java.net.DualStackPlainSocketImpl.accept0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketAccept(DualStackPlainSocketImpl.java:131)
	at java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:409)
	at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:199)
	- locked <0x0000000081e8f2c0> (a java.net.SocksSocketImpl)
	at java.net.ServerSocket.implAccept(ServerSocket.java:545)
	at java.net.ServerSocket.accept(ServerSocket.java:513)
	at org.kjkoster.zapcat.zabbix.ZabbixAgent.run(ZabbixAgent.java:171)
	at java.lang.Thread.run(Thread.java:745)

   Locked ownable synchronizers:
	- None

""Timer-2"" #65 daemon prio=5 os_prio=0 tid=0x0000000021020000 nid=0xd94 in Object.wait() [0x000000004e4af000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at java.util.TimerThread.mainLoop(Timer.java:552)
	- locked <0x0000000081e95b30> (a java.util.TaskQueue)
	at java.util.TimerThread.run(Timer.java:505)

   Locked ownable synchronizers:
	- None

""pool-8-thread-1"" #58 prio=5 os_prio=0 tid=0x0000000021019800 nid=0x23b4 waiting on condition [0x000000004e1ae000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x0000000081e66cd0> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
	at java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
	at java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
	at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1067)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1127)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)

   Locked ownable synchronizers:
	- None

""Thread-19"" #57 prio=5 os_prio=0 tid=0x000000002101c800 nid=0xf7c runnable [0x000000004e0af000]
   java.lang.Thread.State: RUNNABLE
	at java.net.DualStackPlainSocketImpl.accept0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketAccept(DualStackPlainSocketImpl.java:131)
	at java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:409)
	at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:199)
	- locked <0x0000000081e4bb78> (a java.net.SocksSocketImpl)
	at java.net.ServerSocket.implAccept(ServerSocket.java:545)
	at java.net.ServerSocket.accept(ServerSocket.java:513)
	at com.sun.jmx.remote.socket.SocketConnectionServer.accept(SocketConnectionServer.java:173)
	at com.sun.jmx.remote.generic.SynchroMessageConnectionServerImpl.accept(SynchroMessageConnectionServerImpl.java:47)
	at javax.management.remote.generic.GenericConnectorServer$Receiver.run(GenericConnectorServer.java:340)

   Locked ownable synchronizers:
	- None

""Timer-1"" #56 daemon prio=5 os_prio=0 tid=0x000000001d157800 nid=0xccc in Object.wait() [0x000000004dfaf000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java:502)
	at java.util.TimerThread.mainLoop(Timer.java:526)
	- locked <0x0000000081e17ce8> (a java.util.TaskQueue)
	at java.util.TimerThread.run(Timer.java:505)

   Locked ownable synchronizers:
	- None

""ActiveMQ Transport Server: ssl://0.0.0.0:13701?needClientAuth=true&keepAlive=true"" #55 daemon prio=9 os_prio=2 tid=0x000000001d156800 nid=0x1b08 runnable [0x000000004dcae000]
   java.lang.Thread.State: RUNNABLE
	at java.net.DualStackPlainSocketImpl.waitForNewConnection(Native Method)
	at java.net.DualStackPlainSocketImpl.socketAccept(DualStackPlainSocketImpl.java:135)
	at java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:409)
	at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:199)
	- locked <0x0000000081e204f8> (a java.net.SocksSocketImpl)
	at java.net.ServerSocket.implAccept(ServerSocket.java:545)
	at sun.security.ssl.SSLServerSocketImpl.accept(SSLServerSocketImpl.java:348)
	at org.apache.activemq.transport.tcp.TcpTransportServer.run(TcpTransportServer.java:350)
	at java.lang.Thread.run(Thread.java:745)

   Locked ownable synchronizers:
	- None

""ActiveMQ Transport Server Thread Handler: ssl://0.0.0.0:13701?needClientAuth=true&keepAlive=true"" #54 daemon prio=8 os_prio=1 tid=0x000000001d14e800 nid=0x2114 waiting on condition [0x000000004dbae000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x0000000081e3dcf8> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
	at java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:467)
	at org.apache.activemq.transport.tcp.TcpTransportServer$2.run(TcpTransportServer.java:427)
	at java.lang.Thread.run(Thread.java:745)

   Locked ownable synchronizers:
	- None

""ActiveMQ Data File Writer"" #51 daemon prio=10 os_prio=2 tid=0x000000001d159800 nid=0xf94 in Object.wait() [0x000000004d8af000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java:502)
	at org.apache.activemq.store.kahadb.disk.journal.DataFileAppender.processQueue(DataFileAppender.java:306)
	- locked <0x0000000081e4d9c0> (a java.lang.Object)
	at org.apache.activemq.store.kahadb.disk.journal.DataFileAppender$1.run(DataFileAppender.java:193)

   Locked ownable synchronizers:
	- None

""ActiveMQ Journal Checkpoint Worker"" #50 daemon prio=5 os_prio=0 tid=0x000000001d158000 nid=0x3ec waiting on condition [0x000000004d7ae000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x00000000f847d368> (a java.util.concurrent.CountDownLatch$Sync)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:997)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1304)
	at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:231)
	at org.apache.activemq.store.kahadb.disk.page.PageFile.flush(PageFile.java:521)
	at org.apache.activemq.store.kahadb.MessageDatabase.checkpointUpdate(MessageDatabase.java:1563)
	at org.apache.activemq.store.kahadb.MessageDatabase$17.execute(MessageDatabase.java:1535)
	at org.apache.activemq.store.kahadb.disk.page.Transaction.execute(Transaction.java:779)
	at org.apache.activemq.store.kahadb.MessageDatabase.checkpointUpdate(MessageDatabase.java:1532)
	at org.apache.activemq.store.kahadb.MessageDatabase.checkpointCleanup(MessageDatabase.java:951)
	at org.apache.activemq.store.kahadb.MessageDatabase$3.run(MessageDatabase.java:359)

   Locked ownable synchronizers:
	- <0x0000000081e52c50> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)
	- <0x0000000081e52cc8> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)

""KahaDB Scheduler"" #48 daemon prio=5 os_prio=0 tid=0x000000001d159000 nid=0x149c in Object.wait() [0x000000004d5af000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at java.util.TimerThread.mainLoop(Timer.java:552)
	- locked <0x0000000081e4e288> (a java.util.TaskQueue)
	at java.util.TimerThread.run(Timer.java:505)

   Locked ownable synchronizers:
	- None

""ActiveMQ Broker[dcrd] Scheduler"" #47 daemon prio=5 os_prio=0 tid=0x000000001d154800 nid=0x22b4 in Object.wait() [0x000000004d4af000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at java.util.TimerThread.mainLoop(Timer.java:552)
	- locked <0x0000000081e54e38> (a java.util.TaskQueue)
	at java.util.TimerThread.run(Timer.java:505)

   Locked ownable synchronizers:
	- None

""Store org.hibernate.cache.StandardQueryCache Expiry Thread"" #46 daemon prio=1 os_prio=-2 tid=0x000000001d155000 nid=0xa18 waiting on condition [0x000000004d1af000]
   java.lang.Thread.State: TIMED_WAITING (sleeping)
	at java.lang.Thread.sleep(Native Method)
	at net.sf.ehcache.store.DiskStore.expiryThreadMain(DiskStore.java:831)
	at net.sf.ehcache.store.DiskStore.access$700(DiskStore.java:59)
	at net.sf.ehcache.store.DiskStore$ExpiryThread.run(DiskStore.java:1008)

   Locked ownable synchronizers:
	- None

""Store org.hibernate.cache.StandardQueryCache Spool Thread"" #45 daemon prio=2 os_prio=-2 tid=0x000000001d150800 nid=0x158c waiting on condition [0x000000004d0af000]
   java.lang.Thread.State: TIMED_WAITING (sleeping)
	at java.lang.Thread.sleep(Native Method)
	at net.sf.ehcache.store.DiskStore.spoolThreadMain(DiskStore.java:556)
	at net.sf.ehcache.store.DiskStore.access$600(DiskStore.java:59)
	at net.sf.ehcache.store.DiskStore$SpoolThread.run(DiskStore.java:990)

   Locked ownable synchronizers:
	- None

""Store org.hibernate.cache.UpdateTimestampsCache Expiry Thread"" #44 daemon prio=1 os_prio=-2 tid=0x000000001d153800 nid=0x1a2c waiting on condition [0x000000004bd1e000]
   java.lang.Thread.State: TIMED_WAITING (sleeping)
	at java.lang.Thread.sleep(Native Method)
	at net.sf.ehcache.store.DiskStore.expiryThreadMain(DiskStore.java:831)
	at net.sf.ehcache.store.DiskStore.access$700(DiskStore.java:59)
	at net.sf.ehcache.store.DiskStore$ExpiryThread.run(DiskStore.java:1008)

   Locked ownable synchronizers:
	- None

""Store org.hibernate.cache.UpdateTimestampsCache Spool Thread"" #43 daemon prio=2 os_prio=-2 tid=0x000000001d14c000 nid=0x1394 waiting on condition [0x000000004b92f000]
   java.lang.Thread.State: TIMED_WAITING (sleeping)
	at java.lang.Thread.sleep(Native Method)
	at net.sf.ehcache.store.DiskStore.spoolThreadMain(DiskStore.java:556)
	at net.sf.ehcache.store.DiskStore.access$600(DiskStore.java:59)
	at net.sf.ehcache.store.DiskStore$SpoolThread.run(DiskStore.java:990)

   Locked ownable synchronizers:
	- None

""Store org.hibernate.cache.StandardQueryCache Expiry Thread"" #42 daemon prio=1 os_prio=-2 tid=0x000000001d153000 nid=0xb60 waiting on condition [0x000000004a3df000]
   java.lang.Thread.State: TIMED_WAITING (sleeping)
	at java.lang.Thread.sleep(Native Method)
	at net.sf.ehcache.store.DiskStore.expiryThreadMain(DiskStore.java:831)
	at net.sf.ehcache.store.DiskStore.access$700(DiskStore.java:59)
	at net.sf.ehcache.store.DiskStore$ExpiryThread.run(DiskStore.java:1008)

   Locked ownable synchronizers:
	- None

""Store org.hibernate.cache.StandardQueryCache Spool Thread"" #41 daemon prio=2 os_prio=-2 tid=0x000000001d14f000 nid=0x1be0 waiting on condition [0x000000004a2df000]
   java.lang.Thread.State: TIMED_WAITING (sleeping)
	at java.lang.Thread.sleep(Native Method)
	at net.sf.ehcache.store.DiskStore.spoolThreadMain(DiskStore.java:556)
	at net.sf.ehcache.store.DiskStore.access$600(DiskStore.java:59)
	at net.sf.ehcache.store.DiskStore$SpoolThread.run(DiskStore.java:990)

   Locked ownable synchronizers:
	- None

""Store org.hibernate.cache.UpdateTimestampsCache Expiry Thread"" #40 daemon prio=1 os_prio=-2 tid=0x000000001d152000 nid=0x2328 waiting on condition [0x000000004a1df000]
   java.lang.Thread.State: TIMED_WAITING (sleeping)
	at java.lang.Thread.sleep(Native Method)
	at net.sf.ehcache.store.DiskStore.expiryThreadMain(DiskStore.java:831)
	at net.sf.ehcache.store.DiskStore.access$700(DiskStore.java:59)
	at net.sf.ehcache.store.DiskStore$ExpiryThread.run(DiskStore.java:1008)

   Locked ownable synchronizers:
	- None

""Store org.hibernate.cache.UpdateTimestampsCache Spool Thread"" #39 daemon prio=2 os_prio=-2 tid=0x000000001d151800 nid=0x1180 waiting on condition [0x0000000049a6f000]
   java.lang.Thread.State: TIMED_WAITING (sleeping)
	at java.lang.Thread.sleep(Native Method)
	at net.sf.ehcache.store.DiskStore.spoolThreadMain(DiskStore.java:556)
	at net.sf.ehcache.store.DiskStore.access$600(DiskStore.java:59)
	at net.sf.ehcache.store.DiskStore$SpoolThread.run(DiskStore.java:990)

   Locked ownable synchronizers:
	- None

""pool-1-thread-1"" #38 prio=5 os_prio=0 tid=0x000000001d14a800 nid=0x1ab4 waiting on condition [0x000000001a90f000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x000000008045d550> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
	at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)
	at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1067)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1127)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)

   Locked ownable synchronizers:
	- None

""Timer-0"" #37 daemon prio=5 os_prio=0 tid=0x000000001d14b800 nid=0x2190 in Object.wait() [0x000000001a60f000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at java.util.TimerThread.mainLoop(Timer.java:552)
	- locked <0x00000000800f1b68> (a java.util.TaskQueue)
	at java.util.TimerThread.run(Timer.java:505)

   Locked ownable synchronizers:
	- None

""2012993836@qtp-1219161283-9 - Acceptor0 SelectChannelConnector@0.0.0.0:13801"" #35 prio=5 os_prio=0 tid=0x000000001b630000 nid=0x1138 runnable [0x000000001ca0e000]
   java.lang.Thread.State: RUNNABLE
	at sun.nio.ch.WindowsSelectorImpl$SubSelector.poll0(Native Method)
	at sun.nio.ch.WindowsSelectorImpl$SubSelector.poll(WindowsSelectorImpl.java:296)
	at sun.nio.ch.WindowsSelectorImpl$SubSelector.access$400(WindowsSelectorImpl.java:278)
	at sun.nio.ch.WindowsSelectorImpl.doSelect(WindowsSelectorImpl.java:159)
	at sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:86)
	- locked <0x00000000f708c4a8> (a sun.nio.ch.Util$2)
	- locked <0x00000000f708c498> (a java.util.Collections$UnmodifiableSet)
	- locked <0x00000000f703e890> (a sun.nio.ch.WindowsSelectorImpl)
	at sun.nio.ch.SelectorImpl.select(SelectorImpl.java:97)
	at org.mortbay.io.nio.SelectorManager$SelectSet.doSelect(SelectorManager.java:498)
	at org.mortbay.io.nio.SelectorManager.doSelect(SelectorManager.java:192)
	at org.mortbay.jetty.nio.SelectChannelConnector.accept(SelectChannelConnector.java:124)
	at org.mortbay.jetty.AbstractConnector$Acceptor.run(AbstractConnector.java:708)
	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)

   Locked ownable synchronizers:
	- None

""1499867659@qtp-1219161283-8 - Acceptor1 SelectChannelConnector@0.0.0.0:13801"" #34 prio=5 os_prio=0 tid=0x000000001b62e800 nid=0x1ccc runnable [0x000000001c90f000]
   java.lang.Thread.State: RUNNABLE
	at sun.nio.ch.WindowsSelectorImpl$SubSelector.poll0(Native Method)
	at sun.nio.ch.WindowsSelectorImpl$SubSelector.poll(WindowsSelectorImpl.java:296)
	at sun.nio.ch.WindowsSelectorImpl$SubSelector.access$400(WindowsSelectorImpl.java:278)
	at sun.nio.ch.WindowsSelectorImpl.doSelect(WindowsSelectorImpl.java:159)
	at sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:86)
	- locked <0x00000000f8482690> (a sun.nio.ch.Util$2)
	- locked <0x00000000f8482680> (a java.util.Collections$UnmodifiableSet)
	- locked <0x00000000f8482600> (a sun.nio.ch.WindowsSelectorImpl)
	at sun.nio.ch.SelectorImpl.select(SelectorImpl.java:97)
	at org.mortbay.io.nio.SelectorManager$SelectSet.doSelect(SelectorManager.java:498)
	at org.mortbay.io.nio.SelectorManager.doSelect(SelectorManager.java:192)
	at org.mortbay.jetty.nio.SelectChannelConnector.accept(SelectChannelConnector.java:124)
	at org.mortbay.jetty.AbstractConnector$Acceptor.run(AbstractConnector.java:708)
	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)

   Locked ownable synchronizers:
	- None

""461160828@qtp-1219161283-7 - Acceptor0 SslSocketConnector@0.0.0.0:13901"" #33 prio=5 os_prio=0 tid=0x000000001b62f800 nid=0x1900 runnable [0x000000001c80e000]
   java.lang.Thread.State: RUNNABLE
	at java.net.DualStackPlainSocketImpl.accept0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketAccept(DualStackPlainSocketImpl.java:131)
	at java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:409)
	at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:199)
	- locked <0x0000000081e8b228> (a java.net.SocksSocketImpl)
	at java.net.ServerSocket.implAccept(ServerSocket.java:545)
	at sun.security.ssl.SSLServerSocketImpl.accept(SSLServerSocketImpl.java:348)
	at org.mortbay.jetty.security.SslSocketConnector.accept(SslSocketConnector.java:197)
	at org.mortbay.jetty.AbstractConnector$Acceptor.run(AbstractConnector.java:708)
	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)

   Locked ownable synchronizers:
	- None

""1325124186@qtp-1219161283-6"" #32 prio=5 os_prio=0 tid=0x000000001b631000 nid=0x208 in Object.wait() [0x000000001c70f000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:626)
	- locked <0x00000000800eadb0> (a org.mortbay.thread.QueuedThreadPool$PoolThread)

   Locked ownable synchronizers:
	- None

""156856360@qtp-1219161283-4"" #30 prio=5 os_prio=0 tid=0x000000001b62e000 nid=0xe30 in Object.wait() [0x000000001c50f000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:626)
	- locked <0x00000000800eaf30> (a org.mortbay.thread.QueuedThreadPool$PoolThread)

   Locked ownable synchronizers:
	- None

""1226020905@qtp-1219161283-3"" #29 prio=5 os_prio=0 tid=0x000000001b62c800 nid=0x1590 in Object.wait() [0x000000001c40f000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:626)
	- locked <0x00000000800eb0b0> (a org.mortbay.thread.QueuedThreadPool$PoolThread)

   Locked ownable synchronizers:
	- None

""573673894@qtp-1219161283-2"" #28 prio=5 os_prio=0 tid=0x000000001b62a000 nid=0xef8 in Object.wait() [0x000000001c30f000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:626)
	- locked <0x00000000800eb230> (a org.mortbay.thread.QueuedThreadPool$PoolThread)

   Locked ownable synchronizers:
	- None

""1321530272@qtp-1219161283-1"" #27 prio=5 os_prio=0 tid=0x000000001b62d000 nid=0x110c in Object.wait() [0x000000001c20e000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:626)
	- locked <0x00000000800eb3b0> (a org.mortbay.thread.QueuedThreadPool$PoolThread)

   Locked ownable synchronizers:
	- None

""1162918744@qtp-1219161283-0"" #26 prio=5 os_prio=0 tid=0x000000001b62b000 nid=0x2068 in Object.wait() [0x000000001c10f000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:626)
	- locked <0x00000000800eb530> (a org.mortbay.thread.QueuedThreadPool$PoolThread)

   Locked ownable synchronizers:
	- None

""RMI TCP Accept-0"" #23 daemon prio=5 os_prio=0 tid=0x0000000019ab5000 nid=0x3c4 runnable [0x000000001b20f000]
   java.lang.Thread.State: RUNNABLE
	at java.net.DualStackPlainSocketImpl.accept0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketAccept(DualStackPlainSocketImpl.java:131)
	at java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:409)
	at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:199)
	- locked <0x00000000800f1c80> (a java.net.SocksSocketImpl)
	at java.net.ServerSocket.implAccept(ServerSocket.java:545)
	at java.net.ServerSocket.accept(ServerSocket.java:513)
	at sun.management.jmxremote.LocalRMIServerSocketFactory$1.accept(LocalRMIServerSocketFactory.java:52)
	at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.executeAcceptLoop(TCPTransport.java:400)
	at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.run(TCPTransport.java:372)
	at java.lang.Thread.run(Thread.java:745)

   Locked ownable synchronizers:
	- None

""RMI TCP Accept-13301"" #22 daemon prio=5 os_prio=0 tid=0x0000000019a80000 nid=0x1fa0 runnable [0x000000001b10e000]
   java.lang.Thread.State: RUNNABLE
	at java.net.DualStackPlainSocketImpl.accept0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketAccept(DualStackPlainSocketImpl.java:131)
	at java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:409)
	at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:199)
	- locked <0x000000008012b968> (a java.net.SocksSocketImpl)
	at java.net.ServerSocket.implAccept(ServerSocket.java:545)
	at java.net.ServerSocket.accept(ServerSocket.java:513)
	at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.executeAcceptLoop(TCPTransport.java:400)
	at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.run(TCPTransport.java:372)
	at java.lang.Thread.run(Thread.java:745)

   Locked ownable synchronizers:
	- None

""RMI TCP Accept-0"" #21 daemon prio=5 os_prio=0 tid=0x0000000019a7f000 nid=0x16d4 runnable [0x000000001b00f000]
   java.lang.Thread.State: RUNNABLE
	at java.net.DualStackPlainSocketImpl.accept0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketAccept(DualStackPlainSocketImpl.java:131)
	at java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:409)
	at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:199)
	- locked <0x00000000800f7e18> (a java.net.SocksSocketImpl)
	at java.net.ServerSocket.implAccept(ServerSocket.java:545)
	at java.net.ServerSocket.accept(ServerSocket.java:513)
	at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.executeAcceptLoop(TCPTransport.java:400)
	at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.run(TCPTransport.java:372)
	at java.lang.Thread.run(Thread.java:745)

   Locked ownable synchronizers:
	- None

""Service Thread"" #20 daemon prio=9 os_prio=0 tid=0x0000000019991000 nid=0x5e0 runnable [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

   Locked ownable synchronizers:
	- None

""C1 CompilerThread2"" #19 daemon prio=9 os_prio=2 tid=0x0000000019990000 nid=0x1358 waiting on condition [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

   Locked ownable synchronizers:
	- None

""C2 CompilerThread1"" #18 daemon prio=9 os_prio=2 tid=0x000000001998b800 nid=0x790 waiting on condition [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

   Locked ownable synchronizers:
	- None

""C2 CompilerThread0"" #17 daemon prio=9 os_prio=2 tid=0x0000000019988800 nid=0x1934 waiting on condition [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

   Locked ownable synchronizers:
	- None

""JDWP Event Helper Thread"" #16 daemon prio=10 os_prio=0 tid=0x000000001997d800 nid=0x1498 runnable [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

   Locked ownable synchronizers:
	- None

""JDWP Transport Listener: dt_socket"" #15 daemon prio=10 os_prio=0 tid=0x000000001994f000 nid=0xa44 runnable [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

   Locked ownable synchronizers:
	- None

""RMI RenewClean-[localhost:13401]"" #12 daemon prio=5 os_prio=0 tid=0x000000001993e000 nid=0x27c in Object.wait() [0x000000001a80f000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:143)
	- locked <0x000000008012c090> (a java.lang.ref.ReferenceQueue$Lock)
	at sun.rmi.transport.DGCClient$EndpointEntry$RenewCleanThread.run(DGCClient.java:536)
	at java.lang.Thread.run(Thread.java:745)

   Locked ownable synchronizers:
	- None

""RMI Scheduler(0)"" #11 daemon prio=5 os_prio=0 tid=0x0000000019933000 nid=0x2170 waiting on condition [0x000000001a70e000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x0000000080021cc0> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
	at java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
	at java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
	at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1067)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1127)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)

   Locked ownable synchronizers:
	- None

""GC Daemon"" #9 daemon prio=2 os_prio=-2 tid=0x00000000198b8000 nid=0x1820 in Object.wait() [0x000000001a14f000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at sun.misc.GC$Daemon.run(GC.java:117)
	- locked <0x0000000080000d58> (a sun.misc.GC$LatencyLock)

   Locked ownable synchronizers:
	- None

""RMI Reaper"" #8 prio=5 os_prio=0 tid=0x00000000198b5000 nid=0xcec in Object.wait() [0x000000001a04e000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	- waiting on <0x0000000080007788> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:143)
	- locked <0x0000000080007788> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:164)
	at sun.rmi.transport.ObjectTable$Reaper.run(ObjectTable.java:351)
	at java.lang.Thread.run(Thread.java:745)

   Locked ownable synchronizers:
	- None

""RMI TCP Accept-13401"" #7 daemon prio=5 os_prio=0 tid=0x0000000019823800 nid=0x58c runnable [0x0000000019f4e000]
   java.lang.Thread.State: RUNNABLE
	at java.net.DualStackPlainSocketImpl.accept0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketAccept(DualStackPlainSocketImpl.java:131)
	at java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:409)
	at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:199)
	- locked <0x000000008000f820> (a java.net.SocksSocketImpl)
	at java.net.ServerSocket.implAccept(ServerSocket.java:545)
	at java.net.ServerSocket.accept(ServerSocket.java:513)
	at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.executeAcceptLoop(TCPTransport.java:400)
	at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.run(TCPTransport.java:372)
	at java.lang.Thread.run(Thread.java:745)

   Locked ownable synchronizers:
	- None

""Attach Listener"" #5 daemon prio=5 os_prio=2 tid=0x0000000017b15000 nid=0x23a4 waiting on condition [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

   Locked ownable synchronizers:
	- None

""Signal Dispatcher"" #4 daemon prio=9 os_prio=2 tid=0x0000000017b14000 nid=0xc68 runnable [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

   Locked ownable synchronizers:
	- None

""Finalizer"" #3 daemon prio=8 os_prio=1 tid=0x0000000002caa000 nid=0x1a20 in Object.wait() [0x000000001948f000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:143)
	- locked <0x00000000800175e0> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:164)
	at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:209)

   Locked ownable synchronizers:
	- None

""Reference Handler"" #2 daemon prio=10 os_prio=2 tid=0x0000000017adb000 nid=0x1af8 in Object.wait() [0x000000001938e000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java:502)
	at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:157)
	- locked <0x000000008001ed98> (a java.lang.ref.Reference$Lock)

   Locked ownable synchronizers:
	- None

""VM Thread"" os_prio=2 tid=0x0000000017ad9000 nid=0x148c runnable 

""GC task thread#0 (ParallelGC)"" os_prio=0 tid=0x0000000002bca800 nid=0xcdc runnable 

""GC task thread#1 (ParallelGC)"" os_prio=0 tid=0x0000000002bcb800 nid=0x8a4 runnable 

""GC task thread#2 (ParallelGC)"" os_prio=0 tid=0x0000000002bcd000 nid=0x830 runnable 

""GC task thread#3 (ParallelGC)"" os_prio=0 tid=0x0000000002bcf000 nid=0x1d8c runnable 

""GC task thread#4 (ParallelGC)"" os_prio=0 tid=0x0000000002bd1000 nid=0xb9c runnable 

""GC task thread#5 (ParallelGC)"" os_prio=0 tid=0x0000000002bd2000 nid=0x12b4 runnable 

""VM Periodic Task Thread"" os_prio=2 tid=0x0000000019abb000 nid=0x152c waiting on condition 

JNI global references: 7802

{code}
;;;","12/Aug/16 15:44;jira-bot;Commit 330f0ce7341934ae7869b094dc769c972ad18347 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=330f0ce ]

AMQ-5815 ensure async write latch is released on exception
;;;","12/Aug/16 15:54;gtully; https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=330f0ce deals with the enableIndexWriteAsync=true case.

For the original description from Andrew, I can't yet see where the write lock is not getting released.;;;","15/Aug/16 10:37;jira-bot;Commit 6d44ae6e971a341217c6f5a8669900740654b0ab in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=6d44ae6 ]

AMQ-5815 - remove obsolete remnant of fix for AMQ-2594. holding global lock before attempting to get index and checkpoint lock can lead to deadlock if checkpoint write lock request pops in
;;;","15/Aug/16 10:41;gtully;two different issues here with similar IO failure scenarios.
note the default behaviour is to stop the broker in such an event via the IOExceptionHandler.
however it should be ok to proceed without deadlock.

It would be great to find the original jstack, because the restarted checkpoint thread is most probably attempting to get the write lock which is the trigger. In any event, having a global transaction store lock is a remnant of an old fix and is broken.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong with role-based authorization when using right permission,AMQ-5814,12833667,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,tabish,hongphu8790,hongphu8790,29/May/15 04:27,04/Aug/15 12:51,14/Jul/23 05:44,02/Jul/15 15:41,5.10.0,5.10.2,5.11.0,5.11.1,,,,,,5.11.2,5.12.0,,,Broker,MQTT,,,,0,,,,,,"Since version 5.10, the problem has been caused by broker. It was behaving wrong with role-based authorization. I have configured right SimpleAuthorization plugin but no luck.  

I guess it has problem from -AMQ-5160- 

Here my test cases on github, please review and let me know if you have any questions: https://github.com/hongphu8790/activemq/tree/master/mqtt-authorization-test

Project test-case descriptions:
- Using debug mode for broker to view detail
problem.
- Repeat with pom.xml file 
+ With AMQ 5.9.1 (it will pass all test cases)
+ With AMQ >= 5.10.0 (it will pass only test cases with using publisher have super permission

Here my log occurred when the test case failed:
{code:title=Log debug mode - activemq.log|borderStyle=solid}
2015-05-29 10:30:24,746 | DEBUG | AbstractRegion                 | Subscription denied for TopicSubscription: consumer=ID:XXXXXX-50828-1432870224218-2:2:-1:1, destinations=0, dispatched=0, delivered=0, matched=0, discarded=0 to destination topic://dcu.id: User publisher is not authorized to read from: topic://dcu.id
{code}","Unix, Windows",cshannon,githubbot,hongphu8790,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5160,,,,,,,,,,,"30/May/15 02:44;hongphu8790;activemq-snapshot-5.12-20150529.223833.txt;https://issues.apache.org/jira/secure/attachment/12736307/activemq-snapshot-5.12-20150529.223833.txt",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jul 03 01:45:42 UTC 2015,,,,,,,,,,,"0|i2fczj:",9223372036854775807,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"29/May/15 14:43;tabish;Have you tried against a 5.12-SNAPSHOT, there have been some fixes in this area I think. ;;;","30/May/15 02:47;hongphu8790;Hi Timothy Bish,

I was tested again with 5.12-snapshot, and no luck. Please view my attachment: activemq-snapshot-5.12-20150529.223833.txt

Thanks!;;;","04/Jun/15 13:17;hongphu8790;Hi Timothy Bish,

This was a big problem for my production. I couldn't use AMQ version greater than version 5.9.1.

Thanks!;;;","01/Jul/15 07:28;hongphu8790;Hi [~tabish121],

Please help me to reproduce this error, we couldn't use AMQ version greater than 5.9.1 with SimpleAuthorization support.

Thanks!;;;","01/Jul/15 22:12;tabish;I wrote a little test that doesn't requite MQTT to reproduce, the difference from previous behaviour seems to have come from the changes made for AMQ-5160.  Some further investigation is needed.  ;;;","01/Jul/15 22:13;tabish;Changes here seem to have introduced this behavior;;;","02/Jul/15 11:26;cshannon;I looked at this a little yesterday.  When the producer sends a message it causes a new destination to get created because the subscriber is listening on a wildcard destination.  The issue seems to be that during destination creation, the ConnectionContext of the producer is used to create the destination, instead of the consumer.  (Happens in addSubscriptionsForDestination method of TopicRegion).  The end result is the security check fails in the addSubscription method of AuthorizationDestinationFilter because it uses the producer's ACLs instead of the consumer's ACLs to determine if the subscription is allowed.;;;","02/Jul/15 11:39;hongphu8790;This is a big bug, i think so. Could you tell me how to bypass or fix this problem. We have waited a long time since first release AMQ 5.9.1.

Thanks!;;;","02/Jul/15 12:35;githubbot;GitHub user cshannon opened a pull request:

    https://github.com/apache/activemq/pull/125

    https://issues.apache.org/jira/browse/AMQ-5814

    This fixes an issue where a producer's connection context was being
    used to create a subscription instead of the consumer's context
    which could lead to permission check failures.
    
    Thanks to hongphu8790@gmail.com for providing the test case.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/cshannon/activemq AMQ-5814

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/125.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #125
    
----
commit ef552fcc8bb14eea33170019aca2850e3c03467d
Author: Christopher L. Shannon (cshannon) <christopher.l.shannon@gmail.com>
Date:   2015-07-02T12:33:16Z

    https://issues.apache.org/jira/browse/AMQ-5814
    
    This fixes an issue where a producer's connection context was being
    used to create a subscription instead of the consumer's context
    which could lead to permission check failures.
    
    Thanks to hongphu8790@gmail.com for providing the test case.

----
;;;","02/Jul/15 12:40;cshannon;[~hongphu8790],

I have pushed up a pull request to fix this issue and included your test case in the patch to make sure that the issue stays fixed.

[~tabish121],

Can you take a look and make sure it looks ok?  It seemed like a very simple fix but I just want to make sure what I changed wouldn't have any unintended consequences.  I ran through some of the tests relating to AMQ-5160 and they all still seemed to pass.  I'm running through all the tests right now but that will take a while to finish.;;;","02/Jul/15 12:55;tabish;I was testing a similar fix last night, guess I should have assigned this one to myself to avoid duplication of effort, oops.  So I made basically the same change although I tried to ensure that a valid context was always passed along by checking that the context in the sub was non-null and using the pass in context if none was supplied in the subscription.

{code}
        ConnectionContext originalContext = sub.getContext() != null ? sub.getContext() : context;
{code}

From a run of the tests with this change I didn't see any new failures so I don't think there are any hidden surprises.  If you want to update your PR and do some additional sanity checks we can just push that.

I also created a simpler OpenWire only test since this actually affects any client connection which I will show below:

{code}
/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.activemq.bugs;

import static org.junit.Assert.assertNotNull;

import java.net.URI;
import java.util.ArrayList;
import java.util.List;

import javax.jms.Connection;
import javax.jms.ConnectionFactory;
import javax.jms.MessageConsumer;
import javax.jms.MessageProducer;
import javax.jms.Session;
import javax.jms.Topic;

import org.apache.activemq.ActiveMQConnectionFactory;
import org.apache.activemq.broker.BrokerPlugin;
import org.apache.activemq.broker.BrokerService;
import org.apache.activemq.broker.TransportConnector;
import org.apache.activemq.filter.DestinationMapEntry;
import org.apache.activemq.security.AuthenticationUser;
import org.apache.activemq.security.AuthorizationEntry;
import org.apache.activemq.security.AuthorizationPlugin;
import org.apache.activemq.security.DefaultAuthorizationMap;
import org.apache.activemq.security.SimpleAuthenticationPlugin;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;

public class AMQ5814Test {

    private BrokerService brokerService;
    private String openwireClientUrl;

    public BrokerPlugin configureAuthentication() throws Exception {
        List<AuthenticationUser> users = new ArrayList<>();
        users.add(new AuthenticationUser(""publisher"", ""123"", ""publisher""));
        users.add(new AuthenticationUser(""subscriber"", ""123"", ""subscriber""));
        users.add(new AuthenticationUser(""admin"", ""123"", ""publisher,subscriber""));

        SimpleAuthenticationPlugin authenticationPlugin = new SimpleAuthenticationPlugin(users);

        return authenticationPlugin;
    }

    public BrokerPlugin configureAuthorization() throws Exception {

        @SuppressWarnings(""rawtypes"")
        List<DestinationMapEntry> authorizationEntries = new ArrayList<>();

        AuthorizationEntry entry = new AuthorizationEntry();
        entry.setTopic(""dcu.>"");
        entry.setRead(""subscriber"");
        entry.setWrite(""publisher"");
        entry.setAdmin(""publisher,subscriber"");
        authorizationEntries.add(entry);

        entry = new AuthorizationEntry();
        entry.setTopic(""ActiveMQ.Advisory.>"");
        entry.setRead(""publisher,subscriber"");
        entry.setWrite(""publisher,subscriber"");
        entry.setAdmin(""publisher,subscriber"");
        authorizationEntries.add(entry);

        DefaultAuthorizationMap authorizationMap = new DefaultAuthorizationMap(authorizationEntries);
        AuthorizationPlugin authorizationPlugin = new AuthorizationPlugin(authorizationMap);

        return authorizationPlugin;
    }

    @Before
    public void setup() throws Exception {

        TransportConnector openwireConnector = new TransportConnector();
        openwireConnector.setUri(new URI(""tcp://localhost:0""));
        openwireConnector.setName(""openwire"");

        ArrayList<BrokerPlugin> plugins = new ArrayList<>();
        plugins.add(configureAuthentication());
        plugins.add(configureAuthorization());

        brokerService = new BrokerService();
        brokerService.setPersistent(false);
        brokerService.addConnector(openwireConnector);
        if (!plugins.isEmpty()) {
            BrokerPlugin[] array = new BrokerPlugin[plugins.size()];
            brokerService.setPlugins(plugins.toArray(array));
        }
        brokerService.start();
        brokerService.waitUntilStarted();

        openwireClientUrl = openwireConnector.getPublishableConnectString();
    }

    @After
    public void shutdown() throws Exception {
        if (brokerService != null) {
            brokerService.stop();
            brokerService.waitUntilStopped();
            brokerService = null;
        }
    }

    @Test(timeout=30000)
    public void testProduceConsumeWithAuthorization() throws Exception {
        ConnectionFactory factory = new ActiveMQConnectionFactory(openwireClientUrl);
        Connection connection1 = factory.createConnection(""subscriber"", ""123"");
        Session session1 = connection1.createSession(false, Session.AUTO_ACKNOWLEDGE);
        Topic wildCarded = session1.createTopic(""dcu.>"");
        MessageConsumer consumer = session1.createConsumer(wildCarded);
        connection1.start();

        Connection connection2 = factory.createConnection(""publisher"", ""123"");
        Session session2 = connection2.createSession(false, Session.AUTO_ACKNOWLEDGE);
        Topic named = session2.createTopic(""dcu.id"");
        MessageProducer producer = session2.createProducer(named);
        producer.send(session2.createTextMessage(""test""));

        assertNotNull(consumer.receive(2000));

        connection1.close();
        connection2.close();
    }
}
{code}
;;;","02/Jul/15 13:23;cshannon;Not a problem, I only spent a few minutes on this as it was only a one line fix.  Since you created the OpenWire test I'll let you go ahead and push up the fix and I'll close my PR.;;;","02/Jul/15 13:24;githubbot;Github user cshannon closed the pull request at:

    https://github.com/apache/activemq/pull/125
;;;","02/Jul/15 15:41;tabish;Fix and test added on master ;;;","03/Jul/15 01:45;hongphu8790;Hey [~tabish121], [~christopher.l.shannon],

It's working fine now. When is it released or a nightly build version? I'm looking forward to it.
Thanks!
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
TopicSubscriptions report a negative countBeforeFull statistic,AMQ-5813,12833387,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,cshannon,cshannon,28/May/15 11:26,04/Aug/15 12:51,14/Jul/23 05:44,05/Jun/15 18:13,5.11.1,,,,,,,,,5.11.2,5.12.0,,,Broker,,,,,0,,,,,,"The {{countBeforeFull}} method that is part of {{Subscription}} is supposed to return the number of messages that the subscription can accept before it is full.  This works fine for Durables and Queues (Prefetch subscriptions) where the value is a positive value when it can accept more messages.  Usually the value will report the size of prefetch minus any prefetch extension and dispatchedQueueSize.

However, for a {{TopicSubscription}} this value is reversed and it is subtracting prefetch from dispatchedQueueSize.  For example, if the prefetch policy is set at 1000, this method will report ""-1000"" when calling countBeforeFull.",,cshannon,githubbot,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jun 05 18:13:57 UTC 2015,,,,,,,,,,,"0|i2fbb3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/May/15 11:37;githubbot;GitHub user cshannon opened a pull request:

    https://github.com/apache/activemq/pull/105

    https://issues.apache.org/jira/browse/AMQ-5813

    Fixing countBeforeFull for TopicSubscriptions to report a positive value

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/cshannon/activemq AMQ-5813

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/105.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #105
    
----
commit 5bfc32b02c6887951526758f7ce6ad61cb30967a
Author: Christopher L. Shannon (cshannon) <christopher.l.shannon@gmail.com>
Date:   2015-05-28T11:33:17Z

    https://issues.apache.org/jira/browse/AMQ-5813
    
    Fixing countBeforeFull for TopicSubscriptions to report a positive value

----
;;;","01/Jun/15 18:45;cshannon;I made a quick change the PR to fix a small typo in the unit test class.;;;","05/Jun/15 18:13;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/105
;;;","05/Jun/15 18:13;tabish;Patch applied with thanks.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NoSuchElementException during resource adapter shutdown in EAP 6,AMQ-5811,12833281,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,gaohoward,gaohoward,28/May/15 02:02,19/Jun/15 15:15,14/Jul/23 05:44,19/Jun/15 15:15,5.11.1,,,,,,,,,5.12.0,,,,RAR,,,,,0,,,,,,"After deploying activemq-rar to EAP 6 and starting the server, it sometimes gives NoSuchElementException during shutdown, like:
{quote}
17:06:12,471 ERROR [stderr] (ResourceAdapterDeploymentService Thread Pool -- 1) Exception in thread ""ResourceAdapterDeploymentService Thread Pool -- 1"" java.util.NoSuchElementException
17:06:12,475 ERROR [stderr] (ResourceAdapterDeploymentService Thread Pool -- 1) 	at java.util.HashMap$HashIterator.nextEntry(HashMap.java:925)
17:06:12,475 ERROR [stderr] (ResourceAdapterDeploymentService Thread Pool -- 1) 	at java.util.HashMap$KeyIterator.next(HashMap.java:956)
17:06:12,475 ERROR [stderr] (ResourceAdapterDeploymentService Thread Pool -- 1) 	at org.apache.activemq.ra.ActiveMQResourceAdapter.stop(ActiveMQResourceAdapter.java:152)
17:06:12,478 ERROR [stderr] (ResourceAdapterDeploymentService Thread Pool -- 1) 	at org.jboss.as.connector.services.resourceadapters.deployment.AbstractResourceAdapterDeploymentService.unregisterAll(AbstractResourceAdapterDeploymentService.java:188)
17:06:12,478 ERROR [stderr] (ResourceAdapterDeploymentService Thread Pool -- 1) 	at org.jboss.as.connector.services.resourceadapters.deployment.ResourceAdapterXmlDeploymentService.unregisterAll(ResourceAdapterXmlDeploymentService.java:155)
17:06:12,479 ERROR [stderr] (ResourceAdapterDeploymentService Thread Pool -- 1) 	at org.jboss.as.connector.services.resourceadapters.deployment.AbstractResourceAdapterDeploymentService$2.run(AbstractResourceAdapterDeploymentService.java:299)
17:06:12,480 ERROR [stderr] (ResourceAdapterDeploymentService Thread Pool -- 1) 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
17:06:12,480 ERROR [stderr] (ResourceAdapterDeploymentService Thread Pool -- 1) 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
17:06:12,480 ERROR [stderr] (ResourceAdapterDeploymentService Thread Pool -- 1) 	at java.lang.Thread.run(Thread.java:745)
17:06:12,480 ERROR [stderr] (ResourceAdapterDeploymentService Thread Pool -- 1) 	at org.jboss.threads.JBossThread.run(JBossThread.java:122)
{quote}
",,gaohoward,githubbot,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jun 19 15:15:09 UTC 2015,,,,,,,,,,,"0|i2fanj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Jun/15 05:28;githubbot;GitHub user gaohoward opened a pull request:

    https://github.com/apache/activemq/pull/112

    https://issues.apache.org/jira/browse/AMQ-5811

    Added synchronization blocks around sentitive code to
    prevent concurrent modification of the HashMap.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gaohoward/activemq master_AMQ-5811

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/112.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #112
    
----
commit c3ee94a078b3142a490453f9af38287114b25ef0
Author: Howard Gao <hgao@redhat.com>
Date:   2015-06-12T05:22:51Z

    https://issues.apache.org/jira/browse/AMQ-5811
    
    Added synchronization blocks around sentitive code to
    prevent concurrent modification of the HashMap.

----
;;;","19/Jun/15 15:14;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/112
;;;","19/Jun/15 15:15;tabish;Patch applied, thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Using https transport with http proxy,AMQ-5804,12833170,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,PavloVasylchenko,PavloVasylchenko,27/May/15 20:33,19/Jun/15 20:29,14/Jul/23 05:44,19/Jun/15 20:29,5.11.1,,,,,,,,,5.12.0,,,,Transport,,,,,1,,,,,,"After specifying connection url like:
https://address:443?proxyHost=192.168.1.1&proxyPort=80
I got exception Scheme 'http' not registered
It happens because default schema for proxy is http,
but when we uses https address it registers only https schema in HttpsClientTransport

",,PavloVasylchenko,rminko,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/May/15 12:05;PavloVasylchenko;diff.txt;https://issues.apache.org/jira/secure/attachment/12735856/diff.txt",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Patch,,,,,,,,,9223372036854775807,,,Fri Jun 19 20:29:21 UTC 2015,,,,,,,Patch Available,,,,"0|i2f9zb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/May/15 12:05;PavloVasylchenko;This patch can solve the problem;;;","19/Jun/15 20:29;tabish;patch applied, thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect Task Usage mentioned for amq browse command for the msgsel,AMQ-5796,12832618,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,davsclaus,jaysensharma,jaysensharma,26/May/15 05:29,29/Nov/16 16:43,14/Jul/23 05:44,29/Nov/16 16:43,5.11.0,5.11.1,,,,,,,,5.15.0,,,,,,,,,0,,,,,,"- The *""megsel""* usage help mentioned in the activemq browse command does not put the message selector value in the Double quatation mark which is causing the users following error.

{code}
[jsensharma@localhost bin]$ cd apache-activemq-5.11.1/bin
[jsensharma@localhost bin]$ ./activemq-admin browse --amqurl tcp://localhost:61616 --msgsel JMSMessageID='*:1' FOO.BAR


ERROR: java.lang.RuntimeException: Failed to execute browse task. Reason: javax.jms.InvalidSelectorException: (JMSMessageID=*:1)
java.lang.RuntimeException: Failed to execute browse task. Reason: javax.jms.InvalidSelectorException: (JMSMessageID=*:1)
	at org.apache.activemq.console.command.AmqBrowseCommand.runTask(AmqBrowseCommand.java:155)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:150)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:104)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.activemq.console.Main.runTaskClass(Main.java:262)
	at org.apache.activemq.console.Main.main(Main.java:115)
ERROR: java.lang.Exception: javax.jms.InvalidSelectorException: (JMSMessageID=*:1)
java.lang.Exception: javax.jms.InvalidSelectorException: (JMSMessageID=*:1)
	at org.apache.activemq.console.command.AmqBrowseCommand.runTask(AmqBrowseCommand.java:156)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:150)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:104)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.activemq.console.Main.runTaskClass(Main.java:262)
	at org.apache.activemq.console.Main.main(Main.java:115)
Caused by: javax.jms.InvalidSelectorException: (JMSMessageID=*:1)
	at org.apache.activemq.selector.SelectorParser.parse(SelectorParser.java:88)
	at org.apache.activemq.selector.SelectorParser.parse(SelectorParser.java:58)
	at org.apache.activemq.ActiveMQQueueBrowser.<init>(ActiveMQQueueBrowser.java:80)
	at org.apache.activemq.ActiveMQSession.createBrowser(ActiveMQSession.java:1449)
	at org.apache.activemq.console.filter.AmqMessagesQueryFilter.queryMessages(AmqMessagesQueryFilter.java:104)
	at org.apache.activemq.console.filter.AmqMessagesQueryFilter.query(AmqMessagesQueryFilter.java:86)
	at org.apache.activemq.console.filter.WildcardTransformFilter.query(WildcardTransformFilter.java:60)
	at org.apache.activemq.console.util.AmqMessagesUtil.getMessages(AmqMessagesUtil.java:60)
	at org.apache.activemq.console.command.AmqBrowseCommand.runTask(AmqBrowseCommand.java:142)
	... 10 more
Caused by: org.apache.activemq.selector.ParseException: Parse error at line 1, column 15.  Encountered: *
	at org.apache.activemq.selector.SelectorParser.generateParseException(SelectorParser.java:1313)
	at org.apache.activemq.selector.SelectorParser.jj_consume_token(SelectorParser.java:1261)
	at org.apache.activemq.selector.SelectorParser.unaryExpr(SelectorParser.java:474)
	at org.apache.activemq.selector.SelectorParser.multExpr(SelectorParser.java:391)
	at org.apache.activemq.selector.SelectorParser.addExpression(SelectorParser.java:360)
	at org.apache.activemq.selector.SelectorParser.comparisonExpression(SelectorParser.java:212)
	at org.apache.activemq.selector.SelectorParser.equalityExpression(SelectorParser.java:172)
	at org.apache.activemq.selector.SelectorParser.andExpression(SelectorParser.java:136)
	at org.apache.activemq.selector.SelectorParser.orExpression(SelectorParser.java:115)
	at org.apache.activemq.selector.SelectorParser.primaryExpr(SelectorParser.java:537)
	at org.apache.activemq.selector.SelectorParser.unaryExpr(SelectorParser.java:471)
	at org.apache.activemq.selector.SelectorParser.multExpr(SelectorParser.java:391)
	at org.apache.activemq.selector.SelectorParser.addExpression(SelectorParser.java:360)
	at org.apache.activemq.selector.SelectorParser.comparisonExpression(SelectorParser.java:212)
	at org.apache.activemq.selector.SelectorParser.equalityExpression(SelectorParser.java:157)
	at org.apache.activemq.selector.SelectorParser.andExpression(SelectorParser.java:136)
	at org.apache.activemq.selector.SelectorParser.orExpression(SelectorParser.java:115)
	at org.apache.activemq.selector.SelectorParser.JmsSelector(SelectorParser.java:107)
	at org.apache.activemq.selector.SelectorParser.parse(SelectorParser.java:85)
	... 18 more
{code}

",All,davsclaus,githubbot,jaysensharma,jira-bot,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Nov 29 16:43:14 UTC 2016,,,,,,,,,,,"0|i2f6m7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/May/15 05:37;githubbot;GitHub user jaysensharma opened a pull request:

    https://github.com/apache/activemq/pull/104

    [AMQ-5796] Incorrect Task Usage mentioned for amq browse command for …

    …the msgsel option

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/jaysensharma/activemq-1 AMQ-5796

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/104.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #104
    
----
commit 4fe17d080715ca712f39f796b6a43a722a3e1119
Author: Jay SenSharma <joy.sensharma@gmail.com>
Date:   2015-05-26T05:36:10Z

    [AMQ-5796] Incorrect Task Usage mentioned for amq browse command for the msgsel option

----
;;;","26/May/15 05:38;jaysensharma;Sent the pull request :   https://github.com/apache/activemq/pull/104;;;","29/Nov/16 16:42;jira-bot;Commit e6fa7353252e57f4e573bcd3d00b82b76c2fe0be in activemq's branch refs/heads/master from [~davsclaus]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e6fa735 ]

AMQ-5796: Incorrect Task Usage mentioned for amq browse command. Thanks to Jay SenSharma for the patch. This fixes #104.
;;;","29/Nov/16 16:42;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/104
;;;","29/Nov/16 16:43;davsclaus;Thanks for the patch;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
swiss army knife example broken,AMQ-5793,12832076,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,andytaylor,andytaylor,andytaylor,22/May/15 07:11,22/May/15 07:56,14/Jul/23 05:44,22/May/15 07:56,5.11.1,,,,,,,,,5.x,,,,Samples,,,,,0,,,,,,Wrong value of activemq.home property in swissarmy/build.xml file,,andytaylor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,2015-05-22 07:11:30.0,,,,,,,,,,,"0|i2f3c7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Huge number of TIME_WAIT connections observed while using activemq resource adapter with EAP6,AMQ-5790,12831654,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,jaysensharma,jaysensharma,21/May/15 08:39,09/Jun/20 15:13,14/Jul/23 05:44,26/Feb/19 12:31,5.11.0,5.9.0,,,,,,,,5.16.0,,,,Broker,RAR,,,,1,,,,,,"-  While using activemq resource adapter (activemq-rar-5.9.0.rar or higher) on JBoss EAP 6.3 side it can be noticed that thousand of TIME_WAIT tcp connections are getting created every 2-3 minutes interval. These TIME_WAIT sockets are fluctuating from thousand (like 2000-3000) to 1 in every 2-3 minutes of interval.


Following are the steps to reproduce this issue:

*Step-1).* Configure AMQ broker to listen on ""61621"" then start it.

*Step-2).* Deploy the ""activemq-rar.rar""  (5.9 vesion) to standalone instance of JBoss EAP 6.3 and use the attached ""standalone-full.xml"" file to start the EAP6.3 as ot has the resource-adapter configuration in it.
 {code}
    cd jboss-eap-6.3.0/bin
   ./standalone.sh -c standalone-full.xml
{code}

*Step-3).* Deploy the a simple MDB based application like an EAR containing around 20 MDBs listening to 20 different queues present on the A-MQ side. All these MDBs are very simple MDBs and just displays the received TextMessages. These MDBs have the following annotations in it (see maxSessions = 1).

{code}
@MessageDriven(activationConfig={@javax.ejb.ActivationConfigProperty(propertyName=""destination"", propertyValue=""java:/jms/queue1/1.0""), @javax.ejb.ActivationConfigProperty(propertyName=""useJndi"", propertyValue=""true""), @javax.ejb.ActivationConfigProperty(propertyName=""destinationType"", propertyValue=""javax.jms.Queue""), @javax.ejb.ActivationConfigProperty(propertyName=""acknowledgeMode"", propertyValue=""Auto-acknowledge""), @javax.ejb.ActivationConfigProperty(propertyName=""maximumRedeliveries"", propertyValue=""6""), @javax.ejb.ActivationConfigProperty(propertyName=""initialRedeliveryDelay"", propertyValue=""5000""), @javax.ejb.ActivationConfigProperty(propertyName=""maxSessions"", propertyValue=""1"")})

.
.
    public void onMessage(Message message) {
        TextMessage textMessage = (TextMessage) message;
        try {
            log.info(""SimpleMdb1 received a message"" + textMessage.getText());
        }
        catch (JMSException e) {
            log.info(""Error in SimpleMdb1 while received a message"");
        }
    }
{code}

*Step-4).* Execute the following command and notice around thousand TCP connections as following:

{code}
 netstat -tnlpa | grep TIME_WAIT | grep 61621  
----------------------------------
tcp6       0      0 127.0.0.1:61621         127.0.0.1:39199         TIME_WAIT   -                   
tcp6       0      0 127.0.0.1:61621         127.0.0.1:39461         TIME_WAIT   -                   
tcp6       0      0 127.0.0.1:61621         127.0.0.1:39935         TIME_WAIT   -                   
tcp6       0      0 127.0.0.1:61621         127.0.0.1:38999         TIME_WAIT   -                   
tcp6       0      0 127.0.0.1:61621         127.0.0.1:39139         TIME_WAIT   -                   
tcp6       0      0 127.0.0.1:61621         127.0.0.1:39922         TIME_WAIT   -                   
tcp6       0      0 127.0.0.1:61621         127.0.0.1:40027         TIME_WAIT   -                   
tcp6       0      0 127.0.0.1:61621         127.0.0.1:38908         TIME_WAIT   - 
{code}

",ALL,chammp,gtully,jaysensharma,jira-bot,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-7455,,,,,,,,,AMQ-4486,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon May 18 05:56:14 UTC 2020,,,,,,,,,,,"0|i2f19r:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/May/15 08:40;jaysensharma;The resource-adapter configuration on EAP6.3 side is as following:

{code}
        <subsystem xmlns=""urn:jboss:domain:resource-adapters:1.1"">
            <resource-adapters>
                <resource-adapter id=""activemq-rar.rar"">
                    <archive>
                        activemq-rar.rar
                    </archive>
                    <transaction-support>XATransaction</transaction-support>
                    <config-property name=""Password"">
                        admin
                    </config-property>
                    <config-property name=""UserName"">
                        admin
                    </config-property>
                    <config-property name=""ServerUrl"">
                        tcp://localhost:61621?jms.rmIdFromConnectionId=true
                    </config-property>
                    <connection-definitions>
                        <connection-definition class-name=""org.apache.activemq.ra.ActiveMQManagedConnectionFactory"" jndi-name=""java:/ConnectionFactory"" enabled=""true"" pool-name=""DefaultAmqConnectionFactory"">
                            <xa-pool>
                                <min-pool-size>1</min-pool-size>
                                <max-pool-size>20</max-pool-size>
                                <prefill>false</prefill>
                                <is-same-rm-override>false</is-same-rm-override>
                            </xa-pool>
                            <recovery>
                                <recover-credential>
                                    <user-name>admin</user-name>
                                    <password>admin</password>
                                </recover-credential>
                            </recovery>
                        </connection-definition>
                    </connection-definitions>
                    <admin-objects>
                        <admin-object class-name=""org.apache.activemq.command.ActiveMQQueue"" jndi-name=""java:/jms/queue20/1.0"" use-java-context=""true"" pool-name=""SimpleQueue20"">
                            <config-property name=""PhysicalName"">
                                SimpleQueue20
                            </config-property>
                        </admin-object>
                        <admin-object class-name=""org.apache.activemq.command.ActiveMQQueue"" jndi-name=""java:/jms/queue11/1.0"" use-java-context=""true"" pool-name=""SimpleQueue11"">
                            <config-property name=""PhysicalName"">
                                SimpleQueue11
                            </config-property>
                        </admin-object>
                        <admin-object class-name=""org.apache.activemq.command.ActiveMQQueue"" jndi-name=""java:/jms/queue10/1.0"" use-java-context=""true"" pool-name=""SimpleQueue10"">
                            <config-property name=""PhysicalName"">
                                SimpleQueue10
                            </config-property>
                        </admin-object>
                        <admin-object class-name=""org.apache.activemq.command.ActiveMQQueue"" jndi-name=""java:/jms/queue8/1.0"" use-java-context=""true"" pool-name=""SimpleQueue8"">
                            <config-property name=""PhysicalName"">
                                SimpleQueue8
                            </config-property>
                        </admin-object>
                        <admin-object class-name=""org.apache.activemq.command.ActiveMQQueue"" jndi-name=""java:/jms/queue7/1.0"" use-java-context=""true"" pool-name=""SimpleQueue7"">
                            <config-property name=""PhysicalName"">
                                SimpleQueue7
                            </config-property>
                        </admin-object>
                        <admin-object class-name=""org.apache.activemq.command.ActiveMQQueue"" jndi-name=""java:/jms/queue9/1.0"" use-java-context=""true"" pool-name=""SimpleQueue9"">
                            <config-property name=""PhysicalName"">
                                SimpleQueue9
                            </config-property>
                        </admin-object>
                        <admin-object class-name=""org.apache.activemq.command.ActiveMQQueue"" jndi-name=""java:/jms/queue16/1.0"" use-java-context=""true"" pool-name=""SimpleQueue16"">
                            <config-property name=""PhysicalName"">
                                SimpleQueue16
                            </config-property>
                        </admin-object>
                        <admin-object class-name=""org.apache.activemq.command.ActiveMQQueue"" jndi-name=""java:/jms/queue17/1.0"" use-java-context=""true"" pool-name=""SimpleQueue17"">
                            <config-property name=""PhysicalName"">
                                SimpleQueue17
                            </config-property>
                        </admin-object>
                        <admin-object class-name=""org.apache.activemq.command.ActiveMQQueue"" jndi-name=""java:/jms/queue18/1.0"" use-java-context=""true"" pool-name=""SimpleQueue18"">
                            <config-property name=""PhysicalName"">
                                SimpleQueue18
                            </config-property>
                        </admin-object>
                        <admin-object class-name=""org.apache.activemq.command.ActiveMQQueue"" jndi-name=""java:/jms/queue2/1.0"" use-java-context=""true"" pool-name=""SimpleQueue2"">
                            <config-property name=""PhysicalName"">
                                SimpleQueue2
                            </config-property>
                        </admin-object>
                        <admin-object class-name=""org.apache.activemq.command.ActiveMQQueue"" jndi-name=""java:/jms/queue19/1.0"" use-java-context=""true"" pool-name=""SimpleQueue19"">
                            <config-property name=""PhysicalName"">
                                SimpleQueue19
                            </config-property>
                        </admin-object>
                        <admin-object class-name=""org.apache.activemq.command.ActiveMQQueue"" jndi-name=""java:/jms/queue1/1.0"" use-java-context=""true"" pool-name=""SimpleQueue1"">
                            <config-property name=""PhysicalName"">
                                SimpleQueue1
                            </config-property>
                        </admin-object>
                        <admin-object class-name=""org.apache.activemq.command.ActiveMQQueue"" jndi-name=""java:/jms/queue12/1.0"" use-java-context=""true"" pool-name=""SimpleQueue12"">
                            <config-property name=""PhysicalName"">
                                SimpleQueue12
                            </config-property>
                        </admin-object>
                        <admin-object class-name=""org.apache.activemq.command.ActiveMQQueue"" jndi-name=""java:/jms/queue4/1.0"" use-java-context=""true"" pool-name=""SimpleQueue4"">
                            <config-property name=""PhysicalName"">
                                SimpleQueue4
                            </config-property>
                        </admin-object>
                        <admin-object class-name=""org.apache.activemq.command.ActiveMQQueue"" jndi-name=""java:/jms/queue3/1.0"" use-java-context=""true"" pool-name=""SimpleQueue3"">
                            <config-property name=""PhysicalName"">
                                SimpleQueue3
                            </config-property>
                        </admin-object>
                        <admin-object class-name=""org.apache.activemq.command.ActiveMQQueue"" jndi-name=""java:/jms/queue13/1.0"" use-java-context=""true"" pool-name=""SimpleQueue13"">
                            <config-property name=""PhysicalName"">
                                SimpleQueue13
                            </config-property>
                        </admin-object>
                        <admin-object class-name=""org.apache.activemq.command.ActiveMQQueue"" jndi-name=""java:/jms/queue6/1.0"" use-java-context=""true"" pool-name=""SimpleQueue6"">
                            <config-property name=""PhysicalName"">
                                SimpleQueue6
                            </config-property>
                        </admin-object>
                        <admin-object class-name=""org.apache.activemq.command.ActiveMQQueue"" jndi-name=""java:/jms/queue14/1.0"" use-java-context=""true"" pool-name=""SimpleQueue14"">
                            <config-property name=""PhysicalName"">
                                SimpleQueue14
                            </config-property>
                        </admin-object>
                        <admin-object class-name=""org.apache.activemq.command.ActiveMQQueue"" jndi-name=""java:/jms/queue5/1.0"" use-java-context=""true"" pool-name=""SimpleQueue5"">
                            <config-property name=""PhysicalName"">
                                SimpleQueue5
                            </config-property>
                        </admin-object>
                        <admin-object class-name=""org.apache.activemq.command.ActiveMQQueue"" jndi-name=""java:/jms/queue15/1.0"" use-java-context=""true"" pool-name=""SimpleQueue15"">
                            <config-property name=""PhysicalName"">
                                SimpleQueue15
                            </config-property>
                        </admin-object>
                    </admin-objects>
                </resource-adapter>
            </resource-adapters>
        </subsystem>
{code};;;","26/Feb/19 12:24;gtully;AMQ-4486 needs to be reworked to resolve this, rather than using a new connection per xa op, sharing a single connection that is scoped by the RAR start/stop makes sense. The RAR always needs to be deployed to provide the mechanism to connect and stop/start is part of the deployment contract such that there will be no dangling connections.;;;","26/Feb/19 12:28;jira-bot;Commit 5bd2abf85dbda14bf41f54d09af4866e814f931f in activemq's branch refs/heads/master from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=5bd2abf ]

AMQ-5790 - rework the fix from AMQ-4486 to tie the inbound xaResource connection lifectyle to the rar start/stop
;;;","26/Feb/19 12:31;gtully;The RAR start/stop contract provides a good place to track the lifecycle of any connection used by xarecovery.  This avoids the need to open/close for each operation.;;;","18/May/20 05:56;chammp;Yes, after taking a close look at the diff [https://gitbox.apache.org/repos/asf?p=activemq.git;a=commitdiff;h=5bd2abf;hp=7c872afa222dac97fa139e607a0bac0a71f49111] this seems to be very much the case. Thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
VMTransport uses broken double checked locking,AMQ-5787,12831466,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,tabish,jahlborn,jahlborn,20/May/15 18:21,04/Aug/15 12:51,14/Jul/23 05:44,20/May/15 19:12,5.11.1,,,,,,,,,5.11.2,5.12.0,,,Broker,Transport,,,,0,,,,,,"the VMTransport.getMessageQueue() method uses the ""double checked locking"" idiom to avoid the synchronization overhead if the messageQueue has already been instantiated.  however, this idiom is broken unless the reference is marked as volatile.  ",,cshannon,githubbot,jahlborn,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu May 21 19:15:21 UTC 2015,,,,,,,,,,,"0|i2f05b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/May/15 18:46;githubbot;GitHub user cshannon opened a pull request:

    https://github.com/apache/activemq/pull/101

    Fixing missing volatile on references in VMTransport

    Fixing missing volatile on references in VMTransport to prevent a synchronization bug.
    
    This resolves https://issues.apache.org/jira/browse/AMQ-5787

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/cshannon/activemq AMQ-5787

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/101.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #101
    
----
commit 1e59f8b6a8af0feeb706175d1ffef45aaa82c382
Author: Christopher L. Shannon (cshannon) <christopher.l.shannon@gmail.com>
Date:   2015-05-20T18:38:59Z

    Fixing missing volatile on references in VMTransport to prevent a synchronization bug.
    
    This resolves https://issues.apache.org/jira/browse/AMQ-5787

----
;;;","20/May/15 18:46;cshannon;Good catch, there are actually 3 variables with the same problem.  messageQueue and taskRunner have the double locked check problem but taskRunnerFacatory should also be volatile as well to make sure it's visible to all threads since it is lazily initialized in getTaskRunner() if it is null.  I pushed up a pull request to fix all 3.;;;","20/May/15 19:12;tabish;Applied the PR, thanks!;;;","21/May/15 19:15;githubbot;Github user cshannon closed the pull request at:

    https://github.com/apache/activemq/pull/101
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deadlock between FilePendingMessageCursor usage change and incoming send operations.,AMQ-5785,12831373,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,tabish,sreepanchajanyam,sreepanchajanyam,20/May/15 13:21,26/Oct/16 08:38,14/Jul/23 05:44,08/Mar/16 21:53,5.10.0,,,,,,,,,,,,,Broker,,,,,0,,,,,,"During the peak loads we are encountering a recurring deadlock issue in ActiveMQ broker. The threads that are deadlocked are 
ActiveMQ  NIO Worker - trying to add message to FilePendingCursor
Broker.Service Worker - that is trying to expire message from FilePendingCursor.

=============================
Found one Java-level deadlock:
=============================
""ActiveMQ NIO Worker 1003"":
  waiting to lock monitor 0x00002aeeb515a4f8 (object 0x00000007807da3e8, a org.apache.activemq.broker.region.cursors.FilePendingMessageCursor),
  which is held by ""ActiveMQ BrokerService.worker.1""
""ActiveMQ BrokerService.worker.1"":
  waiting for ownable synchronizer 0x000000077ac84b40, (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync),
  which is held by ""ActiveMQ NIO Worker 1003""

Java stack information for the threads listed above:
===================================================
""ActiveMQ NIO Worker 1003"":
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.addMessageLast(FilePendingMessageCursor.java:207)
	- waiting to lock <0x00000007807da3e8> (a org.apache.activemq.broker.region.cursors.FilePendingMessageCursor)
	at org.apache.activemq.broker.region.cursors.StoreQueueCursor.addMessageLast(StoreQueueCursor.java:96)
	- locked <0x00000007784e8c88> (a org.apache.activemq.broker.region.cursors.StoreQueueCursor)
	at org.apache.activemq.broker.region.Queue.sendMessage(Queue.java:1855)
	at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:939)
	at org.apache.activemq.broker.region.Queue.send(Queue.java:733)
	at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:424)
	at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:445)
	at org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:297)
	at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)
	at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:307)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:147)
	at org.apache.activemq.broker.UserIDBroker.send(UserIDBroker.java:56)
	at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:152)
	at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:496)
	at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:756)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:294)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:148)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:270)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.nio.NIOTransport.serviceRead(NIOTransport.java:138)
	at org.apache.activemq.transport.nio.NIOTransport$1.onSelect(NIOTransport.java:69)
	at org.apache.activemq.transport.nio.SelectorSelection.onSelect(SelectorSelection.java:94)
	at org.apache.activemq.transport.nio.SelectorWorker$1.run(SelectorWorker.java:119)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:744)
""ActiveMQ BrokerService.worker.1"":
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x000000077ac84b40> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:834)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:867)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1197)
	at java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock.lock(ReentrantReadWriteLock.java:945)
	at org.apache.activemq.broker.region.Queue.messageExpired(Queue.java:1841)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.discardExpiredMessage(FilePendingMessageCursor.java:474)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.expireOldMessages(FilePendingMessageCursor.java:420)
	- locked <0x00000007807da3e8> (a org.apache.activemq.broker.region.cursors.FilePendingMessageCursor)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.onUsageChanged(FilePendingMessageCursor.java:398)
	- locked <0x00000007807da3e8> (a org.apache.activemq.broker.region.cursors.FilePendingMessageCursor)
	at org.apache.activemq.usage.Usage$1.run(Usage.java:304)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:744)
","Physical Machine (192 GB RAM, 24 VCPU), RHEL 5.9, Java 1.7
ActiveMQ runs on 4 GB heap",cshannon,gtully,jira-bot,mkubricht,sreepanchajanyam,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/May/15 13:24;sreepanchajanyam;threaddump16214.txt;https://issues.apache.org/jira/secure/attachment/12734128/threaddump16214.txt",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Oct 26 08:38:10 UTC 2016,,,,,,,,,,,"0|i2ezkn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/May/15 13:24;sreepanchajanyam;Attaching the thread dump. This issue is occurring everyday at peak hours. We have upgraded to 5.10.0 from 5.6.0 about 4 months ago. This issue has started occurring since a week.  ;;;","20/May/15 20:18;cshannon;This appears to probably be the same race condition issue I reported here: https://issues.apache.org/jira/browse/AMQ-5712

[~tabish121] uploaded a patch to that Jira that I've been running for a while and it has solved the deadlock problem for me.  It hasn't been committed to master yet but if you don't mind applying the patch yourself it should at least help you stop the deadlock until it gets fixed permanently.
;;;","21/May/15 23:09;tabish;Given this is logged against 5.10 it may be a different issue so it'd be a good idea to try out a later release 5.11.1+;;;","26/May/15 07:22;sreepanchajanyam;Agree with Timothy. This seems to be a different issue. This issue occurs in one of our several AMQ environments and cannot be replicated anywhere else.

I can go with the upgrade if I can find a root cause of the issue and for sure know that 5.11.1 will fix it as an AMQ upgrade in our environment is non trivial.
The issue again occurred yesterday and the thread dumps from yesterday tell the same story. If you need any activemq logs either in trace/debug mode I will be able to attach them here.

I am going through the ActiveMQ source code to corner this issue. Any pointers/help in this regard is greatly appreciated.;;;","26/May/15 11:59;cshannon;Yes, I think you are right that it is different.  At first glance it looked like the same issue based on the addMessageLast thread being the same.  The patch I suggested helps with timing out while waiting to add a message on a store, but this is different. 

Based on your thread dump, the NIO worker has acquired the {{messagesLock}} in the {{sendMessage}} method of the Queue class (line 1853 in the Queue.java) and is waiting on the intrinsic lock of FilePendingMessageCursor on the {{addMessageLast}} method (line 207 in FilePendingMessageCursor.java).  The BrokerService thread has acquired the intrinsic lock of FilePendingMessageCursor in {{onUsageChanged}} (line 394 of FilePendingMessageCursor.java)  and is waiting on {{messagesLock}} in the {{messageExpired}} method (line 1841 of Queue.java)....a pretty classic deadlock.  In version 5.11.1 some of this has been refactored a bit, {{sendMessage}} method has been replaced with {{cursorAdd}}, etc.  However, at a glance I think the deadlock issue would still exist in 5.11.1.

Tim, do you think it would be worth replacing the {{messagesLock.writeLock().lock()}} calls with {{messagesLock.writeLock().tryLock()}} and handle the lock timeout to prevent a potential deadlock?


;;;","08/Mar/16 15:41;gtully;it looks like the onUsageChanged of the filecursor needs to remove expired messages from the cursor and then process them as expired *without* holding the cursor lock. So break out discardExpiredMessages from expireOldMessages and call discardExpiredMessages with some list, without the lock;;;","08/Mar/16 18:38;jira-bot;Commit 8b23e072eeab2beebf62fd267bf8d9f88d05b5c2 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=8b23e07 ]

https://issues.apache.org/jira/browse/AMQ-5785

Avoid holding the intrinsic lock on the cursor when expiring the
messages.  ;;;","08/Mar/16 18:54;cshannon;[~gtully] , Good idea, I meant to come back to this issue and take a closer look at solving it but it got lost in the backlog. :);;;","26/Oct/16 08:38;mkubricht;Reviewing the commit I found that it introduces new mistake.
I believe that commit solves the deadlock problem, but...

It breaks original implementation of method {{expireOldMessages()}} which is:
# still used by other methods - {{tryAddMessageLast(MessageReference, long)}}, {{addMessageFirst(MessageReference)}}
# protected, so potentially used by extending classes

Problem caused by changing {{expireOldMessages()}} is that it breaks the functionality of freeing space when adding new messages to the cursor. Currently after this fix it only creates a an unnecessary load of expired messages to the list which is never used.

Commenting on these lines in code (which are shared by both addMessageX methods):
{code}
  if (!hasSpace()) {
    if (isDiskListEmpty()) {
      expireOldMessages(); // this will not clear anything!
      if (hasSpace()) { // this probably won't happen
        memoryList.addMessageFirst(node);
        node.incrementReferenceCount();
        return;
      } else { // will always fallback to flushing data to disk
        flushToDisk();
      }
    }
  }
{code}
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Jetty9 websockets dont work with mqtt,AMQ-5784,12831333,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,treyerl,treyerl,20/May/15 10:29,28/May/15 23:00,14/Jul/23 05:44,28/May/15 23:00,,,,,,,,,,5.12.0,,,,Connector,MQTT,,,,0,,,,,,"activemq in combination with jetty9 does not work for websockets + mqtt.
patch: http://pastebin.com/phcsJHR5
I tested with the chat example coming with activemq with all browsers.",,tabish,treyerl,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu May 28 23:00:49 UTC 2015,,,,,,,Patch Available,,,,"0|i2ezbr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/May/15 23:00;tabish;Patch applied with thanks. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Failed to browse Topic: XXXXX java.io.EOFException: Chunk stream does not exist, page: y is marked free",AMQ-5783,12831310,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,20/May/15 08:47,20/May/15 12:49,14/Jul/23 05:44,20/May/15 12:49,5.11.0,,,,,,,,,5.12.0,,,,KahaDB,Message Store,,,,0,durable_subscription,,,,,"When an offline durable subscriber is timed out (offlineDurableSubscriberTimeout configured) periodically see the following WARNING message.   

{code}

2015-05-13 13:45:08,472 [sage] Scheduler] - WARN  Topic                          - Failed to browse Topic: XXXXX
java.io.EOFException: Chunk stream does not exist, page: 39 is marked free
	at org.apache.activemq.store.kahadb.disk.page.Transaction$2.readPage(Transaction.java:470)
	at org.apache.activemq.store.kahadb.disk.page.Transaction$2.<init>(Transaction.java:447)
	at org.apache.activemq.store.kahadb.disk.page.Transaction.openInputStream(Transaction.java:444)
	at org.apache.activemq.store.kahadb.disk.page.Transaction.load(Transaction.java:420)
	at org.apache.activemq.store.kahadb.disk.page.Transaction.load(Transaction.java:377)
	at org.apache.activemq.store.kahadb.disk.index.BTreeIndex.loadNode(BTreeIndex.java:266)
	at org.apache.activemq.store.kahadb.disk.index.BTreeIndex.getRoot(BTreeIndex.java:174)
	at org.apache.activemq.store.kahadb.disk.index.BTreeIndex.iterator(BTreeIndex.java:236)
	at org.apache.activemq.store.kahadb.MessageDatabase$MessageOrderIndex$MessageOrderIterator.<init>(MessageDatabase.java:3033)
	at org.apache.activemq.store.kahadb.MessageDatabase$MessageOrderIndex.iterator(MessageDatabase.java:2985)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$4.execute(KahaDBStore.java:564)
	at org.apache.activemq.store.kahadb.disk.page.Transaction.execute(Transaction.java:779)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.recover(KahaDBStore.java:558)
	at org.apache.activemq.store.ProxyTopicMessageStore.recover(ProxyTopicMessageStore.java:62)
	at org.apache.activemq.broker.region.Topic.doBrowse(Topic.java:589)
	at org.apache.activemq.broker.region.Topic.access$100(Topic.java:65)
	at org.apache.activemq.broker.region.Topic$6.run(Topic.java:722)
	at org.apache.activemq.thread.SchedulerTimerTask.run(SchedulerTimerTask.java:33)
	at java.util.TimerThread.mainLoop(Timer.java:555)
	at java.util.TimerThread.run(Timer.java:505)

{code}",,gtully,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed May 20 12:49:36 UTC 2015,,,,,,,,,,,"0|i2ez6n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/May/15 12:49;gtully;fix in http://git-wip-us.apache.org/repos/asf/activemq/commit/3fdf9861

An empty topic in the store did a partial cleanup of index resources but there remained some stale references in the metadata. It is properly cleaned up now. Also an MBean was left dangling when a sub was removed.

Thanks to pat fox for the nice test :-);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Resource Adapter doesn't support SSL,AMQ-5782,12830974,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,andytaylor,andytaylor,andytaylor,19/May/15 10:25,21/May/15 08:35,14/Jul/23 05:44,19/May/15 10:42,5.11.1,,,,,,,,,5.x,,,,RAR,,,,,0,,,,,,The Resource Adapter doesn't allow the setting of Keystores and Trustores. The RAR needs to be updated to allow the setting of these parameters.,,andytaylor,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu May 21 08:35:42 UTC 2015,,,,,,,,,,,"0|i2ex53:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/May/15 10:38;githubbot;GitHub user andytaylor opened a pull request:

    https://github.com/apache/activemq/pull/100

    AMQ-5782 Added support to the Resource Adapter for SSL

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/andytaylor/activemq master

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/100.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #100
    
----
commit a2b6f174225e1dacebcc0ce373b4ef06c1fbd735
Author: Andy Taylor <andy.tayls67@gmail.com>
Date:   2015-05-19T10:33:13Z

    AMQ-5782 Added support to the Resource Adapter for SSL

----
;;;","21/May/15 08:35;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/100
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console queue graph encoding,AMQ-5775,12829568,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,13/May/15 14:31,13/May/15 14:33,14/Jul/23 05:44,13/May/15 14:33,5.11.0,,,,,,,,,5.12.0,,,,,,,,,0,,,,,,Some values are left un-encoded on this page,,dejanb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed May 13 14:33:45 UTC 2015,,,,,,,,,,,"0|i2eolz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/May/15 14:33;dejanb;Fixed with http://git-wip-us.apache.org/repos/asf/activemq/commit/eaf766b3;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory leak in JDBC Message Store,AMQ-5773,12829527,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,Denary,Denary,13/May/15 11:29,28/Mar/16 20:27,14/Jul/23 05:44,28/Mar/16 20:27,5.11.1,,,,,,,,,,,,,JDBC,,,,,0,,,,,,"Hello. Recently I've faced with weird problem, actually I'm not sure if it's a bug or misconfiguration or something else. But since my broker has ""almost"" default configuration I think this is bug.
Brief configuration description(full configuration xml file at the end of issue):
- Persistent storage: MySQL Db
- Message type: only persistent Text Messages 
- Subscribers: only durable topic subscribers

So, when I started broker I monitored its cpu/memory usage and here is what I noticed, memory chart below:(for servers monitoring I'm using New Relic):
[Heap Memory Chart | http://s4.postimg.org/fjiwg1v0d/amq_memory_leak_chart.png]
As you can see usage of memory slowly but constantly growing.
I decided to find out what exactly stored in activemq's heap, so I dumped heap and analyzed it with Eclipse MAT. Screenshots below:
[Leak Analysis | http://s4.postimg.org/nqaw7ml31/amq_leak_suspect.png]
As we can see almost all of the memory occupied in JournalTopicMessageStore. Going deeper:
[First heapdump | http://s4.postimg.org/p6r03iddp/amq_problem_suspect_00_00.png]
We can see *completions* list in TransactionContext, which has size of 38590 objects. This heap dump I made at 00:00.
Below is a heap dump that I made 4 hours later:
[Second heapdump | http://s4.postimg.org/e8fqlbosd/amq_problem_suspect_04_00.png]

The picture is the same, but now this list contains 63770 objecs.
Analyzed code a little bit, I noticed that this list is never cleared and hence its size always growth. Runnables that are stored in this list have link to Message object and hence this message is never will be GC'ed, even after ActiveMQ puts it to db. Of course I don't know probably this is a regular behavior that objects from this list are never removed, but it's looks really strange that object that contains this list is never recreated for 10 hours.

Below I paste configuration of my broker:
{code:title=""broker configuration""|collapse}
<beans
        xmlns=""http://www.springframework.org/schema/beans""
        xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
        xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
  http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd"">

    <!-- Allows us to use system properties as variables in this configuration file -->
    <bean class=""org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"">
        <property name=""locations"">
            <value>file:${activemq.conf}/credentials.properties</value>
        </property>
    </bean>

    <!-- Allows accessing the server log -->
    <bean id=""logQuery"" class=""io.fabric8.insight.log.log4j.Log4jLogQuery""
          lazy-init=""false"" scope=""singleton""
          init-method=""start"" destroy-method=""stop"">
    </bean>

    <!--
        The <broker> element is used to configure the ActiveMQ broker.
    -->
    <broker xmlns=""http://activemq.apache.org/schema/core""
            brokerName=""broker""
            persistent=""true""
            schedulerSupport=""true""
            advisorySupport=""false""
            dataDirectory=""${activemq.data}"">

        <destinationPolicy>
            <policyMap>
                <policyEntries>
                    <policyEntry topic="">"" producerFlowControl=""false"" expireMessagesPeriod=""0"">
                        <deadLetterStrategy>
                            <sharedDeadLetterStrategy processExpired=""false"" processNonPersistent=""false""/>
                        </deadLetterStrategy>
                    </policyEntry>
                    <policyEntry queue="">"" optimizedDispatch=""true"" producerFlowControl=""false"">
                        <deadLetterStrategy>
                            <sharedDeadLetterStrategy processExpired=""false"" processNonPersistent=""false""/>
                        </deadLetterStrategy>
                    </policyEntry>
                </policyEntries>
            </policyMap>
        </destinationPolicy>


        <!--
            The managementContext is used to configure how ActiveMQ is exposed in
            JMX. By default, ActiveMQ uses the MBean server that is started by
            the JVM. For more information, see:

            http://activemq.apache.org/jmx.html
        -->
        <managementContext>
            <managementContext createConnector=""false""/>
        </managementContext>

        <!--
            Configure message persistence for the broker. The default persistence
            mechanism is MySQL.
            For more information, see:

            http://activemq.apache.org/persistence.html
        -->
        <persistenceFactory>
            <journalPersistenceAdapterFactory
                    journalLogFiles=""8""
                    journalLogFileSize=""268435456""
                    useJournal=""true""
                    useQuickJournal=""false""
                    dataSource=""#mysql-ds""
                    dataDirectory=""${activemq.data}""/>
        </persistenceFactory>

        <!--
          The systemUsage controls the maximum amount of space the broker will
          use before disabling caching and/or slowing down producers. For more information, see:
          http://activemq.apache.org/producer-flow-control.html
        -->
        <systemUsage>
            <systemUsage>
                <memoryUsage>
                    <memoryUsage limit=""64 mb""/>
                </memoryUsage>
                <storeUsage>
                    <storeUsage limit=""100 gb""/>
                </storeUsage>
                <tempUsage>
                    <tempUsage limit=""50 gb""/>
                </tempUsage>
            </systemUsage>
        </systemUsage>

        <!--
            The transport connectors expose ActiveMQ over a given protocol to
            clients and other brokers. For more information, see:

            http://activemq.apache.org/configuring-transports.html
        -->
        <transportConnectors>
            <!-- DOS protection, limit concurrent connections to 1000 and frame size to 100MB -->
            <transportConnector name=""default"" uri=""nio://activemq.lc:61616?maximumConnections=1000&amp;connectionTimeout=600000&amp;wireFormat.maxFrameSize=104857600""/>
        </transportConnectors>

        <!-- redelivery configuration-->
        <plugins>
            <loggingBrokerPlugin logAll=""true""/>
            <redeliveryPlugin sendToDlqIfMaxRetriesExceeded=""true"">
                <redeliveryPolicyMap>
                    <redeliveryPolicyMap>
                        <defaultEntry>
                            <redeliveryPolicy maximumRedeliveries=""4"" initialRedeliveryDelay=""5000"" redeliveryDelay=""10000"" useExponentialBackOff=""true"" />
                        </defaultEntry>
                    </redeliveryPolicyMap>
                </redeliveryPolicyMap>
            </redeliveryPlugin>
        </plugins>

        <!-- destroy the spring context on shutdown to stop jetty -->
        <shutdownHooks>
            <bean xmlns=""http://www.springframework.org/schema/beans"" class=""org.apache.activemq.hooks.SpringContextHook""/>
        </shutdownHooks>

    </broker>

    <bean id=""mysql-ds""
          class=""org.apache.commons.dbcp.BasicDataSource""
          destroy-method=""close"">
        <property name=""driverClassName"" value=""com.mysql.jdbc.Driver""/>
        <property name=""url"" value=""jdbc:mysql://localhost:3306/activemq?relaxAutoCommit=true&amp;autoReconnect=true""/>
        <property name=""username"" value=""root""/>
        <property name=""password"" value=""""/>
        <property name=""poolPreparedStatements"" value=""true""/>
        <property name=""maxActive"" value=""40""/>
    </bean>

    <!--
        Enable web consoles, REST and Ajax APIs and demos
        The web consoles requires by default login, you can disable this in the jetty.xml file

        Take a look at ${ACTIVEMQ_HOME}/conf/jetty.xml for more details
    -->
    <import resource=""jetty.xml""/>

</beans>
{code}

Please help me fiund out is it configuration problem or it is really a bug, because I suffer with this problem for about 2 weeks.
Thanks!","$ java -version
java version ""1.8.0_20""
Java(TM) SE Runtime Environment (build 1.8.0_40-b26)
Java HotSpot(TM) 64-Bit Server VM (build 25.20-b23, mixed mode)

$ uname -a
Linux mint 3.13.0-24-generic #46-Ubuntu SMP Thu Apr 10 19:11:08 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux",Denary,gtully,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Mar 02 11:22:44 UTC 2016,,,,,,,,,,,"0|i2eocn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Mar/16 11:22;gtully;I think this is resolved by https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=7c11663

it was introduced via - https://issues.apache.org/jira/browse/AMQ-5266;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq-web-console feature doesn't install in Karaf 4 SNAPSHOT,AMQ-5770,12828609,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,jbonofre,bschuhmann,bschuhmann,09/May/15 19:04,17/Jun/15 19:15,14/Jul/23 05:44,17/Jun/15 19:15,5.11.1,5.12.0,,,,,,,,5.10.3,5.11.2,5.12.0,,Web Console,,,,,0,,,,,,"{{feature:install activemq-web-console}} fails with
{noformat} 
Error executing command: Unable to resolve root: missing requirement [root] osgi.identity; osgi.identity=activemq-web-console; type=ka
raf.feature; version=""[5.12.0.SNAPSHOT,5.12.0.SNAPSHOT]""; filter:=""(&(osgi.identity=activemq-web-console)(type=karaf.feature)(version>
=5.12.0.SNAPSHOT)(version<=5.12.0.SNAPSHOT))"" [caused by: Unable to resolve activemq-web-console/5.12.0.SNAPSHOT: missing requirement 
[activemq-web-console/5.12.0.SNAPSHOT] osgi.identity; osgi.identity=org.apache.activemq.activemq-web-console; type=osgi.bundle; versio
n=""[5.12.0.SNAPSHOT,5.12.0.SNAPSHOT]""; resolution:=mandatory [caused by: Unable to resolve org.apache.activemq.activemq-web-console/5.
12.0.SNAPSHOT: missing requirement [org.apache.activemq.activemq-web-console/5.12.0.SNAPSHOT] osgi.wiring.package; filter:=""(&(osgi.wi
ring.package=javax.servlet.resources)(version>=2.5.0)(!(version>=4.0.0)))""]]
{noformat}
As this package seems not to be used in the web console, an it not be removed? I've tested locally with this change
{noformat}
diff --git a/activemq-web-console/pom.xml b/activemq-web-console/pom.xml
index 1f1e641..4bdbe51 100755
--- a/activemq-web-console/pom.xml
+++ b/activemq-web-console/pom.xml
@@ -142,7 +142,6 @@
               org.w3c.dom,
               javax.servlet;version=""[2.5,4)"",
               javax.servlet.http;version=""[2.5,4)"",
-              javax.servlet.resources;version=""[2.5,4)"",
               javax.servlet.jsp,
               javax.servlet.jsp.tagext,
               javax.servlet.jsp.el,
{noformat}
And web console works if ActiveMQ is started standalone and deployed into Karaf 4.",,bschuhmann,ffang,jbonofre,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Jun/15 03:07;ffang;AMQ-5770.patch;https://issues.apache.org/jira/secure/attachment/12737769/AMQ-5770.patch",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jun 17 19:15:12 UTC 2015,,,,,,,,,,,"0|i2eit3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Jun/15 03:24;ffang;The package javax.servlet.resources is removed from servlet-api 3.1, which is the version used in Karaf 4, so mak the package javax.servlet.resources as optional can make the activemq-web-console works in both karaf 3 & 4 .

Also the activemq-web-console war bundle embed several jars which shouldn't bethere. Per the best practice of OSGi, a bundle should import and use the classes installed in the OSGi container already and avoid embedding classes. 

And there's the split-package issue exist in activemq-web-console bundle.

I attached a patch to fix above issues

Thanks;;;","15/Jun/15 14:53;jbonofre;As javax.servlet.resources is not used at all (in ActiveMQ WebConsole code), I'm cleaning the import and testing. IMHO, it's better than an optional import.;;;","17/Jun/15 09:12;jbonofre;I tested by removing the javax.servlet.resources import. The WebConsole installs and works fine with Karaf 2.4.x, Karaf 3.0.x, and 4.0.x. I'm pushing my change.;;;","17/Jun/15 09:15;jbonofre;Fixed on master: https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commitdiff;h=471911466b1c0d4acedacd4180ed6b39531a0119;;;","17/Jun/15 19:13;jbonofre;Fixed on activemq-5.11.x: https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commitdiff;h=78f53a13df4651637995c23fc9a11d2877915a3d;;;","17/Jun/15 19:15;jbonofre;Fixed on activemq-5.10.x: https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commitdiff;h=3049623f99ec3c9b9bc2ed7d8b8289da9f4abc7f;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Consume messages in transactions with AMQP stop after 500 messages,AMQ-5763,12827194,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,robbie,jdk,jdk,05/May/15 08:56,05/May/15 18:41,14/Jul/23 05:44,05/May/15 18:41,5.11.1,,,,,,,,,5.12.0,,,,AMQP,,,,,0,,,,,,"I try to consume messages via AMQP in transactions (1 message per transaction),  The consumption is stopped exactly after 500 messages. I am using qpid-jms AMQP client, but i have also reproduced this issue using SwiftMQ AMQP client. This issue happen only with ActiveMQ (my version is 5.11.1). For example on Qpid Java Broker(version 0.32) it is working correctly.

I have created sample test which may be used for issue reproduction. For reproduction please use following instructions: 
# Download amqptxerror.zip
# Unzip.
# Import pom.xml to your favorite IDE.
# Start your ActiveMQ broker or run maven with ""-p broker"".
# Run src/test/java/AMQPTxTest.java.

",,jdk,robbie,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/May/15 08:56;jdk;amqptxerror.zip;https://issues.apache.org/jira/secure/attachment/12730399/amqptxerror.zip",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue May 05 18:41:20 UTC 2015,,,,,,,,,,,"0|i2eahr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/May/15 15:19;tabish;I've added a test based on your work to capture this in the unit test suite.  ;;;","05/May/15 17:17;robbie;I took an initial look at this and the logs thus far don't really point at the broker, it could very well be an issue on the client side. Will need to investigate more.;;;","05/May/15 18:41;robbie;Ok, I need to take that back, I figured out the reason and whilst the client isn't handling it particularly well the core problem is on the broker, which isn't replenishing the transaction controllers link credit. As a result it is unable to begin the 501st transaction due to using the given initial 1000 credits to declare and discharge the previous 500 transactions.

Fixed in commit https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=fa81c1ff732fd50312ba349c8226c2d84345ad1d;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DefaultIOExceptionHandler causing NPE,AMQ-5758,12826735,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,graben,graben,02/May/15 16:14,06/May/15 19:13,14/Jul/23 05:44,06/May/15 19:13,5.11.1,,,,,,,,,5.12.0,,,,Broker,,,,,0,,,,,,DefaultIOExceptionHandler handles SQLException without checking if message is not null. This can cause NPE been thrown.,,graben,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed May 06 19:13:37 UTC 2015,,,,,,,,,,,"0|i2e7pb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/May/15 19:13;tabish;Applied fix on master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Slave broker not registering JMX mBean when scheduler is enabled,AMQ-5746,12824299,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,27/Apr/15 14:55,27/Apr/15 15:18,14/Jul/23 05:44,27/Apr/15 15:18,5.11.0,,,,,,,,,5.12.0,,,,Broker,Job Scheduler,,,,0,,,,,,"{code}
<broker xmlns=""http://activemq.apache.org/schema/core"" brokerName=""localhost"" dataDirectory=""${activemq.data}"" schedulerSupport=""true"">
{code}

The slave broker does not register it's mBean information vis JMX.  From looking at the log of the slave broker the following can be seen:

{code}
INFO | Database /scheduler/lock is locked... waiting 10 seconds for the database to be unlocked. Reason: java.io.IOException: File '/scheduler/lock' could not be locked.
{code}

In this case it appears the broker is stuck trying to lock the scheduler lock file before the mBean can be registered.

Without the scheduler enable, the mBean is registered in JMX and log shows the broker is just waiting to lock the kahadb lock file:

{code}
INFO | Database kahadb/lock is locked... waiting 5 seconds for the database to be unlocked. Reason: java.io.IOException: File 'kahadb/lock' could not be locked.
{code}",,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Apr 27 15:18:39 UTC 2015,,,,,,,,,,,"0|i2dt67:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Apr/15 14:56;gtully;related pr - with test case - thanks Martyn - https://github.com/apache/activemq/pull/80;;;","27/Apr/15 15:18;gtully;fix and test in http://git-wip-us.apache.org/repos/asf/activemq/commit/c1290511

scheduler store needs to be started after mbean registration;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Code analysis revealed multiple vulnerable sections of code,AMQ-5745,12824150,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,int3solutions,int3solutions,27/Apr/15 04:14,04/Aug/15 15:59,14/Jul/23 05:44,30/Jun/15 19:04,5.9.0,,,,,,,,,5.12.0,,,,,,,,,0,,,,,,"Code analysis revealed multiple vulnerable sections of code in ActiveMQ 5.9.0.  A patch file is attached that address the issues below.

activemq-web/src/main/resources/org/apache/activemq/web/prototype.js:700,706

	This code uses the  ""eval()"" function to evaluate JSON code -- this method is deprecated and dangerous and has been replaced by the JSON.parse() method, which is supported in all modern browsers -- considering that less than 2% of modern computers are still using legacy browsers, we believe the code should be upgraded to use the more secure method

activemq-broker/src/main/java/org/apache/activemq/broker/BrokerService.java:248
activemq-broker/src/main/java/org/apache/activemq/broker/PropertiesBrokerFactory.java:59
activemq-broker/src/main/java/org/apache/activemq/util/IOHelper.java:257,259
activemq-client/src/main/java/org/apache/activemq/ActiveMQSslConnectionFactory.java:130,162
activemq-client/src/main/java/org/apache/activemq/blob/DefaultBlobUploadStrategy.java:43,58
activemq-client/src/main/java/org/apache/activemq/blob/FTPBlobUploadStrategy.java:41
activemq-client/src/main/java/org/apache/activemq/blob/FileSystemBlobStrategy.java:68,77
activemq-console/src/main/java/org/apache/activemq/console/command/CreateCommand.java:194,218,219
activemq-fileserver/src/main/java/org/apache/activemq/util/IOHelper.java:102,104
activemq-jaas/src/main/java/org/apache/activemq/jaas/TextFileCertificateLoginModule.java:92,127
activemq-jdbc-store/src/main/java/org/apache/activemq/store/jdbc/adapter/BlobJDBCAdapter.java:142
activemq-jdbc-store/src/main/java/org/apache/activemq/store/jdbc/adapter/StreamJDBCAdapter.java:51
activemq-kahadb-store/src/main/java/org/apache/activemq/store/kahadb/disk/page/PageFile.java:198
activemq-kahadb-store/src/main/java/org/apache/activemq/store/kahadb/disk/util/DiskBenchmark.java:214,246,270
activemq-stomp/src/main/java/org/apache/activemq/transport/stomp/ProtocolConverter.java:68
activemq-tooling/activemq-perf-maven-plugin/src/main/java/org/apache/activemq/tool/AbstractJmsClientSystem.java:266
activemq-web/src/main/java/org/apache/activemq/web/AjaxServlet.java:67
activemq-tooling/activemq-perf-maven-plugin/src/main/java/org/apache/activemq/tool/JmsProducerClient.java:356
activemq-tooling/activemq-perf-maven-plugin/src/main/java/org/apache/activemq/tool/reports/XmlFilePerfReportWriter.java:198

	Resource leaks are possible at these code locations (the patched code releases the resources within a finally() statement)

activemq-broker/src/main/java/org/apache/activemq/broker/jmx/DestinationView.java:330
activemq-client/src/main/java/org/apache/activemq/ActiveMQConnectionFactory.java:283,290
activemq-kahadb-store/src/main/java/org/apache/activemq/store/kahadb/disk/journal/CallerBufferingDataFileAppender.java:182
activemq-kahadb-store/src/main/java/org/apache/activemq/store/kahadb/disk/journal/DataFileAppender.java:391
activemq-kahadb-store/src/main/java/org/apache/activemq/store/kahadb/disk/journal/Journal.java:568

	NULL dereferences are possible at these code locations

activemq-broker/src/main/java/org/apache/activemq/transport/vm/VMTransport.java:269

	Double-locking of this form is vulnerable to race conditions

activemq-http/src/main/java/org/apache/activemq/transport/http/HttpTunnelServlet.java:196,236
activemq-web/src/main/java/org/apache/activemq/web/MessageServlet.java:278,284

	XSS reflection is possible at these code locations (an XSS filter should be added)

activemq-fileserver/src/main/java/org/apache/activemq/util/RestFilter.java:72

	Path manipulation is possible via "".."" directory traversal

activemq-client/src/main/java/org/apache/activemq/thread/PooledTaskRunner.java:141

	A return statement inside a finally block will cause any exception that might be thrown in the try or catch block to be discarded.

activemq-log4j-appender/src/main/java/org/apache/activemq/util/JmsLogAppender.java:68

	Recording passwords to a logfile in plaintext is inadvisable",,cshannon,githubbot,int3solutions,jira-bot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Apr/15 04:15;int3solutions;activemq.patch;https://issues.apache.org/jira/secure/attachment/12728305/activemq.patch",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Aug 04 15:59:24 UTC 2015,,,,,,,Patch Available,,,,"0|i2ds9j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Jun/15 18:58;githubbot;GitHub user cshannon opened a pull request:

    https://github.com/apache/activemq/pull/118

    https://issues.apache.org/jira/browse/AMQ-5745

    This commit is based off a patch submitted by admin@int3solutions.com.
    It fixes several locations in the code where there are potential resource leaks.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/cshannon/activemq AMQ-5745

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/118.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #118
    
----
commit b6039184e91d82d0b7cd61dc15ca38f007931e10
Author: Christopher L. Shannon (cshannon) <christopher.l.shannon@gmail.com>
Date:   2015-06-22T18:34:37Z

    https://issues.apache.org/jira/browse/AMQ-5745
    
    This commit is based off a patch submitted by admin@int3solutions.com.
    It fixes several locations in the code where there are potential resource leaks.

----
;;;","22/Jun/15 18:59;cshannon;I created a pull request based on the patch submitted to this ticket to fix the resource leaks. (ie not closing streams).  The other fixes I still need to look at more.;;;","22/Jun/15 19:58;cshannon;I forgot to add that the double locking race condition issue was actually already fixed in AMQ-5787 ;;;","30/Jun/15 19:02;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/118
;;;","30/Jun/15 19:04;tabish;Applied PR containing a subset of the changes identified in the patch, others appear to be non-issues or already resolved.  I'd recommend testing the code from master with your tooling to see if any other issues show up that seems like real problems.  New issues can be opened with targeted patches for different areas of concern.  ;;;","04/Aug/15 15:59;jira-bot;Commit 42d9fd118daea5cc10f7eb56c263063adb322f25 in activemq's branch refs/heads/activemq-5.11.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=42d9fd1 ]

https://issues.apache.org/jira/browse/AMQ-5745

This commit is based off a patch submitted by admin@int3solutions.com.
It fixes several locations in the code where there are potential resource leaks.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Password encryption is broken in OSGi,AMQ-5744,12823701,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,24/Apr/15 09:53,24/Apr/15 09:59,14/Jul/23 05:44,24/Apr/15 09:59,5.11.0,,,,,,,,,5.12.0,,,,,,,,,0,,,,,,We're missing jasypt-spring31 bundle in the feature definition.,,dejanb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Apr 24 09:59:57 UTC 2015,,,,,,,,,,,"0|i2dpjb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Apr/15 09:59;dejanb;Fixed with http://git-wip-us.apache.org/repos/asf/activemq/commit/b8698953

I incidentally upgraded jasypt-spring3 to jasypt-spring31 for the standalone distribution as well;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"purged of 0 messages | org.apache.activemq.broker.region.Queue logged when clearing a temp queue",AMQ-5743,12823444,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,aivanise,aivanise,23/Apr/15 15:20,24/Apr/15 12:33,14/Jul/23 05:44,24/Apr/15 12:33,5.11.0,5.11.1,,,,,,,,5.12.0,,,,Broker,,,,,0,,,,,,"since upgrading to 5.11 I'm getting a lot of these in the logs


2015-03-10 09:50:36,212 | INFO  | temp-queue://ID:STATS2-37496-1425976359943-3:1604:1 purged of 0 messages | org.apache.activemq.broker.region.Queue | ActiveMQ Transport: ssl:///213.198.74.90:36525

According to Garry Tully this is an oversight, quote from the users mailing list

""that is an oversight, when purge is called from a jmx op, we want to
log the event, but it is also called to clear a temp queue when the
temp queue is deleted and that should not generate a log message. I
think that is your case.
Can you open a jira to track this so that others will see the
resolution. thanks""",,aivanise,gtully,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Apr 24 12:33:22 UTC 2015,,,,,,,,,,,"0|i2dnzj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Apr/15 12:33;gtully;thanks for reporting
fix in http://git-wip-us.apache.org/repos/asf/activemq/commit/23ecbe80;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Destination dispatched count statistic not reflecting redelivery/redispatch,AMQ-5742,12823420,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,23/Apr/15 13:26,25/Feb/16 13:27,14/Jul/23 05:44,23/Apr/15 14:26,5.11.0,,,,,,,,,5.11.2,5.12.0,,,Broker,,,,,0,dispatchedCount,jmx,statistics,,,"Tracking down in intermittent failure of org.apache.activemq.network.DemandForwardingBridgeTest.testSendThenAddConsumer

the problem turned out to be a decrement of the dispatched count when the consumer was removed.
So before the removal, most of the time, the stat was 1, and the test passed. But if the removal was complete, the dispatched count was decremented in error by the unacked message count. This is wrong. The dispatched stat needs to reflect what happened :-) Otherwise it tracks the dequeue count.",,gtully,ruffp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Feb 25 13:27:34 UTC 2016,,,,,,,,,,,"0|i2dnuv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Apr/15 14:26;gtully;fix in http://git-wip-us.apache.org/repos/asf/activemq/commit/c85fa67e;;;","25/Feb/16 13:27;ruffp;[~gtully] Because it seems the message queue counters are sometimes desynchronized on our AMQ, is it possible that bug is also present in version 5.10.2?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQP memory leak of sender links while closing non-durable consumers,AMQ-5738,12822950,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,robbie,robbie,22/Apr/15 09:23,22/Apr/15 09:36,14/Jul/23 05:44,22/Apr/15 09:36,5.12.0,,,,,,,,,5.12.0,,,,AMQP,,,,,0,,,,,,When the AmqpSender link object for a non-durable consumer is closed it is retained in maps within AmqpSession and AmqpConnection and as result will remain in memory until the connection closes.,,robbie,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Apr 22 09:36:21 UTC 2015,,,,,,,,,,,"0|i2dl5j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Apr/15 09:35;robbie;Fixed in https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=3a5f127d52f96466bb9e2c660ac5dbbed03ecf1d

This was probably an artifact of some recent refactoring from AMQ-5591 and its subtasks, and the commit handles some related issues as well (removed a duplicate closed variable, fixed some method names).;;;","22/Apr/15 09:36;robbie;I noticed this while investigating memory leaks while opening and closing lots of sessions and consumer links on a connection. Some of the issues were within Proton, which I am working to resolve via PROTON-848, PROTON-849, and PROTON-854. The broker will need a newer Proton release to resolve those once the fixes become available.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
increment redeliverCounter in the absence of client supplied information,AMQ-5735,12822692,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,21/Apr/15 15:04,22/Apr/15 21:40,14/Jul/23 05:44,22/Apr/15 21:40,5.11.0,,,,,,,,,5.12.0,,,,Broker,JMS client,,,,0,redelivery,,,,,"A consumer remove info contains the lastDeliveredSequenceId the consumer has delivered. In the absence of this information, for example when the consumer does a system exit or the connection drops - this information will be lost. The broker should increment redelivery to reflect the delivery attempt.
Currently lastDeliveredSequenceId==0 indicates missing information but that ignores the fact that the messageid broker sequence could be 0. A value of -1 should indicate nothing was delivered, > -1 the last sequence and from the broker side, -2 indicating that the broker provided the information and redelivery should be incremented. ie; -2 covers the client abort case.",,gtully,lichtin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-2087,AMQ-5513,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Apr 22 21:40:53 UTC 2015,,,,,,,,,,,"0|i2djmf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Apr/15 21:40;gtully;resolved in http://git-wip-us.apache.org/repos/asf/activemq/commit/eb6c0826

the removeInfo was working off of 0 in error, which was the root cause of many of the broken tests. the last sequenceId is now propagated as expected;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQP: corrupted incoming frame can cause the connection to drop but not be unregistered on the Broker.,AMQ-5731,12821339,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,15/Apr/15 22:13,05/Jun/15 16:31,14/Jul/23 05:44,15/Apr/15 22:53,5.10.0,5.10.1,5.10.2,5.11.0,5.11.1,,,,,5.12.0,,,,AMQP,,,,,0,,,,,,If a corrupted AMQP frame arrives after a connection is opened the Transport is stopped but the Connection is not unregistered with the Broker meaning a client with the same container ID can never connect again until the Broker is restarted. ,,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5829,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Apr 15 22:53:11 UTC 2015,,,,,,,,,,,"0|i2dbbb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Apr/15 22:53;tabish;Fixed on master. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Audit log shows plaintext password for QueueView.sendTextMessage,AMQ-5729,12821172,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,martyntaylor,martyntaylor,15/Apr/15 14:12,24/Apr/15 15:24,14/Jul/23 05:44,24/Apr/15 15:24,5.11.1,,,,,,,,,5.12.0,,,,JMX,,,,,0,,,,,,"Each AuditLogEntry dumps all arguments for the method call to the Audit log.  Some of these arguments should not be logged as they may contain senstive information.  For example QueueView.sendTextMessage contains user password information.

Example Log Entry:
anonymous called org.apache.activemq.broker.jmx.QueueView.sendTextMessage[String, admin, mypassword] at 04-03-2013 11:00:00",,martyntaylor,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Apr 24 15:24:52 UTC 2015,,,,,,,,,,,"0|i2daav:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Apr/15 15:24;martyntaylor;Fix Commit: a65ac586c203d08b6a68b07eedd7ae28a63b58a6;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Query command don't filter properly ,AMQ-5724,12821124,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,dejanb,dejanb,15/Apr/15 11:26,16/Jun/15 14:57,14/Jul/23 05:44,16/Jun/15 14:57,5.11.0,,,,,,,,,5.12.0,,,,,,,,,0,,,,,,--xobjname parameter is not taken into account and --view parameter doesn't show attributes in any meaningful order,,dejanb,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jun 16 14:57:29 UTC 2015,,,,,,,,,,,"0|i2da07:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Apr/15 11:33;dejanb;Fixed with http://git-wip-us.apache.org/repos/asf/activemq/commit/eece06b3;;;","16/Jun/15 14:01;gtully;there are clashes with -QQueue and -QTopic  - the ObjectName properties must be unique.;;;","16/Jun/15 14:57;gtully;fix and test in http://git-wip-us.apache.org/repos/asf/activemq/commit/1787edaf

addition of --invoke <operation> flag - to do simple mbean operations like pause/resume/gc etc on matching mbeans.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQP: Presettle deliveries miss calling local settle which leaks resources,AMQ-5723,12820841,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,14/Apr/15 15:17,14/Apr/15 15:30,14/Jul/23 05:44,14/Apr/15 15:30,5.10.0,5.10.1,5.10.2,5.11.0,5.11.1,,,,,5.12.0,,,,AMQP,,,,,0,,,,,,For incoming AMQP deliveries that are already settled the AMQP transport is not doing its own settle on the delivery leading Proton to retain delivery resources forever eventually exhausting the heap. ,,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Apr 14 15:30:33 UTC 2015,,,,,,,,,,,"0|i2d8db:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Apr/15 15:30;tabish;Fixed on master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update AMQ to commons-pool2,AMQ-5721,12820805,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,jgenender,jgenender,14/Apr/15 12:55,24/Aug/15 17:51,14/Jul/23 05:44,16/Apr/15 14:06,,,,,,,,,,5.12.0,5.12.1,,,,,,,,0,,,,,,Update ActiveMQ to use commons-pool2 instead of commons-pool. AMQ-5636 will need it.  The JMS pool and other components should use it as well.,,dejanb,githubbot,jgenender,lichtin,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5944,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Aug 24 17:50:26 UTC 2015,,,,,,,,,,,"0|i2d85b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Apr/15 13:00;githubbot;GitHub user jgenender opened a pull request:

    https://github.com/apache/activemq/pull/87

    AMQ-5721 - Update ActiveMQ to use commons-pool2 instead of commons-pool....

    ...AMQ-5636 will need it. The JMS pool and other components should use it as well.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/jgenender/activemq master

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/87.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #87
    
----
commit 21fba14b61eeaf49c5050a0dc27a80fd0488f5c6
Author: Jeff Genender <jgenender@savoirtech.com>
Date:   2015-04-14T12:57:00Z

    AMQ-5721 - Update ActiveMQ to use commons-pool2 instead of commons-pool.AMQ-5636 will need it. The JMS pool and other components should use it as well.

----
;;;","15/Apr/15 18:38;jgenender;Added a small API change to this patch which solves a unit test problem in Camel.;;;","16/Apr/15 14:06;dejanb;Pull request merged. Thanks

I triggered a new build of https://builds.apache.org/job/ActiveMQ-Java7/ which should definitely give us an answer if there are any regressions (local build was fine).

Can you close PR, as I merged your remote, so there's no commit that will close it automatically?;;;","17/Apr/15 12:13;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/87
;;;","24/Aug/15 13:49;lichtin;Has someone tried this change under OSGi?
Using 5.12.0 fails for me in this area with the new commons-pool2.

http://activemq.2283324.n4.nabble.com/OSGi-ClassNotFoundException-when-trying-to-upgrade-from-5-11-1-to-5-12-0-td4701124.html

I believe it may be fixed in version 2.4.1: https://issues.apache.org/jira/browse/POOL-292;;;","24/Aug/15 16:54;jgenender;Yes... it has worked as well as the OSGi unit tests.  Can you open a new JIRA to update it to 2.4.1 and we can get to it.;;;","24/Aug/15 17:50;lichtin;Hi Jeff, opened AMQ-5944;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prevent adding a message to topic subscriber while we're discarding a message,AMQ-5718,12820493,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,13/Apr/15 09:13,13/Apr/15 09:20,14/Jul/23 05:44,13/Apr/15 09:20,5.11.0,,,,,,,,,5.12.0,,,,,,,,,0,,,,,,"These additional messages can only be advisories generated in the process, which can cause more messages to get discarded and generate a recursive loop with StackOverflow exception as the end result.",,dejanb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Apr 13 09:20:58 UTC 2015,,,,,,,,,,,"0|i2d693:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Apr/15 09:20;dejanb;Fixed with http://git-wip-us.apache.org/repos/asf/activemq/commit/2562cf21;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Issue with pathCanonical() method within activemq startup for installation paths that consist of directories with a single character or 2 characters,AMQ-5714,12819319,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,james.spurin,james.spurin,08/Apr/15 13:46,29/Nov/16 16:31,14/Jul/23 05:44,10/Jul/15 13:50,5.11.1,,,,,,,,,5.12.0,,,,,,,,,0,,,,,,"The pathCanonical method does not work as expected for directories that contain either single characters or 2 characters.  This is caused by the following entry -

{noformat}
echo ""${dst}"" | sed -e 's#//#/#g' -e 's#/./#/#g' -e 's#/[^/]*/../#/#g'
{noformat}

This can be resolved with the following changes -

{noformat}
echo ""${dst}"" | sed -e 's#//#/#g' -e 's#/\./#/#g' -e 's#/[^/]*/\.\./#/#g'
{noformat}

Example, before and after -

{noformat}
# echo /1/2/3/4/11/22/33/44/.././x | sed -e 's#//#/#g' -e 's#/./#/#g' -e 's#/[^/]*/../#/#g'
/2/22/../x

# echo /1/2/3/4/11/22/33/44/.././x | sed -e 's#//#/#g' -e 's#/\./#/#g' -e 's#/[^/]*/\.\./#/#g'
/1/2/3/4/11/22/33/x
{noformat}",,githubbot,james.spurin,knakashi,maskit,scoopex,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,AMQ-5503,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Nov 29 16:31:55 UTC 2016,,,,,,,,,,,"0|i2cz1z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Apr/15 14:06;githubbot;GitHub user spurin opened a pull request:

    https://github.com/apache/activemq/pull/83

    https://issues.apache.org/jira/browse/AMQ-5714

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/spurin/activemq AMQ-5714

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/83.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #83
    
----
commit d4091eeccfd9fd7985dcc4dc93dbcc938e2ef9bd
Author: James Spurin <james@jamess-macbook-pro.local>
Date:   2015-04-08T14:07:42Z

    https://issues.apache.org/jira/browse/AMQ-5714

----
;;;","17/Apr/15 16:10;scoopex;This looks promising, from my point of view this should work.;;;","24/Apr/15 06:12;scoopex;Appended fix to my pull request https://github.com/apache/activemq/pull/61 (AMQ-5503);;;","08/Jul/15 08:00;knakashi;Could you backport the fix to 5.11.x?
https://github.com/apache/activemq/commit/aeb93e4a2455dff169da302fb19f7fa55d21a0c0;;;","10/Jul/15 13:50;tabish;This was included in the fix for the linked issue.;;;","25/Jul/15 15:14;scoopex;Fix is on master.;;;","29/Nov/16 16:31;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/83
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
doHandleReplyTo cannot be set in activemq.xml,AMQ-5713,12819288,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,papssapa,papssapa,08/Apr/15 11:27,06/Jun/15 03:27,14/Jul/23 05:44,05/Jun/15 20:59,5.10.0,,,,,,,,,5.12.0,,,,Network of Brokers,,,,,0,,,,,,"While configuring the bridges, if we try to set the doHandleReplyTo parameter in the activemq.xml then a BeanCreationException is thrown.
Below is the sample:

<inboundQueueBridges>
	<inboundQueueBridge
		inboundQueueName = ""inBoundQ""
		localQueueName   = ""localTestQ""
		doHandleReplyTo=""false""/>
</inboundQueueBridges>

Attached is the log file.

The reason could be, the setter/getters are protected in DestinationBridge.java
",,githubbot,papssapa,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Apr/15 11:27;papssapa;activemq.log;https://issues.apache.org/jira/secure/attachment/12723896/activemq.log",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Sat Jun 06 03:27:30 UTC 2015,,,,,,,,,,,"0|i2cyv3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Apr/15 21:39;githubbot;GitHub user mfrazier63 opened a pull request:

    https://github.com/apache/activemq/pull/90

    AMQ-5713 - adding getDoHandlReplyTo to satisfy spring config load errors

    For:
    
    https://issues.apache.org/jira/browse/AMQ-5713

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/mfrazier63/activemq master

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/90.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #90
    
----
commit 9e2ed43031a4a981d8212316092c25deb450c606
Author: mfrazier <mfrazier@savoirtech.com>
Date:   2015-04-15T21:36:25Z

    AMQ-5713 - adding getDoHandlReplyTo to satisfy spring config load errors

----
;;;","16/Apr/15 17:57;githubbot;Github user mfrazier63 closed the pull request at:

    https://github.com/apache/activemq/pull/90
;;;","16/Apr/15 17:57;githubbot;GitHub user mfrazier63 reopened a pull request:

    https://github.com/apache/activemq/pull/90

    AMQ-5713 - adding getDoHandlReplyTo to satisfy spring config load errors

    For:
    
    https://issues.apache.org/jira/browse/AMQ-5713

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/mfrazier63/activemq master

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/90.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #90
    
----
commit 9e2ed43031a4a981d8212316092c25deb450c606
Author: mfrazier <mfrazier@savoirtech.com>
Date:   2015-04-15T21:36:25Z

    AMQ-5713 - adding getDoHandlReplyTo to satisfy spring config load errors

----
;;;","16/Apr/15 18:06;githubbot;Github user mfrazier63 closed the pull request at:

    https://github.com/apache/activemq/pull/90
;;;","16/Apr/15 18:35;githubbot;GitHub user mfrazier63 reopened a pull request:

    https://github.com/apache/activemq/pull/90

    AMQ-5713 - adding getDoHandlReplyTo to satisfy spring config load errors

    For:
    
    https://issues.apache.org/jira/browse/AMQ-5713

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/mfrazier63/activemq master

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/90.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #90
    
----
commit 9e2ed43031a4a981d8212316092c25deb450c606
Author: mfrazier <mfrazier@savoirtech.com>
Date:   2015-04-15T21:36:25Z

    AMQ-5713 - adding getDoHandlReplyTo to satisfy spring config load errors

----
;;;","29/May/15 19:47;githubbot;Github user mfrazier63 closed the pull request at:

    https://github.com/apache/activemq/pull/90
;;;","29/May/15 23:18;githubbot;GitHub user mfrazier63 opened a pull request:

    https://github.com/apache/activemq/pull/106

    AMQ-5713 - making accessors public to remove startup error.

    Includes unit test DestinationBridgeAccessorsTest which replicated the problem and now passes.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/mfrazier63/activemq AMQ-5713

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/106.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #106
    
----
commit dcc7b11347fbaa91e6e387fdb8b0dfd67f719287
Author: mfrazier <mfrazier@savoirtech.com>
Date:   2015-05-29T23:13:41Z

    AMQ-5713 - making accessors public to remove startup error.
    
    Includes unit test DestinationBridgeAccessorsTest which replicated the problem and now passes.

----
;;;","29/May/15 23:39;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/106
;;;","03/Jun/15 21:23;tabish;This looks to have been resolved, can we mark it as such?;;;","05/Jun/15 20:59;tabish;Tagging this as resolved given that the PR has been merged and there's been no further activity on the issue.  ;;;","06/Jun/15 03:27;papssapa;Thankyou, Tested the patch with actual use-case. Confirm that its working fine. :);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broker can deadlock when using queues while producers wait on disk space,AMQ-5712,12819015,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,07/Apr/15 18:31,20/Nov/15 21:01,14/Jul/23 05:44,20/Nov/15 21:01,5.11.1,,,,,,,,,5.13.0,,,,Broker,,,,,0,,,,,,"I am experiencing a deadlock when using a Queue with non-persistent messages.  The queue has a cursor high memory water mark set (right now at 70%).  When a producer is producing messages quickly to the queue and that limit gets hit, the broker can deadlock.   I have tried setting producerWindowSize and alwaysSyncSend which did not seem to help. When the broker hits that limit, I am unable to do things like purge the queue.  Consumers can also deadlock as well. 

Note that this appears to be the same issue as described in this ticket here: AMQ-2475 .  The difference is that I am using a Queue and not a Topic and the fix for this appears to only have been for Topics.

The problem appears to be in the Queue class on line 1852 inside the {{cursorAdd}} method.  The method being called is {{return messages.addMessageLast(msg);}} which will block indefinitely if there is no space available, which in turn ties up the {{messagesLock}} from being used by any other threads.  We have seen a deadlock where consumers can't consume because they are waiting on this lock.   It looks like in AMQ-2475 part of the fix was to replace {{messages.addMessageLast(msg)}} with {{messages.tryAddMessageLast(msg, 10)}}.  I also noticed that not all of the message cursors support {{tryAddMessageLast}}, which could be a problem.  {{FilePendingMessageCursor}} implements it but the rest of the cursors (notably {{StoreQueueCursor}}) simply delegate back to {{addMessageLast}} in the parent class.  So part of this fix may require implementing {{tryAddMessageLast}} across more cursors.


Here is part of the thread dump showing the stuck producer:

{code}
""ActiveMQ Transport: ssl:///192.168.3.142:38589"" daemon prio=10 tid=0x00007fb46c006000 nid=0x3b1a runnable [0x00007fb4b8a0d000]
   java.lang.Thread.State: TIMED_WAITING (parking)
        at sun.misc.Unsafe.park(Native Method)
        - parking to wait for  <0x00000000cfb13cd0> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
        at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:226)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2176)
        at org.apache.activemq.usage.Usage.waitForSpace(Usage.java:103)
        at org.apache.activemq.usage.Usage.waitForSpace(Usage.java:90)
        at org.apache.activemq.usage.Usage.waitForSpace(Usage.java:80)
        at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.tryAddMessageLast(FilePendingMessageCursor.java:235)
        - locked <0x00000000d2015ee0> (a org.apache.activemq.broker.region.cursors.FilePendingMessageCursor)
        at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.addMessageLast(FilePendingMessageCursor.java:207)
        - locked <0x00000000d2015ee0> (a org.apache.activemq.broker.region.cursors.FilePendingMessageCursor)
        at org.apache.activemq.broker.region.cursors.StoreQueueCursor.addMessageLast(StoreQueueCursor.java:97)
        - locked <0x00000000d1f20908> (a org.apache.activemq.broker.region.cursors.StoreQueueCursor)
{code}",,cshannon,githubbot,jira-bot,paulgale,tabish,xabhi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6056,,,,,,,,,,,"21/Apr/15 17:12;tabish;queue-cursor.patch;https://issues.apache.org/jira/secure/attachment/12726920/queue-cursor.patch",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,https://issues.apache.org/jira/browse/AMQ-2475,,,,,,,,,,,9223372036854775807,,,Fri Nov 20 21:01:57 UTC 2015,,,,,,,,,,,"0|i2cx8v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Apr/15 18:57;githubbot;GitHub user cshannon opened a pull request:

    https://github.com/apache/activemq/pull/84

    Modified StoreQueueCursor to prevent a broker deadlock

    Modified StoreQueueCursor to properly implement tryAddMessageLast so that the message lock can be released during a timeout when the temporary store is full.  Updated Queue to call tryAddMessageLast instead of addMessageLast in the cursorAdd method.
    
        This resolves https://issues.apache.org/jira/browse/AMQ-5712


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/cshannon/activemq AMQ-5712

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/84.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #84
    
----
commit 631518cda7ce81d5ff677b06db9c833d0b8538ee
Author: Christopher L. Shannon (cshannon) <christopher.l.shannon@gmail.com>
Date:   2015-04-08T18:49:57Z

    Modified StoreQueueCursor to properly implement tryAddMessageLast so that the message lock can be released during a timeout when the temporary store is full.  Updated Queue to call tryAddMessageLast instead of addMessageLast in the cursorAdd method.
    
    This resolves https://issues.apache.org/jira/browse/AMQ-5712

----
;;;","08/Apr/15 19:04;cshannon;I just submitted a pull request: https://github.com/apache/activemq/pull/84

This seems to fix the issues that I am having.  Without the patch, the broker would deadlock (I could not purge, etc) when the temp store limit was hit for non-persistent messages for both sync and async sends and also both when sendFailIfNoSpace is true or false.  

With this patch, I am able to purge and no longer have deadlock issues.  For async sends, if {{sendFailIIfNoSpace}} is false the producer will block but I can purge and then the producer resumes.  I {{sendFailIfNoSpace}} is true, exceptions are logged to the broker and I can still purge.  For non-persistent sync sends, if {{sendFailIIfNoSpace}} is false the producer will block but I can purge and then the producer resumes.  I {{sendFailIfNoSpace}} is true, the producer gets an exception which is what should happen.

Let me know if this looks ok. I looked at what was done for Topics in AMQ-2475 and I tried to follow the same strategy. I can also try and add a test or 2 if needed.;;;","08/Apr/15 19:14;tabish;I general it's a good idea to add some unit tests that cover the problem you are trying to address, this provides context to the person reviewing the patch, and protects the fix into the future.  ;;;","08/Apr/15 19:28;cshannon;[~tabish121], sounds good.  I don't have time today but tomorrow morning I will try and get some tests together to cover this fix.  I'll push up my change to my branch when I am done.;;;","09/Apr/15 21:54;tabish;I believe I've run into this while doing some testing for AMQP flow control issues.  Once I did some debugging I remembered this issue while looking into the stack traces.  ;;;","09/Apr/15 22:14;cshannon;I started working on a unit test today to replicate this issue but I haven't quite been able to reproduce the bug in a unit test yet.  In my simple unit test (just one producer), when the temp storage fills the broker detects this at line 821 of {{Queue.java}} when {{checkUsage(context, producerExchange, message);}} is called.

When I run our real broker, it gets past that line until it hits the {{cursorAdd}} method and ultimately gets stuck spinning in {{FilePendingMessageCursor.java}} on line 235 at {{if (systemUsage.getTempUsage().waitForSpace(maxWaitTime))}}

Our broker is configured for persistent messaging, but the producer is sending non-persistent messages which is why the temp store is used.  I'll continue to try and put a test together next week or figure out what's different about my set up.  We have some custom code that we are using so it could be that or it could just be our configuration. (Maybe something in the Queue Policy that we have configured)  What I do know is that when I apply my pull request it fixes the dead lock and the broker no longer gets stuck on line 235 of {{FilePendingMessageCursor.java}};;;","13/Apr/15 16:40;cshannon;Timothy,

I just pushed up my updated [pull request|https://github.com/apache/activemq/pull/84/] with a unit test.  If you run the test before my patch, it will timeout because of a deadlock.  With my patch applied it completes successfully.  The key in this test to making it deadlock is the issue only occurs when the temporary storage size is configured to be less than the memory storage size.  (such as 4 gig of memory storage and 1 gig of temp storage).  While this configuration probably isn't too likely, it's still a possibility.  When memory fills up and it is dumped to disk, the deadlock occurs and the queue can not be purged.  My unit test demonstrates this.

Also, I still think there other conditions that cause the broker to deadlock in the same spot (in one of our servers this has happened and the temporary storage was greater than memory size) but this unit test was the easiest way I could reproduce the problem reliably.

Let me know what you think,
Chris

;;;","13/Apr/15 17:50;tabish;Thanks for the patch, I had uncovered much the same, in my testing and have a smaller but similar test case using the AMQP test client.  The issue occurs due to a race when the temp store is initialize by a change in memory usage that trips the limit causing the in memory message to need to be sent to disk.  The problem is that in the Queue send we don't see that temp storage is full yet and try to do the add.  While your fix does work around this is would result in the lose of the message(s) that arrive while this is happening which is not something we would want to do in the case of a Queue which has specific QOS guarantees.  

I am taking a look at how things work today and rethinking some of the layering of add vs tryAdd as it seems a bit wrong to me and can lead to this sort of error in more than one case as you have pointed out.  ;;;","13/Apr/15 18:12;paulgale;Perhaps I've missed something but if you're working with non-persistent messages then why not configure a policyEntry for the queue to use a vmCursor rather than the default storeCursor? 

Regardless, I agree that the temp store's implementation needs some work. Ideally it should honor the sendFailIfNoSpaceAfterTimeout when configured on the systemUsage element.;;;","13/Apr/15 18:16;cshannon;Great, thanks for your help and for taking a look this issue in detail as it is very important to us and it is causing us a lot of problems.  I suspected my patch may not be the best solution and would need some rework because when the tryAdd method times out with my patch nothing is actually done with that message.  After returning false it just continues on and the message gets lost as you pointed out.  However, I figured submitting something that at least demonstrated the issue as well as a unit test where it is consistently reproducible would help get things started towards finding the best solution to fix the issue permanently.

Chris;;;","13/Apr/15 18:23;cshannon;[~paulgale], Our issue is that we occasionally have slow consumers which fill up our entire memory store (and temporary store) which is causing the deadlock.  This is the reason we can't use the vmCursor as we need to be able to spill over onto to disk when the memory store fills up.  Also, in our case the jms producer is setting the delivery mode as non-persistent (so the temp store gets used), but it could just as easily switch to persistent.  We want the queue to be set up so the producer can decide if it wants to publish persistent or non persistent messages.;;;","13/Apr/15 19:01;paulgale;I too have hit the same limitations of the temp store. In the interim you can always force the broker to treat all messages as persistent using the {{forcePersistencyModeBrokerPlugin}}. Alternatively use the broker component. 

Perhaps you might need to supplement it with (it's been a while) this to force the cursor to not use the temp store:

{code}
<pendingQueuePolicy>
  <storeCursor/>
</pendingQueuePolicy>
{code}

Is PFC disabled for your queue? If so, why?

Regardless, even if the temp store worked correctly both memory and disk are limited resources so you're only delaying the inevitable as one of them will eventually fill up - that is, not unless the producer is flow controlled.
;;;","13/Apr/15 19:11;tabish;PFC in this case doesn't matter as the problem occurs outside the normal checks and the add of the message into the cursor stalls while holding the message lock preventing any consumer from ever pulling a message off the Queue so basically the Queue becomes unusable until a broker restart. ;;;","13/Apr/15 19:22;cshannon;As Timothy said, PFC doesn't make a difference and we have tried it both on and off.  For now we have the producer switched to being persistent to fix the issue temporarily. {{forcePersistencyModeBrokerPlugin}} doesn't really help because we want to be able to support both persistent and non-persistent messages on the same destination and don't want to enforce what the producer sets the delivery mode as. ;;;","13/Apr/15 20:46;paulgale;I don't see how this plugin puts a requirement on the producer. For example, setting {{<forcePersistencyModeBrokerPlugin persistenceFlag=""true""/>}} allows the producer to send either form. It simply makes all messages persistent (or non-persistent if {{false}}).
;;;","21/Apr/15 17:12;tabish;Patch with test and a hacked workaround that allows the Queue to stall but still recover via purge or consumption that you can apply to your local broker build for now.  The problem starts to run deep if you track it far enough so we should probably do more work here to clean things up and work more sensibly, and predictably.  ;;;","22/Apr/15 12:45;cshannon;Thanks Timothy.  I have tested out this patch and it looks good.  I will go ahead and apply this to our broker so we can use it for now.;;;","09/Jul/15 15:53;githubbot;Github user cshannon closed the pull request at:

    https://github.com/apache/activemq/pull/84
;;;","20/Nov/15 20:58;jira-bot;Commit cc6213ebf25a129b278a2ff0d7c32c25edd71eaa in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=cc6213e ]

https://issues.apache.org/jira/browse/AMQ-5712

Switching addMessageLast to tryAddMessageLast when messages are added
to a Queue pending cursor to allow a potential deadlock to be
avoided. There is more work to be done here but this will at least
prevent a deadlock from occurring.

Fix and test based off of a patch created by Timothy Bish.
;;;","20/Nov/15 21:01;cshannon;This has been fixed by applying the patch submitted here.  I have created a new ticket to track progress for a better solution in the future AMQ-6056;;;",,,,,,,,,,,,,,,,,,,,,
[AMQP] Consumer on named temporary queue results in NullPointerException,AMQ-5711,12818966,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,dake,dake,07/Apr/15 15:22,21/Apr/15 21:47,14/Jul/23 05:44,21/Apr/15 21:47,5.10.1,5.10.2,5.11.1,,,,,,,5.12.0,,,,AMQP,,,,,0,easyfix,,,,,"Attempting to create a consumer on a named temporary queue (""temp-queue://<name>"") via AMQP results in a NullPointerException. Following minimal test client using the Qpid AMQP client (qpid-amqp-1-0-client-jms) demonstrates the problem (imports elided for brevity):

{code}
public class MinimalAmqpTest {
    public static void main(String[] args) throws Exception {
        try (InputStream propertiesStream =
                MinimalAmqpTest.class.getResourceAsStream(""amqp.properties"")) {
            Properties properties = new Properties();
            properties.load(propertiesStream);
            Context context = new InitialContext(properties);
            ConnectionFactory connectionFactory =
                (ConnectionFactory) context.lookup(""localhost"");
            Connection connection = connectionFactory.createConnection();            
            connection.start();
 
            Queue queue = (Queue) context.lookup(""test"");
            Session consumerSession =
                connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
            consumerSession.createConsumer(queue);
        }
    }
}
{code}

Where amqp.properties looks something like this:
{noformat}
java.naming.factory.initial = org.apache.qpid.amqp_1_0.jms.jndi.PropertiesFileInitialContextFactory
connectionfactory.localhost = amqp://172.16.133.147:5672?clientid=test-client
queue.test = temp-queue://test
{noformat}

Running this test against an AMQP-enabled ActiveMQ 5.11.1, 5.10.2 or 5.10.1 broker results in an NPE:

{noformat}
java.lang.NullPointerException
        at org.apache.activemq.broker.region.TempQueue.addSubscription(TempQueue.java:72)
        at org.apache.activemq.broker.region.AbstractRegion.addConsumer(AbstractRegion.java:319)
        at org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:427)
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:102)
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:102)
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:102)
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:102)
        at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:107)
        at org.apache.activemq.broker.TransportConnection.processAddConsumer(TransportConnection.java:663)
        at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:348)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:334)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:188)
        at org.apache.activemq.transport.amqp.AmqpTransportFilter.sendToActiveMQ(AmqpTransportFilter.java:114)
        at org.apache.activemq.transport.amqp.AmqpProtocolConverter.sendToActiveMQ(AmqpProtocolConverter.java:1497)
        at org.apache.activemq.transport.amqp.AmqpProtocolConverter.onSenderOpen(AmqpProtocolConverter.java:1421)
        at org.apache.activemq.transport.amqp.AmqpProtocolConverter.onLinkOpen(AmqpProtocolConverter.java:577)
        at org.apache.activemq.transport.amqp.AmqpProtocolConverter.processLinkEvent(AmqpProtocolConverter.java:389)
        at org.apache.activemq.transport.amqp.AmqpProtocolConverter.onFrame(AmqpProtocolConverter.java:334)
        at org.apache.activemq.transport.amqp.AmqpProtocolConverter.onAMQPData(AmqpProtocolConverter.java:275)
        at org.apache.activemq.transport.amqp.AmqpTransportFilter.onCommand(AmqpTransportFilter.java:98)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
        at org.apache.activemq.transport.amqp.AmqpFrameParser$1.onFrame(AmqpFrameParser.java:57)
        at org.apache.activemq.transport.amqp.AmqpFrameParser$5.parse(AmqpFrameParser.java:205)
        at org.apache.activemq.transport.amqp.AmqpFrameParser$4.parse(AmqpFrameParser.java:178)
        at org.apache.activemq.transport.amqp.AmqpFrameParser.parse(AmqpFrameParser.java:73)
        at org.apache.activemq.transport.amqp.AmqpNioTransport.serviceRead(AmqpNioTransport.java:118)
        at org.apache.activemq.transport.amqp.AmqpNioTransport.access$000(AmqpNioTransport.java:44)
        at org.apache.activemq.transport.amqp.AmqpNioTransport$1.onSelect(AmqpNioTransport.java:75)
        at org.apache.activemq.transport.nio.SelectorSelection.onSelect(SelectorSelection.java:97)
        at org.apache.activemq.transport.nio.SelectorWorker$1.run(SelectorWorker.java:119)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
        at java.lang.Thread.run(Thread.java:745)
{noformat}

The reason for the NPE is that in the following excerpt from TempQueue.java, tempDest.getConnectionId() returns null:

{code}
        if (!context.isFaultTolerant()
                && (!context.isNetworkConnection() && !tempDest
                        .getConnectionId().equals(
                                sub.getConsumerInfo().getConsumerId()
                                        .getConnectionId()))) {
{code}

The ActiveMQTempDestination tempDest is created by ActiveMQDestination.createDestination(String, byte):

{noformat}
ActiveMQTempQueue(ActiveMQTempDestination).<init>(String) line: 39	
ActiveMQTempQueue.<init>(String) line: 36	
ActiveMQDestination.createDestination(String, byte) line: 95	
AmqpProtocolConverter.createDestination(Object) line: 951	
AmqpProtocolConverter.onSenderOpen(Sender, AmqpProtocolConverter$AmqpSessionContext) line: 1375	
AmqpProtocolConverter.onLinkOpen(Link) line: 577	
...
{noformat}

The created object is returned through the call stack as-is until it reaches the onSenderOpen frame, where it is assigned to the ConsumerInfo. The connection ID is never set.

Proposed fix: in DestinationFactoryImpl.createDestination(ConnectionContext, ActiveMQDestination, DestinationStatistics), after casting destination to ActiveMQTempDestination and before instantiating TempQueue, the connection ID (and any other required information) could be set from the ConnectionContext.",,dake,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Apr 21 21:47:17 UTC 2015,,,,,,,,,,,"0|i2cwy7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Apr/15 16:02;tabish;So the NPE is not great here but what you are trying to do is also not really expected to work.  Temporary destinations are created from an open connection using createTempQueue or createTempTopic and then used by that connection (and only that connection) to consume from, other connections can produce to it if the destination is set as a reply to on a message.  Defining the temporary destination in your JNDI config make the assumption that the broker will just happily create one for you if it does not exist which is not really true over AMQP as there are properties of the incoming link creation that control if a temporary topic is created.  The fix that would really make sense here is better detect this sort of thing and close the link with an error.  ;;;","21/Apr/15 21:47;tabish;Updated the AMQP handling code to reject links that are created using named temp destinations that didn't originate from a dynamic link.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQConnection cleanup should not close the connection on the broker,AMQ-5710,12818965,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,07/Apr/15 15:19,07/Apr/15 15:25,14/Jul/23 05:44,07/Apr/15 15:25,5.11.0,,,,,,,,,5.12.0,,,,,,,,,0,,,,,,"As the spec says

http://docs.oracle.com/javaee/6/api/javax/resource/spi/ManagedConnection.html#cleanup()

""The cleanup of ManagedConnection instance resets its client specific state and prepares the connection to be put back in to a connection pool. The cleanup method should not cause resource adapter to close the physical pipe and reclaim system resources associated with the physical connection.""

We should not send RemoveInfo on cleanup, but just clean client side state. The result of ""closing"" a connection on cleanup is that connection will not be cached when using XA transactions, causing high CPU usage on the broker.",,dejanb,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Apr 07 15:25:35 UTC 2015,,,,,,,,,,,"0|i2cwxz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Apr/15 15:25;dejanb;Fixed with http://git-wip-us.apache.org/repos/asf/activemq/commit/c705523c;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
originBrokerURL incorrectly set in advisory messages,AMQ-5705,12787455,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,vhle01,vhle01,01/Apr/15 20:08,23/Jun/15 11:08,14/Jul/23 05:44,23/Jun/15 11:08,5.11.1,,,,,,,,,5.12.0,,,,Broker,,,,,0,,,,,,"With a broker configured with multiple transports, the ""originBrokerURL"" property of advisory messages is incorrectly set. 

Assuming a broker that has two transports configured, an advisory message for a connection made to transport-A may have the ""originBrokerURL"" property set to transport-B.

Looks like the ""originBrokerURL"" value is set from the getDefaultSocketURIString() method in the BrokerService class. Is there a good reason why the ""originBrokerURL"" value does not correlate with the transport where the advisory event is actually being triggered?",,cshannon,githubbot,gtully,tabish,vhle01,xabhi,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jun 23 11:08:55 UTC 2015,,,,,,,,,,,"0|i27nv3:",9223372036854775807,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"02/Apr/15 10:45;xabhi;What kind of issues can be triggered by this?;;;","02/Apr/15 14:50;vhle01;No specific issue...just noticed as I ran through some testing. That's why I was asking if there was a good reason why they values do not correlate? To me, it would make sense if they matched up.;;;","02/Apr/15 17:12;vhle01;Actually, this is an issue for us. We are capturing metrics from the advisory messages and this is causing our metrics to be off.;;;","17/Jun/15 15:38;cshannon;[~tabish121],

I noticed this issue the other day and it's a bit odd to me that advisory messages relating to user actions (such as new connection or consumer, etc)  set the {{originBrokerURL}} property with a default URL and not the actual transport URL that was used.  For example, I ran a test and set up a broker with two transports, one nio and one tcp.  I connected using nio but the algorithm picked the tcp transport url to set as the originBrokerURL property when the new connection advisory message was fired.  It would make more sense to me to set the originBrokerUrl property as the nio URL since that was the URL used.  

This would be a pretty easy change as the ConnectionContext has a reference to the Connector used and we could get the publishable connection string from that if the connector has been set. For advisory messages that don't contain the connector (such as internal things like message expiration) a default URL can still be chosen in the same manor as it is now.

Do you have any issue with changing this behavior? The other option is to keep the originBrokerURL behavior as is and add a new property to contain the actual transport url used by the client to connect.  That would prevent issues for existing users which might be relying on the current behavior of how the originBrokerURL property is set. 
;;;","17/Jun/15 15:42;tabish;Wouldn't bother me, I just haven't had time to look at this one other than to see it and agree that it makes sense that the value should probably match the connector.;;;","17/Jun/15 15:54;cshannon;Alright, thanks for the input. I'll push up a PR later today with this change.;;;","17/Jun/15 17:49;githubbot;GitHub user cshannon opened a pull request:

    https://github.com/apache/activemq/pull/117

    https://issues.apache.org/jira/browse/AMQ-5705

    Modifing the AdivsoryBroker to set the originBrokerURL to the transport connector's
    URL if it has been set versus using a default URL.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/cshannon/activemq AMQ-5705

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/117.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #117
    
----
commit fc3e0261229bb90edbcf4eaeabc5ee2e1b57894d
Author: Christopher L. Shannon (cshannon) <christopher.l.shannon@gmail.com>
Date:   2015-06-17T17:47:24Z

    https://issues.apache.org/jira/browse/AMQ-5705
    
    Modifing the AdivsoryBroker to set the originBrokerURL to the transport connector's
    URL if it has been set versus using a default URL.

----
;;;","17/Jun/15 21:16;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/117
;;;","17/Jun/15 21:17;tabish;Patch looks good, applied with thanks!;;;","22/Jun/15 15:09;gtully;this patch breaks org.apache.activemq.network.FailoverStaticNetworkTest

the PublishedAddressPolicy is now applying to the vm connector and the usage of broker name with A_B (an underscore it) fails to be converted into a valid url, blowing up with an exception. Our vm urls very loose, I think PublishedAddressPolicy needs to be a little more aware of the vm scheme. Working on a fix.;;;","23/Jun/15 11:08;gtully;fix for test regression in http://git-wip-us.apache.org/repos/asf/activemq/commit/37c46b9b

transforming vm urls does not make any sense because they container the brokerName;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQP: SASL Mechanisms sent in the wrong order.,AMQ-5704,12787344,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,01/Apr/15 14:14,01/Apr/15 14:20,14/Jul/23 05:44,01/Apr/15 14:20,5.10.0,5.10.1,5.10.2,5.11.0,5.11.1,,,,,5.12.0,,,,AMQP,,,,,0,,,,,,"During the SASL handshake the broker advertises the supported mechanisms as  ""ANONYMOUS"", ""PLAIN"" however the AMQP v1.0 specification requires the mechanisms be sent in decreasing order of preference.  ",,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Apr 01 14:20:43 UTC 2015,,,,,,,,,,,"0|i27n87:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Apr/15 14:20;tabish;now sending in correct order of preference. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
kahadb - index recovery - corrupt journal records cannot be skipped,AMQ-5703,12787339,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,01/Apr/15 13:45,01/Apr/15 15:20,14/Jul/23 05:44,01/Apr/15 15:20,5.11.0,,,,,,,,,5.12.0,,,,KahaDB,Message Store,,,,0,kahadb,recovery,,,,"Working with some corrupt data stores - if corruption occurs in the middle of a journal and the index needs to be rebuilt we get:{code}java.io.EOFException
	at java.io.RandomAccessFile.readFully(RandomAccessFile.java:446)
	at java.io.RandomAccessFile.readFully(RandomAccessFile.java:424)
	at org.apache.activemq.util.RecoverableRandomAccessFile.readFully(RecoverableRandomAccessFile.java:75)
	at org.apache.activemq.store.kahadb.disk.journal.DataFileAccessor.readRecord(DataFileAccessor.java:87)
	at org.apache.activemq.store.kahadb.disk.journal.Journal.read(Journal.java:641)
	at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:1014)
	at org.apache.activemq.store.kahadb.MessageDatabase.recover(MessageDatabase.java:606)
	at org.apache.activemq.store.kahadb.MessageDatabase.open(MessageDatabase.java:400)
	at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:418)
	at org.apache.activemq.store.kahadb.MessageDatabase.doStart(MessageDatabase.java:262)
	at org.apache.activemq.store.kahadb.KahaDBStore.doStart(KahaDBStore.java:206)
	at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:55)
	at org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter.doStart(KahaDBPersistenceAdapter.java:223)
	at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:55)
	at org.apache.activemq.broker.BrokerService.doStartPersistenceAdapter(BrokerService.java:652)
	at org.apache.activemq.broker.BrokerService.startPersistenceAdapter(BrokerService.java:641)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:606){code}
attempting to read an invalid location. This stops further recovery and the entire journal needs to be removed to progress.
We have already identified the corrupt record, we just need to skip it when we replay.",,gtully,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Apr 01 15:20:07 UTC 2015,,,,,,,,,,,"0|i27n73:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Apr/15 15:20;gtully;fix and test in http://git-wip-us.apache.org/repos/asf/activemq/commit/a7178a46;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQP: Transport factories are not applying wireFormat.* options to newly created Transport instances.,AMQ-5698,12787065,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,31/Mar/15 15:51,31/Mar/15 16:40,14/Jul/23 05:44,31/Mar/15 16:40,5.11.0,5.11.1,,,,,,,,5.12.0,,,,AMQP,,,,,0,,,,,,The options specified on the transportConnector that should be setting values in the AmqpWireFormat object are not getting passed along to the IntrospectionSupport property set so none of those get applied for a new connection.  We need to extract the wireFormat. prefixed options and then apply them to the AmqpWireFormat owned by the transport filter.,,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Mar 31 16:40:13 UTC 2015,,,,,,,,,,,"0|i27ljr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"31/Mar/15 16:40;tabish;Fixed on master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Authorization map doesn't handle composite destinations properly,AMQ-5697,12787058,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,31/Mar/15 15:11,31/Mar/15 15:14,14/Jul/23 05:44,31/Mar/15 15:14,5.11.0,,,,,,,,,5.12.0,,,,,,,,,0,,,,,,"If two destinations are specified explicitly in the authorization map, like

{code}   <authorizationEntry topic=""QUEUEA"" read=""admins"" write=""admins"" admin=""admins""/>
   <authorizationEntry topic=""QUEUEB"" read=""admins"" write=""admins"" admin=""admins""/> {code}

trying to connect to the composite destination ""QUEUEA,QUEUEB"" will fail.",,dejanb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Mar 31 15:14:18 UTC 2015,,,,,,,,,,,"0|i27li7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"31/Mar/15 15:14;dejanb;Fixed with http://git-wip-us.apache.org/repos/asf/activemq/commit/8bb58036;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Queue dispatching hangs when there are redelivered messages that don't match current consumer's selectors,AMQ-5689,12786033,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,ceposta,ceposta,ceposta,26/Mar/15 22:42,27/Mar/15 22:22,14/Jul/23 05:44,27/Mar/15 22:22,5.10.2,5.11.1,,,,,,,,5.12.0,,,,Broker,,,,,0,,,,,,"If a queue has messages that it needs to redeliver, it will stall when the only current consumers have selectors that don't match because dispatching only takes into account redeliveries until they're empty.. but there may be other messages that don't match that need to be delivered.

Have patch",,ceposta,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5672,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Mar 27 22:22:30 UTC 2015,,,,,,,,,,,"0|i27f93:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Mar/15 22:54;ceposta;current patch here.... https://github.com/christian-posta/activemq/tree/AMQ-5689-dispatch-selector-redelivery


running all unit tests to make sure I didn't break too many things :);;;","27/Mar/15 22:22;ceposta;Fixed with this commit: https://github.com/apache/activemq/commit/efc9a8d5782143b8c1e86750d34ce74af5a2940a;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMSRedeilivery not set if Consumer restarted.,AMQ-5688,12785935,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,burraget,burraget,26/Mar/15 17:04,27/Jun/15 11:33,14/Jul/23 05:44,27/Jun/15 11:33,5.11.1,,,,,,,,,,,,,,,,,,0,,,,,,"With a Client Acked session:-
session = connection.createSession(false, Session.CLIENT_ACKNOWLEDGE);

Pull a message off the broker:-
Message message = consumer.receive(1000);

Now kill the consumer JVM. Restart the consumer and pull a message off the consumer; it's the same message as received in the previous run, but JMSRedelivered=false, redeliveryCounter=0.

I've tried recovering the session before I read the first message off the queue (session.recover();) but this has no impact.

If however I read the first message AND THEN recover the session (not acking the just received message), the message is re-delivered and JMSRedelivered=true, redeliveryCounter=1.


I have tried with a transacted Consumer (session = connection.createSession(true, Session.SESSION_TRANSACTED);) this has the same problem, but I can't solve it with session.recover() as it's transacted.

This is a master/slave setup with 3 brokers. I am not restarting the broker between tests, simply killing the Consumer JVM

I've set persistJMSRedelivered, but this has no impact


<destinationPolicy>
            <policyMap>
              <policyEntries>
                <policyEntry topic="">"" persistJMSRedelivered=""true"">
                  <pendingMessageLimitStrategy>
                    <constantPendingMessageLimitStrategy limit=""1000""/>
                  </pendingMessageLimitStrategy>
                </policyEntry>
              </policyEntries>
            </policyMap>
        </destinationPolicy>


",,burraget,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Sat Jun 27 11:33:31 UTC 2015,,,,,,,,,,,"0|i27enj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/Jun/15 21:39;tabish;You might want to test against a 5.12-SNAPSHOT there has been some work done on improving redelivered.  I tried a quick test here and it worked as I'd expect it to  ;;;","11/Jun/15 07:36;burraget;Thanks Tim,

I'll let you know how I get on.

Tim

;;;","22/Jun/15 16:20;burraget;Hi Tim,

I've just retried my test on June 21st Snapshot - all looks good - Many thanks.

Would you like me to clear down the JIRA or do you do that?

Regards
Tim

;;;","27/Jun/15 11:33;tabish;Tested as working in latest snapshot.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ProxyMessageStore doesn't properly delegate,AMQ-5686,12785280,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,cshannon,cshannon,24/Mar/15 19:47,25/Mar/15 14:27,14/Jul/23 05:44,24/Mar/15 20:08,5.11.1,,,,,,,,,5.12.0,,,,Broker,,,,,0,easyfix,,,,,"In ProxyMessageStore the method {{asyncAddTopicMessage}} does not call the delegate method as it should.  This causes a {{StackOverflowError}} if the method is called as it will just recursively keep calling the same method over and over again.

The problem is here on line 141 of {{ProxyMessageStore.java}}:

{code}
@Override
public ListenableFuture<Object> asyncAddTopicMessage(ConnectionContext context, Message message, boolean canOptimizeHint) throws IOException {
  return asyncAddTopicMessage(context,message,canOptimizeHint);
}
{code}

This simply should be changed to:

{code}
@Override
public ListenableFuture<Object> asyncAddTopicMessage(ConnectionContext context, Message message, boolean canOptimizeHint) throws IOException {
  return delegate.asyncAddTopicMessage(context,message,canOptimizeHint);
}
{code}",,cshannon,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Mar 25 14:27:55 UTC 2015,,,,,,,,,,,"0|i27apj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Mar/15 20:08;tabish;Thanks for pointing that out, I've applied a fix on master to properly delegate that call. ;;;","25/Mar/15 14:27;cshannon;Thanks for taking care of that so fast.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Purge does not work when simple authorisation plugin is used,AMQ-5685,12785122,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,krichards,krichards,24/Mar/15 10:14,16/Apr/15 16:55,14/Jul/23 05:44,16/Apr/15 16:55,5.10.2,5.11.1,,,,,,,,5.12.0,,,,Web Console,,,,,0,purge,,,,,"When clicking purge from the web console the page refreshes without purging the queue.  It appears that the Destinations are checked to be an instanceof Queue before trying the purge call, however the authorisation plugin wraps destinations with destinationfilters and so no purge can happen.",Centos 6,krichards,paulgale,rwagg,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,86400,86400,,0%,86400,86400,,,,,,,,,,,,AMQ-5252,,,,,,,,,,,,,,,,,,,,,"15/Apr/15 09:00;rwagg;activemq-511.zip;https://issues.apache.org/jira/secure/attachment/12725526/activemq-511.zip","16/Apr/15 12:24;krichards;purge-fix.patch;https://issues.apache.org/jira/secure/attachment/12725856/purge-fix.patch",,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Apr 16 16:55:50 UTC 2015,,,,,,,,,,,"0|i279rb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Apr/15 18:45;tabish;Please share your configuration that allows this to be reproduced.  ;;;","15/Apr/15 09:00;rwagg;Hi, give this config a go - Similar to what i'd used in AMQ-5252. ;;;","16/Apr/15 12:24;krichards;I've written a patch - including tests which addresses the problem.;;;","16/Apr/15 16:55;tabish;Great patch, applied with thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQP: messages get stuck,AMQ-5684,12784967,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,chug,chug,23/Mar/15 19:53,14/Mar/16 12:59,14/Jul/23 05:44,01/Apr/15 21:54,5.12.0,,,,,,,,,5.12.0,,,,AMQP,,,,,0,,,,,,"While investigating AMQ-5646 the same test failed in a different way.
It did not progress as far. The test:

* Client opens a connection and a session.
* Client opens a sender and sends 20 messages
* Client opens a receiver with a credit of two

The receiver receives one message and that's all. The expectation is to receive two messages.

A trace to be attached.",5.12-SNAPSHOT 20150322 running on Fedora linux,chug,tabish,zman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Mar/15 15:59;chug;AMQ5684-reproducer.cs;https://issues.apache.org/jira/secure/attachment/12707517/AMQ5684-reproducer.cs","23/Mar/15 19:55;chug;second-receiver-hang-20150323.html;https://issues.apache.org/jira/secure/attachment/12706703/second-receiver-hang-20150323.html",,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Mar 14 12:59:22 UTC 2016,,,,,,,,,,,"0|i278tz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Mar/15 19:55;chug;The receiver issues a credit of 2 but receives only 1 message.;;;","26/Mar/15 15:59;chug;AMQ5684-reproducer.cs is a Visual Studio 2012 C# program to reproduce the issue. Instructions on how to install AmqpNetLite are included within.

;;;","26/Mar/15 16:13;tabish;Thanks chuck, that's very helpful.  I had started down the same road of extracting the test from the AmqpNetLite stuff as well :)  I think I understand why this happens and am working on a fix, problem being that I've broken other clients test suites in the process :(

;;;","27/Mar/15 19:16;tabish;Chuck, I have pushed some fixes to ActiveMQ master which should show up in the next SNAPSHOT build of 5.12 that attempt to address this.  I've implemented support for AMQP drain and in doing so found some places where we were not handling incoming flow events correctly that could cause what you have been seeing.  I couldn't reproduce this using the AmqpNetLite tests after applying all these fixes, can you validate this on your end.  I am still seeing some odd behaviour with the .NET tests when I use the 'jms' transformer but they seem pretty happy when run against a broker that is using the 'raw' or 'native' transformer, I'll try and track down what's going on there as well.;;;","27/Mar/15 23:01;tabish;Added additional fix to attempt to preserve the original MessageID value when the 'JMS' transformer is in play, requires that the store version be set to 10 in the Broker configuration to fully work.  This allows the AmqpNetLite tests to work fairly well now even when 'JMS' transformer is used.;;;","01/Apr/15 21:53;chug;Snapshot 5.12-20150331 looks good. The test case passes.;;;","01/Apr/15 21:54;tabish;Fix confirmed by Chuck, thanks!;;;","14/Mar/16 08:05;zman;Timothy Bish, our production environment seems meeting this problem with activemq-5.11.2. I was trying to reproduce this issue with the jms referring to 'AMQ5684-reproducer.cs', but failed. Here is my code. [https://github.com/zman2013/activemq-test-2/blob/master/src/main/java/zman/test/CloseBusyConsumer.java] Can you give me some advice to replay the issue? Appreciate your help :) -zman;;;","14/Mar/16 12:59;tabish;You will most likely find it quite tricky to reproduce an AMQP bug using the OpenWire JMS client.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[doc] No documentation of transport.soWriteTimeout,AMQ-5683,12784860,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tmielke,tmielke,tmielke,23/Mar/15 16:16,22/May/15 08:25,14/Jul/23 05:44,23/Mar/15 16:27,5.11.1,,,,,,,,,5.11.1,,,,Documentation,,,,,0,documentation,transport,,,,"There is an undocumented transport.soWriteTimeout option. 
It needs to get documented.
",,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Mar 23 16:26:40 UTC 2015,,,,,,,,,,,"0|i278e7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Mar/15 16:26;tmielke;Resolved in [version 34|https://cwiki.apache.org/confluence/pages/viewpage.action?pageId=55151565&navigatingVersions=true] of the TCP Transport Reference page http://activemq.apache.org/tcp-transport-reference.html.

;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MessageBrokerView.getTempQueues() have test for destination.isTopic() instead of destination.isQueue(),AMQ-5680,12783576,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,stolsvik,stolsvik,20/Mar/15 12:06,01/Apr/15 13:53,14/Jul/23 05:44,01/Apr/15 13:53,,,,,,,,,,5.12.0,,,,,,,,,0,,,,,,"The following code is a near-copy of the .getTempTopics() right above - without the change of the ""if (destination.isTopic()..."" to ""if (destination.isQueue()...""

{code}
    /**
     * Retrieve a set of all TemporaryQueues be used by the Broker
     * @return  all TemporaryQueues
     */
    public Set<ActiveMQTempQueue> getTempQueues(){
        Set<ActiveMQTempQueue> result = new HashSet<ActiveMQTempQueue>();
        for (ActiveMQDestination destination:getDestinations()){
            if (destination.isTopic() && destination.isTemporary()){
                result.add((ActiveMQTempQueue) destination);
            }
        }
        return result;
    }
{code}
",,stolsvik,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Apr 01 13:53:40 UTC 2015,,,,,,,,,,,"0|i271bj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Apr/15 13:53;tabish;Fixed, thanks for pointing that out. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
initialRedeliveryDelay not respected,AMQ-5674,12782907,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,18/Mar/15 16:05,04/Aug/15 15:59,14/Jul/23 05:44,18/Mar/15 16:08,5.11.0,,,,,,,,,5.11.2,5.12.0,,,,,,,,0,,,,,,"Setting initialRedeliveryDelay on redelivery policy is not used in some use cases. In case of a session rollback, the delay is wrongly calculated as redelivery counter is incremented before. Also, according to the docs redeliveryDelay should only be used if initialRedeliveryDelay = 0, which is not the case.",,dejanb,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Aug 04 15:59:21 UTC 2015,,,,,,,,,,,"0|i26x9z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Mar/15 16:08;dejanb;Fixed with http://git-wip-us.apache.org/repos/asf/activemq/commit/20832f1f;;;","04/Aug/15 15:59;jira-bot;Commit 6c384c9b79aeb16c48ce98bb04cd99b2939e64d0 in activemq's branch refs/heads/activemq-5.11.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=6c384c9 ]

https://issues.apache.org/jira/browse/AMQ-5674  - revisit change - use single redelivey delay attribute for both initial and subsequent delays - resolves regression in BrokerRedeliveryTest
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE in kahadb with concurrentStoreAndDispatchTopics when sending MQTT msgs with different QoS,AMQ-5668,12782550,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,tmielke,tmielke,17/Mar/15 12:29,17/Jun/15 23:11,14/Jul/23 05:44,17/Jun/15 23:11,5.11.1,,,,,,,,,5.12.0,,,,Broker,KahaDB,MQTT,,,0,broker,kahadb,mqtt,,,"Running KahaDB with concurrentStoreAndDispatchTopics=""true"" and sending 3 MQTT messages using different QoS values raises 

{code}
2015-03-17 13:27:48,866 WARN ActiveMQ NIO Worker 2 - Failed to send MQTT Publish:
java.lang.NullPointerException
	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.setLastCachedId(AbstractStoreCursor.java:319)
	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.trackLastCached(AbstractStoreCursor.java:280)
	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.addMessageLast(AbstractStoreCursor.java:213)
	at org.apache.activemq.broker.region.cursors.TopicStorePrefetch.addMessageLast(TopicStorePrefetch.java:74)
	at org.apache.activemq.broker.region.cursors.StoreDurableSubscriberCursor.addMessageLast(StoreDurableSubscriberCursor.java:198)
	at org.apache.activemq.broker.region.PrefetchSubscription.add(PrefetchSubscription.java:159)
	at org.apache.activemq.broker.region.DurableTopicSubscription.add(DurableTopicSubscription.java:274)
	at org.apache.activemq.broker.region.policy.SimpleDispatchPolicy.dispatch(SimpleDispatchPolicy.java:48)
	at org.apache.activemq.broker.region.Topic.dispatch(Topic.java:717)
	at org.apache.activemq.broker.region.Topic.doMessageSend(Topic.java:510)
	at org.apache.activemq.broker.region.Topic.send(Topic.java:441)
	at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:419)
	at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:468)
	at org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:297)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:152)
	at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)
	at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:307)
	at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:157)
	at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:541)
	at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:768)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:334)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:188)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:45)
	at org.apache.activemq.transport.mqtt.MQTTInactivityMonitor.onCommand(MQTTInactivityMonitor.java:147)
	at org.apache.activemq.transport.mqtt.MQTTTransportFilter.sendToActiveMQ(MQTTTransportFilter.java:106)
	at org.apache.activemq.transport.mqtt.MQTTProtocolConverter.sendToActiveMQ(MQTTProtocolConverter.java:173)
	at org.apache.activemq.transport.mqtt.MQTTProtocolConverter.onMQTTPublish(MQTTProtocolConverter.java:445)
	at org.apache.activemq.transport.mqtt.MQTTProtocolConverter.onMQTTCommand(MQTTProtocolConverter.java:210)
	at org.apache.activemq.transport.mqtt.MQTTTransportFilter.onCommand(MQTTTransportFilter.java:94)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.mqtt.MQTTCodec$1.onFrame(MQTTCodec.java:54)
	at org.apache.activemq.transport.mqtt.MQTTCodec.processCommand(MQTTCodec.java:79)
	at org.apache.activemq.transport.mqtt.MQTTCodec.access$400(MQTTCodec.java:26)
	at org.apache.activemq.transport.mqtt.MQTTCodec$4.parse(MQTTCodec.java:194)
	at org.apache.activemq.transport.mqtt.MQTTCodec$3.parse(MQTTCodec.java:160)
	at org.apache.activemq.transport.mqtt.MQTTCodec$2.parse(MQTTCodec.java:123)
	at org.apache.activemq.transport.mqtt.MQTTCodec.parse(MQTTCodec.java:65)
	at org.apache.activemq.transport.mqtt.MQTTNIOTransport.serviceRead(MQTTNIOTransport.java:105)
	at org.apache.activemq.transport.mqtt.MQTTNIOTransport.access$000(MQTTNIOTransport.java:43)
	at org.apache.activemq.transport.mqtt.MQTTNIOTransport$1.onSelect(MQTTNIOTransport.java:66)
	at org.apache.activemq.transport.nio.SelectorSelection.onSelect(SelectorSelection.java:97)
	at org.apache.activemq.transport.nio.SelectorWorker$1.run(SelectorWorker.java:119)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:744)
{code}","MQTT, KahaDB",cshannon,githubbot,gtully,tabish,tmielke,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Mar/15 12:34;tmielke;AMQ-5668Test.tgz;https://issues.apache.org/jira/secure/attachment/12705075/AMQ-5668Test.tgz",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jun 17 23:11:52 UTC 2015,,,,,,,,,,,"0|i26v4v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Mar/15 12:31;tmielke;Possible workarounds:
- concurrentStoreAndDispatchTopics=""false"" as recommended in AMQ-2864,
- use a different persistence store, e.g. LevelDB
;;;","17/Mar/15 12:34;tmielke;Attaching unit test in AMQ-5668Test.tgz. It uses Eclipse Paho MQTT library.;;;","11/Jun/15 01:08;cshannon;[~tmielke],

Thanks for the bug report and for your test case.  I took a look at this and there is a race condition.  As you pointed out, the best work around is probably to use concurrentStoreAndDispatchTopics=""false"" for now.

In detail, the issue lies in the setLastCacheId method in AbstractStoreCursor which you can see in the stack trace.  In the else clause in that method lastCachedIds[ index].getFutureOrSequenceLong() is returning null because it hasn't been set yet.  KahaDB assigns that value when the message is added to the store in a transaction.   However the TopicStorePefetch cursor is calling trackLastCached before KahaDB actually gets around to finishing the transaction and assigning the value, which happens asynchronously.

[~tabish121] and [~gtully], What do you guys thisnk about this?  It's certainly easy enough to add a null check but then the value is never cached in setLastCachedId as it just skips it.  This may not actually be a problem depending on what the lastCacheId is used for.  If I add a null check in, the test case passes but it seems like there could be a larger concurrency issue here that might need to be resolved besides just adding in a check for a null.
;;;","11/Jun/15 12:06;gtully;[~christopher.l.shannon] - great that you are looking into this, it always helps to have another set of eyes.
I think there are two things to consider: 1) the value of concurrentStoreAndDispatchTopics=true - I don't really see the benefit b/c it is very unlikely that all subs will get to ack a message before it is persisted. In the queue case, it does have a beneficial effect b/c it is just a single client that needs to ack fast.
2) what lastCacheId is used for? When the cache is full it stops tracking messages and when the cache is empty, to avoid replaying all messages from the store the cursor wants to start a store replay from the last message that it cached. There is a setBatch that sets the start point. Implicit in this is that the sequenceId in the store is in sync with the order messages are placed in the cursor. That is the crux of it. If the start point is off, there is a potential for a missed dispatch or a duplicate dispatch. Note - I think the durable topic case is a little simpler because of the per sub index, but that would need to be validated.

In the queue case, there are a bunch of hoops that ensure ordering because it is complicated with concurrentStoreAndDispatch. The same attention has not been given to the topic case to date.
If there is a proven usecase for  concurrentStoreAndDispatchTopics=true (point 1) - then the is a case for migrating the work done on queue cursors around lastCacheId to topics.
;;;","11/Jun/15 15:13;cshannon;Seeing as how there isn't really a benefit based on your first point and that there is at least one issue documented (as shown by this NPE), should we go ahead and update the documentation here http://activemq.apache.org/kahadb.html to specify that {{concurrentStoreAndDispatchTopics}} is not recommended to be enabled?  ;;;","11/Jun/15 15:21;tabish;Agree with that, there doesn’t seem to be a compelling reason to enable that for Topics. ;;;","11/Jun/15 15:57;cshannon;I went ahead and updated the documentation with a warning to specify concurrentStoreAndDispatchTopics is not recommended.  I would say we should probably close this ticket as there is a larger issue here than just the NPE and there isn't a reason to enable this property right now.  As Gary said, if there is a proven use case then it can be revisited later and a new ticket can be created to migrate the work from the queue case to ensure proper ordering is done.;;;","16/Jun/15 19:02;cshannon;Today I got the exact same null pointer exception in the same spot of the code (setLastCachedId method).  I was just using JMS and not MQTT.  I was doing some testing and I had a producer publishing messages as fast as possible to a topic.  At the time there was an existing offline durable subscription on that topic.  While the producer was running, I removed the durable subscription (using broker.removeSubscription) and the producer received that null pointer exception and closed.  I repeated the test and it didn't happen every time but I can get it to happen every few times.

So it seems like it might be a good idea to at least add in a null pointer check to prevent an exception since there is a race condition issue.;;;","16/Jun/15 20:54;gtully;i wonder if you could try and manufacture a unit test that can reproduce? it does look like some work is needed.;;;","16/Jun/15 21:29;cshannon;I'll try and come up with a test tomorrow that can reproduce it.  It might be hard to get something that happens reliably but I'll see what I can do. ;;;","17/Jun/15 12:03;cshannon;I was actually able to reproduce this reliably in a unit test.  What I discovered with my use case is that the same line is throwing the exception as the test case that was uploaded to this ticket, but it's a slightly different issue.  For the the original issue, astCachedIds[ index].getFutureOrSequenceLong() is returning null which causes the Long.compare method to fail.  In my case, with the durable unsubscribe, candidate.getFutureOrSequenceLong() is returning null and causing the problem.

I'm working on a pull request now to fix both issues and I will push it up shortly.;;;","17/Jun/15 13:25;githubbot;GitHub user cshannon opened a pull request:

    https://github.com/apache/activemq/pull/116

    https://issues.apache.org/jira/browse/AMQ-5668

    This commit fixes a race condition in AbstractStoreCursor setLastCacheId that could
    cause a null pointer exception in certain cases.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/cshannon/activemq AMQ-5668

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/116.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #116
    
----
commit 72f30e9c82d157f2810a9bff315da99d8b7098fb
Author: Christopher L. Shannon (cshannon) <christopher.l.shannon@gmail.com>
Date:   2015-06-17T13:23:08Z

    https://issues.apache.org/jira/browse/AMQ-5668
    
    This commit fixes a race condition in AbstractStoreCursor setLastCacheId that could
    cause a null pointer exception in certain cases.

----
;;;","17/Jun/15 13:29;cshannon;I submitted a PR that fixes the race condition causing the NPE for both the test case uploaded to this ticket and the case that I found.  It solves the race condition problem by saving references off locally to prevent the issue of the state changing (ie becoming null) after the null check was performed. I included a unit test to show that it is fixed.

Edit: I forgot to mention that there is probably more work to be done here, but this patch at least will prevent the producer from blowing up on sends because of a NPE.;;;","17/Jun/15 23:10;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/116
;;;","17/Jun/15 23:11;tabish;Seems sensible enough to protect from the NPE case, patch applied, thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
memory store is broken in 5.11.0 for advisories (and probably other issues as well),AMQ-5665,12782372,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,burtonator,burtonator,16/Mar/15 21:35,26/Apr/16 17:52,14/Jul/23 05:44,09/Apr/15 11:32,5.11.0,,,,,,,,,5.12.0,,,,,,,,,0,,,,,,"We're running 5.10.2 and don't encounter this issue.  We're running a non-persistent broker in production and testing so that's why we found this issue.

It looks like 5.11.0 introduced this issue.

Essentially Advisories fail to fire. 

It looks like it’s a bug with MemoryTransactionStore. Switching to persistent brokers fixes the problem.

It’s because addMessage calls:

        } else {
            destination.addMessage(null, message);
        }

.. with an explicit null.

the message given is:

2015-03-16 12:54:17,538 WARN [ActiveMQ Transport: tcp:///127.0.0.1:56468@16161] org.apache.activemq.advisory.AdvisoryBroker Failed to fire delivered advisory, reason: java.lang.NullPointerException

… and I saw this when I was running mvn test in the main ActiveMQ test suite (or at least pretty sure I did) so this is happening not just in my code. 

The full exception , which I captured by setting a break point is below. 


java.lang.NullPointerException
	at org.apache.activemq.advisory.AdvisoryBroker.fireAdvisory(AdvisoryBroker.java:626)
	at org.apache.activemq.advisory.AdvisoryBroker.messageDelivered(AdvisoryBroker.java:397)
	at org.apache.activemq.broker.BrokerFilter.messageDelivered(BrokerFilter.java:349)
	at org.apache.activemq.broker.BrokerFilter.messageDelivered(BrokerFilter.java:349)
	at org.apache.activemq.broker.MutableBrokerFilter.messageDelivered(MutableBrokerFilter.java:360)
	at org.apache.activemq.broker.MutableBrokerFilter.messageDelivered(MutableBrokerFilter.java:360)
	at org.apache.activemq.broker.region.BaseDestination.messageDelivered(BaseDestination.java:518)
	at org.apache.activemq.broker.region.Queue.messageSent(Queue.java:1806)
	at org.apache.activemq.broker.region.Queue.doPendingCursorAdditions(Queue.java:794)
	at org.apache.activemq.broker.region.Queue.orderedCursorAdd(Queue.java:875)
	at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:854)
	at org.apache.activemq.broker.region.Queue.send(Queue.java:733)
	at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:419)
	at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:468)
	at org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:297)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:152)
	at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)
	at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:307)
	at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:157)
	at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:157)
	at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:541)
	at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:768)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:334)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:188)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:270)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)
	at java.lang.Thread.run(Thread.java:724)

... the core issue here looks like the message doesn't have a TransactionId and MemoryTransactionStore has an addMessages which has a fall through of addMessage with a null context which then causes the NPE.

Did messages have an implicit transaction Id before?
",,burtonator,cshannon,dejanb,tabish,wmfowlkes,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Apr 26 17:52:41 UTC 2016,,,,,,,,,,,"0|i26u1z:",9223372036854775807,Regression,,,,,,,,,,,,,,,,,,,,"08/Apr/15 13:22;tabish;Would recommend you try and create a small unit test that shows the problem, that way any fix will be maintained into the future.  ;;;","09/Apr/15 11:32;dejanb;I ran into this writing a test for advisories

http://git-wip-us.apache.org/repos/asf/activemq/commit/69767a2f fixes it

The test for another issue I'm working on will be used to verify and guard the fix;;;","19/Oct/15 15:50;wmfowlkes;Still seeing this in release 5.12.0.   Please advise.;;;","26/Apr/16 15:50;wmfowlkes;WARN  | Failed to fire delivered advisory, reason: java.lang.NullPointerException | org.apache.activemq.advisory.AdvisoryBroker

Still seeing the above in release 5.12.0 for every message fired.  Can't see the forest for the trees in the logs.;;;","26/Apr/16 15:53;tabish;Try the latest release (5.13.2) and write a test case that reproduces if you see it there.  ;;;","26/Apr/16 17:52;cshannon;If you enable debug logging you will see the full stack trace which is helpful so we know the line it is getting the NPE on.  As Tim pointed out, the best thing to do would be to write a small test case against the latest relesae that we could run to help us figure out the scenario that is triggering the NPE.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support selective MBean creation,AMQ-5656,12780893,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,gtully,lichtin,lichtin,10/Mar/15 15:33,15/Nov/18 17:42,14/Jul/23 05:44,18/Feb/16 21:14,,,,,,,,,,5.12.0,,,,Broker,JMX,,,,0,jmx,scalability,,,,"A continuation of http://activemq.2283324.n4.nabble.com/How-to-disable-MBeans-creation-tp4692863p4692904.html where I asked about a feature to suppress MBean creation for certain objects, such as sessions, producers, consumers.

Quoting Gary:
{quote}
There is a single code entry point ([ManagementContext.registerMBean|https://github.com/apache/activemq/blob/master/activemq-broker/src/main/java/org/apache/activemq/broker/jmx/ManagementContext.java#L391]) for all MBean registration in the broker so gating that on a filter or regexp match may be all that we need.
{quote}",,dejanb,gtully,jgenender,lichtin,lionel.cons,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-7102,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Feb 18 21:14:53 UTC 2016,,,,,,,,,,,"0|i26l4n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Jun/15 14:53;gtully;http://git-wip-us.apache.org/repos/asf/activemq/commit/928e815a

new attribute on the managementContext, a comma separated list of attribute key=value pairs. Any mbean objectName that matches any pair will be not be registered in the mbean server.

For example, to disable mbean registration for all consumer and dynanamicPropducer view mbeans, use the following:
{code}
<managementContext>
            <managementContext suppressMBean=""endpoint=dynamicProducer,endpoint=Consumer""/>
        </managementContext>{code}


To peek at the general naming scheme see: BrokerMBeanSupport
https://github.com/apache/activemq/blob/61da1faa4c4e49191b373049ee36434aaad58897/activemq-broker/src/main/java/org/apache/activemq/broker/jmx/BrokerMBeanSupport.java;;;","26/Jun/15 11:23;dejanb;I refactored this feature a bit, so that it supports patterns now. I also added some docs

https://cwiki.apache.org/confluence/display/ACTIVEMQ/JMX#JMX-SelectiveMBeanregistration;;;","18/Feb/16 18:33;jgenender;This change breaks the webconsole and is not complete.  When selectively allowing JMX entires, the ManagementContext still sends back a list onjects even though those MBeans are not allowed to register.  Hence the webconsole blows up with:

org.apache.jasper.JasperException: An exception occurred processing JSP page /topics.jsp at line 55

52: <c:forEach items=""${requestContext.brokerQuery.topics}"" var=""row"">
53: <tr>
54: <td><a href=""<c:url value=""send.jsp"">
55:                         <c:param name=""JMSDestination"" value=""${row.name}"" />
56:                         <c:param name=""JMSDestinationType"" value=""topic""/></c:url>""><form:tooltip text=""${row.name}"" length=""50""/></a></td>
57: <td><c:out value=""${row.consumerCount}"" /></td>
58: <td><c:out value=""${row.enqueueCount}"" /></td>

The mbeans need to be filtered on request for their lists for what is being supressed through the ManagedRegionBroker, or the webconsole will need filtering code everywhere for MBean calls that have no ability to be called.;;;","18/Feb/16 21:14;jgenender;Will close this issue and track it in AMQ-6175;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IdGenerator not optimal in port restricted enviroments.,AMQ-5652,12780546,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,09/Mar/15 17:47,10/Mar/15 19:38,14/Jul/23 05:44,10/Mar/15 19:38,,,,,,,,,,5.12.0,,,,,,,,,0,,,,,,,,davsclaus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Mar 10 07:36:48 UTC 2015,,,,,,,,,,,"0|i26j07:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Mar/15 17:49;chirino;In some containerized environments, the IdGenerator does not work that great.  Not only does it not usually detect the hostname correctly.  But binding to a dynamic port might be restricted.

We should support supplying both those data values via system properties.;;;","10/Mar/15 07:36;davsclaus;[~chirino] you may want to do similar to Camel as we have a uid generator based on AMQ logic here
https://github.com/apache/camel/blob/master/camel-core/src/main/java/org/apache/camel/impl/ActiveMQUuidGenerator.java;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maximum producers allowed per connection doesn't work for anonymous producers,AMQ-5649,12780323,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,cshannon,cshannon,08/Mar/15 15:53,13/Apr/15 16:44,14/Jul/23 05:44,13/Apr/15 14:29,5.10.1,5.11.0,,,,,,,,5.12.0,,,,Broker,,,,,1,easyfix,,,,,"There is a configuration option on {{TransportConnector}} to set the maximum number of producers allowed per connection.  This is validated in {{TransportConnection}} in the {{processAddProducer}} method.  

The issue is that the code to enforce the check first tests if the destination is null and will not enforce the check if the destination is null. This means that when a client creates an anonymous producer on a session this setting will be ignored which is not the correct behavior.  Even if the producers are anonymous this option should still limit to the total number of producers on the connection.  The problem is here on line 605 of {{TransportConnection.java}}:

{code}
if (destination != null && !AdvisorySupport.isAdvisoryTopic(destination)) {
  ....
}
{code}

This simply should be changed to:

{code}
if (!AdvisorySupport.isAdvisoryTopic(destination)) {
  ....
}
{code}

I'll be submitting a pull request (with unit tests) shortly.",,brianjohnson,cshannon,githubbot,tabish,vhle01,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Apr 13 16:44:07 UTC 2015,,,,,,,,,,,"0|i26hp3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Mar/15 16:23;githubbot;GitHub user cshannon opened a pull request:

    https://github.com/apache/activemq/pull/68

    AMQ-5649: Fixed max producers per connection for anonymous producers

    Modified TransportConnection so that maximumProducersAllowedPerConnection will be enforced even for anonymous producers.
    
    This resolves https://issues.apache.org/jira/browse/AMQ-5649
    
    Two unit tests have been added for this ticket.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/cshannon/activemq AMQ-5649

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/68.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #68
    
----
commit d8a2ce393faeb9975e066a48d1498a81fb2025be
Author: Christopher L. Shannon (cshannon) <christopher.l.shannon@gmail.com>
Date:   2015-03-08T15:34:28Z

    AMQ-5649: Modified TransportConnection so that maximumProducersAllowedPerConnection will be enforced even for anonymous producers.
    
    This resolves https://issues.apache.org/jira/browse/AMQ-5649
    
    Two unit tests have been added for this ticket.

----
;;;","13/Apr/15 14:29;tabish;Fix applied on master. ;;;","13/Apr/15 16:44;githubbot;Github user cshannon closed the pull request at:

    https://github.com/apache/activemq/pull/68
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQP: Close busy receiver link to queue and open new link: new link never receives,AMQ-5647,12780106,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,chug,chug,06/Mar/15 16:11,02/Apr/15 22:55,14/Jul/23 05:44,02/Apr/15 22:55,5.11.0,,,,,,,,,5.12.0,,,,AMQP,,,,,0,,,,,,"This issue is similar to AMQ-5646 with the notable exception that the first link is closed after receiving one message but before acknowledging any messages.
","ActiveMQ 5.11.1 release on Fedora 19
Test client: http://amqpnetlite.codeplex.com/ 
LinkTests.cs http://amqpnetlite.codeplex.com/SourceControl/latest#test/Test.Amqp.NetMF/LinkTests.cs
",chug,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5646,,,,,,,,,,,"06/Mar/15 16:41;chug;amq-5.11-close-busy-receiver-hangs.html;https://issues.apache.org/jira/secure/attachment/12703078/amq-5.11-close-busy-receiver-hangs.html",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Apr 02 22:55:28 UTC 2015,,,,,,,,,,,"0|i26gef:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Mar/15 16:15;chug;Here is a cooked protocol trace. Again, this test works find going to a qpidd C++ broker.;;;","06/Mar/15 16:41;chug;Attach html and not pcapng;;;","09/Mar/15 14:57;tabish;Some similarities in behavior of both issues;;;","16/Mar/15 18:20;tabish;I've tried to reproduce this one and so far cannot.  It might be worth trying out your tests again using a current 5.12 SNAPSHOT build which you can get here, there are quite a few AMQP fixes in there.

https://repository.apache.org/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.12-SNAPSHOT/
;;;","02/Apr/15 22:55;tabish;This is resolved by the addition of proper drain support and removal of the old drainCheck method which could lead to a race that removed all credit from the link before any message was dispatched. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQP: Second receiver attaching to queue hangs,AMQ-5646,12780090,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,chug,chug,06/Mar/15 15:05,13/Mar/15 22:23,14/Jul/23 05:44,13/Mar/15 22:23,5.11.0,,,,,,,,,5.12.0,,,,AMQP,,,,,0,,,,,,"The last test in the file, TestMethod_AdvancedLinkFlowControl() hangs. The test:
* opens a connection and session
* open a sender and send a batch of messages
* open a receiver with credit of 2 and no automatic credit renewal
* receive two messages, accept them
* open a second receiver with credit of 2 and no automatic credit renewal
* receive a two messages

The broker does not send the messages to the second receiver.
","ActiveMQ 5.11.1 release on Fedora 19
Test client: http://amqpnetlite.codeplex.com/ 
LinkTests.cs http://amqpnetlite.codeplex.com/SourceControl/latest#test/Test.Amqp.NetMF/LinkTests.cs
",chug,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5647,AMQ-5661,,AMQ-5661,,,,,,,,,,,"06/Mar/15 15:08;chug;amq-5.11-second-receiver-hangs.html;https://issues.apache.org/jira/secure/attachment/12703064/amq-5.11-second-receiver-hangs.html","06/Mar/15 15:08;chug;qpidd-second-receiver-works.html;https://issues.apache.org/jira/secure/attachment/12703063/qpidd-second-receiver-works.html",,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Mar 13 22:23:27 UTC 2015,,,,,,,,,,,"0|i26gav:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Mar/15 15:08;chug;Here are two protocol traces.
The test completes successfully running to a qpidd C++ broker
The test hangs running to AMQ 5.11;;;","11/Mar/15 21:12;tabish;I've created a test case to reproduce this one, will investigate what's going on.;;;","13/Mar/15 22:23;tabish;Fixed by changes in AMQ-5661;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CronParser.getNextScheduledTime() for the first day of every month,AMQ-5645,12780084,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,adramirez,adramirez,06/Mar/15 14:41,29/Nov/16 16:19,14/Jul/23 05:44,09/Mar/15 19:33,5.11.0,5.9.0,,,,,,,,5.11.2,5.12.0,,,Broker,,,,,0,,,,,,"When we try to get a NextSecheduledTime for a cron string that should return next month's first day (""0 1 1 * *"") we get current month's last day.

For example:

	public static void main(String[] args){
		
		try{
		
			Date miFecha = new Date(CronParser.getNextScheduledTime(""0 1 1 * *"", System.currentTimeMillis()));
				
			System.out.println(miFecha);
			
			
		}catch(Exception e){
		
			e.printStackTrace();
		}	
		
		
	}

This prints:

Tue Mar 31 01:00:00 CEST 2015
","Windows, Java 1.6",adramirez,githubbot,jira-bot,mwarhaftig,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Nov 29 16:19:44 UTC 2016,,,,,,,,,,,"0|i26g9j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Mar/15 12:46;githubbot;GitHub user mwarhaftig opened a pull request:

    https://github.com/apache/activemq/pull/69

    AMQ-5645 - Updated DayOfMonth cron to roll to next month properly.

    For the Minutes and Hours tokens in CronParser.buildCronEntries() the CronEntry.end value was correctly +1 of actually allowed end values (ex. a time of 10:60 is not possible).  Updated DayOfMonth to also be +1 (32 instead of 31).  Expanded unit tests included.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/mwarhaftig/activemq amq5645

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/69.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #69
    
----
commit e9f75c509c6244ca44e817663a3411afa68b4a41
Author: Matt Warhaftig <mwarhaftig@gmail.com>
Date:   2015-03-09T12:22:55Z

    AMQ-5645 - Updated DayOfMonth cron to roll to next month properly.

----
;;;","09/Mar/15 12:50;mwarhaftig;Thanks for the clear example Toni.;;;","09/Mar/15 19:33;tabish;Nice catch.  Reviewed the changes, looks good.  Patch is applied on master.;;;","04/Aug/15 15:59;jira-bot;Commit 2c166b7605dad1dc622d1bdd23061c0fa1bcd4ad in activemq's branch refs/heads/activemq-5.11.x from [~mwarhaftig]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=2c166b7 ]

AMQ-5645 - Updated DayOfMonth cron to roll to next month properly.
;;;","29/Nov/16 16:19;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/69
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Autorization map doesn't handle wildcard subscriptions properly,AMQ-5644,12780083,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,06/Mar/15 14:33,10/Mar/15 10:27,14/Jul/23 05:44,10/Mar/15 10:27,5.11.0,,,,,,,,,5.12.0,,,,,,,,,0,,,,,,"Wildcard destination subscriptions are matched against all matching map entries. Instead, we should only return those entries that explicitly matches subscription wildcard.",,dejanb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Mar 10 10:27:59 UTC 2015,,,,,,,,,,,"0|i26g9b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Mar/15 14:37;dejanb;Fixed with http://git-wip-us.apache.org/repos/asf/activemq/commit/7777744d;;;","06/Mar/15 17:07;dejanb;Reverted a commit temporarily as it break some tests. I need to investigate it further.;;;","10/Mar/15 10:27;dejanb;New fix in http://git-wip-us.apache.org/repos/asf/activemq/commit/3b39d2cc;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MapMessage.getBytes crashes with NPE if no value present,AMQ-5632,12779083,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,stolsvik,stolsvik,03/Mar/15 14:27,03/Mar/15 21:18,14/Jul/23 05:44,03/Mar/15 21:18,,,,,,,,,,5.12.0,,,,,,,,,0,,,,,,"Compare to AMQ-5628 and AMQ-5629

Read up on http://docs.oracle.com/javaee/1.4/api/javax/jms/MapMessage.html

Notice the wording ""if there is no item by this name, a null value is returned.""

ActiveMqMapMessage, line ~494:
{code}
    /**
     * Returns the byte array value with the specified name.
     *
     * @param name the name of the byte array
     * @return a copy of the byte array value with the specified name; if there
     *         is no item by this name, a null value is returned.
     * @throws JMSException if the JMS provider fails to read the message due to
     *                 some internal error.
     * @throws MessageFormatException if this type conversion is invalid.
     */
    @Override
    public byte[] getBytes(String name) throws JMSException {
        initializeReading();
        Object value = map.get(name);
        if (value instanceof byte[]) {
            return (byte[])value;
        } else {
            throw new MessageFormatException("" cannot read a byte[] from "" + value.getClass().getName());
        }
    }
{code}

Notice how the ""else""-block will kick in on null value, whereby we get the ""value.getClass()"" executed when inside the constructor argument creation of the wrongly thrown MessageFormatException, resulting in NPE.

Instead, a code block like every other getter has should be employed, here from getString right above:
{code}
    public String getString(String name) throws JMSException {
        initializeReading();
        Object value = map.get(name);
        if (value == null) {
            return null;
        }
        if (value instanceof byte[]) {
            throw new MessageFormatException(""Use getBytes to read a byte array"");
        } else {
            return value.toString();
        }
    }
{code}

Notice the null-check with null-return.",,stolsvik,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5628,AMQ-5629,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Mar 03 21:18:50 UTC 2015,,,,,,,,,,,"0|i26anb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Mar/15 21:18;tabish;Added check for null and return null if so.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MapMessage.getDouble uses Float when converting from String/UTF8,AMQ-5628,12779041,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,stolsvik,stolsvik,03/Mar/15 12:27,03/Mar/15 21:29,14/Jul/23 05:44,03/Mar/15 21:29,,,,,,,,,,5.12.0,,,,,,,,,0,,,,,,"ActiveMqMapMessage, line ~437:

{code}
    public double getDouble(String name) throws JMSException {
        initializeReading();
        Object value = map.get(name);
        if (value == null) {
            return 0;
        }
        if (value instanceof Double) {
            return ((Double)value).doubleValue();
        }
        if (value instanceof Float) {
            return ((Float)value).floatValue();
        }
        if (value instanceof UTF8Buffer) {
            return Float.valueOf(value.toString()).floatValue();
        }
        if (value instanceof String) {
            return Float.valueOf(value.toString()).floatValue();
        } else {
            throw new MessageFormatException("" cannot read a double from "" + value.getClass().getName());
        }
    }
{code}

Notice the ifs on String or UTF8Buffer and the use of Float.valueOf.

I noticed this when Strings representing anything higher than Float.MAX_VALUE ended up as Infinity, and anything below Float.MIN_VALUE ended up as 0.",,stolsvik,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5632,,,AMQ-5629,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Mar 03 21:29:46 UTC 2015,,,,,,,,,,,"0|i26ae7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Mar/15 21:29;tabish;Fixed on master, conversions now use Double instead of Float.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Dead picture links in website,AMQ-5627,12778990,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,cathodion,cathodion,03/Mar/15 09:20,11/Mar/15 10:12,14/Jul/23 05:44,11/Mar/15 10:12,,,,,,,,,,,,,,Documentation,,,,,0,,,,,,"The following page contains dead picture links:
http://activemq.apache.org/scaling-the-depth-of-a-queue.html",Firefox on Mac OS X,cathodion,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Mar 11 10:12:29 UTC 2015,,,,,,,,,,,"0|i26a2v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Mar/15 10:12;cathodion;The issue is caused by including a page in another page. On confluence this works as expected, but converted to a website the picture links are dead.
I've replaced the page inclusion (which was also a bit confusing) with a hyperlink.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
kahadb - inconsumable low/med priority message after restart,AMQ-5626,12778762,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,02/Mar/15 14:14,02/Mar/15 14:58,14/Jul/23 05:44,02/Mar/15 14:58,5.11.0,,,,,,,,,5.12.0,,,,KahaDB,Message Store,,,,0,kahadb,priority,,,,"with priority support enabled, on occasion after a restart some low priority messages inconsumable.
The cursor.queueSize() is reporting messages available on queue but they cannot be consumed.
",,gtully,paulgale,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Mar 02 14:58:16 UTC 2015,,,,,,,,,,,"0|i268r3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Mar/15 14:58;gtully;issue assigning next id for index, caused overwrite when next message was not high priority.
fix and test in http://git-wip-us.apache.org/repos/asf/activemq/commit/ecebd241;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
STOMP clients can only delete durable subscriptions when clientId equals subscriptionName,AMQ-5622,12778576,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,mjustin,mjustin,01/Mar/15 13:09,02/Mar/15 21:13,14/Jul/23 05:44,02/Mar/15 21:13,5.7.0,,,,,,,,,5.12.0,,,,STOMP,,,,,0,test,,,,,"For durable topic subscriptions STOMP clients must specify the same clientId on the connection and subcriptionName on the subscribe prior to v5.7.0. (https://issues.apache.org/jira/browse/AMQ-3917)
Removing the subscription however is only possible if the same clientId on the connection and subcriptionName on the subscribe is used. The STOMP unit tests fulfill this condition (both have the same value, ""test""). I suggest to modify the unit test to use different values for clientId and subcriptionName to verify this bug. ",,mjustin,mut,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Mar 02 21:13:20 UTC 2015,,,,,,,,,,,"0|i267m7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Mar/15 15:03;tabish;Are you using STOMP client in 1.1+ mode or a STOMP 1.0 client.  If only using 1.0 then you still need to have matching values as the 1.0 specification doesn't support uniquely identifying a subscription using an 'id' value.  ;;;","02/Mar/15 16:44;mjustin;It works as expected but only with STOMP 1.1 (in my client library). 

If I modify the ActiveMQ test Stomp11Test.testDurableSubAndUnSubOnTwoTopics to use STOMP 1.2 it fails to find the subscription (""test1""):

String connectFrame = ""STOMP\n"" +
                ""login:system\n"" + ""passcode:manager\n"" + ""accept-version:1.2\n"" +
                ""host:localhost\n"" + ""client-id:test\n"" + ""\n"" + Stomp.NULL;



2015-03-02 17:37:11,730 [0.1:49541@49534] - WARN  ProtocolConverter              - Exception occurred processing: 
UNSUBSCRIBE
activemq.subscriptionName:test1
receipt:3
destination:/topic/org.apache.activemq.transport.stomp.Stomp11Test.testDurableSubAndUnSubOnTwoTopics1
id:durablesub-1

It should work in the same way with both protocol versions (1.1 and 1.2) if I understand the 1.2 protocol changes correctly


;;;","02/Mar/15 16:50;tabish;I'll take a look at it, I would expect it to work in 1.2 as well.  ;;;","02/Mar/15 21:13;tabish;Fix this and a couple other minor issues with the 1.2 support, tests added;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
deadlock on shutdown - kahadb and local tx rollback,AMQ-5620,12777915,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,26/Feb/15 15:55,02/Mar/15 14:59,14/Jul/23 05:44,02/Mar/15 14:59,5.11.0,,,,,,,,,5.12.0,,,,,,,,,0,deadlock,kahadb,shutdown,,,"Deadlock found in a potential test case:{code}Found one Java-level deadlock:
=============================
""ActiveMQ BrokerService[localhost] Task-1"":
  waiting to lock monitor 0x00007feeeb80d108 (object 0x00000007f67294c8, a org.apache.activemq.store.kahadb.disk.journal.Journal),
  which is held by ""pool-2-thread-1""
""pool-2-thread-1"":
  waiting to lock monitor 0x00007feee8a34428 (object 0x00000007f67091f8, a java.lang.Object),
  which is held by ""ActiveMQ BrokerService[localhost] Task-1""

Java stack information for the threads listed above:
===================================================
""ActiveMQ BrokerService[localhost] Task-1"":
	at org.apache.activemq.store.kahadb.disk.journal.Journal.getCurrentWriteFile(Journal.java:420)
	- waiting to lock <0x00000007f67294c8> (a org.apache.activemq.store.kahadb.disk.journal.Journal)
	at org.apache.activemq.store.kahadb.disk.journal.DataFileAppender.enqueue(DataFileAppender.java:209)
	- locked <0x00000007f67091f8> (a java.lang.Object)
	at org.apache.activemq.store.kahadb.disk.journal.DataFileAppender.storeItem(DataFileAppender.java:148)
	at org.apache.activemq.store.kahadb.disk.journal.Journal.write(Journal.java:647)
	at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:977)
	at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:959)
	at org.apache.activemq.store.kahadb.KahaDBTransactionStore.rollback(KahaDBTransactionStore.java:313)
	at org.apache.activemq.transaction.LocalTransaction.rollback(LocalTransaction.java:94)
	- locked <0x00000007f6729698> (a org.apache.activemq.store.kahadb.KahaDBTransactionStore)
	at org.apache.activemq.broker.TransactionBroker.removeConnection(TransactionBroker.java:323)
	at org.apache.activemq.broker.MutableBrokerFilter.removeConnection(MutableBrokerFilter.java:137)
	at org.apache.activemq.broker.TransportConnection.processRemoveConnection(TransportConnection.java:862)
	- locked <0x00000007f6729810> (a org.apache.activemq.broker.jmx.ManagedTransportConnection)
	at org.apache.activemq.broker.TransportConnection.doStop(TransportConnection.java:1187)
	at org.apache.activemq.broker.TransportConnection$4.run(TransportConnection.java:1117)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
""pool-2-thread-1"":
	at org.apache.activemq.store.kahadb.disk.journal.DataFileAppender.close(DataFileAppender.java:257)
	- waiting to lock <0x00000007f67091f8> (a java.lang.Object)
	at org.apache.activemq.store.kahadb.disk.journal.Journal.close(Journal.java:474)
	- locked <0x00000007f67294c8> (a org.apache.activemq.store.kahadb.disk.journal.Journal)
	at org.apache.activemq.store.kahadb.MessageDatabase.close(MessageDatabase.java:438)
	at org.apache.activemq.store.kahadb.MessageDatabase.unload(MessageDatabase.java:466)
	at org.apache.activemq.store.kahadb.MessageDatabase.doStop(MessageDatabase.java:268)
	at org.apache.activemq.store.kahadb.KahaDBStore.doStop(KahaDBStore.java:288)
	at org.apache.activemq.util.ServiceSupport.stop(ServiceSupport.java:71)
	at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)
	at org.apache.activemq.broker.BrokerService.stop(BrokerService.java:792)
	at org.apache.activemq.store.kahadb.PriorityMessageRestartBrokerTest.stopRestartBroker(PriorityMessageRestartBrokerTest.java:525)
	at org.apache.activemq.store.kahadb.PriorityMessageRestartBrokerTest.access$200(PriorityMessageRestartBrokerTest.java:70)
	at org.apache.activemq.store.kahadb.PriorityMessageRestartBrokerTest$BrokerRestartTask.run(PriorityMessageRestartBrokerTest.java:513)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:304)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:178)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)

Found 1 deadlock.{code}",,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Mar 02 14:59:18 UTC 2015,,,,,,,,,,,"0|i263m7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Mar/15 14:59;gtully;avoid the deadlock by allowing journal access during appender close.
http://git-wip-us.apache.org/repos/asf/activemq/commit/260e28ec;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
logWriteBufferSize is not supported by LevelDB and ReplicatedLevelDB,AMQ-5612,12777330,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,artem.karpenko,artem.karpenko,24/Feb/15 22:16,21/Jul/15 16:47,14/Jul/23 05:44,21/Jul/15 16:47,5.11.0,,,,,,,,,,,,,Documentation,,,,,0,,,,,,"Documentation states that {{logWriteBufferSize}} parameter is supported by LevelDB and ReplicatedLevelDB persistence adapters, but it is not - it's not even passing through schema validation on AMQ startup.",,artem.karpenko,gtully,mwarhaftig,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jul 21 16:47:40 UTC 2015,,,,,,,,,,,"0|i26007:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Jul/15 16:47;gtully;i updated the doc to reflect the code. I can't find any reference to that option ever existing.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
connecting with username and SimpleAuthenticationPlugin defined without any users leads to NPE,AMQ-5608,12776887,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,robbie,robbie,23/Feb/15 17:39,23/Feb/15 17:48,14/Jul/23 05:44,23/Feb/15 17:48,5.11.1,,,,,,,,,5.12.0,,,,Broker,,,,,0,,,,,,"If a SimpleAuthenticationPlugin is defined in the configuration without any users element, then when a client which does supply a username attempts to connect an NPE occurs in the broker.

E.g, defining broker config as:
{noformat}
<simpleAuthenticationPlugin anonymousAccessAllowed=""true"" />
{noformat}

And trying to log in, results in:
{noformat}
java.lang.NullPointerException
        at org.apache.activemq.security.SimpleAuthenticationBroker.addConnection(SimpleAuthenticationBroker.java:83)
...
<snip>
{noformat}",,robbie,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Feb 23 17:48:07 UTC 2015,,,,,,,,,,,"0|i25xkv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Feb/15 17:48;robbie;Change made to prevent the NPE in: https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=1406d40ac34fedb0be2e5bc5998844a46ff15760;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
High CPU load when using failover transport in network connector,AMQ-5605,12776495,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,larsn,larsn,20/Feb/15 17:33,29/Apr/16 11:12,14/Jul/23 05:44,12/Aug/15 10:00,5.11.0,5.11.1,,,,,,,,5.11.3,5.12.0,,,,,,,,1,failover,,,,,"I've got a configuration with two master/slave setups consisting of 3 ActiveMQ instances each. They are deployed on three servers, with one ActiveMQ instance from each master/slave setup on every server. They are using the leveldb and zookeeper. Everything works fine.

Now I've got the strange behaviour that when I add a network connector to each ActiveMQ instance like this:
{code}
networkConnector name=""toMasterSlave02"" dynamicOnly=""true"" uri=""masterslave:(tcp://host1:61617,tcp://host2:61617,tcp://host3:61617)""
{code}

When you now restart the master of the master/slave setup that is targeted by the above network connector the cpu load on the current master goes and stays up at 100%, i.e. it uses one CPU per configured transportConnector.

Now the explanation, mostly copied from http://activemq.2283324.n4.nabble.com/High-CPU-load-with-network-connector-failover-transport-tp4691798.html
{quote}
When one of the brokers is restarted, the other broker uses ~400% CPU. The cause is the FailoverTransport reconnectTask spinning, and nothing is stopping the task.

Reverting this fix made for AMQ-5315, while it does reintroduce the NullPointerException, does handle failover properly without spinning:
https://git1-us-west.apache.org/repos/asf/activemq/repo?p=activemq.git;a=commitdiff;h=c391321d1b5b59542d847717654b0d4dba54cf2f <https://git1-us-west.apache.org/repos/asf/activemq/repo?p=activemq.git;a=commitdiff;h=c391321d1b5b59542d847717654b0d4dba54cf2f>

The reason it works after reverting that change is the NullPointerException is caught, -> serviceLocalException() -> ServiceSupport.dispose(getControllingService()); with the fix made in AMQ-5315, the dispose() call is never made. 
{quote}

Sorry, but I've got no clue how to provide a unit test for this. Maybe someone else can help.
","Ubuntu 14.04, SuSE Enterprise 11.3",cshannon,gtully,jira-bot,larsn,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Apr 29 11:12:35 UTC 2016,,,,,,,,,,,"0|i25v67:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Aug/15 16:01;gtully;it looks like that fix needs to be reverted, [~tabish121]  - what do u think?;;;","07/Aug/15 16:07;tabish;Seems like it probably should be.  ;;;","07/Aug/15 18:59;tabish;[~gtully] Looking at that code again I think it might make more sense to change the collectBrokerInfos calls for those null checks such that they call serviceLocationException instead which should result in both the fire of the error and the dispose call on the controlling resource which is the bit that is currently being missed.  Otherwise you end up with the NPE error getting fired out which causes confusion in the logs.  Thoughts?

{code}
diff --git a/activemq-broker/src/main/java/org/apache/activemq/network/DemandForwardingBridgeSupport.java b/activemq-broker/src/main/java/org/apache/activemq/network/DemandForwardingBridgeSupport.java
index 8e08f95..ad6fd61 100644
--- a/activemq-broker/src/main/java/org/apache/activemq/network/DemandForwardingBridgeSupport.java
+++ b/activemq-broker/src/main/java/org/apache/activemq/network/DemandForwardingBridgeSupport.java
@@ -348,7 +348,7 @@
         try {
             remoteBrokerInfo = futureRemoteBrokerInfo.get();
             if (remoteBrokerInfo == null) {
-                fireBridgeFailed(new Throwable(""remoteBrokerInfo is null""));
+                serviceLocalException(new Throwable(""remoteBrokerInfo is null""));
                 return;
             }
         } catch (Exception e) {
@@ -359,7 +359,7 @@
         try {
             localBrokerInfo = futureLocalBrokerInfo.get();
             if (localBrokerInfo == null) {
-                fireBridgeFailed(new Throwable(""localBrokerInfo is null""));
+                serviceLocalException(new Throwable(""localBrokerInfo is null""));
                 return;
             }
 {code}
 ;;;","07/Aug/15 20:22;jira-bot;Commit a3c8bee1f0696b1d0d9a315b12241eecbf1f2d85 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=a3c8bee ]

https://issues.apache.org/jira/browse/AMQ-5605

Attempt to resolve high CPU usage after error by ensuring that the
transport is disposed along with the fire of the local error. ;;;","10/Aug/15 07:17;larsn;Thanks. I tested the commit with the current 5.11.x branch and it fixes the issue. 

Is there any possibility to get this issue and AMQ-5082 in a 5.11.x release?;;;","10/Aug/15 10:53;gtully;[~tabish121] think that nails it :-);;;","10/Aug/15 13:02;larsn;Sweet. I will test the current 5.11.x branch without the patch from AMQ-5082 and let you know. Might take a day or so.;;;","12/Aug/15 07:27;larsn;[~gtully] and [~tabish121], thanks for your help. Applying the patch to the latest 5.11.x branch fixes the issue for me. 

Any chance of getting this in a release, either 5.11.x or 5.12.x?;;;","12/Aug/15 10:00;tabish;Fix included in 5.12.0 code.  ;;;","28/Oct/15 13:43;jira-bot;Commit 756fa656b37df24bfe41679f8db238c021fe5f8b in activemq's branch refs/heads/activemq-5.11.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=756fa65 ]

https://issues.apache.org/jira/browse/AMQ-5605

Attempt to resolve high CPU usage after error by ensuring that the
transport is disposed along with the fire of the local error. ;;;","29/Apr/16 08:34;ruffp;Does this bug affect the version 5.10.2 of ActiveMQ? Because we have a similar problem with 100% CPU usage and nothing special in logs.
Our ActiveMQ was working fine until we introduce the Network Connector with {{masterslave:(tcp://host1, tcp://host2)}};;;","29/Apr/16 11:12;cshannon;I believe it was introduced in 5.10.1 so the same issue probably exists in 5.10.2 as well since it wasn't fixed until 5.11.3 and 5.12.0.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broker start thread hangs forever in async mode when startup of PersistenceAdapter is very fast,AMQ-5599,12776170,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,wardvijf,wardvijf,19/Feb/15 14:24,02/Jun/15 15:38,14/Jul/23 05:44,02/Jun/15 15:38,5.10.0,,,,,,,,,5.12.0,,,,Broker,,,,,0,,,,,,"We encountered a situation where the startup of our broker fails sometimes. We investigated this and have seen that this is caused by a race condition.
When the BrokerService is configured to be async, the starting of the broker will hang when the starting of the PersistenceAdapter is faster than expected.

The ActiveMQ code will first start the persistence adapter, and then start the broker. When startup is configured to be 'async', these actions will happen async (in separate threads). Since these calls are async, we can not garuantee the order in which they will be finished. Although the ActiveMQ code now relies on the fact that the starting of the persistence adapter takes longer, and it waits in the starting of the broker for the starting of the persistence adapter to finish. When the starting of the persistence adapter already finished before the starting of the broker starts waiting for it, it will wait forever (and thus the broker cannot get started).

In the following snippet from org.apache.activemq.broker.BrokerService this becomes clear:

'startPersistenceAdapter' is fast and already notifies: persistenceAdapterLock.notifyAll();. 
'startBroker' will wait for notification but no one will ever notify it again: persistenceAdapterLock.wait();

---

startPersistenceAdapter(startAsync);
startBroker(startAsync);

private void startPersistenceAdapter(boolean async) throws Exception {
    if (async) {
        new Thread(""Persistence Adapter Starting Thread"") {
            @Override
            public void run() {
                try {
                    doStartPersistenceAdapter();
                } catch (Throwable e) {
                    startException = e;
                } finally {
                    synchronized (persistenceAdapterLock) {
                        persistenceAdapterLock.notifyAll();
                    }
                }
            }
        }.start();
    } else {
        doStartPersistenceAdapter();
    }
}

private void startBroker(boolean async) throws Exception {
    if (async) {
        new Thread(""Broker Starting Thread"") {
            @Override
            public void run() {
                try {
                    synchronized (persistenceAdapterLock) {
                        persistenceAdapterLock.wait();
                    }
                    doStartBroker();
                } catch (Throwable t) {
                    startException = t;
                }
            }
        }.start();
    } else {
        doStartBroker();
    }
}",,wardvijf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,2015-02-19 14:24:56.0,,,,,,,,,,,"0|i25t7j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Virtual topic wildcard consumers don't receive some messages,AMQ-5594,12775909,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,18/Feb/15 16:52,07/Sep/17 16:17,14/Jul/23 05:44,18/Feb/15 17:32,5.11.0,,,,,,,,,5.12.0,,,,MQTT,,,,,0,,,,,,"When using mqtt with virtual topic subscription strategy, it shows some failures when dealing with wildcard subscriptions. The problems are related to how we deal with wildcards in virtual topic consumer, leading to messages sent to child topics are not forwarded properly. ",,dejanb,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6643,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Sep 07 16:17:51 UTC 2017,,,,,,,,,,,"0|i25rqn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Feb/15 17:32;dejanb;This is now fixed with http://git-wip-us.apache.org/repos/asf/activemq/commit/05c31124

We need to treat virtual topic wildcard subscriptions differently as they need to be represented by a dedicated queue. The subscription to that queue should not subscribe to other child queues (as in the normal case) or we'll get duplicates.;;;","09/Aug/17 10:40;jira-bot;Commit 068b7946ce14a8b9d02fa49bd05b8f4113a8ad88 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=068b794 ]

[AMQ-6643][AMQ-5594] fix test regression to reflect match strategy
;;;","07/Sep/17 16:17;jira-bot;Commit f7185b992eb0f4c43f10507bf3687f10b73fa3ed in activemq's branch refs/heads/activemq-5.15.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=f7185b9 ]

[AMQ-6643][AMQ-5594] fix test regression to reflect match strategy

(cherry picked from commit 068b7946ce14a8b9d02fa49bd05b8f4113a8ad88)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unused ConnectionControl command should be removed,AMQ-5586,12774995,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,artnaseef,artnaseef,13/Feb/15 19:19,13/Feb/15 19:20,14/Jul/23 05:44,13/Feb/15 19:20,,,,,,,,,,5.10.2,,,,,,,,,0,,,,,,"An unused connection control command, ""shutdown"", exists in the broker which is unused.  It should be removed.",,artnaseef,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Feb 13 19:20:17 UTC 2015,,,,,,,,,,,"0|i25m73:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Feb/15 19:20;artnaseef;Fixe by commit 00921f22ff9a8792d7663ef8fadd4823402a6324.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Messages not reachable after moving,AMQ-5585,12774902,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,13/Feb/15 14:06,25/Jun/15 11:43,14/Jul/23 05:44,13/Feb/15 14:18,5.11.0,,,,,,,,,5.12.0,,,,,,,,,0,,,,,,"When you move messages that are added when memory limit was hit, they will be unreachable until the broker restart",,dejanb,xabhi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5863,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Feb 19 10:44:44 UTC 2015,,,,,,,,,,,"0|i25lmf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Feb/15 14:18;dejanb;This is now fixed on master with http://git-wip-us.apache.org/repos/asf/activemq/commit/1cab7138;;;","16/Feb/15 12:14;xabhi;Hi, Which memory limit are we talking about here - temp usage store or kahadb store?
Because I am seeing an issue where every weekend my ActiceMQ broker stops delivering persistent messages sent on queues to consumers.
Please take a look at this: http://activemq.2283324.n4.nabble.com/Broker-not-delivering-persistent-messages-to-consumer-on-queue-tp4691245.html;;;","19/Feb/15 10:44;dejanb;It's probably a different issue as this is only when you move messages using JMX. It'd be good if you could write a test case that reproduces the issue against the current master branch.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release 5.10.2 preparation,AMQ-5584,12774744,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,artnaseef,artnaseef,artnaseef,12/Feb/15 23:48,13/Feb/15 19:33,14/Jul/23 05:44,13/Feb/15 19:33,,,,,,,,,,,,,,,,,,,0,,,,,,Prepare for the 5.10.2 release.  Administrative and minor release-specific updates will be made under this ticket (such as updating XSD references).,,artnaseef,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5583,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Feb 13 19:33:17 UTC 2015,,,,,,,,,,,"0|i25knb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Feb/15 19:33;artnaseef;Release 5.10.2 prepared and up for a vote.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release 5.11.1 preparation,AMQ-5583,12774743,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,artnaseef,artnaseef,artnaseef,12/Feb/15 23:47,13/Feb/15 18:36,14/Jul/23 05:44,13/Feb/15 18:36,,,,,,,,,,,,,,,,,,,0,,,,,,Prepare for the 5.11.1 release.  Administrative and minor release-specific updates will be made under this ticket (such as updating XSD references).,,artnaseef,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5584,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Feb 13 18:36:01 UTC 2015,,,,,,,,,,,"0|i25kn3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Feb/15 18:36;artnaseef;Release 5.11.1 has been prepared.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Thread unsafe operations on the PersistenceAdapters in the mKahaDB implementation,AMQ-5580,12774352,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,tabish,tabish,11/Feb/15 21:34,13/Feb/15 18:22,14/Jul/23 05:44,11/Feb/15 22:22,5.10.0,5.10.1,5.11.0,,,,,,,5.11.1,5.12.0,,,Message Store,,,,,0,,,,,,The MultiKahaDBPersistenceAdapter stores the list of PersistenceAdapters in a LinkedList and does not guard against concurrent read / write operations which can lead to exceptions in the logs and possible other subtle issues due to the fact that traversal can be interrupted.  The simple solution is to use a CopyOnWriteArrayList here as this list is only added to and the set of adapters is generally not very large.  This will prevent an errors during iterations over the set of adapters.  ,,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Feb 11 22:22:50 UTC 2015,,,,,,,,,,,"0|i25i9r:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Feb/15 22:22;tabish;Fixed on master. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
REST production of message bodies can result in IllegalStateException: STREAMED,AMQ-5579,12774296,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,artnaseef,artnaseef,artnaseef,11/Feb/15 18:06,01/Apr/15 02:05,14/Jul/23 05:44,12/Feb/15 04:50,,,,,,,,,,,,,,,,,,,0,,,,,,"Attempting to post a message to AMQ using the following yields an IllegalStateException:

*Example Command*
{code}
curl -u admin:admin -d ""hello world"" -XPOST http://localhost:8161/api/message?destination=queue://abc.def
{code}

*Exception*
{code}
java.lang.IllegalStateException: STREAMED
	at org.eclipse.jetty.server.Request.getReader(Request.java:898)
	at org.apache.activemq.web.MessageServletSupport.getPostedMessageBody(MessageServletSupport.java:347)
	at org.apache.activemq.web.MessageServlet.doPost(MessageServlet.java:126)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:595)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:668)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:684)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:503)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:522)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1086)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:429)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1020)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:522)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:370)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:494)
	at org.eclipse.jetty.server.AbstractHttpConnection.content(AbstractHttpConnection.java:982)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.content(AbstractHttpConnection.java:1043)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:865)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:240)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:696)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:53)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:745)
{code}

Note that changing the {{-d}} syntax to {{-d ""body=hello world""}}, the problem goes away.","AMQ 5.11.0, mac",artnaseef,John Greenan,mmfrazier,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7200,7200,,0%,7200,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Apr 01 02:05:58 UTC 2015,,,,,,,,,,,"0|i25hxj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Feb/15 18:25;mmfrazier;I can work on this one.;;;","12/Feb/15 04:03;artnaseef;Sure thing - go for it Mark.;;;","12/Feb/15 04:48;mmfrazier;Upon closer inspection, this seems to be working as expected. I've added a section at the end of the REST page to clarify how to handle this situation:

https://cwiki.apache.org/confluence/display/ACTIVEMQ/REST;;;","12/Feb/15 04:50;artnaseef;Thanks Mark.  Looks like a good way to resolve under the circumstances.;;;","01/Apr/15 01:13;John Greenan;Hi All,

I am new around here, so sorry if I get the etiquette wrong...

I am working on a project to use Apache ActiveMQ with a RESTful interface.  It's a cross platform error logging project, so code written in C++, Java, VBA, Perl or indeed anything that can access an URL can then report issues. The point is, we DO NOT deploy any libraries - we simply use the native implementations within the language to access an URL.  The HTTP message body then contains the details of the error - who, what, when, what line of code and so on.

The piece I am working on is a port of an MSMQ implementation (you can a simpllified implementation of the MSMQ version on this http://blog.alignment-systems.com/2015/03/excel-vba-industrialisationpart-seven.html and on github at https://github.com/JohnGreenan/7_ExcelVBE)

So, I can access Apache Active MQ from a Windows PC using the WinHttp.WinHttpRequest class (https://msdn.microsoft.com/en-us/library/windows/desktop/aa384106%28v=vs.85%29.aspx)

The issue is that when I try and send a body of the request, I get the same error as shown in this JIRA.

Within cURL it's possible to workaround as described by Mark Frazier, but I have tried a few approaches on this WITHIN VBA and failed to get it to work.

What I propose to do is to create a github repository with the VBA code and instructions on how to replicate, but I am not sure if that's how you guys work? Do you actually work with implementations in languages, or is it just the case that it it works with cURL then the other language implementation is viewed as being at fault?

Can you please give me some guidance on how I can work with you to get this resolved?

Cheers,

John;;;","01/Apr/15 02:05;John Greenan;Replication code and instructions as well as log files from Apache ActiveMQ all on github now at 

https://github.com/JohnGreenan/ApacheActiveMQ.REST.winhttp;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deleting lock file on broker shut down can take a master broker down,AMQ-5568,12772996,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,tmielke,tmielke,06/Feb/15 12:58,22/Sep/15 11:56,14/Jul/23 05:44,05/Mar/15 13:29,5.11.0,,,,,,,,,5.12.0,,,,Broker,Message Store,,,,0,persistence,,,,,"This problem may only occur on a shared file system master/slave setup. 
I can reproduce reliably on a NFSv4 mount using a persistence adapter configuration like 

{code}
<levelDB directory=""/nfs/activemq/data/leveldb"" lockKeepAlivePeriod=""5000"">
  <locker>
    <shared-file-locker lockAcquireSleepInterval=""10000""/>
  </locker>
</levelDB>
{code}

However the problem is also reproducible using kahaDB.
Two broker instances competing for the lock on the shared storage (e.g. leveldb or kahadb). Lets say brokerA becomes master, broker B slave.

If brokerA looses access to the NFS share, it will shut down. As part of shutting down, it tries delete the lock file of the persistence adapter. Now since the NFS share is gone, all file i/o calls hang for a good while before returning errors. As such the broker shut down gets delayed.

In the meantime the slave broker B (not affected by the NFS problem) grabs the lock and becomes master.

If the NFS mount is restored while broker A (the previous master) still hangs on the file i/o operations (as part of its shutdown routine), the attempt to delete the persistence adapter lock file will finally succeed and broker A shuts down. 

Deleting the lock file however also affects the new master broker B who periodically runs a keepAlive() check on the lock. That check verifies the file still exists and the FileLock is still valid. As the lock file got deleted, keepAlive() fails on broker B and that broker shuts down as well. 
The overall result is that both broker instances have shut down despite an initially successful failover.

Using restartAllowed=true is not an option either as this can cause other problems in an NFS based master/slave setup.
",,clebertsuconic,erik.wramner,gtully,jira-bot,lichtin,tmielke,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5549,AMQ-4705,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Sep 22 11:56:30 UTC 2015,,,,,,,,,,,"0|i25adj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Feb/15 13:04;tmielke;The keepAlive() check is needed due to [AMQ-4705|https://issues.apache.org/jira/browse/AMQ-4705], otherwise you may get two master broker instances.;;;","06/Feb/15 13:19;tmielke;It seems the broker simply deletes the lock file on the persistence adapter without any further checks. 
Perhaps a fix is to delete the lock file only if the broker still holds the lock and otherwise just shut down without deleting the file. ;;;","05/Mar/15 13:29;gtully;fix in http://git-wip-us.apache.org/repos/asf/activemq/commit/8c66fba0;;;","08/Apr/15 16:04;clebertsuconic;I just sent a fix that could be related to this:
https://github.com/apache/activemq/commit/ab8f54b0661755a3b5d8afbd18341e15ab4fe38c;;;","11/Sep/15 19:44;erik.wramner;I'm surprised that I haven't seen others with the same issue, but the unit test LockFileTest#testNoDeleteOnUnlockIfNotLocked always fails for me on Windows. It works on Linux. The problem is that Windows refuses to delete open files and the file is open, so lockFile.delete() returns false and does nothing, hence the no-longer-valid check fails as the file still exists and is valid.

Am I the only one seeing this, or should I fix the test (check the return code from delete and skip the rest of the test on failure)?;;;","22/Sep/15 11:56;jira-bot;Commit 86c826c4615d5f4d90cc3f75fef845640369458d in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=86c826c ]

https://issues.apache.org/jira/browse/AMQ-5568 - verify delete return code for win platform failure. Thanks to Erik Wramner for the heads up
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
 JDBC XA - Store COMMIT FAILED:  java.io.IOException: Could not remove prepared transaction state from message add for sequenceId,AMQ-5567,12772992,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,06/Feb/15 12:46,18/May/18 09:32,14/Jul/23 05:44,06/Feb/15 15:15,5.10.0,5.11.0,,,,,,,,5.11.1,5.12.0,,,JDBC,Message Store,,,,0,XA,,,,,"Occasional commit failure. Stack trace of the form{code}
WARN  | .129:36295@61616 | XATransaction                    | tivemq.transaction.XATransaction   91 | 121 - org.apache.activemq.activemq-osgi  | Store COMMIT FAILED: 
java.io.IOException: Could not remove prepared transaction state from message add for sequenceId: 1753267
	at org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.doCommitAddOp(DefaultJDBCAdapter.java:1049)
	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.commitAdd(JDBCPersistenceAdapter.java:775)
	at org.apache.activemq.store.jdbc.JdbcMemoryTransactionStore$1.run(JdbcMemoryTransactionStore.java:108)
	at org.apache.activemq.store.memory.MemoryTransactionStore$Tx.commit(MemoryTransactionStore.java:101)
	at org.apache.activemq.store.memory.MemoryTransactionStore.commit(MemoryTransactionStore.java:269)
	at org.apache.activemq.transaction.XATransaction.storeCommit(XATransaction.java:86)
	at org.apache.activemq.transaction.XATransaction.commit(XATransaction.java:76)
{code}",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri May 18 09:32:54 UTC 2018,,,,,,,,,,,"0|i25acn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Feb/15 15:15;gtully;issue was eager dispatch pushed out by concurrent send. The push to the cursor needs to happen on the commit outcome only. Also to avoid replay of messages from store on outcome overlap with cache full, the commit assigns a new sequenceId which ensures order.;;;","18/May/18 09:32;jira-bot;Commit 72613aaba6d2641b8635e54e2fb4a28c14da2021 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=72613aa ]

AMQ-6707 - ensure entryLocator is used for rollback of prepared add to avoid NPE, relates to AMQ-5567
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq-pool - Either adds new mbeans or add/remove pair of mbean for each producer in use,AMQ-5564,12772307,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,tabish,davsclaus,davsclaus,04/Feb/15 09:36,16/Mar/15 14:08,14/Jul/23 05:44,05/Feb/15 22:56,5.10.1,5.11.0,,,,,,,,5.10.2,5.11.1,5.12.0,,Pool,,,,,0,,,,,,"On the AMQ dev mailing list we have talked about a new issue.
http://activemq.2283324.n4.nabble.com/VOTE-Apache-ActiveMQ-5-11-0-rc3-tp4690743.html

I found out that using the camel-example-management, which has an embedded AMQ broker and using Camel with the VM transport to produce/consume messages, then there is mbean issues.

It works fine in AMQ 5.10.0. But is wrong in AMQ 5.10.1 and 5.11.0.

See the attached screenshots.

Notice how the mbean tree for dynamic producers keeps growing for 5.10.1 and 5.11.0.",,artnaseef,davsclaus,nareshgoyal,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5555,,,,,,,,,,,,,,,,,,,,,,,,"04/Feb/15 09:37;davsclaus;amq-5100.png;https://issues.apache.org/jira/secure/attachment/12696420/amq-5100.png","04/Feb/15 09:37;davsclaus;amq-5101.png;https://issues.apache.org/jira/secure/attachment/12696421/amq-5101.png","04/Feb/15 09:37;davsclaus;amq-5110.png;https://issues.apache.org/jira/secure/attachment/12696422/amq-5110.png",,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Feb 06 07:13:41 UTC 2015,,,,,,,,,,,"0|i25667:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Feb/15 09:37;davsclaus;Running the camel-example-management with
mvn clean install camel:run

And using different version of ActiveMQ, that is the only change.

;;;","05/Feb/15 14:38;davsclaus;Okay after using git bitsect on the 5.10.x branch between the working 5.10.0 and not working 5.10.1 releases, I was able to narrow it down to this commit causing the breakings

{code}
davsclaus:~/workspace/activemq ((no branch))/$ git bisect good
ac57ce9f68e2b3c5f2d004f507383d64161de3ec is the first bad commit
commit ac57ce9f68e2b3c5f2d004f507383d64161de3ec
Author: Timothy Bish <tabish121@gmail.com>
Date:   Thu Jun 12 19:12:56 2014 -0400

    https://issues.apache.org/jira/browse/AMQ-5015

    Refactor the way sessions are pooled.  We don't need to keep the
    PooledSession instances around since the state is unique to the session
    it wraps we only need to keep the Session instances in the SessionPool
    and create a new PooledSession on borrow to manage that session.  This
    allows the PooledSession to have a real closed state that protects
    against multiple close calls placing duplicate PooledSession instances
    into the SessionPool.  This also simplifies the code in the
    XaConnectionPool since it doesn't need to try and reset state in
    PouledSessions before placing them back as it gets a fresh wrapper each
    time with the correct state.

:040000 040000 d2fcf1c9eee5b8405cf0923e72484be53385fc78 fac1f9bec90c049bf21a9cdd986b76f010cfb90e M	activemq-jms-pool
{code};;;","05/Feb/15 20:38;tabish;Previous fixes that have gone in were meant to ensure that resources linked to the pooled session and connection which should be closed or deleted such as temp destinations happened correctly at connection close even though the connection itself was kept in the pool for future use.  The issue here is that the anonymous producer that is created for a pooled session is being lost along the way and a new one gets created every time an existing session is reused in the pool.  ;;;","05/Feb/15 22:15;artnaseef;So, the anonymous producer is getting created and not removed?  Or, that was the old operation?

It sounds like the right result here is the anonymous producer should get closed if it was created with session.createProducer(...)- unless there is a way to create the anonymous producer specifically as a cached producer.  The reasoning is this -- closing an ordinary (i.e. non-pooled) connection removes producers and consumers created for all sessions in that connection.  Some applications may expect that, so they can bypass the need to do their own cleanup.;;;","05/Feb/15 22:56;tabish;Fix added on trunk;;;","06/Feb/15 06:58;davsclaus;Yay just tested with the Camel example and it now works. Thanks Tim.;;;","06/Feb/15 07:13;davsclaus;Backported to 5.10.x branch and tested that it worked.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq-camel - Wrong default value in javadoc,AMQ-5563,12772304,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,davsclaus,davsclaus,04/Feb/15 09:28,05/Mar/15 22:46,14/Jul/23 05:44,05/Mar/15 22:46,5.11.0,,,,,,,,,5.12.0,,,,Camel,,,,,0,,,,,,"In org.apache.activemq.camel.component.ActiveMQConfiguration

We have default values

    private boolean useSingleConnection = false;
    private boolean usePooledConnection = true;


And the javadoc says
{code}
    /**
     * Enables or disables whether a Spring {@link SingleConnectionFactory} will be used so that when
     * messages are sent to ActiveMQ from outside of a message consuming thread, pooling will be used rather
     * than the default with the Spring {@link JmsTemplate} which will create a new connection, session, producer
     * for each message then close them all down again.
     * <p/>
     * The default value is true so that a single connection is used by default.
     *
     * @param useSingleConnection
     */
    public void setUseSingleConnection(boolean useSingleConnection) {
        this.useSingleConnection = useSingleConnection;
    }


    /**
     * Enables or disables whether a PooledConnectionFactory will be used so that when
     * messages are sent to ActiveMQ from outside of a message consuming thread, pooling will be used rather
     * than the default with the Spring {@link JmsTemplate} which will create a new connection, session, producer
     * for each message then close them all down again.
     * <p/>
     * The default value is false by default as it requires an extra dependency on commons-pool.
     */
    public void setUsePooledConnection(boolean usePooledConnection) {
        this.usePooledConnection = usePooledConnection;
    }
{code}

Notice the javadoc has wrong defaults. Its in fact pooled that is the default.",,davsclaus,mmfrazier,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Mar/15 04:42;mmfrazier;AMQ5563.patch;https://issues.apache.org/jira/secure/attachment/12702700/AMQ5563.patch",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Mar 05 22:46:55 UTC 2015,,,,,,,,,,,"0|i2565j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Mar/15 04:42;mmfrazier;I've updated the javadoc and attached a patch for it.;;;","05/Mar/15 22:46;tabish;I added the changes to the Javadocs to reflect the correct defaults.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory leak around ProducerView/State and AnnotatedMBeans,AMQ-5555,12771416,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,lichtin,lichtin,30/Jan/15 20:29,16/Mar/15 14:29,14/Jul/23 05:44,16/Mar/15 14:08,5.10.1,,,,,,,,,5.11.1,5.12.0,,,Broker,,,,,0,,,,,,"The summary may be misleading, as I haven't quite figured out where the leaks are originating.

I'll attach screenshots from JVisualVM that show the issue.
",,lichtin,nareshgoyal,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5564,,,,,,,,,,,,,,,,,,,,,"30/Jan/15 21:14;lichtin;activemq.xml;https://issues.apache.org/jira/secure/attachment/12695613/activemq.xml","05/Feb/15 16:54;lichtin;amq-heapdump-managedtransportconnection.jpg;https://issues.apache.org/jira/secure/attachment/12696789/amq-heapdump-managedtransportconnection.jpg","30/Jan/15 20:29;lichtin;amq-heapdump.jpg;https://issues.apache.org/jira/secure/attachment/12695606/amq-heapdump.jpg","05/Feb/15 16:51;lichtin;amq-heapdump2.jpg;https://issues.apache.org/jira/secure/attachment/12696788/amq-heapdump2.jpg",,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Mar 16 14:29:11 UTC 2015,,,,,,,,,,,"0|i250uf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"30/Jan/15 20:39;tabish;You might want to test against 5.10.1 as there are some leaks fixes in there already.  Otherwise you should try to describe your configuration and use case before anyone can offer any insights.  Test cases that reproduce the situation are also a good idea.  ;;;","30/Jan/15 21:14;lichtin;I'll attach the heapdump screenshots with 5.10.1.
It's showing up there as well as far as I can see.

Use case:
The broker is more or less idle, passing almost no messages around when this occurs.
What is a bit special is that the broker is frequently polled via the statistics plugin to retrieve statistics about all its queues (ie. a message sent to ActiveMQ.Statistics.Destination.>).

;;;","05/Feb/15 16:51;lichtin;Attached amq-heapdump2.jpg to show the difference to amq-headump.jpg a few days ago.

Drilling down via ProducerBrokerExchange I can see 133 (Managed)TransportConnection instances.

Many of these TransportConnection instances keep a large number of ProducerBrokerExchange instance in their ""producerExchanges"" HashMap.

It seems for whatever reason they are not consistently removed.
They are created inside TransportConnection.getProducerBrokerExchange().;;;","09/Mar/15 21:03;tabish;Was there a PooledConnectionFactory in use here?  Have you tested against 5.10.2 ?

This could be: AMQ-5564;;;","09/Mar/15 22:29;lichtin;Thanks for the pointer.  Indeed there is an org.apache.activemq.pool.PooledConnectionFactory in use.
We've since upgraded to 5.11.1 and I'll have a look again (asap) to see if the situation has changed.

;;;","16/Mar/15 14:08;tabish;Given the information provided this appears to be the same issue.  If not please reopen and attach a reproducer so we can track it down.;;;","16/Mar/15 14:29;lichtin;That's likely true. We no longer see the issue with 5.11.1. 
Also we since stopped using the StatisticsPlugin and instead poll stats via JMX and distribute them via a topic.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The DiskBenchmark util doesn't sync (fsync) to disk for sync writes,AMQ-5551,12771095,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,ceposta,ceposta,ceposta,29/Jan/15 19:32,23/Mar/16 14:18,14/Jul/23 05:44,20/Feb/15 16:24,5.10.1,,,,,,,,,5.12.0,,,,Message Store,,,,,0,,,,,,"We added a JVM flag, org.apache.activemq.file.skipMetadataUpdate, to control whether to force metadata syncs or not when sync'ing to disk. Unfortunately, that flag was not applied to the section of code that does the sync writes. 

Fix on the way.",,ceposta,lichtin,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Mar 23 14:18:40 UTC 2016,,,,,,,,,,,"0|i24yvz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Feb/15 16:24;ceposta;Fixed with https://github.com/apache/activemq/commit/2c92c34132d72f013ffe4a867187099714f7b231;;;","23/Mar/16 10:31;lichtin;Hi Christian, is it on purpose that the KahaDB code uses

  org.apache.activemq.kahaDB.files.skipMetadataUpdate

but the Disk Benchmark uses a different flag name?

  org.apache.activemq.file.skipMetadataUpdate

;;;","23/Mar/16 14:18;ceposta;yah, the kahadb one was for kahadb persistent adapter. inside the disk
benchmark util, we don't use kahadb.

On Wed, Mar 23, 2016 at 3:32 AM, Martin Lichtin (JIRA) <jira@apache.org>




-- 
*Christian Posta*
twitter: @christianposta
http://www.christianposta.com/blog
http://fabric8.io
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Close of an AMQP consumer that failed to open because it was unauthorized causes exception in broker logs.,AMQ-5550,12771057,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,29/Jan/15 16:39,05/Feb/15 22:56,14/Jul/23 05:44,30/Jan/15 16:46,5.11.0,,,,,,,,,5.11.1,5.12.0,,,AMQP,,,,,0,,,,,,"When an AMQP client creates a receiver link and the logged in user is not authorized on error is sent to the client and the link is closed, this generates an event which causes us to try and remove the consumer but that consumer was never registered so you see these sorts of things in the logs:

{noformat}
java.lang.IllegalStateException: Cannot remove a consumer that had not been registered: ID:OfficePC-58049-1422548859782-1:3:1:0
	at org.apache.activemq.broker.TransportConnection.processRemoveConsumer(TransportConnection.java:691)
	at org.apache.activemq.command.RemoveInfo.visit(RemoveInfo.java:76)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:334)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:188)
	at org.apache.activemq.transport.amqp.AmqpTransportFilter.sendToActiveMQ(AmqpTransportFilter.java:114)
	at org.apache.activemq.transport.amqp.AmqpProtocolConverter.sendToActiveMQ(AmqpProtocolConverter.java:1486)
	at org.apache.activemq.transport.amqp.AmqpProtocolConverter$ConsumerContext.onClose(AmqpProtocolConverter.java:1017)
	at org.apache.activemq.transport.amqp.AmqpProtocolConverter.processLinkEvent(AmqpProtocolConverter.java:390)
	at org.apache.activemq.transport.amqp.AmqpProtocolConverter.onFrame(AmqpProtocolConverter.java:331)
	at org.apache.activemq.transport.amqp.AmqpProtocolConverter.onAMQPData(AmqpProtocolConverter.java:275)
	at org.apache.activemq.transport.amqp.AmqpTransportFilter.onCommand(AmqpTransportFilter.java:98)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)
{noformat}

This would likely also happen for a sender link.

We need to track this state and not try and remove consumers or producers from the Broker that not actually registered due to security or other errors.  This causes not just log spam but a connection close as we treat the returned error from the Broker as a fatal protocol error which it is not. ",,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jan 30 16:46:25 UTC 2015,,,,,,,,,,,"0|i24ynj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"30/Jan/15 16:46;tabish;Fix added to trunk to handle this for both sender and receiver links.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Shared Filesystem Master/Slave using NFSv4 allows both brokers become active at the same time,AMQ-5549,12770925,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,gtully,heikki_m,heikki_m,29/Jan/15 07:13,03/Jul/15 11:48,14/Jul/23 05:44,03/Jul/15 11:47,5.10.1,,,,,,,,,5.12.0,,,,Broker,Message Store,,,,0,,,,,,"Identical ActiveMQ master and slave brokers are installed on CentOS Linux 6 virtual machines. There is a third virtual machine (also CentOS 6) providing an NFSv4 share for the brokers KahaDB.

Both brokers are started and the master broker acquires file lock on the lock file and the slave broker sits in a loop and waits for a lock as expected. Also changing brokers work as expected.

Once the network connection of the NFS server is disconnected both master and slave NFS mounts block and slave broker stops logging file lock re-tries. After a short while after bringing the network connection back the mounts come back and the slave broker is able to acquire the lock simultaneously. Both brokers accept client connections.

In this situation it is also possible to stop and start both individual brokers many times and they are always able to acquire the lock even if the other one is already running. Only after stopping both brokers and starting them again is the situation back to normal.

* NFS server:
** CentOS Linux 6
** NFS v4 export options: rw,sync
** NFS v4 grace time 45 seconds
** NFS v4 lease time 10 seconds

* NFS client:
** CentOS Linux 6
** NFS mount options: nfsvers=4,proto=tcp,hard,wsize=65536,rsize=65536

* ActiveMQ configuration (otherwise default):

{code:xml}
        <persistenceAdapter>
            <kahaDB directory=""${activemq.data}/kahadb"">
              <locker>
                <shared-file-locker lockAcquireSleepInterval=""1000""/>
              </locker>
            </kahaDB>
        </persistenceAdapter>
{code}
","- CentOS Linux 6
- OpenJDK 1.7
- ActiveMQ 5.10.1",artnaseef,gtully,heikki_m,lichtin,sburkard,tmielke,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5568,,,,,,,,,,,,,AMQ-4705,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jul 03 11:47:16 UTC 2015,,,,,,,,,,,"0|i24xun:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/Jan/15 07:33;heikki_m;This seems to be related: https://issues.apache.org/jira/browse/AMQ-4705

Tested with the following configurations:

- Grace Time 45s, Lease Time 10s
- lockKeepAlivePeriod=15000
- lockAcquireSleepInterval=5000

- Grace Time 45s, Lease Time 10s
- lockKeepAlivePeriod=15000
- lockAcquireSleepInterval=5000

- Grace Time 60s, Lease Time 30s
- lockKeepAlivePeriod=15000
- lockAcquireSleepInterval=5000

- Grace Time 60s, Lease Time 30s
- lockKeepAlivePeriod=5000
- lockAcquireSleepInterval=15000

All tests came out with the same results as the original.

Configuration:

{code:xml}
        <persistenceAdapter>
            <kahaDB directory=""${activemq.data}/kahadb"" lockKeepAlivePeriod=""15000"">
              <locker>
                <shared-file-locker lockAcquireSleepInterval=""5000""/>
              </locker>
            </kahaDB>
        </persistenceAdapter>
{code}
;;;","29/Jan/15 11:19;heikki_m;The following combination seems to work IF the network outage between the NFS client(s) and the NFS server is short (a couple of seconds):

* Grace Time 90s, Lease Time 60s
* lockKeepAlivePeriod=5000
* lockAcquireSleepInterval=15000

In this case the master broker is able to renew the lock and continue operating and the slave broker fails to get the lock.

However if the network outage is significantly longer (tested with various durations between 30 and 300 seconds), both brokers are able to get lock on the file and start working simutaneously. Even though the master brokers dmesg shows the following message after the outage:

""NFS: nfs4_reclaim_open_state: Lock reclaim failed!""

It seems that this happens if the lock reclaiming (keepAlive?) operation on the master broker gets blocked for long enough time for the NFS server lease timeout to pass. In this case the slave is able to claim the lock (if it's NFS filesystem stops blocking earlier) and after the master stops blocking it continues to operate even though NFS client reports ""Lock reclaim failed!"".

Seems also that the time it takes for the individual NFS client to recover from blocking I/O varies between clients.;;;","29/Jan/15 13:56;tmielke;Hi, the config

{code:xml}
<kahaDB directory=""${activemq.data}/kahadb"" lockKeepAlivePeriod=""15000"">
  <locker>
    <shared-file-locker lockAcquireSleepInterval=""5000""/>
  </locker>
</kahaDB>
{code}
has an error. lockKeepAlivePeriod should be much lower than lockAcquireSleepInterval (at max half of lockAcquireSleepInterval, perhaps even below that).

{code:xml}
<levelDB directory=""/nfs-import/leveldb"" lockKeepAlivePeriod=""5000"">
  <locker>
    <shared-file-locker lockAcquireSleepInterval=""10000""/>
  </locker>
</levelDB>
{code}

You also want to explicitly configure for restartAllowed=""false"" on the broker config.

Finally, what are your mount options? We have learned the mount options used play a significant role.



;;;","29/Jan/15 17:15;heikki_m;Hi, thanks for the comments.

In later testing, different configurations were tested and finally the settings were:

{code:xml}
<kahaDB directory=""${activemq.data}/kahadb"" lockKeepAlivePeriod=""5000"">
  <locker>
    <shared-file-locker lockAcquireSleepInterval=""15000""/>
  </locker>
</kahaDB>
{code}

as mentioned in the last comment. This setup combined with NFSv4 lease timeout of 60 seconds yielded the best results although still failing when the network outage was long enough for the NFS filesystem to block for a long time (even after the connection was restored).

Mount options are there in the issue description but I re-visited them for further testing and finally used these (trying to increase the timeout value to maximum):

rw,nfsvers=4,proto=tcp,timeo=6000,retrans=3,hard,wsize=65536,rsize=65536

Although this didn't make much difference compared to the default timeout of 600 deciseconds.

I will give restartAllowed a try.

Furthermore I tested the exact same setup with a NetApp filer NFSv4 server with the exact same settings and brokers behaved as they should have. Master was able to continue operating and slave did not get the lock after 5, 30, 45 or 180 second outages.
;;;","30/Jan/15 08:27;tmielke;Some of the NFS mount options may not support a quick broker failover from master to slave. 
The options we finally got best results with where

{code}
timeo=100,retrans=1,soft,noac
{code}

We reduced the timeout to 10 seconds and also reduced the retry to just 1. 
In addition a hard mount seems to retry NFS operations forever (according to man page) and using soft operations will fail after retrans transmission attempts. Most likely what you want to ensure a quick failover.
And finally the noac option seemed to had a big effect as well on the speed at which the master broker detects the NFS failure as it also caused a sync write to NFS, which seems to propagate exceptions more quickly. It most likely has a negative impact on performance though.

I can't provide a scientific support for these arguments other than above but with these settings the master broker would should down much quicker upon an NFS failure. 
;;;","30/Jan/15 09:34;heikki_m;I'm a bit hesitant on using soft mounts unless ActiveMQ explicitly requires them. NetApp and others always advice against using soft mounts with NFSv4. Problem we're having is not with the broker failover but with what happens if the shared storage fails (both brokers lose the connection) and how the brokers recover from it after the NFSv4 lock lease has expired.

Have you tested your setup with failing the NFS server connection or killing the server ungracefully? For me soft mounts only made the situation worse (which kind of makes sense).

Here's some other issues around the subject (for those with RHN access):

https://access.redhat.com/solutions/1195703
https://access.redhat.com/solutions/478053
https://access.redhat.com/solutions/382283

https://issues.jboss.org/browse/ENTMQ-391;;;","30/Jan/15 13:07;tmielke;I am not suggesting ActiveMQ requires a soft NFS mount. Just noticed we got NFS errors propagated much quicker using soft mounts. 

Yes, the fix for ENTMQ-391 will be needed and its contained in 5.9.0. See AMQ-4705.

In my tests I shut down the nic of the nfs client machine that runs the broker and tested how quickly this resulted in an error on the master broker and how quickly a slave broker running on a different machine takes over. 

With the NFS options 

{code}
timeo=50,retrans=1,soft,noac
{code}

and the previously suggested broker configuration the master broker would raise an exception within 15 secs after loosing access to the NFS share and would shutdown within another 1-2 minutes. During the shutdown the broker tries to close all file pointing to the persistence store and that close() call hangs too and needs to timeout as well.
It took about 60 - 80 seconds for the slave broker to take over. 

Previously testing with default NFS mount options the master broker would some times not shut down within 10+ minutes. 

I took various thread dumps along the way and the broker was always hung in a Java I/O operation that took a long time to finally raise an exception. 
Was able to reproduce the same behavior using a very simple Java application that only tries the same Java I/O. So IMHO the entire issue is really down to configuring NFS in a way that it quickly raises errors to the application stack.
 
;;;","30/Jan/15 13:19;heikki_m;Yes that is the case when you break the connection between one of the brokers and the NFS storage. What I'm after and testing is the situation when you break the connection to the NFS storage altogether so that _both_ brokers lose the connectivity simultaneously and what happens _after_ the connection to the NFS share comes back. This is when both brokers are able to grab the lock.

Maybe I wasn't clear enough in the original issue description but this is about NFS server failures (crash, network outage, ungraceful shutdown, ...) affecting all the NFS clients.;;;","30/Jan/15 15:06;sburkard;Hi 

The two cases are different, but I'm not sure if this makes a difference. 

When, for whatever reason, the shared storage lock is released by the shared storage provider (after the grace period), the slave can grab the lock, becomes master and works as expected. This works fine in all cases I have seen.

The key question is how the former master behaves. In all descriptions about two active master brokers, the problem arises because the former master continues to do so. So the real problem is that the master does not recognize that he has lost the lock. This can happen in all shared storage configurations. 

Jean-Baptiste Onofré describes the same problem with a shared JDBC datastore here: http://blog.nanthrax.net/2013/10/apache-activemq-5-7-5-9-and-master-slave. 

In my tests with shared LevelDB-Store over NFS4 and hard mounts, the former master broker NEVER realized that another broker has taken the lock. With a soft mount it was realizing the new situation after a massive delay (about 5 minutes). With the NFS options Torsten mentioned the master broker realizes the new situation after 15 to 30 seconds. I am not saying that these settings are save for production, I just observed that changes to NFS settings lead to completely different results. 

So my guess is that the whole problem is just a matter of NFS settings. But this part is never mentioned in example setups etc. Is anybody out there who has a working and tested shared-filesystem architecture with NFS? It would be very helpful to have a ""reference configuration"" that works. ;;;","30/Jan/15 15:16;tmielke;{quote}
Maybe I wasn't clear enough in the original issue description but this is about NFS server failures (crash, network outage, ungraceful shutdown, ...) affecting all the NFS clients.
{quote}
Got you. Have not tested that. With restartAllowed=false the master should shut down at the least and stop its transport connectors.

Also did some more reading on sync mount option. It is discouraged in some posts but I would hope that by also using noac or sync mount option, it should be okay as writes are sync now. So data should not get corrupted. This however comes at the expense of a performance degradation.


;;;","31/Jan/15 06:31;artnaseef;One thing to make clear here (it seemed unclear from the title and original bug description).  There's a choice that must be made here - either allow for the possibility of neither broker being active (NFS v3 approach) or allow for the possibility of both being active (NFS v4) -- for some period of time.

It will be possible to reduce the amount of time the two brokers in an H/A pair are simultaneously active through NFS options - if the broker can detect the condition.  But it's not possible to eliminate the possibility of both being active for some time with NFS v4.

With that said, if the original active broker does not stop once it realizes that it lost the lock, or it cannot reliably detect a lost lock, a fix is welcome.  Just be aware that even with such a fix, there's a possibility of corruption to the KahaDB.  Documentation of various NFS settings and their outcomes would also be welcome.;;;","06/Feb/15 13:32;tmielke;Also see AMQ-5568.;;;","03/Jul/15 11:47;gtully;The window if closed via https://git1-us-west.apache.org/repos/asf?p=activemq.git;a=commit;h=9bc602be
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
KahaDB data files containing acknowledgements are deleted during cleanup,AMQ-5542,12770461,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,barlabanov,barlabanov,27/Jan/15 20:40,18/Jun/15 17:50,14/Jul/23 05:44,02/Feb/15 13:07,5.10.0,5.10.1,,,,,,,,5.11.1,5.12.0,,,Message Store,,,,,0,,,,,,"AMQ-2832 was not fixed cleanly.
The commit dd68c61e65f24b7dc498b36e34960a4bc46ded4b by Gary from 8.10.2010 introduced a problem by deleting too many files.

Scenarios we are facing currently in production:
Data file #1 contains unconsumed messages sitting in a DLQ. So this file is not a cleanup candidate.
The next file #2 contains acks of some messages from file #1. This file is not a cleanup candidate (because of ackMessageFileMap logic).
The next file #3 contains acks of some messages from file #2. And this file is deleted during the cleanup procedure. So on Broker restart all messages from #2, whose acks were from the deleted file #3, are replayed!
The reason is gcCandidates variable, which is a copy of gcCandidateSet (see MessageDatabase#checkpointUpdate at the end of the method - org/apache/activemq/store/kahadb/MessageDatabase.java:1659 on 5.10.0 tag). So when a candidate is deleted from gcCandidateSet (org/apache/activemq/store/kahadb/MessageDatabase.java:1668 on 5.10.0 tag), gcCandidates still contains that candidate and the comparison on org/apache/activemq/store/kahadb/MessageDatabase.java:1666 works wrong!
I will try to adjust AMQ2832Test.",,artnaseef,barlabanov,gtully,tbain98,tom_m,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5695,,,,,,AMQ-2736,,,,,,,,"27/Jan/15 22:39;barlabanov;AMQ-5542.patch;https://issues.apache.org/jira/secure/attachment/12694867/AMQ-5542.patch","27/Jan/15 22:38;barlabanov;AdjustedAMQ2832Test.patch;https://issues.apache.org/jira/secure/attachment/12694864/AdjustedAMQ2832Test.patch",,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Feb 02 13:07:37 UTC 2015,,,,,,,,,,,"0|i24v0f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Jan/15 21:35;tbain98;Doesn't the logic described here imply that we're almost never going to be able to delete data files that follow the first unconsumed message?  Won't it usually be true that there's at least one ack in file N+1 of a message in file N, for all values of N, so file N+1 will always need to stick around for as long as N does?;;;","27/Jan/15 22:38;barlabanov;This is an adjustment test for AMQ2832Test.java which fails currently on trunk, 5.10.1, and 5.10.0.
The adjustment is relative to the trunk version of AMQ2832Test.java.
;;;","27/Jan/15 22:39;barlabanov;This is the possible patch.
Just removed the copy of gcCandidateSet. It is unclear to me what was the purpose of this copy.;;;","27/Jan/15 22:42;barlabanov;The consequence of the fix is that if you are really unlucky you will get all files blocked beginning from the one with unconsumed message/messages through all next files containing acks pointing to the files before them.
So having some unconsumed messages for a long term (like messages in a DLQ) in such an unlucky case will eat quite a lot of space.;;;","27/Jan/15 22:48;barlabanov;AMQ-2736 actually introduced the problem. See the comment of Gary https://issues.apache.org/jira/browse/AMQ-2736#comment-12942986.
It was thought to be a logical error, but it was not. It is not possible just to drop the files, when they contain acks pointing to other files, which are blocked.;;;","28/Jan/15 00:18;barlabanov;Tim, I think, you are right. Otherwise KahaDB will loose acks and replay messages.
If this is true, than the current cleanup mechanism have to be reconsidered. It will not work well for scenarios, where messages may stay unconsumed for some time. Some sort of compaction has to be done.
In the current project we have nearly always some messages in DLQs sitting there for maximum 2 days. This means that we would always have nearly all data files for the last two days.
Currently it is ok, we have enough of place on the SAN. But what if that would be 2 weeks instead of 2 days?
I think in this case we would use JDBC storage.
Another possibility would be to use mKahaDB and put DLQs to a separate storage. That storage would not grow fast since there would not be much traffic.;;;","28/Jan/15 15:45;gtully;mKahaDB is the current answer to the need for compaction/rewrite problem. that is why it emerged. Partition based on the average length of time a message spends in a queue.;;;","28/Jan/15 17:04;artnaseef;To Tim's point -- if there is *any* content in the data file that means it is needed, then the file must not be removed.  That problem exists even for messages - one, small message can hold an entire data file.

Therefore, if there is an acknowledgement in the data file that still needs to be processed, the data file must not be removed.

As Gary mentioned, multi-kahadb can be used to better prevent the scenario of large holes in data files.

Keep in mind - it's in the JMS specification that consumers are expected to be ""timely"" (I forget the exact wording).  ActiveMQ (and other JMS solutions) are not ""message stores"" - using them as such leads to many issues.  If messages need to be stored for a length of time, I generally recommend adding a store to the architecture and moving those messages out of ActiveMQ and into the store as-needed.

With that said, a solution to the compaction problem would be quite welcome.;;;","28/Jan/15 17:34;tbain98;Consumers can be timely but unsuccessful, leading to messages going to the DLQ, where they can cause exactly this kind of behavior.  So as ActiveMQ is currently implemented the expectation Art referenced (that consumers be timely) needs to be applied to the DLQ as well, which isn't how I'd expect to need to interact with a DLQ.  I would assume that I could come in the next morning, see that there were messages in the DLQ that failed for some reason, and decide what to do about them.  But even if we simply fix this bug by not deleting the KahaDB files that are still needed (potentially all of them), then the consequence of that is going to be potentially large KahaDB disk usage for just a few messages, which I think most developers/admins won't be expecting.

The way I just described interacting with the DLQ does in fact use it as a message store, and I think that's a valid use case.

I think that fixing this specific bug is better than not (high disk usage is better than invalid message redelivery, IMO), but I think another solution (which could be mKahaDB, or something else such as having a separate KahaDB for the DLQ) is still needed (in a separate JIRA enhancement).  I submitted AMQ-5547 to capture that need.;;;","29/Jan/15 00:52;barlabanov;This is correct. This is what we have in production. We have some messages in DLQs. They stay there for max 2 days. After that a special job removes messages older than 2 days from the DLQs.
Now we expect that ActiveMQ will always retain nearly all data files for the last two days because of those messages in the DLQs. So this would take quite a lot of space I think and we did not expect that when we set up the servers - may be we will have to get a larger SAN volume for that.

Another consideration is that this is not only the space which will be eaten by KahaDB but also the time ActiveMQ needs to recover after the crash. ActiveMQ will need quite a lot of time to replay all the data files which are sitting there just because of several DLQ messages.
And the periodic cleanup may take more time to check all the data files (and KahaDB cleanup is a single threaded storage blocking operation).;;;","29/Jan/15 02:28;tbain98;One option to work around this problem might be to have a job that periodically consumes all DLQ messages and re-sends them to the DLQ as a new message.  That way the dead messages are always near the newest messages in KahaDB and it can delete the old files.  You'll lose metadata about when the original message was sent/received/etc., but that may be better than what you have now.  (And you could always wrap the original message, with all its metadata, in a wrapper message if you wanted to keep that info.)  This should still get fixed and the improvement I submitted should still get implemented, but that workaround might get you by until the improvement gets implemented.;;;","29/Jan/15 03:31;artnaseef;DLQs are a common cause of this problem.  My recommendation when using DLQs is *always* have a plan for handling them and consume them in a timely manner.

Again, if the messages need to be stored for a period of time (like 2 days), the best approach is to get them out of ActiveMQ and put them in some type of message store.  Another consideration of this use-case: keeping the messages for this period means some manual action is expected.  ActiveMQ is not designed to give ""random access"" to messages, which would typically be needed for manual intervention, but instead to produce and consume as a queue.  This use-case would be better served with a database in which individual messages could be referenced.

Regardless, this is how ActiveMQ currently functions.  Until something better is implemented, these data files must not be deleted until they are no longer used.;;;","29/Jan/15 09:49;gtully;i will review and try and recall the need for the copy. great find. patch with test case is always much appreciated :-);;;","02/Feb/15 13:07;gtully;test and fix applied (reverted the change from AMQ-2736) with thanks. all tests look good. The copy looks plain wrong to me.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
deadlock on close and failover reconnect around org.apache.activemq.ActiveMQConnection.getScheduler,AMQ-5535,12769626,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,23/Jan/15 12:12,23/Jan/15 13:11,14/Jul/23 05:44,23/Jan/15 13:11,5.10.0,,,,,,,,,5.11.0,,,,JMS client,Transport,,,,0,failover,,,,,"Hung test - org.apache.activemq.transport.failover.FailoverUpdateURIsTest

deadlock:
{code}Name: ActiveMQ Transport: tcp://localhost/127.0.0.1:61616@51978
State: BLOCKED on org.apache.activemq.ActiveMQConnection@2ccf4c0e owned by: main
Total blocked: 3  Total waited: 1

Stack trace: 
org.apache.activemq.ActiveMQConnection.getScheduler(ActiveMQConnection.java:2554)
org.apache.activemq.ActiveMQSession.clearMessagesInProgress(ActiveMQSession.java:687)
org.apache.activemq.ActiveMQConnection.transportInterupted(ActiveMQConnection.java:2043)
org.apache.activemq.transport.TransportFilter.transportInterupted(TransportFilter.java:105)
org.apache.activemq.transport.TransportFilter.transportInterupted(TransportFilter.java:105)
org.apache.activemq.transport.failover.FailoverTransport.handleTransportFailure(FailoverTransport.java:279)
   - locked java.lang.Object@6242de17
org.apache.activemq.transport.failover.FailoverTransport$3.onException(FailoverTransport.java:216)
org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:101)
org.apache.activemq.transport.WireFormatNegotiator.onException(WireFormatNegotiator.java:160)
org.apache.activemq.transport.AbstractInactivityMonitor.onException(AbstractInactivityMonitor.java:314)
org.apache.activemq.transport.TransportSupport.onException(TransportSupport.java:96)
org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:200)
java.lang.Thread.run(Thread.java:745)
{code}
--
{code}Name: main
State: BLOCKED on java.lang.Object@6242de17 owned by: ActiveMQ Transport: tcp://localhost/127.0.0.1:61616@51978
Total blocked: 18  Total waited: 1,043

Stack trace: 
org.apache.activemq.transport.failover.FailoverTransport.oneway(FailoverTransport.java:572)
org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:68)
org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
org.apache.activemq.ActiveMQConnection.doAsyncSendPacket(ActiveMQConnection.java:1331)
org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1325)
org.apache.activemq.AdvisoryConsumer.dispose(AdvisoryConsumer.java:57)
   - locked org.apache.activemq.AdvisoryConsumer@3a6d125b
org.apache.activemq.ActiveMQConnection.close(ActiveMQConnection.java:660)
   - locked org.apache.activemq.ActiveMQConnection@2ccf4c0e
org.apache.activemq.transport.failover.FailoverUpdateURIsTest.tearDown(FailoverUpdateURIsTest.java:52)
junit.framework.TestCase.runBare(TestCase.java:146)
junit.framework.TestResult$1.protect(TestResult.java:122)
junit.framework.TestResult.runProtected(TestResult.java:142)
junit.framework.TestResult.run(TestResult.java:125)
junit.framework.TestCase.run(TestCase.java:129)
junit.framework.TestSuite.runTest(TestSuite.java:255)
junit.framework.TestSuite.run(TestSuite.java:250)
org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:264)
org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:153)
org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:124)
org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
{code}

",failover,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3714,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jan 23 13:11:03 UTC 2015,,,,,,,,,,,"0|i24q07:",9223372036854775807,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"23/Jan/15 13:11;gtully;ensure close exception returned without contention during close for calls to getScheduler;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Generic JMS connection pool should be able to renew connections after JMSException,AMQ-5534,12769274,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,22/Jan/15 11:48,11/May/16 20:20,14/Jul/23 05:44,22/Jan/15 11:56,5.10.0,,,,,,,,,5.11.0,,,,Pool,,,,,0,,,,,,The generic jms pool does not have a mechanism to detect connection failure and dispose those connections. Adding a jms exception listener that will do that will do the trick.,,dejanb,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6290,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Apr 20 13:49:44 UTC 2016,,,,,,,,,,,"0|i24nw7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Jan/15 11:56;dejanb;Fixed with http://git-wip-us.apache.org/repos/asf/activemq/commit/b53d8ea2;;;","22/Jan/15 12:01;dejanb;There's a new {{reconnectOnException}} property on the pooled connection factory (true by default). It will cause a new ExceptionListener to be registered on underlying connection and dispose the connection from the pool when problem is detected.;;;","20/Apr/16 13:48;jira-bot;Commit b65c0d1be4b0812229d3f166e50d963766856c53 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b65c0d1 ]

https://issues.apache.org/jira/browse/AMQ-5510
https://issues.apache.org/jira/browse/AMQ-5534

PooledConnectioFactory added reconnection support but can break if the
holder of the connection adds their own ExceptionListener as the
PooledConnection doesn't protect the internal ExceptionListener from
replacement which leads to cases where the loaned Connection is not
automatically closed so that the next create returns the same failed
connection.  ;;;","20/Apr/16 13:49;jira-bot;Commit 48f314ef5a141639f519618a08e2b98fa29b03cf in activemq's branch refs/heads/activemq-5.13.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=48f314e ]

https://issues.apache.org/jira/browse/AMQ-5510
https://issues.apache.org/jira/browse/AMQ-5534

PooledConnectioFactory added reconnection support but can break if the
holder of the connection adds their own ExceptionListener as the
PooledConnection doesn't protect the internal ExceptionListener from
replacement which leads to cases where the loaned Connection is not
automatically closed so that the next create returns the same failed
connection.
(cherry picked from commit b65c0d1be4b0812229d3f166e50d963766856c53)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
error converting collection entry - activemq:browse karaf command  via itests,AMQ-5525,12768439,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,19/Jan/15 13:47,02/Nov/19 05:25,14/Jul/23 05:44,21/Jan/15 16:59,5.10.0,,,,,,,,,5.11.0,,,,OSGi/Karaf,,,,,0,commands,karaf,osgi,,,"failures:
{code}  ActiveMQAMQPBrokerFeatureTest>ActiveMQBrokerFeatureTest.test:70->AbstractFeatureTest.withinReason:259 expected:<[JMS_BODY_FIELD:JMSText = 1421674632296]> but was:<[]>
  ActiveMQBrokerFeatureTest.test:70->AbstractFeatureTest.withinReason:259 expected:<[JMS_BODY_FIELD:JMSText = 1421674680492]> but was:<[]>{code} root cause - somewhere in blueprint converter. 
{code}java.lang.Exception: Unable to convert from [--amqurl, tcp://localhost:61616, --user, karaf, --password, karaf, -Vbody, 1421674680492] to java.util.ArrayList<java.lang.String>(error converting collection entry)
	at org.apache.aries.blueprint.container.AggregateConverter.convertToCollection(AggregateConverter.java:342)
	at org.apache.aries.blueprint.container.AggregateConverter.convert(AggregateConverter.java:182)
	at org.apache.activemq.karaf.commands.ActiveMQCommand$ActiveMQActionPreparator.convert(ActiveMQCommand.java:143)
	at org.apache.activemq.karaf.commands.ActiveMQCommand$ActiveMQActionPreparator.prepare(ActiveMQCommand.java:134)
	at org.apache.felix.gogo.commands.basic.AbstractCommand.execute(AbstractCommand.java:34)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.aries.proxy.impl.ProxyHandler$1.invoke(ProxyHandler.java:54)
	at org.apache.aries.proxy.impl.ProxyHandler.invoke(ProxyHandler.java:119)
	at org.apache.activemq.karaf.commands.$ActiveMQCommand695030723.execute(Unknown Source)
	at org.apache.felix.gogo.runtime.CommandProxy.execute(CommandProxy.java:78)
	at org.apache.felix.gogo.runtime.Closure.executeCmd(Closure.java:477)
	at org.apache.felix.gogo.runtime.Closure.executeStatement(Closure.java:403)
	at org.apache.felix.gogo.runtime.Pipe.run(Pipe.java:108)
	at org.apache.felix.gogo.runtime.Closure.execute(Closure.java:183)
	at org.apache.felix.gogo.runtime.Closure.execute(Closure.java:120)
	at org.apache.felix.gogo.runtime.CommandSessionImpl.execute(CommandSessionImpl.java:92)
	at org.apache.activemq.karaf.itest.AbstractFeatureTest$1$1.run(AbstractFeatureTest.java:125)
	at org.apache.activemq.karaf.itest.AbstractFeatureTest$1$1.run(AbstractFeatureTest.java:117)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:356)
	at org.apache.activemq.karaf.itest.AbstractFeatureTest$1.call(AbstractFeatureTest.java:117)
	at org.apache.activemq.karaf.itest.AbstractFeatureTest$1.call(AbstractFeatureTest.java:109)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.Exception: Unable to convert value 1421674680492 to type java.lang.String
	at org.apache.aries.blueprint.container.AggregateConverter.convert(AggregateConverter.java:184)
	at org.apache.aries.blueprint.container.AggregateConverter.convertToCollection(AggregateConverter.java:340)
	... 30 more
2015-01-19 13:38:05,367 | ERROR | Thread-30        | AbstractFeatureTest              | 125 - PAXEXAM-PROBE-a407b767-4b95-4f93-8124-64d04dc65582 - 0.0.0 | Execute: activemq:browse --amqurl tcp://localhost:61616 --user karaf --password karaf -Vbody 1421674680492 - Response:
activemq:browse --amqurl tcp://localhost:61616 --user karaf --password karaf -Vbody 1421674680492
java.lang.Exception: Unable to convert from [--amqurl, tcp://localhost:61616, --user, karaf, --password, karaf, -Vbody, 1421674680492] to java.util.ArrayList<java.lang.String>(error converting collection entry)
	at org.apache.aries.blueprint.container.AggregateConverter.convertToCollection(AggregateConverter.java:342)
	at org.apache.aries.blueprint.container.AggregateConverter.convert(AggregateConverter.java:182)
	at org.apache.activemq.karaf.commands.ActiveMQCommand$ActiveMQActionPreparator.convert(ActiveMQCommand.java:143)
	at org.apache.activemq.karaf.commands.ActiveMQCommand$ActiveMQActionPreparator.prepare(ActiveMQCommand.java:134)
	at org.apache.felix.gogo.commands.basic.AbstractCommand.execute(AbstractCommand.java:34)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.aries.proxy.impl.ProxyHandler$1.invoke(ProxyHandler.java:54)
	at org.apache.aries.proxy.impl.ProxyHandler.invoke(ProxyHandler.java:119)
	at org.apache.activemq.karaf.commands.$ActiveMQCommand695030723.execute(Unknown Source)
	at org.apache.felix.gogo.runtime.CommandProxy.execute(CommandProxy.java:78)
	at org.apache.felix.gogo.runtime.Closure.executeCmd(Closure.java:477)
	at org.apache.felix.gogo.runtime.Closure.executeStatement(Closure.java:403)
	at org.apache.felix.gogo.runtime.Pipe.run(Pipe.java:108)
	at org.apache.felix.gogo.runtime.Closure.execute(Closure.java:183)
	at org.apache.felix.gogo.runtime.Closure.execute(Closure.java:120)
	at org.apache.felix.gogo.runtime.CommandSessionImpl.execute(CommandSessionImpl.java:92)
	at org.apache.activemq.karaf.itest.AbstractFeatureTest$1$1.run(AbstractFeatureTest.java:125)
	at org.apache.activemq.karaf.itest.AbstractFeatureTest$1$1.run(AbstractFeatureTest.java:117)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:356)
	at org.apache.activemq.karaf.itest.AbstractFeatureTest$1.call(AbstractFeatureTest.java:117)
	at org.apache.activemq.karaf.itest.AbstractFeatureTest$1.call(AbstractFeatureTest.java:109)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.Exception: Unable to convert value 1421674680492 to type java.lang.String
	at org.apache.aries.blueprint.container.AggregateConverter.convert(AggregateConverter.java:184)
	at org.apache.aries.blueprint.container.AggregateConverter.convertToCollection(AggregateConverter.java:340)
	... 30 more
2015-01-19 13:38:06,379 | ERROR | Thread-30        | AbstractFeatureTest              | 125 - PAXEXAM-PROBE-a407b767-4b95-4f93-8124-64d04dc65582 - 0.0.0 | Execute: activemq:browse --amqurl tcp://localhost:61616 --user karaf --password karaf -Vbody 1421674680492 - Response:
activemq:browse --amqurl tcp://localhost:61616 --user karaf --password karaf -Vbody 1421674680492
java.lang.Exception: Unable to convert from [--amqurl, tcp://localhost:61616, --user, karaf, --password, karaf, -Vbody, 1421674680492] to java.util.ArrayList<java.lang.String>(error converting collection entry)
	at org.apache.aries.blueprint.container.AggregateConverter.convertToCollection(AggregateConverter.java:342)
	at org.apache.aries.blueprint.container.AggregateConverter.convert(AggregateConverter.java:182)
	at org.apache.activemq.karaf.commands.ActiveMQCommand$ActiveMQActionPreparator.convert(ActiveMQCommand.java:143)
	at org.apache.activemq.karaf.commands.ActiveMQCommand$ActiveMQActionPreparator.prepare(ActiveMQCommand.java:134)
	at org.apache.felix.gogo.commands.basic.AbstractCommand.execute(AbstractCommand.java:34)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.aries.proxy.impl.ProxyHandler$1.invoke(ProxyHandler.java:54)
	at org.apache.aries.proxy.impl.ProxyHandler.invoke(ProxyHandler.java:119)
	at org.apache.activemq.karaf.commands.$ActiveMQCommand695030723.execute(Unknown Source)
	at org.apache.felix.gogo.runtime.CommandProxy.execute(CommandProxy.java:78)
	at org.apache.felix.gogo.runtime.Closure.executeCmd(Closure.java:477)
	at org.apache.felix.gogo.runtime.Closure.executeStatement(Closure.java:403)
	at org.apache.felix.gogo.runtime.Pipe.run(Pipe.java:108)
	at org.apache.felix.gogo.runtime.Closure.execute(Closure.java:183)
	at org.apache.felix.gogo.runtime.Closure.execute(Closure.java:120)
	at org.apache.felix.gogo.runtime.CommandSessionImpl.execute(CommandSessionImpl.java:92)
	at org.apache.activemq.karaf.itest.AbstractFeatureTest$1$1.run(AbstractFeatureTest.java:125)
	at org.apache.activemq.karaf.itest.AbstractFeatureTest$1$1.run(AbstractFeatureTest.java:117)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:356)
	at org.apache.activemq.karaf.itest.AbstractFeatureTest$1.call(AbstractFeatureTest.java:117)
	at org.apache.activemq.karaf.itest.AbstractFeatureTest$1.call(AbstractFeatureTest.java:109)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.Exception: Unable to convert value 1421674680492 to type java.lang.String
	at org.apache.aries.blueprint.container.AggregateConverter.convert(AggregateConverter.java:184)
	at org.apache.aries.blueprint.container.AggregateConverter.convertToCollection(AggregateConverter.java:340)
	... 30 more
2015-01-19 13:38:07,390 | ERROR | Thread-30        | AbstractFeatureTest              | 125 - PAXEXAM-PROBE-a407b767-4b95-4f93-8124-64d04dc65582 - 0.0.0 | Execute: activemq:browse --amqurl tcp://localhost:61616 --user karaf --password karaf -Vbody 1421674680492 - Response:
activemq:browse --amqurl tcp://localhost:61616 --user karaf --password karaf -Vbody 1421674680492
java.lang.Exception: Unable to convert from [--amqurl, tcp://localhost:61616, --user, karaf, --password, karaf, -Vbody, 1421674680492] to java.util.ArrayList<java.lang.String>(error converting collection entry)
	at org.apache.aries.blueprint.container.AggregateConverter.convertToCollection(AggregateConverter.java:342)
	at org.apache.aries.blueprint.container.AggregateConverter.convert(AggregateConverter.java:182)
	at org.apache.activemq.karaf.commands.ActiveMQCommand$ActiveMQActionPreparator.convert(ActiveMQCommand.java:143)
	at org.apache.activemq.karaf.commands.ActiveMQCommand$ActiveMQActionPreparator.prepare(ActiveMQCommand.java:134)
	at org.apache.felix.gogo.commands.basic.AbstractCommand.execute(AbstractCommand.java:34)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.aries.proxy.impl.ProxyHandler$1.invoke(ProxyHandler.java:54)
	at org.apache.aries.proxy.impl.ProxyHandler.invoke(ProxyHandler.java:119)
	at org.apache.activemq.karaf.commands.$ActiveMQCommand695030723.execute(Unknown Source)
	at org.apache.felix.gogo.runtime.CommandProxy.execute(CommandProxy.java:78)
	at org.apache.felix.gogo.runtime.Closure.executeCmd(Closure.java:477)
	at org.apache.felix.gogo.runtime.Closure.executeStatement(Closure.java:403)
	at org.apache.felix.gogo.runtime.Pipe.run(Pipe.java:108)
	at org.apache.felix.gogo.runtime.Closure.execute(Closure.java:183)
	at org.apache.felix.gogo.runtime.Closure.execute(Closure.java:120)
	at org.apache.felix.gogo.runtime.CommandSessionImpl.execute(CommandSessionImpl.java:92)
	at org.apache.activemq.karaf.itest.AbstractFeatureTest$1$1.run(AbstractFeatureTest.java:125)
	at org.apache.activemq.karaf.itest.AbstractFeatureTest$1$1.run(AbstractFeatureTest.java:117)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:356)
	at org.apache.activemq.karaf.itest.AbstractFeatureTest$1.call(AbstractFeatureTest.java:117)
	at org.apache.activemq.karaf.itest.AbstractFeatureTest$1.call(AbstractFeatureTest.java:109)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.Exception: Unable to convert value 1421674680492 to type java.lang.String
	at org.apache.aries.blueprint.container.AggregateConverter.convert(AggregateConverter.java:184)
	at org.apache.aries.blueprint.container.AggregateConverter.convertToCollection(AggregateConverter.java:340)
	... 30 more
2015-01-19 13:38:08,400 | ERROR | Thread-30        | AbstractFeatureTest              | 125 - PAXEXAM-PROBE-a407b767-4b95-4f93-8124-64d04dc65582 - 0.0.0 | Execute: activemq:browse --amqurl tcp://localhost:61616 --user karaf --password karaf -Vbody 1421674680492 - Response:
activemq:browse --amqurl tcp://localhost:61616 --user karaf --password karaf -Vbody 1421674680492
java.lang.Exception: Unable to convert from [--amqurl, tcp://localhost:61616, --user, karaf, --password, karaf, -Vbody, 1421674680492] to java.util.ArrayList<java.lang.String>(error converting collection entry)
	at org.apache.aries.blueprint.container.AggregateConverter.convertToCollection(AggregateConverter.java:342)
	at org.apache.aries.blueprint.container.AggregateConverter.convert(AggregateConverter.java:182)
	at org.apache.activemq.karaf.commands.ActiveMQCommand$ActiveMQActionPreparator.convert(ActiveMQCommand.java:143)
	at org.apache.activemq.karaf.commands.ActiveMQCommand$ActiveMQActionPreparator.prepare(ActiveMQCommand.java:134)
	at org.apache.felix.gogo.commands.basic.AbstractCommand.execute(AbstractCommand.java:34)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.aries.proxy.impl.ProxyHandler$1.invoke(ProxyHandler.java:54)
	at org.apache.aries.proxy.impl.ProxyHandler.invoke(ProxyHandler.java:119)
	at org.apache.activemq.karaf.commands.$ActiveMQCommand695030723.execute(Unknown Source)
	at org.apache.felix.gogo.runtime.CommandProxy.execute(CommandProxy.java:78)
	at org.apache.felix.gogo.runtime.Closure.executeCmd(Closure.java:477)
	at org.apache.felix.gogo.runtime.Closure.executeStatement(Closure.java:403)
	at org.apache.felix.gogo.runtime.Pipe.run(Pipe.java:108)
	at org.apache.felix.gogo.runtime.Closure.execute(Closure.java:183)
	at org.apache.felix.gogo.runtime.Closure.execute(Closure.java:120)
	at org.apache.felix.gogo.runtime.CommandSessionImpl.execute(CommandSessionImpl.java:92)
	at org.apache.activemq.karaf.itest.AbstractFeatureTest$1$1.run(AbstractFeatureTest.java:125)
	at org.apache.activemq.karaf.itest.AbstractFeatureTest$1$1.run(AbstractFeatureTest.java:117)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:356)
	at org.apache.activemq.karaf.itest.AbstractFeatureTest$1.call(AbstractFeatureTest.java:117)
	at org.apache.activemq.karaf.itest.AbstractFeatureTest$1.call(AbstractFeatureTest.java:109)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.Exception: Unable to convert value 1421674680492 to type java.lang.String
	at org.apache.aries.blueprint.container.AggregateConverter.convert(AggregateConverter.java:184)
	at org.apache.aries.blueprint.container.AggregateConverter.convertToCollection(AggregateConverter.java:340){code}",karaf 2.4.1,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5526,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jan 21 16:59:18 UTC 2015,,,,,,,,,,,"0|i24iuf:",9223372036854775807,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"21/Jan/15 16:59;gtully;avoided the use of the blueprint converter for the general activemq command template case of a single string array arg.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failovertransport startupMaxReconnectAttempts  default value is doc'd incorrectly.,AMQ-5524,12767995,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,pgfox,pgfox,16/Jan/15 11:54,16/Jan/15 13:41,14/Jul/23 05:44,16/Jan/15 13:41,5.10.0,,,,,,,,,,,,,Documentation,,,,,0,,,,,,"On page http://activemq.apache.org/failover-transport-reference.html
the default for startupMaxReconnectAttempts is ""0"". In the code the actual default is ""-1"" (Infinite). 


",,pgfox,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jan 16 13:41:03 UTC 2015,,,,,,,,,,,"0|i24gcf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Jan/15 13:41;tabish;Documentation updated with correct default value.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"MulticastDiscoveryAgent may use a network that is not multicast enabled, fails to startup",AMQ-5520,12767517,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dkulp,dkulp,dkulp,14/Jan/15 18:42,11/Feb/15 15:36,14/Jul/23 05:44,14/Jan/15 19:45,5.10.0,,,,,,,,,5.11.0,,,,,,,,,0,,,,,,"
If no network interface is explicitly set, it calls mcast.joinGroup(inetAddress); without setting one on the MulticastSocket.  In that case, MulticastSocket then calls NetworkInterface.getDefault().    The ""default"" interface on a system is relatively unpredictable and COULD result in a network interface that isn't even multicast enabled.     On my mac, it's selecting a ""awdl0"" interface which doesn't support multicast.   If I have Parallels running, it sometimes picks up one of those interfaces.   It also sometimes picks up an ipv6 only network interface which also doesn't support the ipv4 broadcast address.

It would be better to enumerate the network interfaces and at least make sure we grab one that support multicast on ipv4 and is ""up"".

Note:  this causes some test failures on my machine.  Specifically SpringTest.testSenderWithSpringXmlEmbeddedPooledBrokerConfiguredViaXml fails.",,dkulp,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Feb 11 15:36:16 UTC 2015,,,,,,,,,,,"0|i24di7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Feb/15 15:36;gtully;seems that test failure points to a problem{code}org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'broker1' defined in class path resource [spring-embedded-pooled.xml]: Invocation of init method failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.net.SocketException: No such device
	at java.net.NetworkInterface.supportsMulticast0(Native Method)
	at java.net.NetworkInterface.supportsMulticast(NetworkInterface.java:417)
	at org.apache.activemq.transport.discovery.multicast.MulticastDiscoveryAgent.findNetworkInterface(MulticastDiscoveryAgent.java:347)
	at org.apache.activemq.transport.discovery.multicast.MulticastDiscoveryAgent.start(MulticastDiscoveryAgent.java:324)
	at org.apache.activemq.broker.TransportConnector.start(TransportConnector.java:253)
	at org.apache.activemq.broker.BrokerService.startTransportConnector(BrokerService.java:2593)
	at org.apache.activemq.broker.BrokerService.startAllConnectors(BrokerService.java:2506)
	at org.apache.activemq.broker.BrokerService.doStartBroker(BrokerService.java:710)
	at org.apache.activemq.broker.BrokerService.startBroker(BrokerService.java:670)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:606)
	at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:73)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606){code}

wrapping the supportsMulticast call to ignore this exception.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"use the ""amqp:not-found"" condition to indicate attempt to remove a DurableSubscription that does not exist",AMQ-5519,12767495,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,robbie,robbie,14/Jan/15 17:55,14/Jan/15 18:01,14/Jul/23 05:44,14/Jan/15 18:01,5.10.0,5.10.1,,,,,,,,5.11.0,,,,AMQP,,,,,0,,,,,,"When attempting to unregister a DurableSubscription that does not exist via AMQP, the broker currently returns the ""amqp:internal-error"" condition when closing the link. Using the ""amqp:not-found"" condition would be more appropriate.",,robbie,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jan 14 18:01:08 UTC 2015,,,,,,,,,,,"0|i24ddb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Jan/15 18:01;robbie;Change committed at: http://git-wip-us.apache.org/repos/asf/activemq/commit/6466ae2b;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redelivery count incremented in error for unconsumed prefetched messages,AMQ-5513,12766016,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,09/Jan/15 13:18,21/Apr/15 15:06,14/Jul/23 05:44,09/Jan/15 13:33,5.10.0,,,,,,,,,5.11.0,,,,Broker,JMS client,,,,0,DLQ,redelivery,,,,"If a consumer with prefetch>0 does an immediate close, without consuming any messages. Spring DMLC with small timeout or receiveNoWait for example. The broker will have dispatched and will want to redispatch to another consumer and will have incremented the redelivery count in error.
After 6 (default redelivery attempts) a consumer will poison ack and the message will go to the DLQ.

A simple consumer create/close then create/receive with pending messages will demo this.
true for queue consumers and durable topic subs",,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQNET-497,AMQCPP-558,AMQ-1730,AMQ-5735,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jan 09 13:33:25 UTC 2015,,,,,,,,,,,"0|i244ev:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Jan/15 13:33;gtully;fix in http://git-wip-us.apache.org/repos/asf/activemq/commit/dbb1d8b8;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Retained messages for zero-byte clientId connections,AMQ-5511,12766002,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,09/Jan/15 11:48,09/Jan/15 12:01,14/Jul/23 05:44,09/Jan/15 12:01,5.10.0,,,,,,,,,5.11.0,,,,MQTT,,,,,0,,,,,,When the zero-byte clientId client connects we use connection id for it. We need to use the same id when searching for context to send retained message.,,dejanb,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jan 09 12:01:18 UTC 2015,,,,,,,,,,,"0|i244br:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Jan/15 12:01;dejanb;Fixed with http://git-wip-us.apache.org/repos/asf/activemq/commit/7948d690;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Listener is not able to connect again once maxReconnectAttempts are exhausted by the ActiveMQ layers.,AMQ-5510,12765989,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,xabhi,xabhi,09/Jan/15 10:24,20/Apr/16 13:49,14/Jul/23 05:44,20/Apr/16 13:49,5.10.0,,,,,,,,,5.13.3,5.14.0,,,,,,,,2,,,,,,"I have multiple listeners sharing same connection and the broker url has maxReconnectAttempts property set to 5.
If I restart the broker, the ActiveMQ layer tries 5 reconnect attempts then gives up and the listener throws up connection refused exception and then tries to refresh the jms connection and says its refreshed but there is not connection made to ActiveMQ and the listener again throws up connection refused exception and again refreshes the jms connection but fails. This process continues indefinitely.

However, I use single listener and no sharing of connection, this works fine. The ActiveMQ layers tries 5 reconnect attempts fails, listener throws up exception and again triggers reconnect attempts which does not happens in case of multiple listener.


This issue doesn't happen with ActiveMQ 5.8.0


Steps to reproduce this issue:

<bean id=""connectionFactory"" class=""org.apache.activemq.ActiveMQConnectionFactory"">
        <property name=""brokerURL"" value=""failover:(tcp://<hostname1>:61616?wireFormat.maxInactivityDuration=120000,tcp://<hostname2>:61616?wireFormat.maxInactivityDuration=120000)?randomize=false&amp;maxReconnectAttempts=5"" />
    </bean>

<bean id=""jmsConnectionFactory""
        class=""org.apache.activemq.pool.PooledConnectionFactory""
        destroy-method=""stop"">
        <property name=""connectionFactory"" ref=""connectionFactory"" />
    </bean>

    <amq:topic id=""testTopic"" physicalName=""test.topic""/>

    <!-- The message listener container to invoke the consumer -->
    <bean id=""jmsContainer1""
        class=""org.springframework.jms.listener.DefaultMessageListenerContainer""
        p:connectionFactory-ref=""jmsConnectionFactory""
        p:destination-ref=""testTopic""
        p:pubSubDomain=""true""
        p:subscriptionDurable=""false""
        p:sessionTransacted=""true""
        p:messageListener-ref=""consumer"" />

    <bean id=""jmsContainer2""
        class=""org.springframework.jms.listener.DefaultMessageListenerContainer""
        p:connectionFactory-ref=""jmsConnectionFactory""
        p:destination-ref=""testTopic""
        p:pubSubDomain=""true""
        p:subscriptionDurable=""false""
        p:sessionTransacted=""true""
        p:messageListener-ref=""consumer"" />

Use this configuration and start the application.
Now restart the ActiveMQ broker once the listeners successfully connect.

Here are some logs:
[20141223 01:21:39.277 EST (ActiveMQ Task-3) org.apache.activemq.transport.failover.FailoverTransport#doReconnect 1089 ERROR] - Failed to connect to [tcp://a
rgon47.nyc:61616?wireFormat.maxInactivityDuration=120000, tcp://argon36.nyc:61616?wireFormat.maxInactivityDuration=120000] after: 5 attempt(s) 
[20141223 01:21:39.277 EST (ActiveMQ Task-3) org.apache.activemq.ActiveMQConnection#onAsyncException 2010 DEBUG] - Async exception with no exception listener
: java.net.ConnectException: Connection refused 
java.net.ConnectException: Connection refused
        at java.net.PlainSocketImpl.socketConnect(Native Method)
        at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
        at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
        at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
        at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
        at java.net.Socket.connect(Socket.java:589)
        at org.apache.activemq.transport.tcp.TcpTransport.connect(TcpTransport.java:501)
        at org.apache.activemq.transport.tcp.TcpTransport.doStart(TcpTransport.java:464)
        at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:55)
        at org.apache.activemq.transport.AbstractInactivityMonitor.start(AbstractInactivityMonitor.java:138)
        at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:58)
        at org.apache.activemq.transport.WireFormatNegotiator.start(WireFormatNegotiator.java:72)
        at org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1017)
        at org.apache.activemq.transport.failover.FailoverTransport$2.iterate(FailoverTransport.java:148)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:133)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:48)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
        at java.lang.Thread.run(Thread.java:745)
[20141223 01:21:39.279 EST (ActiveMQ Connection Executor: unconnected) org.apache.activemq.transport.failover.FailoverTransport#stop 366 DEBUG] - Stopped unc
onnected 
[20141223 01:21:39.279 EST (ActiveMQ Connection Executor: unconnected) org.apache.activemq.util.ThreadPoolUtils#shutdownNow 54 DEBUG] - Forcing shutdown of E
xecutorService: java.util.concurrent.ThreadPoolExecutor@31736876[Running, pool size = 2, active threads = 0, queued tasks = 0, completed tasks = 5] 
[20141223 01:21:39.281 EST (ActiveMQ Connection Executor: unconnected) org.apache.activemq.pool.PooledConnectionFactory$1$1#onException 110 INFO] - Expiring connection ActiveMQConnection {id=ID:cobalt14.nyc.deshaw.com-49500-1419315471791-1:1,clientId=ID:cobalt14.nyc.deshaw.com-49500-1419315471791-0:1,started=false} on IOException: java.net.ConnectException: Connection refused 
[20141223 01:21:39.281 EST (ActiveMQ Connection Executor: unconnected) org.apache.activemq.pool.PooledConnectionFactory$1$1#onException 111 DEBUG] - Expiring connection on IOException 
java.net.ConnectException: Connection refused
        at java.net.PlainSocketImpl.socketConnect(Native Method)
        at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
        at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
        at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
        at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
        at java.net.Socket.connect(Socket.java:589)
        at org.apache.activemq.transport.tcp.TcpTransport.connect(TcpTransport.java:501)
        at org.apache.activemq.transport.tcp.TcpTransport.doStart(TcpTransport.java:464)
        at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:55)
        at org.apache.activemq.transport.AbstractInactivityMonitor.start(AbstractInactivityMonitor.java:138)
        at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:58)
        at org.apache.activemq.transport.WireFormatNegotiator.start(WireFormatNegotiator.java:72)
        at org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1017)
at org.apache.activemq.transport.failover.FailoverTransport$2.iterate(FailoverTransport.java:148)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:133)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:48)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
        at java.lang.Thread.run(Thread.java:745)
[20141223 01:21:39.282 EST (jmsContainer2-1) org.apache.activemq.jms.pool.PooledSession#close 119 WARN] - Caught exception trying rollback() when putting session back into the pool, will invalidate. javax.jms.IllegalStateException: The Session is closed 
javax.jms.IllegalStateException: The Session is closed
        at org.apache.activemq.ActiveMQSession.checkClosed(ActiveMQSession.java:767)
        at org.apache.activemq.ActiveMQSession.rollback(ActiveMQSession.java:588)
        at org.apache.activemq.jms.pool.PooledSession.close(PooledSession.java:116)
        at org.springframework.jms.support.JmsUtils.closeSession(JmsUtils.java:108)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.clearResources(DefaultMessageListenerContainer.java:1143)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1002)
        at java.lang.Thread.run(Thread.java:745)
[20141223 01:21:39.282 EST (jmsContainer1-1) org.apache.activemq.jms.pool.PooledSession#close 119 WARN] - Caught exception trying rollback() when putting session back into the pool, will invalidate. javax.jms.IllegalStateException: The Session is closed 
javax.jms.IllegalStateException: The Session is closed
        at org.apache.activemq.ActiveMQSession.checkClosed(ActiveMQSession.java:767)
        at org.apache.activemq.ActiveMQSession.rollback(ActiveMQSession.java:588)
        at org.apache.activemq.jms.pool.PooledSession.close(PooledSession.java:116)
        at org.springframework.jms.support.JmsUtils.closeSession(JmsUtils.java:108)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.clearResources(DefaultMessageListenerContainer.java:1143)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1002)
        at java.lang.Thread.run(Thread.java:745)
[20141223 01:21:39.283 EST (jmsContainer2-1) org.springframework.jms.listener.DefaultMessageListenerContainer#handleListenerSetupFailure 839 WARN] - Setup of JMS message listener invoker failed for destination 'topic://cometd.seedTCAStatusPush' - trying to recover. Cause: Connection refused 
javax.jms.JMSException: Connection refused
        at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:72)
        at org.apache.activemq.ActiveMQMessageConsumer.dequeue(ActiveMQMessageConsumer.java:484)
        at org.apache.activemq.ActiveMQMessageConsumer.receive(ActiveMQMessageConsumer.java:631)
        at org.apache.activemq.jms.pool.PooledMessageConsumer.receive(PooledMessageConsumer.java:67)
        at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveMessage(AbstractPollingMessageListenerContainer.java:430)
        at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:310)
        at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:263)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1102)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1094)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:991)
        at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused
at java.net.PlainSocketImpl.socketConnect(Native Method)
        at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
        at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
        at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
        at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
        at java.net.Socket.connect(Socket.java:589)
        at org.apache.activemq.transport.tcp.TcpTransport.connect(TcpTransport.java:501)
        at org.apache.activemq.transport.tcp.TcpTransport.doStart(TcpTransport.java:464)
        at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:55)
        at org.apache.activemq.transport.AbstractInactivityMonitor.start(AbstractInactivityMonitor.java:138)
        at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:58)
        at org.apache.activemq.transport.WireFormatNegotiator.start(WireFormatNegotiator.java:72)
        at org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1017)
        at org.apache.activemq.transport.failover.FailoverTransport$2.iterate(FailoverTransport.java:148)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:133)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:48)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
        ... 1 more
[20141223 01:21:39.283 EST (jmsContainer1-1) org.springframework.jms.listener.DefaultMessageListenerContainer#handleListenerSetupFailure 839 WARN] - Setup of JMS message listener invoker failed for destination 'topic://cometd.seedTCAStatusPush' - trying to recover. Cause: Connection refused 
javax.jms.JMSException: Connection refused
        at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:72)
        at org.apache.activemq.ActiveMQMessageConsumer.dequeue(ActiveMQMessageConsumer.java:484)
        at org.apache.activemq.ActiveMQMessageConsumer.receive(ActiveMQMessageConsumer.java:631)
        at org.apache.activemq.jms.pool.PooledMessageConsumer.receive(PooledMessageConsumer.java:67)
        at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveMessage(AbstractPollingMessageListenerContainer.java:430)
        at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:310)
        at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:263)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1102)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1094)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:991)
        at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused
        at java.net.PlainSocketImpl.socketConnect(Native Method)
        at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
        at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
        at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
        at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
        at java.net.Socket.connect(Socket.java:589)
        at org.apache.activemq.transport.tcp.TcpTransport.connect(TcpTransport.java:501)
        at org.apache.activemq.transport.tcp.TcpTransport.doStart(TcpTransport.java:464)
        at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:55)
at org.apache.activemq.transport.AbstractInactivityMonitor.start(AbstractInactivityMonitor.java:138)
        at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:58)
        at org.apache.activemq.transport.WireFormatNegotiator.start(WireFormatNegotiator.java:72)
        at org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1017)
        at org.apache.activemq.transport.failover.FailoverTransport$2.iterate(FailoverTransport.java:148)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:133)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:48)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
        ... 1 more
[20141223 01:21:39.284 EST (jmsContainer2-1) org.springframework.jms.listener.DefaultMessageListenerContainer#refreshConnectionUntilSuccessful 891 INFO] - Successfully refreshed JMS Connection 
[20141223 01:21:39.284 EST (jmsContainer1-1) org.springframework.jms.listener.DefaultMessageListenerContainer#refreshConnectionUntilSuccessful 891 INFO] - Successfully refreshed JMS Connection 
[20141223 01:21:44.286 EST (jmsContainer1-2) org.springframework.jms.listener.DefaultMessageListenerContainer#handleListenerSetupFailure 839 WARN] - Setup of JMS message listener invoker failed for destination 'topic://cometd.seedTCAStatusPush' - trying to recover. Cause: org.apache.activemq.ConnectionFailedException: The JMS connection has failed: Connection refused 
javax.jms.IllegalStateException: org.apache.activemq.ConnectionFailedException: The JMS connection has failed: Connection refused
        at org.apache.activemq.jms.pool.ConnectionPool.createSession(ConnectionPool.java:135)
        at org.apache.activemq.jms.pool.PooledConnection.createSession(PooledConnection.java:167)
        at org.springframework.jms.support.JmsAccessor.createSession(JmsAccessor.java:197)
        at org.springframework.jms.listener.DefaultMessageListenerContainer.access$1400(DefaultMessageListenerContainer.java:119)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.initResourcesIfNecessary(DefaultMessageListenerContainer.java:1122)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1101)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1094)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:991)
        at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.activemq.ConnectionFailedException: The JMS connection has failed: Connection refused
        at org.apache.activemq.ActiveMQConnection.checkClosedOrFailed(ActiveMQConnection.java:1492)
        at org.apache.activemq.ActiveMQConnection.createSession(ActiveMQConnection.java:327)
        at org.apache.activemq.jms.pool.ConnectionPool.makeSession(ConnectionPool.java:104)
        at org.apache.activemq.jms.pool.ConnectionPool$1.makeObject(ConnectionPool.java:81)
        at org.apache.activemq.jms.pool.ConnectionPool$1.makeObject(ConnectionPool.java:66)
        at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
        at org.apache.activemq.jms.pool.ConnectionPool.createSession(ConnectionPool.java:133)
        ... 8 more
Caused by: java.net.ConnectException: Connection refused
        at java.net.PlainSocketImpl.socketConnect(Native Method)
        at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
        at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
        at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
        at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
at java.net.Socket.connect(Socket.java:589)
        at org.apache.activemq.transport.tcp.TcpTransport.connect(TcpTransport.java:501)
        at org.apache.activemq.transport.tcp.TcpTransport.doStart(TcpTransport.java:464)
        at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:55)
        at org.apache.activemq.transport.AbstractInactivityMonitor.start(AbstractInactivityMonitor.java:138)
        at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:58)
        at org.apache.activemq.transport.WireFormatNegotiator.start(WireFormatNegotiator.java:72)
        at org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1017)
        at org.apache.activemq.transport.failover.FailoverTransport$2.iterate(FailoverTransport.java:148)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:133)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:48)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
        ... 1 more
[20141223 01:21:44.286 EST (jmsContainer2-2) org.springframework.jms.listener.DefaultMessageListenerContainer#handleListenerSetupFailure 839 WARN] - Setup of JMS message listener invoker failed for destination 'topic://cometd.seedTCAStatusPush' - trying to recover. Cause: org.apache.activemq.ConnectionFailedException: The JMS connection has failed: Connection refused 
javax.jms.IllegalStateException: org.apache.activemq.ConnectionFailedException: The JMS connection has failed: Connection refused
        at org.apache.activemq.jms.pool.ConnectionPool.createSession(ConnectionPool.java:135)
        at org.apache.activemq.jms.pool.PooledConnection.createSession(PooledConnection.java:167)
        at org.springframework.jms.support.JmsAccessor.createSession(JmsAccessor.java:197)
        at org.springframework.jms.listener.DefaultMessageListenerContainer.access$1400(DefaultMessageListenerContainer.java:119)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.initResourcesIfNecessary(DefaultMessageListenerContainer.java:1122)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1101)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1094)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:991)
        at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.activemq.ConnectionFailedException: The JMS connection has failed: Connection refused
        at org.apache.activemq.ActiveMQConnection.checkClosedOrFailed(ActiveMQConnection.java:1492)
        at org.apache.activemq.ActiveMQConnection.createSession(ActiveMQConnection.java:327)
        at org.apache.activemq.jms.pool.ConnectionPool.makeSession(ConnectionPool.java:104)
        at org.apache.activemq.jms.pool.ConnectionPool$1.makeObject(ConnectionPool.java:81)
        at org.apache.activemq.jms.pool.ConnectionPool$1.makeObject(ConnectionPool.java:66)
        at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
        at org.apache.activemq.jms.pool.ConnectionPool.createSession(ConnectionPool.java:133)
        ... 8 more
Caused by: java.net.ConnectException: Connection refused
        at java.net.PlainSocketImpl.socketConnect(Native Method)
        at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
        at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
        at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
        at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
at java.net.Socket.connect(Socket.java:589)
        at org.apache.activemq.transport.tcp.TcpTransport.connect(TcpTransport.java:501)
        at org.apache.activemq.transport.tcp.TcpTransport.doStart(TcpTransport.java:464)
        at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:55)
        at org.apache.activemq.transport.AbstractInactivityMonitor.start(AbstractInactivityMonitor.java:138)
        at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:58)
        at org.apache.activemq.transport.WireFormatNegotiator.start(WireFormatNegotiator.java:72)
        at org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1017)
        at org.apache.activemq.transport.failover.FailoverTransport$2.iterate(FailoverTransport.java:148)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:133)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:48)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
        ... 1 more
[20141223 01:21:44.288 EST (jmsContainer1-2) org.springframework.jms.listener.DefaultMessageListenerContainer#refreshConnectionUntilSuccessful 891 INFO] - Successfully refreshed JMS Connection 
[20141223 01:21:44.289 EST (jmsContainer2-2) org.springframework.jms.listener.DefaultMessageListenerContainer#refreshConnectionUntilSuccessful 891 INFO] - Successfully refreshed JMS Connection 
[20141223 01:21:49.291 EST (jmsContainer2-3) org.springframework.jms.listener.DefaultMessageListenerContainer#handleListenerSetupFailure 839 WARN] - Setup of JMS message listener invoker failed for destination 'topic://cometd.seedTCAStatusPush' - trying to recover. Cause: org.apache.activemq.ConnectionFailedException: The JMS connection has failed: Connection refused 
javax.jms.IllegalStateException: org.apache.activemq.ConnectionFailedException: The JMS connection has failed: Connection refused
        at org.apache.activemq.jms.pool.ConnectionPool.createSession(ConnectionPool.java:135)
        at org.apache.activemq.jms.pool.PooledConnection.createSession(PooledConnection.java:167)
        at org.springframework.jms.support.JmsAccessor.createSession(JmsAccessor.java:197)
        at org.springframework.jms.listener.DefaultMessageListenerContainer.access$1400(DefaultMessageListenerContainer.java:119)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.initResourcesIfNecessary(DefaultMessageListenerContainer.java:1122)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1101)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1094)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:991)
        at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.activemq.ConnectionFailedException: The JMS connection has failed: Connection refused
        at org.apache.activemq.ActiveMQConnection.checkClosedOrFailed(ActiveMQConnection.java:1492)
        at org.apache.activemq.ActiveMQConnection.createSession(ActiveMQConnection.java:327)
        at org.apache.activemq.jms.pool.ConnectionPool.makeSession(ConnectionPool.java:104)
        at org.apache.activemq.jms.pool.ConnectionPool$1.makeObject(ConnectionPool.java:81)
        at org.apache.activemq.jms.pool.ConnectionPool$1.makeObject(ConnectionPool.java:66)
        at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
        at org.apache.activemq.jms.pool.ConnectionPool.createSession(ConnectionPool.java:133)
        ... 8 more
Caused by: java.net.ConnectException: Connection refused
        at java.net.PlainSocketImpl.socketConnect(Native Method)
at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
        at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
        at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
        at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
        at java.net.Socket.connect(Socket.java:589)
        at org.apache.activemq.transport.tcp.TcpTransport.connect(TcpTransport.java:501)
        at org.apache.activemq.transport.tcp.TcpTransport.doStart(TcpTransport.java:464)
        at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:55)
        at org.apache.activemq.transport.AbstractInactivityMonitor.start(AbstractInactivityMonitor.java:138)
        at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:58)
        at org.apache.activemq.transport.WireFormatNegotiator.start(WireFormatNegotiator.java:72)
        at org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1017)
        at org.apache.activemq.transport.failover.FailoverTransport$2.iterate(FailoverTransport.java:148)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:133)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:48)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
        ... 1 more
This continues indefinitely. I checked lsof output at this point and there was no connection to ActiveMQ broker, so these connection attempts were not reaching the broker itself.
",ActiveMQ 5.10,anujkhandelwal,bansalp,jira-bot,xabhi,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Apr 20 13:49:43 UTC 2016,,,,,,,,,,,"0|i2448v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Feb/15 14:36;anujkhandelwal;I am able to reproduce this issue by steps mentioned above. Sounds like a bug.;;;","20/Apr/16 13:48;jira-bot;Commit b65c0d1be4b0812229d3f166e50d963766856c53 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b65c0d1 ]

https://issues.apache.org/jira/browse/AMQ-5510
https://issues.apache.org/jira/browse/AMQ-5534

PooledConnectioFactory added reconnection support but can break if the
holder of the connection adds their own ExceptionListener as the
PooledConnection doesn't protect the internal ExceptionListener from
replacement which leads to cases where the loaned Connection is not
automatically closed so that the next create returns the same failed
connection.  ;;;","20/Apr/16 13:49;jira-bot;Commit 48f314ef5a141639f519618a08e2b98fa29b03cf in activemq's branch refs/heads/activemq-5.13.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=48f314e ]

https://issues.apache.org/jira/browse/AMQ-5510
https://issues.apache.org/jira/browse/AMQ-5534

PooledConnectioFactory added reconnection support but can break if the
holder of the connection adds their own ExceptionListener as the
PooledConnection doesn't protect the internal ExceptionListener from
replacement which leads to cases where the loaned Connection is not
automatically closed so that the next create returns the same failed
connection.
(cherry picked from commit b65c0d1be4b0812229d3f166e50d963766856c53)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
typo in ZkSessionTmeout attribute of leveldb replication,AMQ-5506,12764980,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,gtully,gtully,05/Jan/15 20:53,05/Jan/15 21:08,14/Jul/23 05:44,05/Jan/15 21:08,5.10.0,,,,,,,,,5.11.0,,,,Message Store,,,,,0,,,,,,,,gtully,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Jan 05 21:08:39 UTC 2015,,,,,,,,,,,"0|i23yt3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Jan/15 21:08;gtully;resolved in http://git-wip-us.apache.org/repos/asf/activemq/commit/4d8489ba;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KahaDB MessageDatabase race condition while stopping the broker and cleaning up,AMQ-5493,12762634,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,patanasov,patanasov,18/Dec/14 17:38,22/Dec/14 12:46,14/Jul/23 05:44,22/Dec/14 12:46,5.10.0,,,,,,,,,5.11.0,,,,Broker,,,,,0,,,,,,"This issue was seen on the surface via the following broker INFO log message:

2014-12-10 16:21:58,842 | INFO  | KahaDB: Recovering checkpoint thread after death | org.apache.activemq.store.kahadb.MessageDatabase | Thread-26

This means that the checkpoint thread is being revived unnecessarily while
stopping the broker. It could even happen that it is revived multiple times before the closing process is completed.

To show the flow of the race condition, consider the following blocks of code from activemq/activemq-kahadb-store/src/main/java/org/apache/activemq/store/kahadb/MessageDatabase.java:

Lines 425 - 442 [in close()]

if( opened.compareAndSet(true, false)) {
     ... some code ...
          if (metadata.page != null) {
               checkpointUpdate(true);
          }
     ... some code ...
}

Lines 1499 - 1501 [in checkpointUpdate(boolean)]

public void execute(Transaction tx) throws IOException {
     checkpointUpdate(tx, cleanup);
}

Line 1524 [in checkpointUpdate(Transaction, boolean)]

metadata.ackMessageFileMapLocation = checkpointAckMessageFileMap();

Line 1735 [in checkpointAckMessageFileMap()]

Location location = store(new KahaAckMessageFileMapCommand().setAckMessageFileMap(new Buffer(baos.toByteArray())), nullCompletionCallback);

Lines 993 - 995 [in store(...)]

if (checkpointThread != null && !checkpointThread.isAlive()) {
     startCheckpoint();
}

Lines 332  - 372  [In startCheckpoint()]
if (checkpointThread == null) {
     start = true;
} else if (!checkpointThread.isAlive()) {
     start = true;
      LOG.info(""KahaDB: Recovering checkpoint thread after death"");
}

if (start) {
     checkpointThread = new Thread(""ActiveMQ Journal Checkpoint Worker"") {
          @Override
          public void run() {
               try {
                     ... some code ...
                     while (opened.get()) {
                          ... some code ...
                     }
                } catch (InterruptedException e) {
                            // Looks like someone really wants us to exit this thread...
                } catch (IOException ioe) {
                            LOG.error(""Checkpoint failed"", ioe);
                            brokerService.handleIOException(ioe);
               }
          }
     };

     checkpointThread.setDaemon(true);
     checkpointThread.start();
}

Here is the sequence of events, involving code above that shows the race:

1. in close() set ""opened"" to false
2. in startCheckpoint() ""opened.get()"" is false so checkpoint thread exits run method and makes checkpointThread.isAlive() false
3. in store(...) calling startCheckpoint() which will revive the checkpoint thread again

Added some INFO logs to confirm the order above:

2014-12-17 13:27:43,678 | INFO  | patanasov: from unload() calling close() | org.apache.activemq.store.kahadb.MessageDatabase | Thread-18
2014-12-17 13:27:43,678 | INFO  | patanasov: close(): set opened to false; calling checkpointUpdate(true) | org.apache.activemq.store.kahadb.MessageDatabase | Thread-18
2014-12-17 13:27:43,678 | INFO  | patanasov: startCheckpoint(): checkpointThread exiting its run method | org.apache.activemq.store.kahadb.MessageDatabase | ActiveMQ Journal Checkpoint Worker
2014-12-17 13:27:43,681 | INFO  | patanasov: from store() calling startCheckpoint() | org.apache.activemq.store.kahadb.MessageDatabase | Thread-18
2014-12-17 13:27:43,682 | INFO  | KahaDB: Recovering checkpoint thread after death | org.apache.activemq.store.kahadb.MessageDatabase | Thread-18

Based on my limited understanding of this code, this does not seem to have any serious negative impacts, but it would be nice to be looked at by the community.   

It does not seem to make sense to revive the thread after opened.get() became false because the checkpointThread will not do anything anyway due to opened.get() being false at that point. Consider the body of the checkpointThread:

MessageDatabase.java, Lines 348 - 359

while (opened.get()){
     ... code that will attempt updates ...
}

However, since opened.get() is false, this will not enter the while loop and hence the checkpointThread will exit its run quickly again.

A possible fix for this is the following

Lines 993 - 995 [in store(...)]

change

if (checkpointThread != null && !checkpointThread.isAlive()) {
     startCheckpoint();
}

to

if (checkpointThread != null && !checkpointThread.isAlive() && opened.get()) {
     startCheckpoint();
}

If opened.get() is false, then we must be closing and we will not revive the thread. ",,gtully,patanasov,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Dec/14 17:43;patanasov;AMQ5493.patch;https://issues.apache.org/jira/secure/attachment/12688069/AMQ5493.patch",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Dec 22 12:46:05 UTC 2014,,,,,,,Patch Available,,,,"0|i23l33:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Dec/14 17:43;patanasov;Patch to fix raised issue.;;;","22/Dec/14 12:46;gtully;patch applied with thanks in http://git-wip-us.apache.org/repos/asf/activemq/commit/02d974c4;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broker should not log IOExceptions from TransportConnection class on WARN level when shutting down,AMQ-5488,12761485,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,patanasov,patanasov,12/Dec/14 22:51,23/Dec/15 16:24,14/Jul/23 05:44,23/Dec/15 16:24,5.10.0,,,,,,,,,,,,,Broker,,,,,0,,,,,,"If the broker is in the process of shutting down, then prior function calls into the persistence adapter layer could result in and bubble back up with an IOException due to the fact that the broker is shutting down. Currently, such TransportConnection IOException(s) are handled and logged on the WARN level when actually they are harmless as the broker is shutting down. For one such example, please consider the following code blocks from  activemq-5.10.0:

activemq\activemq-broker\src\main\java\org\apache\activemq\broker\TransportConnection.java

Lines 933 - 937

try {
     broker.preProcessDispatch(messageDispatch);
} catch (RuntimeException convertToIO) {
     throw new IOException(convertToIO);
}

When this block throws the IOException, it is caught and further thrown from 

Lines 941 - 951

} catch (IOException e) {
     if (messageDispatch != null) {
          TransmitCallback sub = messageDispatch.getTransmitCallback();
           broker.postProcessDispatch(messageDispatch);
           if (sub != null) {
                sub.onFailure();
           }
           messageDispatch = null;
           throw e;
     }
}

When this block throws the exception, it is further caught and serviced by

Lines 989 - 995

} catch (IOException e) {
     if (dispatchStopped.compareAndSet(false, true)) {
          dispatchStoppedLatch.countDown();
     }
     serviceExceptionAsync(e);
     return false;
}

Lines 267 - 276 (serviceExceptionAsync) create a new ""Async Exception Handler"" thread which will invoke serviceException

Lines 287 - 289

if (e instanceof IOException) {
     serviceTransportException((IOException) e);
}

This will evaluate to true and hence serviceTransportException is invoked

Lines 242 - 246

if (TRANSPORTLOG.isDebugEnabled()) {
     TRANSPORTLOG.debug(this + "" failed: "" + e, e);
} else if (TRANSPORTLOG.isWarnEnabled() && !expected(e)) {
     TRANSPORTLOG.warn(this + "" failed: "" + e);
}

If debug is enabled, then it is OK for all IOExceptions to be logged. However, in the ""else if"" case, it is not considered if this TransportConnection IOException is being handled while the broker is shutting down. The suggestion is to consider the value of this.broker.getBrokerService().isStopping() as part of the expected(e) call to limit the amount of benign WARN messages that can show up in the log and cause confusion as the broker is shutting down.

A patch for this fix will be provided.

",,patanasov,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Dec/14 22:57;patanasov;AMQ5488.patch;https://issues.apache.org/jira/secure/attachment/12686967/AMQ5488.patch",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Dec 23 16:24:57 UTC 2015,,,,,,,Patch Available,,,,"0|i23e3b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Dec/14 22:57;patanasov;Patch to fix raised issue.;;;","23/Dec/15 16:24;tabish;Other fixes have sorted this so that these logs are no longer seen. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Thread synchronization overhead is unexpectedly high,AMQ-5486,12761268,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,benjaminhuang,benjaminhuang,12/Dec/14 08:23,25/Nov/19 12:13,14/Jul/23 05:44,28/Mar/16 17:56,5.9.1,,,,,,,,,5.14.0,,,,Broker,,,,,0,,,,,,"There's about 20 topics with virtual topic enabled, hundreds of comsumers/producers connected to MQ on NIO transport connector. During the run there're about 12000 msg flow in per second, not a very high rate, but ActiveMQ consumes a lot of CPU resource (about 600%~1000%). To find out what's the most CPU consuming code path, I use JProfiler to dig into the process. 

Among all the NIO worker threads, most of them were frequently blocked and did a little job between the 'unblocked' time. While they're expected spend most of their time slices on waiting for work item and processed them.

!nio_worker_blocked_frequently.png!

After reviewing the monitor usage history and stats, I think these NIO workers were competing fiercely with each other on executing a synchronized method (DestinationMap::get), which is also the most hot spot in the program . I also notice that the caller AbstractRegion::getDestinations acquires a read lock before calling it, so I guess this could be a left out, read lock is the actual lock type required here.

!monitor_usage_stats.png!

!nio_worker_blocked_1.png!

!nio_worker_blocked_2.png!

It's too difficult for me to list all critical sections between NIO workers, or between NIO workers and BrokerService which adds up to the overall synchronize overhead. So I attach the relevant info, with the hope of finding a complete solution to this.","UbuntuServer 12.04 x86_64, Linux Kernel 3.20.23, OpenJDK 1.7.0_51 64-Bit Server VM, Xms 2G, Xms 8G, CPU: E5-2620 v2 X 2, 64 GB RAM",benjaminhuang,gtully,jira-bot,rwagg,tabish,tmielke,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6126,,,,,,,,,,,,,AMQ-6184,,,,,,,,,,,"12/Dec/14 08:28;benjaminhuang;Method_Statistics.html;https://issues.apache.org/jira/secure/attachment/12686803/Method_Statistics.html","12/Dec/14 08:28;benjaminhuang;Monitor_History.zip;https://issues.apache.org/jira/secure/attachment/12686804/Monitor_History.zip","12/Dec/14 08:28;benjaminhuang;Monitor_Usage_Statistics.html;https://issues.apache.org/jira/secure/attachment/12686805/Monitor_Usage_Statistics.html","12/Dec/14 08:28;benjaminhuang;monitor_usage_stats.png;https://issues.apache.org/jira/secure/attachment/12686802/monitor_usage_stats.png","12/Dec/14 08:24;benjaminhuang;nio_worker_blocked_1.png;https://issues.apache.org/jira/secure/attachment/12686799/nio_worker_blocked_1.png","12/Dec/14 08:24;benjaminhuang;nio_worker_blocked_2.png;https://issues.apache.org/jira/secure/attachment/12686800/nio_worker_blocked_2.png","12/Dec/14 08:24;benjaminhuang;nio_worker_blocked_frequently.png;https://issues.apache.org/jira/secure/attachment/12686801/nio_worker_blocked_frequently.png","24/Dec/14 03:26;benjaminhuang;tunable_threadpool_options.patch;https://issues.apache.org/jira/secure/attachment/12688980/tunable_threadpool_options.patch",,8.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Nov 25 12:13:28 UTC 2019,,,,,,,,,,,"0|i23ctz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Dec/14 03:26;benjaminhuang;one of my idea is to make thread pool behavior tunable, please refer to attachment 'tunable_threadpool_options.patch' and avoid worker thread from being created too actively ( use CallerRunsPolicy as RejectionHandler);;;","08/Dec/15 11:40;gtully;that looks like a sensible enhancement. my only comment would be the current MAX_INT default  appears to be being replaced with 10, as the default value when the property is referenced. I guess it would be best to retain the current defaults.;;;","15/Jan/16 16:16;tabish;Adds the last configuration option that was missing from this request, all the TaskRunnerFactory and SelectorManager values are configurable now.  ;;;","28/Mar/16 17:55;jira-bot;Commit 9a866cf5673c03f5b2a324ec81802fd986a0ad72 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=9a866cf ]

https://issues.apache.org/jira/browse/AMQ-5486

Default to caller runs policy on task rejection.;;;","28/Mar/16 17:56;tabish;Most of the idea here along with other enhancements have made it into the code at this point.  ;;;","28/Sep/16 11:16;jira-bot;Commit 634b42016a4c347217129d49a4175afaba9666ed in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=634b420 ]

https://issues.apache.org/jira/browse/AMQ-5486 - allow selector manager to reject tasks - org.apache.activemq.transport.nio.SelectorManager.rejectWork leaving the default to caller runs policy. This allows a broker to implement qos for existing connections by forcing others away
;;;","25/Nov/19 12:13;jira-bot;Commit 3f5bb9710a4d4c88e9f88cb5c4dc83c1755cb72c in activemq's branch refs/heads/master from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=3f5bb97 ]

AMQ-5486 - fix intermittent failure in the test, reallign assertions
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQP Memory leaks in the AMQP Protocol converter on sender link close,AMQ-5484,12761103,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,tabish,tabish,tabish,11/Dec/14 16:45,11/Dec/14 18:03,14/Jul/23 05:44,11/Dec/14 18:03,5.10.0,,,,,,,,,5.11.0,,,,AMQP,,,,,0,,,,,,On close of sender links we do not clean up all the mappings for the ConsumerContext instances which leads a build up of context objects in the subscriptions map.,,tabish,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Dec 11 18:03:37 UTC 2014,,,,,,,,,,,"0|i23bov:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Dec/14 18:03;tabish;Fixed on trunk. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LRU cached message group map eviction is not reflected in consumer assigned counts,AMQ-5483,12761072,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,11/Dec/14 14:37,11/Dec/14 14:53,14/Jul/23 05:44,11/Dec/14 14:53,5.10.0,,,,,,,,,5.11.0,,,,Broker,,,,,0,messageGroups,,,,,"by default, consumers are ordered by consumer priority and number of assigned message groups. The group assignment lru map can evict group associations, but the eviction is only noticed on next use of the groupid at dispatch, which may never happen. This leaves consumers less likely to get new groups assigned in error. The combination of a low cache size and long lives consumers should allow even distribution.",,gtully,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Dec 11 14:53:52 UTC 2014,,,,,,,,,,,"0|i23bhz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Dec/14 14:53;gtully;fix and test in http://git-wip-us.apache.org/repos/asf/activemq/commit/d25c52cc;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
REST endpoint creates topic instead of queue,AMQ-5478,12760351,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,artnaseef,psmith@apache.org,psmith@apache.org,09/Dec/14 04:49,11/Feb/15 17:28,14/Jul/23 05:44,11/Feb/15 17:28,5.10.0,,,,,,,,,,,,,Web Console,,,,,0,,,,,,"This is _possibly_ simply a Documentation bug, but I was testing the REST endpoints via the documentation here:

http://activemq.apache.org/rest.html

When I first tried to post a simple message to a queue (and this queue didn't exist yet) I used this script:

{noformat}
$ curl -d ""body=message"" -XPOST http://admin:admin@localhost:8161/api/message/queue/orders/input
{noformat}

The above is mostly based on the documentation.  I was surprised to find no queue created by looking at the web console, but i _*did*_ see a Topic created called 'queue.orders.input' and it contained 1 message (odd because there's no consumers defined).

After deleting the topic I then tried the 'other format' of the URL:

{noformat}
 curl -d ""body=message"" -XPOST http://admin:admin@localhost:8161/api/message/orders.input?type=queue
{noformat}

This does create a Queue of name 'orders.input' as one would expect.

I'm not exactly clear then from the documentation where in the URL one is defining it as a queue using the former syntax.  The URL in the documentation sort of _implies_ that the 'queue' prefix of the URL is creating a queue named 'orders.input' but it doesn't turn out that way.

So either this is a bug, or the documentation needs tweaking.



",,artnaseef,mmfrazier,psmith@apache.org,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Feb 11 17:28:30 UTC 2015,,,,,,,,,,,"0|i237mv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Jan/15 02:32;mmfrazier;According to the code, if NO type parameter is specified, the default will be topic, UNLESS the servlet has been initialized with an init param in the web.xml file. See code snippet below:

    protected boolean isTopic(HttpServletRequest request) {
        String typeText = request.getParameter(typeParameter);
        if (typeText == null) {
            return defaultTopicFlag;
        }
        return typeText.equalsIgnoreCase(""topic"");
    }

To change this default, you can do this in the webapps/demo/WEB-INF/web.xml file:

<servlet>
    <servlet-name>MessageServlet</servlet-name>       
    <servlet-class>org.apache.activemq.web.MessageServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
    <init-param>
            <param-name>topic</param-name>
            <param-value>false</param-value>
    </init-param>
</servlet>

However, you are correct. The documentation is a bit misleading and should point this out. I will see if I can do that.;;;","11/Feb/15 05:02;mmfrazier;I've updated the wiki page to make it more clear. ;;;","11/Feb/15 17:28;artnaseef;Thank you Mark.  Ticket resolved.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Batch transactions of priority messages: javax.jms.JMSException: Unmatched acknowledge: MessageAck {commandId = 14, responseRequired = false, ackType = 2, ...Could not find Message-ID XXX in dispatched-list (start of ack)",AMQ-5476,12759684,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,05/Dec/14 14:43,28/Jul/15 18:05,14/Jul/23 05:44,05/Dec/14 14:52,5.10.0,,,,,,,,,5.11.0,,,,JMS client,,,,,0,priority,transactions,,,,"with mixed priority messages, consuming in batches, occasional async error on batched ack pre commit.
{code}
javax.jms.JMSException: Unmatched acknowledge: MessageAck {commandId = 14, responseRequired = false, ackType = 2, consumerId = XXX, firstMessageId = XXX, lastMessageId = XXX, destination = queue://xxx, transactionId = XXX, messageCount = 20, poisonCause = null}; Could not find Message-ID XXX in dispatched-list (start of ack)
	at org.apache.activemq.broker.region.PrefetchSubscription.assertAckMatchesDispatched(PrefetchSubscription.java:480){code}",,grijesh.saini,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQCPP-579,,,AMQ-5851,,,AMQ-2790,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Dec 05 14:52:10 UTC 2014,,,,,,,,,,,"0|i233lr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Dec/14 14:47;gtully;The reordering client side breaks a range ack. Disabling by default b/c when it is enabled individual ack mode is required which for transactions will negate the typical batch use case.;;;","05/Dec/14 14:52;gtully;fix and test in http://git-wip-us.apache.org/repos/asf/activemq/commit/bbb2acca;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQP transport does not send correct response to unsupported clients,AMQ-5475,12759454,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,04/Dec/14 15:44,17/Dec/14 13:23,14/Jul/23 05:44,08/Dec/14 22:24,5.10.0,5.9.1,,,,,,,,5.11.0,,,,AMQP,,,,,0,,,,,,"Section 2.2 of the AMQP 1.0 spec covers protocol negotiation and states that when a client connects and send an AMQP header with an unsupported version the broker should send back an AMQP header with the version supported before closing the socket.  This also applied if the header cannot be parsed, such as a HTTP client etc connecting to the AMQP transport port.  

We currently just close the socket which does not give the connecting client any insight into why the connect failed and allow it to try again with the correct protocol if supported. ",,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5490,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Dec 08 22:24:39 UTC 2014,,,,,,,,,,,"0|i2327j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Dec/14 22:24;tabish;Any client that connects to the transports TCP, SSL, NIO, NIO+SSL which uses an unsupported AMQP version or that is not sending an AMQP header that is valid will be sent the appropriate AMQP 1.0 header and then have the connection closed.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Race condition caused by Linkstealing might make durable subs inactive,AMQ-5473,12759240,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,workanandr,workanandr,03/Dec/14 18:12,09/Dec/14 16:00,14/Jul/23 05:44,09/Dec/14 15:36,5.11.0,,,,,,,,,5.11.0,,,,Broker,,,,,0,,,,,,"Link Stealing creates a new connection and disconnects the old connection. These operations are done concurrently.
New connection triggers addConsumer() for active subscriptions and old connection stop causes removeConsumer() for the same.

Problems:
 * addConsumer() would throw exception that the sub is already active (if remove did not happen before)
 * even if we go past the exception, it will not set the right (new) connection context and consumer info the subs
 * removeConsumer() may remove subcription even if it had different connection context (created by linkstealing)


Patch attached.",,tabish,workanandr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5428,,,,,,,,,,,,,,,,,,,,,,,,"05/Dec/14 00:57;workanandr;linksteal_durablesub.patch;https://issues.apache.org/jira/secure/attachment/12685214/linksteal_durablesub.patch",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Dec 09 15:36:45 UTC 2014,,,,,,,Patch Available,,,,"0|i230w7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Dec/14 00:57;workanandr;patch updated.;;;","08/Dec/14 23:20;tabish;Were you able to reproduce this in a test case?  I'm reviewing the change.;;;","09/Dec/14 15:36;tabish;Tested and applied the patch.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"RAR; stopped connection (due to SecurityException) not evicted from JCA pool",AMQ-5472,12759156,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,03/Dec/14 12:12,03/Dec/14 12:19,14/Jul/23 05:44,03/Dec/14 12:19,5.10.0,,,,,,,,,5.11.0,,,,RAR,,,,,0,,,,,,"If there is a securityException on an initial connection attempt, the transport is disposed, AMQ-3294
The resulting socket read error does not bubble up to a registered exception listener leaving an invalid/Stopped pooled managed connection. 
The connection is unusable and needs to be purged via administration",,gtully,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Dec 03 12:19:48 UTC 2014,,,,,,,,,,,"0|i230dz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Dec/14 12:19;gtully;fix and test in http://git-wip-us.apache.org/repos/asf/activemq/commit/a58b0087

the original security exception is now propagated correctly.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQ MQTT doesn't reject remote connection after a long time ,AMQ-5468,12758816,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,hongphu8790,hongphu8790,02/Dec/14 02:58,08/Feb/15 14:28,14/Jul/23 05:44,05/Jan/15 23:55,5.10.0,5.9.0,5.9.1,,,,,,,5.11.0,,,,Connector,MQTT,,,,0,,,,,,"Test steps:
- Using jConsole to explore JMX MBean clientConnectors (MQTT+NIO connector). 
- Using telnet client connect to MQTT+NIO port
- On jConsole: clientConnectors/mqtt+nio/remoteAddess appear a new connection with IP and local port which connect to.
- Close telnet program
- Waiting a long time (could be more than a day) and view remoteAddess again on jConsole but Remote IP (telnet) does not remove.

Imagine that if a human open a thousand or million connections to server, AMQ not release connections after short time, then AMQ could be throws the ERROR ""To many open files"" and it doesn't access new connection.

In production server (ulimit max-open-files 65000), i'm using 2 thousand clients but after 2 days, many ERROR ""To many open files"" in activemq.log to be throws.
On jConsole, number of clientId is equals with clients, but RemoteIP contains more than 65000 IPs.",Linux,hongphu8790,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Sun Feb 08 14:28:56 UTC 2015,,,,,,,,,,,"0|i22y9j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Dec/14 20:42;tabish;You can configure max connections on a transport connector to limit max open connections.

            <transportConnector name=""mqtt"" uri=""mqtt://0.0.0.0:5673?maximumConnections=1000/>;;;","03/Dec/14 20:43;tabish;Configuration can fix this.  For questions on configuration please post on the users list.;;;","06/Dec/14 08:21;hongphu8790;Hi @Timothy Bish, thanks for your quick reply,

I have been configured max connections on a transport connector and real number of clients  (wireless devices) is 2000, but connections count when invoke operator in JMX and losf (command linux) more than 65000 TCP opened.

The fact that, at a time only one a socket is opened. But connection not release when client disconnect not properly, client MQTT is removed on broker, but TCP socket don't. 
You can use telnet client to double check:
Example: Please try three simple steps:
1/ telnet <broker ip>:port
2/ view on Jconsole for JMX connector: image bellow
Socket tcp appear in folder remoteAddress

!http://s3.postimg.org/xbplh535f/amq.png!

3/ Close telnet client, waiting a long time (could be 1 hour, 1 day,...), socket tcp not release, so a humman could be attack by open many sockets :(

In real-production, my clients could be disconnect not properly and many tcp not release and cause max-openfiles error.

Sorry my English!;;;","08/Dec/14 23:01;tabish;You can add the keepAlive option to your transport connector and configure the OS to check on a more regular interval than the default two hour value.  When you close the telnet session you leave a half open socket and the broker needs the TCP stack to signal that it has gone so keepAlive would be a good solution.  ;;;","05/Jan/15 22:26;tabish;Given that many MQTT clients will run on potentially unreliable connections it's probably not a bad idea to add in connection negotiation timeout detection simillar to that of the OpenWire transport.  Unlike STOMP MQTT is binary and would not be usable in telnet which is why the STOMP transport doesn't implement this.  ;;;","05/Jan/15 23:55;tabish;Fixed on trunk, you can use the 'transport.connectAttemptTimeout' option to configure how long before the opened connection is kept around without receiving a CONNECT frame from the client.  Default value is set to 30 seconds.;;;","08/Feb/15 14:28;hongphu8790;Thanks Timothy Bish, 

Great :)

I have problem with amq version 5.9.1. Since amq version 5.11 it OK, after 60000 ms, zoombie of socket session (telnet etc..) auto destroy properly :)

But i have another problem with version 5.10 and above. Comsumer JMS (Resource adapter + Glassfish) working not properly, i created a problem here: https://issues.apache.org/jira/browse/AMQ-5570

Many thanks Timothy!
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"AMQP transaction may fail to commit, or process unexpected messages, if consumer acks are not in a single unbroken sequential range",AMQ-5467,12758709,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,robbie,robbie,01/Dec/14 18:31,01/Dec/14 19:16,14/Jul/23 05:44,01/Dec/14 19:16,5.10.0,,,,,,,,,5.11.0,,,,AMQP,,,,,0,,,,,,"When consuming messages in a transaction, the AMQP consumer accepts messages and specifies the transaction they are part of. AMQPProtocolConverter keeps a record of messages accepted in this way. When the transaction is committed, AMQPProtocolConverter assumes that the first and last messages in this 'dispatched in Tx' list form a range, and creates a ranged 'standard ack' MessageAck to cover the messages. The broker then checks that the acks it is processing match messages it has previously dispatched, in PrefetchSubscription#assertAckMatchesDispatched(MessageAck).

If the messages aren't added to the AMQP transaction in sequence, e.g. the assumed 'last id' is actually for a message dispatched before the assumed 'first id' in the sequence, the check fails even though all the messages being acked are in the dispatched list. There is also an implicit assumption in the processing that the ack range is an unbroken sequence, and as a result it would seem possible for messages to be acked that were not actually considered part of the AMQP transaction. This non-sequential ordering can for example happen because a client isn't releasing unconsumed prefetched messages after a rollback of consumed messages, or alternatively is processing higher priority messages before lower priority messages originally dispatched to it earlier. 

To combat these issues, the AMQP transaction commit processing should be updated to use 'individual acks'.",,robbie,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Dec/14 18:40;robbie;0001-AMQ-5467-update-AMQP-commit-processing-to-use-indivi.patch;https://issues.apache.org/jira/secure/attachment/12684453/0001-AMQ-5467-update-AMQP-commit-processing-to-use-indivi.patch",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Dec 01 19:16:55 UTC 2014,,,,,,,Patch Available,,,,"0|i22xm7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Dec/14 18:40;robbie;Attaching patch to resolve issue. Adds a test that shows issue due to the client not releasing unconsumed prefetched messages during rollback. Also fixes up some constants to improve readability of tests using transacted sessions. 

(I have a further test elsewhere for a new client, which shows the underlying issue due to client-side priority handling).;;;","01/Dec/14 19:16;tabish;Patched reviewed and applied.  Thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
prefetched messages go bottom in a message list of a JMX queue.browse,AMQ-5457,12757695,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,25/Nov/14 14:19,25/Nov/14 14:25,14/Jul/23 05:44,25/Nov/14 14:25,5.10.0,,,,,,,,,5.11.0,,,,JMX,,,,,0,browser,jconsole,jmx,order,,"With a prefetch smaller than queue depth a browse of delivered and unconsumed messages will loos message order. The prefetched messages appearing after the rest of the messages in the queue. The dispatch order is preserved, but the JMX destination view browse list order is incorrect.

Sending 100 messages, consuming 5 with prefetch 10 and closing the consumer. A subsequent QueueView.browse 
Expect [5,6,...100] but get [20,21...100,5,6...]",,gtully,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Nov 25 14:25:38 UTC 2014,,,,,,,,,,,"0|i22rif:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Nov/14 14:25;gtully;fix and test in http://git-wip-us.apache.org/repos/asf/activemq/commit/74f530a6;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQP messages accepted transactionally by a consumer should retain the TransactionalState until commit/rollback,AMQ-5456,12757678,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,robbie,robbie,25/Nov/14 12:22,25/Nov/14 14:17,14/Jul/23 05:44,25/Nov/14 14:17,5.10.0,,,,,,,,,5.11.0,,,,AMQP,,,,,0,,,,,,"When the broker receives a disposition frame accepting a message using TransactionalState to make it part of a transaction, it sets the local message state to Accepted and settles the delivery. If the incoming disposition was not settled, this process causes a settled disposition frame to be sent to the client which contains a non-transactional Accepted outcome. The message has not yet actually reached this state (only doing so if the transaction is committed successfully) and so should still have a TransactionalState linking it to the transaction.

This issue can be seen in the protocol trace below:
{noformat}
<TCP time=""10:05:17.783758"" seqno=""732965115"" size=""38"">
  <source host=""127.0.0.1"" port=""57536""/>
  <target host=""127.0.0.1"" port=""5672""/>
  
  <frame size=""38"" doff=""2"" chan=""1""> 
    
    <small-descriptor code=""0x0:0x15""/> # disposition
    <list8 size=""25"" count=""5""> # disposition
      <true/> # role
      <uint0/> # first
      <uint0/> # last
      <false/> # settled
      <small-descriptor code=""0x0:0x34""/> # state    <<<<<< transactional state
      <list8 size=""15"" count=""2""> # state
        <bin8 size=""8""> # txn-id
          00 00 00 00 00 00 00 01 
        </bin8>
        <small-descriptor code=""0x0:0x24""/> # outcome
        <list0/> # accepted
      </list8>
      # <null/> batchable [false]
    </list8>
    
  </frame>
  
</TCP>

<TCP time=""10:05:17.785657"" seqno=""1813532080"" size=""22"">
  <source host=""127.0.0.1"" port=""5672""/>
  <target host=""127.0.0.1"" port=""57536""/>
  
  <frame size=""22"" doff=""2"" chan=""1""> 
    
    <small-descriptor code=""0x0:0x15""/> # disposition
    <list8 size=""9"" count=""5""> # disposition
      <false/> # role
      <uint0/> # first
      <uint0/> # last
      <true/> # settled
      <small-descriptor code=""0x0:0x24""/> # state    <<<<<< non-transactional state
      <list0/> # accepted
      # <null/> batchable [false]
    </list8>
    
  </frame>
  
</TCP>
{noformat}",,robbie,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Nov/14 12:34;robbie;0001-AMQ-5456-use-a-TransactionalState-acceptance-when-se.patch;https://issues.apache.org/jira/secure/attachment/12683531/0001-AMQ-5456-use-a-TransactionalState-acceptance-when-se.patch",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Nov 25 14:17:32 UTC 2014,,,,,,,Patch Available,,,,"0|i22ren:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Nov/14 12:34;robbie;Attaching patch which updates the broker to use a local TransactionalState acceptance before settling messages being consumed in a transaction. This causes the disposition reply state to match the clients earlier update.

{noformat}
<TCP time=""10:54:07.144849"" seqno=""477148551"" size=""38"">
  <source host=""127.0.0.1"" port=""34451""/>
  <target host=""127.0.0.1"" port=""5672""/>
  
  <frame size=""38"" doff=""2"" chan=""1""> 
    
    <small-descriptor code=""0x0:0x15""/> # disposition
    <list8 size=""25"" count=""5""> # disposition
      <true/> # role
      <uint0/> # first
      <uint0/> # last
      <false/> # settled
      <small-descriptor code=""0x0:0x34""/> # state    <<<<<< transactional state
      <list8 size=""15"" count=""2""> # state
        <bin8 size=""8""> # txn-id
          00 00 00 00 00 00 00 01 
        </bin8>
        <small-descriptor code=""0x0:0x24""/> # outcome
        <list0/> # accepted
      </list8>
      # <null/> batchable [false]
    </list8>
    
  </frame>
  
</TCP>

<TCP time=""10:54:07.147447"" seqno=""2677401021"" size=""38"">
  <source host=""127.0.0.1"" port=""5672""/>
  <target host=""127.0.0.1"" port=""34451""/>
  
  <frame size=""38"" doff=""2"" chan=""1""> 
    
    <small-descriptor code=""0x0:0x15""/> # disposition
    <list8 size=""25"" count=""5""> # disposition
      <false/> # role
      <uint0/> # first
      <uint0/> # last
      <true/> # settled
      <small-descriptor code=""0x0:0x34""/> # state    <<<<<< transactional state
      <list8 size=""15"" count=""2""> # state
        <bin8 size=""8""> # txn-id
          00 00 00 00 00 00 00 01 
        </bin8>
        <small-descriptor code=""0x0:0x24""/> # outcome
        <list0/> # accepted
      </list8>
      # <null/> batchable [false]
    </list8>
    
  </frame>
  
</TCP>
{noformat};;;","25/Nov/14 14:17;tabish;Patch applied, thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Build Failure due to missing paho dependency,AMQ-5455,12757544,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,hadrian,hadrian,hadrian,24/Nov/14 22:35,25/Nov/14 00:31,14/Jul/23 05:44,25/Nov/14 00:31,,,,,,,,,,5.11.0,,,,,,,,,0,,,,,,"Per report on the dev@ mailing list:
http://activemq.2283324.n4.nabble.com/activemq-5-10-0-doesn-t-build-from-source-td4687924.html",,hadrian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Nov 24 23:02:23 UTC 2014,,,,,,,,,,,"0|i22qlj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Nov/14 22:37;hadrian;Error is below:
{code}
[ERROR] Failed to execute goal on project activemq-mqtt: Could not resolve dependencies for project org.apache.activemq:activemq-mqtt:jar:5.11-SNAPSHOT: Failure to find org.eclipse.paho:mqtt-client:jar:0.4.0 in https://repo.eclipse.org/content/groups/releases/ was cached in the local repository, resolution will not be reattempted until the update interval of eclipse.m2 has elapsed or updates are forced -> [Help 1]
{code}

The reason is paho no longer being available in maven central. Weird...
;;;","24/Nov/14 23:02;hadrian;Fix applied. Thanks Ciprian for the patch.

The [original repo|https://repo.eclipse.org/content/groups/releases/org/eclipse/paho/mqtt-client/0.4.0/] is empty. I don't know if mqtt-client will ever pop back, maybe we should remove it and stick with the spring.io one.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Topic messages can't be sent to DLQ, because region destination value is null",AMQ-5454,12757513,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,guslara,guslara,24/Nov/14 21:19,08/Dec/15 14:51,14/Jul/23 05:44,08/Dec/15 11:28,5.10.0,,,,,,,,,5.14.0,,,,Broker,,,,,0,,,,,,"When Topic.send is executed, the message is stored with the proper region destination. 
When RegionBroker.sendToDeadLetterQueue is called, for some reason the call to MessageReference node.getRegionDestinations (ln 728) is null.
MessageReference is an instance of ActiveMQBlobMessage.","published and subscriber connections created via Spring xml configuration file.
The messages are persistent (Durable subscription)",cshannon,gtully,guslara,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Dec 08 14:51:53 UTC 2015,,,,,,,,,,,"0|i22qen:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Nov/14 15:11;guslara;If I used Queues instead of Topics, everything works fine.;;;","07/Dec/15 20:20;cshannon;This should be retested against the latest release.;;;","08/Dec/15 11:15;gtully;do you have a stack trace with a npe from the log or a test case?
As part of https://issues.apache.org/jira/browse/AMQ-6070 I added a fix for the case of a message expiring before dispatch by setting the regionDestination earlier. A stack trace would help identify if that fix resolved this.;;;","08/Dec/15 11:26;jira-bot;Commit 88ec9dad9dc47790a3fc4e0f5ad939ea5530dad7 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=88ec9da ]

https://issues.apache.org/jira/browse/AMQ-5454 https://issues.apache.org/jira/browse/AMQ-6070 - in the case of duplicates from the store the regiondestination was not set
;;;","08/Dec/15 11:28;gtully;I think I found the problem. It would be great if you could provide a test case to validate or validate the 5.14 snapshot.
If you still see a problem, please include the logging information;;;","08/Dec/15 14:51;jira-bot;Commit c67590104b0836906b0701c641eabb6e66989da6 in activemq's branch refs/heads/activemq-5.13.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=c675901 ]

https://issues.apache.org/jira/browse/AMQ-5454 https://issues.apache.org/jira/browse/AMQ-6070 - in the case of duplicates from the store the regiondestination was not set

(cherry picked from commit 88ec9dad9dc47790a3fc4e0f5ad939ea5530dad7)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MQTT namespace (CONTAINERID) in the DB is not in JMS namespace format.. ,AMQ-5452,12757494,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,cjutzi,cjutzi,24/Nov/14 19:56,02/Jul/15 22:48,14/Jul/23 05:44,02/Jul/15 22:48,5.11.0,,,,,,,,,5.12.0,,,,MQTT,,,,,0,,,,,,"Currently (in the latest release 5.11) the MQTT name-space as it's given in the incoming message is stored in the DB.  One optimization I had to make on unsubscribe was to ensure the namespaces lined up with JMS to eliminate a dip into the database for each subscription.. For me to do this, the 'destinations' Map names needed to correlate with the JMS name.. 
I moved the name conversion to the top layer so as to align these two.. 

I also had to add a escape feature such that an MQTT Name space could use a '.' in the namespace without major JMS confusion.. 

",,cjutzi,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Nov/14 19:58;cjutzi;MQTTDefaultSubscriptionStrategy.patch;https://issues.apache.org/jira/secure/attachment/12683404/MQTTDefaultSubscriptionStrategy.patch","24/Nov/14 19:58;cjutzi;MQTTProtocolConverter.patch;https://issues.apache.org/jira/secure/attachment/12683403/MQTTProtocolConverter.patch","24/Nov/14 19:58;cjutzi;MQTTVirtualTopicSubscriptionStrategy.patch;https://issues.apache.org/jira/secure/attachment/12683405/MQTTVirtualTopicSubscriptionStrategy.patch",,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jul 02 22:48:42 UTC 2015,,,,,,,Patch Available,,,,"0|i22qan:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Nov/14 19:58;cjutzi;patches for the changes.. ;;;","02/Jul/15 22:48;tabish;Changes in the MQTT layer for 5.12 remove the need to dip into the store on each connection / subscription.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"mKahaDB filtered wildcard <filteredKahaDB queue=""*.DLQ""> doesn't pick up myqueue.DLQ",AMQ-5450,12757452,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,24/Nov/14 17:23,24/Nov/14 17:45,14/Jul/23 05:44,24/Nov/14 17:45,5.10.0,,,,,,,,,5.11.0,,,,Message Store,,,,,0,messageStore,mkahadb,,,,"the activemq destination map does not support prefix matching on multiple paths but you can provide multiple wildcard matches via a composite destination today using a comma separated list.

In the main, ""a.dlq"" will match {code}""*.dlq""{code}, but a.b.dlq needs a {code}""*.*.dlq""{code} - so there needs to be a match to the number of expected paths to the number of wildcards. Having extra matches is not a problem.

A composite destination like {code}(""*.DLQ,*.*.DLQ,*.*.*.DLQ""){code}will give match FOO.DLQ, FOO.BAR.DLQ and FOO.BAR.BAR.DLQ etc.

There is a problem with the match all destinations mapping, if there is no destination configured then an Any destination (with composite of Queue="">"" and Topic="">"" is used under the covers, it has a physical name of ""0"" which is > than the first character of *.DLQ"" so it gets picked first in error.

A workaround is to add your own default mapping for queues and topics {code}
<mKahaDB directory=""${data}/kahadb"" >
 <filteredPersistenceAdapters>
   <!-- match up to 3 paths that end in .DLQ -->
   <filteredKahaDB queue=""*.*.*.DLQ,*.*.DLQ,*.DLQ"">
    <persistenceAdapter>
      <kahaDB journalMaxFileLength=""5kb""/>
    </persistenceAdapter>
  </filteredKahaDB>
  <!-- match all queues, specify a wildcard dest to avoid the Any under the covers -->
  <filteredKahaDB queue="">"" >
    <persistenceAdapter>
      <kahaDB journalMaxFileLength=""10kb""/>
    </persistenceAdapter>
  </filteredKahaDB>
  <!-- match all topics, specify a wildcard dest to avoid the Any under the covers -->
  <filteredKahaDB topic="">"" >
    <persistenceAdapter>
      <kahaDB journalMaxFileLength=""10kb""/>
    </persistenceAdapter>
  </filteredKahaDB>
 </filteredPersistenceAdapters>
</mKahaDB>
{code}
rather than use a filteredKahaDB and not specify a destination, with the default ""all"" behaviour",,gtully,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Nov 24 17:45:12 UTC 2014,,,,,,,,,,,"0|i22q1j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Nov/14 17:45;gtully;fix in http://git-wip-us.apache.org/repos/asf/activemq/commit/8533a924;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update Documentation for unix/linux,AMQ-5448,12757232,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,scoopex,scoopex,22/Nov/14 18:24,10/May/15 18:51,14/Jul/23 05:44,10/May/15 18:51,5.10.0,,,,,,,,,,,,,Broker,,,,,0,,,,,,"The current unix/linux related documentation is not in sync with the behavior documented in the wiki.

The following pages are outdated/redundant because it refers the outdated:
- http://activemq.apache.org/getting-started.html#GettingStarted-UnixBinaryInstallation
- http://activemq.apache.org/activemq-command-line-tools-reference.html
- http://activemq.apache.org/unix-service.html
- http://activemq.apache.org/unix-shell-script.html
- https://cwiki.apache.org/confluence/display/ACTIVEMQ/Run+Broker",,gtully,heikki_m,scoopex,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5503,AMQ-5378,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Sun May 10 18:51:14 UTC 2015,,,,,,,,,,,"0|i22op3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Dec/14 10:31;scoopex;My wiki user id is ""scoopex"".;;;","13/Apr/15 12:51;gtully;[~scoopex] you should be able to edit the wiki now.;;;","13/Apr/15 14:43;scoopex;Thanks for the permissions!
Updated : https://cwiki.apache.org/confluence/display/ACTIVEMQ/Getting+Started;;;","13/Apr/15 18:05;scoopex;Modified https://cwiki.apache.org/confluence/display/ACTIVEMQ/Unix+Shell+Script;;;","10/May/15 18:51;scoopex;Remove outdated information from https://cwiki.apache.org/confluence/display/ACTIVEMQ/Unix+Service and added a linkt to the current documentation.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory Leak after shutdown embeded broker with JDBC persistence,AMQ-5447,12756913,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,shilei812,shilei812,21/Nov/14 07:32,25/Nov/14 19:56,14/Jul/23 05:44,25/Nov/14 19:56,5.10.0,,,,,,,,,5.11.0,,,,Broker,Message Store,,,,0,,,,,,"After shutdown embeded activemq broker with JDBC store, 2 'ActiveMQ JDBC PA Scheduled Task' is still alive.
Because the 2 thread's Thread factory is object of JDBCPersistenceAdapter's inner class, so the object of JDBCPersistenceAdapter can be reached from the 2 threads, JDBCPersistenceAdapter has a field point to BrokerService. So the instance of BrokerService can be reached from the 2 threads.

So the stopped brokerService cannot be GC.

The root cause is that when stopping JDBCPersistenceAdapter, only cancelling cleanupTicket without shutdown clockDaemon, that's why the 2 threads are still alive.

According to http://activemq.apache.org/how-do-i-restart-embedded-broker.html, it's better (more reliable) to instantiate the broker again instead of reuse old broker. So if I restart embeded broker, there will be  1 more BrokerService in memory. I think it's memory leak.","Windows7, JDK7",shilei812,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7200,7200,,0%,7200,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Nov/14 08:19;shilei812;1.png;https://issues.apache.org/jira/secure/attachment/12682833/1.png","21/Nov/14 08:19;shilei812;2.png;https://issues.apache.org/jira/secure/attachment/12682834/2.png","21/Nov/14 07:34;shilei812;JDBCPersistenceAdapter.java;https://issues.apache.org/jira/secure/attachment/12682827/JDBCPersistenceAdapter.java","21/Nov/14 08:08;shilei812;patch.txt;https://issues.apache.org/jira/secure/attachment/12682830/patch.txt",,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Nov 25 19:56:52 UTC 2014,,,,,,,Patch Available,,,,"0|i22n3z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Nov/14 07:34;shilei812;patch on 5.10;;;","21/Nov/14 08:08;shilei812;patch;;;","21/Nov/14 08:19;shilei812;Memory Leak;;;","21/Nov/14 08:19;shilei812;path to root;;;","25/Nov/14 19:56;tabish;Patch applied.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq doesn't start in java home contain space character,AMQ-5446,12756754,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,hdumont,hdumont,20/Nov/14 18:23,12/Aug/15 17:44,14/Jul/23 05:44,12/Aug/15 17:44,5.10.0,,,,,,,,,5.12.0,,,,,,,,,0,,,,,,"Found on cygwin/Windows 7 but should be application for Linux/Unix platform too 
If Java is installed in a directory containing space character, like c:\Program files\Java ,  activemq start command doesn't start 
Script doesn't report any error. activemq.pid file pid of a process which doesn't exist.



",cygwin,hdumont,jfugitt,scoopex,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5378,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Aug 11 22:42:43 UTC 2015,,,,,,,,,,,"0|i22m53:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Nov/14 20:33;jfugitt;Updating my comment now that I re-read and see you are referring to Java home having a space.  I was having a similar problem when ActiveMQ was installed to a directory path with spaces (like Program Files).  Maybe this other info could help you.

Based on what I was seeing on Windows, I attached a patch to JIRA 5422:
https://issues.apache.org/jira/browse/AMQ-5422

I didn't test on Linux but that patch should help for windows.

Basically the variable needs quotes around it in the script.
-Djava.security.auth.login.config=%ACTIVEMQ_CONF%\login.config
should be
-Djava.security.auth.login.config=""%ACTIVEMQ_CONF%\login.config"";;;","20/Nov/14 21:08;hdumont;AMQ-5422 is about activemq .bat but this issue is about activemq shell script as I'm using cygwin.
$EXEC_OPTION $DOIT_PREFIX ""$JAVACMD $ACTIVEMQ_OPTS $ACTIVEMQ_DEBUG_OPTS \
lines in activemq script should be replaced by
$EXEC_OPTION $DOIT_PREFIX ""\""$JAVACMD\"" $ACTIVEMQ_OPTS $ACTIVEMQ_DEBUG_OPTS \

double quotes around $JAVACMD are already present in activemq-admin script on the other end.

;;;","22/Nov/14 19:35;scoopex;Fixed that in my branch/fork for AMQ-5378.

See https://github.com/breuninger-ecom/activemq/commit/c0e9aa7483cdc51f5fb21edd1bac1580a08c84b3 in https://github.com/apache/activemq/pull/48
See ;;;","11/Aug/15 22:42;scoopex;can be closed, will be fixed with 5.12.0;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KahaDB bug that skips doing a sync on recoveryFile,AMQ-5444,12756257,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,jfugitt,jfugitt,18/Nov/14 23:14,25/Nov/14 23:50,14/Jul/23 05:44,25/Nov/14 23:50,,,,,,,,,,5.11.0,,,,Message Store,,,,,0,,,,,,"There appears to be a bug in the KahaDB PageFile.java class when attempting to sync files to disk.  If the ""enableDiskSyncs"" option is set to true, it looks like the code is intending to sync the recoveryFile and the writeFile.  However, it accidentally syncs the writeFile twice and fails to sync the recoveryFile.  In the method below, see the if statement towards the bottom that checks the enableDiskSyncs boolean to see the problem:

private void writeBatch() throws IOException {
...
            if (enableDiskSyncs) {
                // Sync to make sure recovery buffer writes land on disk..
                if (enableRecoveryFile) {
                    writeFile.sync(); // This should not be writeFile.sync!!!!!!
                }
                writeFile.sync();
            }
...


The code above should have a recoveryFile.sync() on the line with the comment.
",,jfugitt,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Nov 25 23:50:29 UTC 2014,,,,,,,,,,,"0|i22j5z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Nov/14 23:50;tabish;Fixed so that the recovery file is actually sync'd when enabled.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SSL client does not validate server certificate common name,AMQ-5443,12756114,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,mattrpav,ahadden,ahadden,18/Nov/14 14:48,04/Jun/21 15:02,14/Jul/23 05:44,04/Jun/21 15:02,5.10.0,,,,,,,,,5.16.0,,,,JMS client,,,,,0,security,,,,,"When using SSL the server certificate's common name (or subjectAltName) must be validated in order to prevent a man-in-the-middle attack.  The ActiveMQ client does not do this by default and makes doing so somewhat difficult.

The result is that most applications that use the ActiveMQ client with SSL are not getting the security they think they are.  For a very good explanation of this hostname verification issue, see http://tersesystems.com/2014/03/23/fixing-hostname-verification/

It is worth nothing that ActiveMQ was specifically mentioned in a paper titled ""The Most Dangerous Code in the World:  Validating SSL Certificates in Non-Browser Software"" (https://www.cs.utexas.edu/~shmat/shmat_ccs12.pdf):

""Java-based Web-services middleware, such as Apache Axis, Axis 2, and Codehaus XFire, is broken, too. So is the Android library for Pusher notification API and Apache ActiveMQ implementation of Java Message Service. All programs employing this middleware are generically insecure.""

Also, ActiveMQ is specifically mentioned in CVE-2012-5784 (http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2012-5784) as an example of a library that does not do host name checking.  I can't explain why this hasn't been a bigger deal (am I missing something?).

We have worked around this in our code by providing our own connection factory class that inherits from ActiveMQSslConnectionFactory.  It overrides the createTrustManager() and setKeyAndTrustManagers(...) methods in order to ""decorate"" the real TrustManagers with a check for certificate host name.  Currently, it uses org.apache.http.conn.ssl.SSLConnectionSocketFactory.BROWSER_COMPATIBLE_HOSTNAME_VERIFIER from the Apache HTTP Client project to verify the host name, which works for our project because we already use the Apache HTTP Client elsewhere.

I created this issue with a Major priority, although it could be argued that it's Critical because it's security related and likely to affect so many people.  ",,ahadden,mattrpav,tabish,TRAORE,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Nov/14 14:54;ahadden;MyActiveMQSslConnectionFactory.java;https://issues.apache.org/jira/secure/attachment/12682172/MyActiveMQSslConnectionFactory.java",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jun 04 14:58:56 UTC 2021,,,,,,,,,,,"0|i22ib3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Nov/14 14:54;ahadden;Added an example workaround connection factory (MyActiveMQSslConnectionFactory.java).;;;","17/Feb/15 15:10;tabish;Now that we require JDK v1.7 a simpler fix might be to use the HTTPS endpoint identification algorithm when configuring the SSLParameters.  

{code}
        if (isVerifyHost()) {
            SSLParameters sslParameters = engine.getSSLParameters();
            sslParameters.setEndpointIdentificationAlgorithm(""HTTPS"");
            engine.setSSLParameters(sslParameters);
        }
{code}

We'd be happy to review a patch along these lines, it should have unit tests along with it to validate things work as expected with checking enabled or disabled.  ;;;","04/Jun/21 14:58;mattrpav;This was fixed in 5.16.x

ref: https://github.com/apache/activemq/commit/69fad2a135689f6c31fbada1c397f2e0dfd90d3c
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException in SimpleDiscoveryEvent on Shutdown,AMQ-5442,12755875,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,john.arnesen@53.com,john.arnesen@53.com,17/Nov/14 18:41,25/Nov/14 20:30,14/Jul/23 05:44,25/Nov/14 20:30,5.10.0,,,,,,,,,5.11.0,,,,Broker,,,,,0,,,,,,"If startup of a broker fails when using SimpleDiscoveryAgent, then you will encounter a NullPointerException on shutdown because the TaskRunnerFactory instance is created during startup and there is no check to ensure it was created before attempting the shutdown:

{quote}
org.apache.activemq.network.DiscoveryNetworkConnector Could not stop service: DiscoveryNetworkConnector:NC:BrokerService[...]. Reason: java.lang.NullPointerException
        at org.apache.activemq.transport.discovery.simple.SimpleDiscoveryAgent.stop(SimpleDiscoveryAgent.java:96)
{quote}
",,john.arnesen@53.com,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Nov 25 20:30:45 UTC 2014,,,,,,,,,,,"0|i22gvr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Nov/14 20:30;tabish;Added check before attempting to stop task runner;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PersistanceAdapter returns all Durable Subscriptions - this does not scale at all when durable subscribers are used ,AMQ-5441,12755853,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,cjutzi,cjutzi,17/Nov/14 17:40,15/May/15 20:03,14/Jul/23 05:44,15/May/15 20:03,5.11.0,,,,,,,,,5.12.0,,,,Broker,,,,,0,,,,,,"In the PersistenceAdapter for the broker, you'll see the call getDestinations() which is used (At least in MQTT) on each connect to see if the connecting client has any subscriptions.   The issue is that getDesitinations() returns all durable subscriptions.  We have an environment which has status / state which are retained, as well, each client supports 10 durable subscriptions.  With 10 K client connections this implies a dip into the DB which will return 80 bytes for each DESTINATION in the data base * 10K or 8 Meg on each connect.   This needs to be filtered in the DB query since you are not looking for other clientids.  All PersistenceAdaptors implemented have this issue. 

I have modified the all the DB adaptors to support a new method called getDestinations(String client_id).  I have also modified the JDBC query to support a query which is specific to a given client-id and does not need to loop through all (thousands of ) connections filtering the client_id in the code.. 
(see PersistenceAdapterSupport.listSubscriptions()).. 
 
I've also attached a JUnit test which demos the issue using derbyDb.. 
",,cjutzi,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,172800,172800,,0%,172800,172800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Nov/14 17:54;cjutzi;Junit_PersistanceAdapterIssue_IntelCjutzi.java;https://issues.apache.org/jira/secure/attachment/12681940/Junit_PersistanceAdapterIssue_IntelCjutzi.java","17/Nov/14 19:17;cjutzi;apache-activemq_activemq-broker_Memory.patch;https://issues.apache.org/jira/secure/attachment/12681960/apache-activemq_activemq-broker_Memory.patch","17/Nov/14 17:54;cjutzi;apache-activemq_activemq-broker_PersistenceAdapter.patch;https://issues.apache.org/jira/secure/attachment/12681936/apache-activemq_activemq-broker_PersistenceAdapter.patch","17/Nov/14 17:54;cjutzi;apache-activemq_activemq-broker_PersistenceAdapterSupport.patch;https://issues.apache.org/jira/secure/attachment/12681935/apache-activemq_activemq-broker_PersistenceAdapterSupport.patch","17/Nov/14 17:54;cjutzi;apache-activemq_activemq-jdbc-store_DefaultJDBCAdapter.patch;https://issues.apache.org/jira/secure/attachment/12681937/apache-activemq_activemq-jdbc-store_DefaultJDBCAdapter.patch","17/Nov/14 17:54;cjutzi;apache-activemq_activemq-jdbc-store_JDBCAdapter.patch;https://issues.apache.org/jira/secure/attachment/12681938/apache-activemq_activemq-jdbc-store_JDBCAdapter.patch","17/Nov/14 17:54;cjutzi;apache-activemq_activemq-jdbc-store_Statements.patch;https://issues.apache.org/jira/secure/attachment/12681939/apache-activemq_activemq-jdbc-store_Statements.patch","17/Nov/14 17:54;cjutzi;apache-activemq_activemq-store_KahaDBPersistenceAdapter.patch;https://issues.apache.org/jira/secure/attachment/12681934/apache-activemq_activemq-store_KahaDBPersistenceAdapter.patch",,8.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri May 15 20:03:35 UTC 2015,,,,,,,Patch Available,,,,"0|i22gqv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Nov/14 17:54;cjutzi;includes patches and JUnit test.. 
I did not include LevelDB patch
;;;","18/Nov/14 19:17;cjutzi;also.. the Temp kahadb patch will need to have the additional interface added.. 
;;;","15/May/15 20:03;tabish;This has been fixed by not having the incoming connect attempts dip into the store but instead use the data already available in the broker memory to lookup and recover previous subscriptions.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"updateClusterFilter doc sample; not using correct regular expression",AMQ-5439,12755414,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,,pgfox,pgfox,14/Nov/14 16:53,26/Nov/14 14:36,14/Jul/23 05:44,26/Nov/14 14:36,5.10.0,,,,,,,,,,,,,Documentation,,,,,0,,,,,,"The sample for updateClusterFilter in  [1] uses

{code}
updateClusterFilter=""*A*,*B*"" /> 
{code}

This will throw an error as it does not appear to be a correct regular expression .

{code}
tcp://localhost/127.0.0.1:61617@63382 shutdown due to a local error: java.util.regex.PatternSyntaxException: Dangling meta character '*' near index 0
*A*
{code}


I think that is meant to be:


{code}
updateClusterFilter="".*A.*,.*B.*"" /> 
{code}

[1]http://activemq.apache.org/failover-transport-reference.html
",,pgfox,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Nov 26 14:36:33 UTC 2014,,,,,,,,,,,"0|i22e2v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Nov/14 14:36;tabish;Updated docs.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Archiving mKahaDB log files cause broker restart,AMQ-5438,12755089,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,jkorab,jkorab,13/Nov/14 15:44,04/Dec/14 13:05,14/Jul/23 05:44,04/Dec/14 13:05,5.10.0,,,,,,,,,5.11.0,,,,Message Store,,,,,0,,,,,,"When using the following config, the broker service seems to restart every journal archive interval (30s):
{code:xml}
<persistenceAdapter>
  <mKahaDB directory=""${activemq.base}/data/kahadb"">
    <filteredPersistenceAdapters>
      <filteredKahaDB queue=""DLQ.>"">
        <persistenceAdapter>
          <!-- keep small journals, and delete them when consumed -->
          <kahaDB journalMaxFileLength=""4mb"" 
              archiveDataLogs=""false""/>
        </persistenceAdapter>
      </filteredKahaDB>

      <filteredKahaDB queue="">"">
        <persistenceAdapter>
          <!-- keep larger journals, and archive them when consumed -->
          <kahaDB journalMaxFileLength=""32mb"" 
              archiveDataLogs=""true""/>
        </persistenceAdapter>
      </filteredKahaDB>

      <!-- match all other destinations (topics); needed for completeness -->
      <filteredKahaDB>
        <persistenceAdapter>
          <kahaDB enableJournalDiskSyncs=""false""/>
        </persistenceAdapter>
      </filteredKahaDB>
    </filteredPersistenceAdapters>
  </mKahaDB>
</persistenceAdapter>
{code}

The log files show the following exception:
{noformat}
java.io.IOException: Failed to move /opt/amq-1/data/kahadb/queue#3a#2f#2f#3e/db-2.log to data-archive
	at org.apache.activemq.util.IOHelper.moveFile(IOHelper.java:189)[activemq-broker-5.10.0.jar:5.10.0]
	at org.apache.activemq.store.kahadb.disk.journal.DataFile.move(DataFile.java:84)[activemq-kahadb-store-5.10.0.jar:5.10.0]
	at org.apache.activemq.store.kahadb.disk.journal.Journal.forceRemoveDataFile(Journal.java:437)[activemq-kahadb-store-5.10.0.jar:5.10.0]
{noformat}",OSX,dejanb,githubbot,jkorab,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Dec 04 13:05:39 UTC 2014,,,,,,,,,,,"0|i22c4n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Nov/14 15:25;jkorab;Fixed issue, with supporting unit test. Pull request on Gihtub (https://github.com/apache/activemq/pull/50).;;;","04/Dec/14 13:04;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/50
;;;","04/Dec/14 13:05;dejanb;Patch applied. Thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQP messages stuck in broker when receiver detaches while receiving,AMQ-5433,12754833,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,chug,chug,12/Nov/14 18:32,02/Apr/15 23:03,14/Jul/23 05:44,02/Apr/15 23:03,5.11.0,,,,,,,,,5.12.0,,,,AMQP,,,,,0,,,,,,"[Amqp.Net Lite|https://amqpnetlite.codeplex.com/] has a set of self tests that work OK when run against a Qpidd 0.30 (proton 0.8) broker. However, when run against ActiveMQ 5.10 or 5.11 SNAPSHOT one self tests causes a batch of messages to get stuck in the broker.
The self test in question is [LinkTests.cs CloseBusyReceiver|https://amqpnetlite.codeplex.com/SourceControl/latest#test/Test.Amqp.NetMF/LinkTests.cs].

The test 
* opens a sender and receiver to node q1.
* sends 20 messages. 
* when the receiver receives the first message it closes the receiver and that causes an AMQP detach. 
* then the test opens a second receiver and tries to drain the 20 messages.
The test fails because the second receiver never receives anything. The AMQ web console shows the 20 messages in the queue. 

Running the test again without clearing the queue results in 40 messages in the queue and the self test fails because the first receiver never receives any messages and thus never closes the busy receiver. The first 20 messages jam that queue.

Also, the messages are not received by tools that normally work fine, like qpid-receive.

This effect is 100% repeatable.

Protocol trace file to be attached","broker: snapshot apache-activemq-5.11-20141022.222801-124-bin.tar.gz
Wed Oct 22 22:28:02 UTC 2014
host: Linux Fedora 19 x64
client: Amqp.Net Lite self tests",chug,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Nov/14 18:36;chug;lite_58_amq5.11_closeBusyReceiver_run_2_times.htm..htm;https://issues.apache.org/jira/secure/attachment/12681102/lite_58_amq5.11_closeBusyReceiver_run_2_times.htm..htm",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Apr 02 23:03:13 UTC 2015,,,,,,,,,,,"0|i22alr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Nov/14 18:36;chug;AMQP protocol trace of self test running twice. The command line was
{noformat}
mstest /testcontainer:.\bin\debug\test.amqp.net\test.amqp.net.dll ^
  /test:Test.Amqp.LinkTests.TestMethod_CloseBusyReceiver ^
  /detail:debugTrace
{noformat}
;;;","02/Apr/15 23:03;tabish;This is resolved with the recent addition of proper drain support and fixes to set lastDeliverSequenceId properly on receiver close.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
lack of link context when processing AMQP detach response results in NPE and stopping connection,AMQ-5431,12754555,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,robbie,robbie,11/Nov/14 19:57,25/Nov/14 09:44,14/Jul/23 05:44,25/Nov/14 09:44,5.10.0,,,,,,,,,5.11.0,,,,AMQP,,,,,0,,,,,,"When an AMQP 1.0 link (producer/consumer) is detached/closed by the broker with an error, clients must send a response Detach frame. If the link context was not set before the error occurred, this leads to the broker experiencing an NPE while processing the reply and then stopping the entire connection.

{noformat}
org.apache.activemq.transport.amqp.AmqpProtocolException: Could not process AMQP commands
	at org.apache.activemq.transport.amqp.AmqpProtocolConverter.onFrame(AmqpProtocolConverter.java:319)
	at org.apache.activemq.transport.amqp.AmqpProtocolConverter.onAMQPData(AmqpProtocolConverter.java:247)
	at org.apache.activemq.transport.amqp.AmqpTransportFilter.onCommand(AmqpTransportFilter.java:98)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.NullPointerException
	at org.apache.activemq.transport.amqp.AmqpProtocolConverter.processLinkEvent(AmqpProtocolConverter.java:359)
	at org.apache.activemq.transport.amqp.AmqpProtocolConverter.onFrame(AmqpProtocolConverter.java:303)
	... 6 more
{noformat}",,dejanb,robbie,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Nov/14 19:59;robbie;0001-AMQ-5431-prevent-NPE-when-a-Detach-frame-is-received.patch;https://issues.apache.org/jira/secure/attachment/12680859/0001-AMQ-5431-prevent-NPE-when-a-Detach-frame-is-received.patch",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Nov 25 09:44:53 UTC 2014,,,,,,,Patch Available,,,,"0|i228yf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Nov/14 19:59;robbie;Attaching trivial patch which resolves the issue and allows the broker to process the detach response.;;;","25/Nov/14 09:44;dejanb;Patch applied. Thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQMessageConsumer could run into NPE due to concurrent access to internal state,AMQ-5426,12753581,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,cshannon,michael_khw,michael_khw,07/Nov/14 01:13,06/Jul/16 15:08,14/Jul/23 05:44,05/Jul/16 20:11,5.10.0,5.8.0,5.9.1,,,,,,,5.13.4,5.14.0,,,JMS client,,,,,0,,,,,,"ActiveMQMessageConsumer could run into NPE when the consumer is closing and a message arrived at the same time.

Here is the stacktrace:
java.lang.NullPointerException
at org.apache.activemq.ActiveMQMessageConsumer.ackLater(ActiveMQMessageConsumer.java:979)
at org.apache.activemq.ActiveMQMessageConsumer.afterMessageIsConsumed(ActiveMQMessageConsumer.java:929)
at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:1323)
at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:131)
at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:202)
at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:129)
at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:47)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
at java.lang.Thread.run(Thread.java:745)",,cshannon,jira-bot,michael_khw,william.crowell,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5425,,,,,,,,,,,,,,,,,,,,,,,,"15/Nov/14 07:28;michael_khw;AMQ5426Test.java;https://issues.apache.org/jira/secure/attachment/12681718/AMQ5426Test.java",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jul 06 15:08:08 UTC 2016,,,,,,,,,,,"0|i2235j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Nov/14 01:14;michael_khw;Do we need to lock deliveredMessages on accessing pendingAck?;;;","15/Nov/14 07:20;michael_khw;Finally able to reproduce the NPE. Test attached.;;;","05/Jul/16 15:55;william.crowell;Any update on this?  ;;;","05/Jul/16 19:24;cshannon;This appears to have gotten lost in the shuffle.  I took a look and it is still broken. The test only fails for me sometimes (maybe one out of 10 runs) but I can see what the issue is.  I will fix it for 5.13.4 and 5.14.0;;;","05/Jul/16 20:07;jira-bot;Commit 6bfa13b6e707fb3465a9193cd44c478514fcd948 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=6bfa13b ]

https://issues.apache.org/jira/browse/AMQ-5426

Fixing a race condition in ActiveMQMessageConsumer that could cause a
NPE when the consumer is closing

Thanks to Michael Wong for providing the test case for this issue.
;;;","05/Jul/16 20:08;jira-bot;Commit 2ec32b67af3f494d65a076b32f71560168bb6ec9 in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=2ec32b6 ]

https://issues.apache.org/jira/browse/AMQ-5426

Fixing a race condition in ActiveMQMessageConsumer that could cause a
NPE when the consumer is closing

Thanks to Michael Wong for providing the test case for this issue.

(cherry picked from commit 6bfa13b6e707fb3465a9193cd44c478514fcd948)
;;;","05/Jul/16 20:11;cshannon;Fix has been applied and I also included a modified version of the test case provided to try and catch any issues in the future.   I modified the test to run a bit faster (takes about 10 seconds for me now) because in my testing if it was going to fail for that run it always failed within the first few seconds.  The test case only fails for me about 1/3 of the time before the fix was applied so it isn't perfect but it's better than nothing.;;;","05/Jul/16 20:38;jira-bot;Commit 3856c3999ac8a29171c09de99bd0e8bf9cdaff4e in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=3856c39 ]

Revert ""https://issues.apache.org/jira/browse/AMQ-5426""

This reverts commit 6bfa13b6e707fb3465a9193cd44c478514fcd948.
;;;","05/Jul/16 20:38;jira-bot;Commit c02bc648460059b6dbc201fa21b7ee0ce2445082 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=c02bc64 ]

https://issues.apache.org/jira/browse/AMQ-5426

Fixing a race condition in ActiveMQMessageConsumer that could cause a
NPE when the consumer is closing by only modifing pendingAck inside of
the deliveredMessagesMutex

Thanks to Michael Wong for providing the test case for this issue.
;;;","05/Jul/16 20:39;jira-bot;Commit 72c3a6d0b4e72ffce30d07b7395031152009fe53 in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=72c3a6d ]

Revert ""https://issues.apache.org/jira/browse/AMQ-5426""

This reverts commit 2ec32b67af3f494d65a076b32f71560168bb6ec9.
;;;","05/Jul/16 20:39;jira-bot;Commit 8812cb9b8e7c91647230e8479dc2aca8762d458a in activemq's branch refs/heads/activemq-5.13.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=8812cb9 ]

https://issues.apache.org/jira/browse/AMQ-5426

Fixing a race condition in ActiveMQMessageConsumer that could cause a
NPE when the consumer is closing by only modifing pendingAck inside of
the deliveredMessagesMutex

Thanks to Michael Wong for providing the test case for this issue.

(cherry picked from commit c02bc648460059b6dbc201fa21b7ee0ce2445082)
;;;","05/Jul/16 20:45;cshannon;I reverted the original fix as there was still a bit of a race condition in that it was possible an ack could be blown away or missed if the timer task for batch ack dispatch executed while a message was received.

The new fix is a lot simpler because it leverages the already existing deliveredMessages lock to protect the pendingAck variable and will make sure that everything is consistent.  ;;;","05/Jul/16 21:46;william.crowell;Christopher, thanks for the quick reply.  Do you happen to know the release date for 5.13.4 and 5.14.0?;;;","06/Jul/16 15:08;cshannon;5.14.0 might be a little while still but I'm hoping to do a 5.13.4 release next week.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
STOMP protocol converter tracks pending ACKS but doesn't remove the state once ACK'd,AMQ-5423,12753151,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,05/Nov/14 19:47,21/May/19 05:17,14/Jul/23 05:44,05/Nov/14 20:36,5.10.0,5.8.0,5.9.0,5.9.1,,,,,,5.11.0,,,,STOMP,,,,,0,,,,,,"The STOMP protocol converter tracks pending acks in order to suppress duplicate acks but it fails to properly clean up the state data once and ACK, NACK to TX completion event happens.  This results in a memory leak. ",,MarkWakefield,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-7211,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed May 23 23:19:47 UTC 2018,,,,,,,,,,,"0|i220lj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Nov/14 20:36;tabish;Fixed on trunk;;;","23/May/18 23:19;MarkWakefield;This fix only addressed the memory leak for Client-Individual mode but Client mode is still affected as multiple messages are acknowledged with a single ACK.  The single ACK is removed from memory but all the rest remain which grows over time until AMQ crashes or until the client session ends and all the pending ACKs are cleaned up at that point.  At the moment we are having to regularly restart our STOMP clients to prevent the memory leak from causing a crash.

Can you please reopen this and fix the leak for Client mode as well.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Windows bat script doesn't work when run from a directory with spaces,AMQ-5422,12752894,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,jfugitt,jfugitt,04/Nov/14 23:02,04/Apr/16 18:34,14/Jul/23 05:44,04/Apr/16 18:34,5.10.0,,,,,,,,,5.14.0,,,,Broker,,,,,0,,,,,,"When you attempt to run ActiveMQ on Windows with the activemq.bat file from a directory with spaces (ex: ""C:\Program Files""), you get JVM related error about main class not found.  The problem is that one of the -D values in the ACTIVEMQ_OPTS line needs to have double quotes around it.  Will attach a patch to fix the problem.",,jfugitt,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6213,,,,,,,,,,,,,,,,,,,,,,,,"04/Nov/14 23:04;jfugitt;AMQ5422.patch;https://issues.apache.org/jira/secure/attachment/12679354/AMQ5422.patch",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Nov 04 23:04:21 UTC 2014,,,,,,,,,,,"0|i21z0v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Nov/14 23:04;jfugitt;Patch to fix windows bat problem.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AbortSlowAckConsumerStratagy can cause errors due to concurrent access to internal state,AMQ-5421,12752840,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,04/Nov/14 20:45,04/Nov/14 21:15,14/Jul/23 05:44,04/Nov/14 21:15,5.10.0,5.9.1,,,,,,,,5.11.0,,,,Broker,,,,,0,,,,,,When there are destinations being created and destroyed concurrently such as temp queue instances it is possible to get into a concurrent modification state during updates of the AbortSlowAckConsumerStrategy instance.  ,,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Nov 04 21:15:08 UTC 2014,,,,,,,,,,,"0|i21yov:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Nov/14 21:15;tabish;Fixed on trunk;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Use correct classloader in TaskRunnerFactory,AMQ-5417,12751349,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,29/Oct/14 10:26,29/Oct/14 10:35,14/Jul/23 05:44,29/Oct/14 10:35,5.10.0,,,,,,,,,5.11.0,,,,,,,,,0,,,,,,"TaskRunnerFactory's default executor is initialised when the first task is executed. It's also given the ThreadFactory object, which is used to create threads for the thread pool. The issue with this is when the first task is initiated from the vm transport in osgi environment, we can have transport connector threads for other transport executed in the wrong classpath. This could lead to various problems afterwards. There needs to be a way to provide the desired classloader for those threads",,dejanb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Oct 29 10:35:34 UTC 2014,,,,,,,,,,,"0|i21pof:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/Oct/14 10:35;dejanb;Fixed with http://git-wip-us.apache.org/repos/asf/activemq/commit/dffccb1c;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQP test client delivery/redelivery anomoly,AMQ-5413,12750445,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,chug,chug,24/Oct/14 20:15,27/May/15 15:32,14/Jul/23 05:44,27/May/15 15:32,5.11.0,,,,,,,,,5.12.0,,,,AMQP,Broker,,,,0,,,,,,"Using Apache Qpid test clients qpid-send and qpid-receive ActiveMQ broker behaves differently from qpidd and I'm wondering if the difference is important.

The test code command lines are:
{noformat}
qpid-send -a ""chuck; {create:always}"" --connection-options {protocol:amqp1.0} --sequence yes --content-string 0
qpid-receive -a chuck -m 1 --connection-options ""{protocol:amqp1.0}"" --print-headers yes
{noformat}

When I run the tests against qpidd they send one message and receive one message every time. However against ActiveMQ 5.11 the qpid-receive does not receive the message until one of several conditions:
* the qpid-receive command also includes ""--timeout 1""
* the qpid-receive command is repeated several, possibly dozens, of times.

When qpidd broker is running or when activemq is running and --timeout is specified then the qpid-receive output is:
{noformat}
chug@FJELD ~> qpid-receive -a chuck -m 1 --connection-options ""{protocol:amqp1.0}"" --print-headers yes
Properties: {sn:1, ts:1414177685195174548, x-amqp-first-acquirer:True}

0
{noformat}

However, activemq running the client twice without the timeout and once with the timeout looks like this:
{noformat}
chug@FJELD ~> qpid-receive -a chuck -m 1 --connection-options ""{protocol:amqp1.0}"" --print-headers yes
chug@FJELD ~> qpid-receive -a chuck -m 1 --connection-options ""{protocol:amqp1.0}"" --print-headers yes
chug@FJELD ~> qpid-receive -a chuck -m 1 --connection-options ""{protocol:amqp1.0}"" --print-headers yes --timeout 1
Redelivered: true
Properties: {sn:1, ts:1414178091185765136, x-amqp-delivery-count:1}

0
{noformat}

The false receive attempts make the message look like it was already delivered, hence the Redelivered: true, first-acquirer absent and the x-amqp-delivery-count setting.

Views of the protocol interactions between the brokers and clients are here:
http://people.apache.org/~chug/adverb_qpid_send_receive_1/

I ran the tests twice on ActiveMQ with the tcpnodelay option turned on and off but that didn't seem to make any difference.","broker: snapshot apache-activemq-5.11-20141022.222801-124-bin.tar.gz 	
  Wed Oct 22 22:28:02 UTC 2014
host: Linux Fedora 19 x64
clients: Apache Qpid C++ messaging qpid-send qpid-receive (current trunk)
protocol: AMQP 1.0",chug,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5453,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed May 27 15:32:05 UTC 2015,,,,,,,,,,,"0|i21k6v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Oct/14 20:49;chug;I believe that the broker is mishandling the Flow performative 'drain' flag. Referring to trace http://people.apache.org/~chug/adverb_qpid_send_receive_1/qpid-send-receive_activemq-5.11_nodelay_1.html the following flow exchange happens:
{noformat}
◊  ◊◊  Frame 97  127.0.0.1:38598  -> 127.0.0.1:5672  10.422229 flow [0,0] (0,1000)   (drain=false)
◊  ◊◊  Frame 98  127.0.0.1:38598  -> 127.0.0.1:5672  10.422252 flow [0,0] (0,1000)   (drain=true)
◊  ◊◊  Frame 100  127.0.0.1:38598 <-  127.0.0.1:5672  10.423470 flow [0,0] (1000,0)
◊  ◊◊  Frame 101  127.0.0.1:38598  -> 127.0.0.1:5672  10.423595 flow [0,0] (1000,1000)
◊  ◊◊  Frame 102  127.0.0.1:38598 <-  127.0.0.1:5672  10.423810 flow [0,0] (2000,0)
{noformat}
The client sends two closely spaced flow messages to the broker. They are identical except that the drain flag is false in Frame 97 but true in Frame 98. The broker responds in Frame 100 by advancing the delivery count to 1000 to drain the available credit.  Frames 101 and 102 are a repeat of the flow-with-drain from the client followed by the broker effecting the drain with an advanced delivery count.

The protocol error is that by AMQP 1.0 the sender receiving a flow with drain=true SHOULD send all available messages before advancing the delivery count to effect the drain.

Just a guess here but the broker looks like it starts to form a delivery for the message it has in the queue but can't deliver it because the drain behavior kicked in. That's why when the client finally gets the message it is 'redelivered'.

Since the behavior is marked with SHOULD and not with MUST then the drain behavior is probably acceptable. However, if the drain bypasses available messages then a user might expect that the messages would finally be delivered with Redelivered=false. ;;;","02/Apr/15 23:00;tabish;This is resolved with the addition of proper drain support.  ;;;","27/May/15 15:28;tabish;Found an issue with the credit handling after drain completes.;;;","27/May/15 15:32;tabish;Additional fix and tests added;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"With prefetch 0, Spring Default Message Listener Shutdown never ends",AMQ-5409,12750323,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,Wawan,Wawan,24/Oct/14 09:44,26/Aug/15 10:08,14/Jul/23 05:44,26/Aug/15 10:08,5.10.0,5.9.1,,,,,,,,,,,,Broker,,,,,1,,,,,,"When prefetch is set to 0, the shutdown of a Spring Default Message Listener never ends. We think there is a deadlock.

This does not occur when prefetch is 1 or when we set a TransactionManager in the Spring Default Message Listener.

DeadLock :

""jmsContainer-4@2020"" prio=5 tid=0x14 nid=NA waiting
  java.lang.Thread.State: WAITING
	  at java.lang.Object.wait(Object.java:-1)
	  at java.lang.Object.wait(Object.java:485)
	  at org.apache.activemq.SimplePriorityMessageDispatchChannel.dequeue(SimplePriorityMessageDispatchChannel.java:90)
	  at org.apache.activemq.ActiveMQMessageConsumer.dequeue(ActiveMQMessageConsumer.java:478)
	  at org.apache.activemq.ActiveMQMessageConsumer.receive(ActiveMQMessageConsumer.java:629)
	  at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveMessage(AbstractPollingMessageListenerContainer.java:430)
	  at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:310)
	  at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:263)
	  at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1102)
	  at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:996)
	  at java.lang.Thread.run(Thread.java:662)


""Thread-0@594"" prio=5 tid=0xb nid=NA waiting
  java.lang.Thread.State: WAITING
	  at java.lang.Object.wait(Object.java:-1)
	  at java.lang.Object.wait(Object.java:485)
	  at org.springframework.jms.listener.DefaultMessageListenerContainer.doShutdown(DefaultMessageListenerContainer.java:543)
	  at org.springframework.jms.listener.AbstractJmsListeningContainer.shutdown(AbstractJmsListeningContainer.java:237)
	  at com.testprefetch.PrefetchTest.startAndStopContainer(PrefetchTest.java:43)
	  at com.testprefetch.PrefetchTest.testStopDMLCPrefetch0(PrefetchTest.java:15)
	  at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-1)
	  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	  at java.lang.reflect.Method.invoke(Method.java:597)
	  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	  at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)

This could be related with method org.apache.activemq.ActiveMQMessageConsumer#receive(long) :

            if (info.getPrefetchSize() == 0) {
                md = dequeue(-1); // We let the broker let us know when we timeout.
            } else {
                md = dequeue(timeout);
            }


Issue present in versions : 
	ActiveMQ 5.9.1, 5.10.0
	Springframework 3.2.8.RELEASE, 4.0.5.RELEASE
",Ubuntu 13.10 64Bits,gtully,shpelda2,Wawan,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Oct/14 12:17;Wawan;PrefetchTest.java;https://issues.apache.org/jira/secure/attachment/12676893/PrefetchTest.java","24/Oct/14 12:17;Wawan;SimpleMessageListener.java;https://issues.apache.org/jira/secure/attachment/12676894/SimpleMessageListener.java","24/Oct/14 12:17;Wawan;testPrefetch_0_Deadlock.appctx.xml;https://issues.apache.org/jira/secure/attachment/12676895/testPrefetch_0_Deadlock.appctx.xml","24/Oct/14 12:17;Wawan;testPrefetch_0_WithTransactionManager.appctx.xml;https://issues.apache.org/jira/secure/attachment/12676896/testPrefetch_0_WithTransactionManager.appctx.xml","24/Oct/14 12:17;Wawan;testPrefetch_1.appctx.xml;https://issues.apache.org/jira/secure/attachment/12676892/testPrefetch_1.appctx.xml","18/Aug/15 13:49;shpelda2;testprefetch.tgz;https://issues.apache.org/jira/secure/attachment/12751037/testprefetch.tgz",,,,6.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Aug 26 10:07:41 UTC 2015,,,,,,,,,,,"0|i21jfz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Aug/15 13:49;shpelda2;Struggling with problem with same symptoms, successfuly reproduced the problem with the testcase. 
Re-attaching testcase packed nicely into maven project, with enabled logging to just unpack and execute.
 ;;;","19/Aug/15 09:04;gtully;this is by design. onMessage and prefetch=0 are not friends. why do you need prefetch 0 and not 1?;;;","24/Aug/15 09:03;shpelda2;In my usecase i do use the queue to distribute the work across the cluster. There is low amount of messages that take long time to process. So i want them to be processed in maximum paraleism. So i do not want individual consumers to cache message while processing other one (prefetch=1) from queue as this causes other threads to lack for work.;;;","24/Aug/15 10:19;gtully;I think you have another option, use a client transaction (so  a transacted session) and use destination policy entry usePrefetchExtension=false on the broker for the destination in question. In this way you can have a prefetch of 1, and only one message will get dispatched till the consuming transaction commits.
With the default usePrefetchExtension=true, when the first message is delivered to the consumer another gets queued up.;;;","26/Aug/15 10:07;Wawan;This option suits our needs, I close the JIRA;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TransportConnector nio+ssl ignores transport.enabledProtocols settings,AMQ-5407,12749889,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,briancain,briancain,22/Oct/14 21:25,24/Oct/14 16:13,14/Jul/23 05:44,23/Oct/14 19:05,,,,,,,,,,5.11.0,,,,,,,,,0,,,,,,"If you are using nio+ssl and try to set specific protocols (i.e. TLS and not SSLv3) for openwire and or stomp with ssl, NIO will ignore those settings and allow SSLv3 anyway.

Setting specific transport protocols for activemq in my activemq.xml file:

{noformat}
<transportConnectors>
<transportConnector name=""openwire"" uri=""nio+ssl://0.0.0.0:61616?transport.enabledProtocols=TLSv1,TLSv1.1,TLSv1.2"">
</transportConnector>
<transportConnector name=""stomp+ssl"" uri=""stomp+nio+ssl://0.0.0.0:61613?transport.enabledProtocols=TLSv1,TLSv1.1,TLSv1.2"">
</transportConnector>
{noformat}

After changing this, I restarted activemq to ensure that those protocols were set correctly.

With this setting in activemq.xml, activemq should not be able to do a successful SSLv3 handshake, however using s_connect with openssl, I am able to get activemq to respond with SSLv3:

{noformat}
###########
# command run: openssl s_client -ssl3 -connect hostname.com:61616
###########

###########
# this is what should be displayed
###########
CONNECTED(00000003)
139975367284552:error:14094410:SSL routines:SSL3_READ_BYTES:sslv3 alert handshake failure:s3_pkt.c:1256:SSL alert number 40
139975367284552:error:1409E0E5:SSL routines:SSL3_WRITE_BYTES:ssl handshake failure:s3_pkt.c:596:
---
no peer certificate available
---
No client certificate CA names sent
---
SSL handshake has read 7 bytes and written 0 bytes
---
New, (NONE), Cipher is (NONE)
Secure Renegotiation IS NOT supported
Compression: NONE
Expansion: NONE
SSL-Session:
    Protocol  : SSLv3
    Cipher    : 0000
    Session-ID:
    Session-ID-ctx:
    Master-Key:
    Key-Arg   : None
    Krb5 Principal: None
    PSK identity: None
    PSK identity hint: None
    Start Time: 1414003656
    Timeout   : 7200 (sec)
    Verify return code: 0 (ok)
---
###########
# this is what is actually shown
###########


CONNECTED(00000003)
depth=0 CN = puppetmaster.local
verify error:num=20:unable to get local issuer certificate
verify return:1
depth=0 CN = puppetmaster.local
verify error:num=27:certificate not trusted
verify return:1
depth=0 CN = puppetmaster.local
verify error:num=21:unable to verify the first certificate
verify return:1
---
Certificate chain
 0 s:/CN=puppetmaster.local
   i:/CN=Puppet CA generated on puppetmaster.local at 2014-10-22 11:20:52 -0700
---
Server certificate
-----BEGIN CERTIFICATE-----
MIIFyzCCA7OgAwIBAgIBAjANBgkqhkiG9w0BAQsFADBRMU8wTQYDVQQDDEZQdXBw
ZXQgQ0EgZ2VuZXJhdGVkIG9uIHB1cHBldG1hc3Rlci5sb2NhbCBhdCAyMDE0LTEw
LTIyIDExOjIwOjUyIC0wNzAwMB4XDTE0MTAyMTE4MjA1N1oXDTE5MTAyMTE4MjA1
N1owHTEbMBkGA1UEAwwScHVwcGV0bWFzdGVyLmxvY2FsMIICIjANBgkqhkiG9w0B
AQEFAAOCAg8AMIICCgKCAgEAyehXPWPLEuNkvvl0PHbz5cIbg4i7v51P0FzYfxR7
sUt4455c4htfVpvEmWc1Ef5HD2MFViIAHorDMeGzNY2kAaX6xK2JVNhi8m8EJF7L
C0LncN59p/DIc5XBl6fFGu8FGaEZ1wvRSOyitcsWCk5Gk8Oi8w56/xV7WVJJ1Lch
PV62TZbKqDT8Ah/VcfIaCCWVCAB59/kIIGPJ8eI3aLdQv3f5h89ETiTr4yLtd1xm
z25qqPV2JZIh1yAGBCjBGsE6L41eyckZy9Tl1JZaDTRfOiXK6SkaK8NTNNbuXeQT
GkLusxpUL+FmisiH1ikazKZkyRuA0vMyQiakgUleVtACt4x+oLJ9askf5nx36wGu
HcU5kaIuy2d8cLq2CD+FKLOdH10+KiMlxCtHny4pY15LIzs3F1wjqoeLwpcoQwoM
57Qnef8UNV0sQGlp/HkSxnhDwXh5mrXGLkpi11glTx4CIs7Yz8s7yC1FCvw8/wAi
3oDrmSAgidZXKd0MT+PT+4PTDHbC+p2TG6noX+GnrAjhKFKWyw31ue9pUMX/X2Az
ExXiLFw2+zH+YsMNvHdTq4BM7G3s0tgQD3UQkWkDPk+0R3X14WDFTGUZ7oEb6Q+o
/R+SE8W/rEwRw/O2tE6Xq063DyB4EYI+bVojpwtqOwyCNkbbC5aNnraUWfuXMWJB
oqECAwEAAaOB4TCB3jA1BglghkgBhvhCAQ0EKFB1cHBldCBSdWJ5L09wZW5TU0wg
SW50ZXJuYWwgQ2VydGlmaWNhdGUwJQYDVR0RBB4wHIIGcHVwcGV0ghJwdXBwZXRt
YXN0ZXIubG9jYWwwDgYDVR0PAQH/BAQDAgWgMCAGA1UdJQEB/wQWMBQGCCsGAQUF
BwMBBggrBgEFBQcDAjAMBgNVHRMBAf8EAjAAMB0GA1UdDgQWBBQSS72jRveOqBkQ
TbLxTT2j5DWLPDAfBgNVHSMEGDAWgBRKtJ+dt+VxU6IwhHMYMAY78E7BOTANBgkq
hkiG9w0BAQsFAAOCAgEATFMfxi1jFbnvTxiArZrL0RsA2mgBoU3p6gYhthmBWfzz
7OscRacWx7CvBXGdKi3oc2uyNVIsazS30Yw5vcfoTqUAT9TdsDLMf10h9AYp15ut
K1ebZUc9OIf00+zF/IT/+CFXM9eKzgBxs6fKUKCKngI+kDYRD+h5qmAhUCeAAR9B
+3kb8UV064Nlmla+x4zOZBzb+VSMWKSet/Sv4pMHusX2+ICvy0cRwwKmaVTzQVDS
uTNlElYUM0xRXb10tS95j4S7MSYkKu2VHLD5F5LB8KxjhCcorwa323DnCQkywJLQ
3S1UUH3recjoLeD9Huj8+EL7uEvQdloRPbS/2cWFKkJgXYc5t7yC7Dp8qKNzTuNy
COp68xunNPHh/JcS3wo4F/H7t2ve5IFnca4H/kSvLQWOQzmLfOrNhkn6ZJkqqGMo
zf2LHVvJpfAUV6ezR1O0i70GR3YkNIijok14WMinDOXN98VLMp0j9zWm5aBF5Chg
zRFIvrvz/NbwMtawZ/QD/B+kOolfKCNku9xkQ6wrHj6GikH4GYwWzfTZmpaOE4GC
Dm8Axn5Ax+psLO10N4xwSxeB/zzygD4wDsQxP0kRg6lFIVQgfKmaJA07IcotCL9p
M4ugQDGnWAjzBRqbvh5x37dc15C8F3fluSxC4yq5jv0EVeXooZISigG6Sr3rhpE=
-----END CERTIFICATE-----
subject=/CN=puppetmaster.local
issuer=/CN=Puppet CA generated on puppetmaster.local at 2014-10-22 11:20:52 -0700
---
No client certificate CA names sent
---
SSL handshake has read 2474 bytes and written 322 bytes
---
New, TLSv1/SSLv3, Cipher is DHE-RSA-AES256-SHA
Server public key is 4096 bit
Secure Renegotiation IS supported
Compression: NONE
Expansion: NONE
SSL-Session:
    Protocol  : SSLv3
    Cipher    : DHE-RSA-AES256-SHA
    Session-ID: 5447F9BA158D679AE17BAD85A384B43C5B1EE597F7F0AAC01418156FC9E08924
    Session-ID-ctx:
    Master-Key: 96B8081CB3EC675CF2CDD0546435760871491908C10E36E8ECA622155FFE4CAA0F851DC95F63C2C476727EDC985B2DD7
    Key-Arg   : None
    Krb5 Principal: None
    PSK identity: None
    PSK identity hint: None
    Start Time: 1414003130
    Timeout   : 7200 (sec)
    Verify return code: 21 (unable to verify the first certificate)
---
�ActiveMQ
�
        MaxFrameSize�������  CacheSize
                                         CacheEnabledSizePrefixDisabled MaxInactivityDurationInitalDelay'TcpNoDelayEnabledMaxInactivityDurationu0TightEncodingEnabledStackTraceEnabled
{noformat}

Removing nio from both the stomp and openwire transport connector settings (and restarting activemq) actually removes the ability to talk over SSLv3 using the technique I posted before, however putting nio back in ignores those transport connector settings and allows SSLv3.",Using ActiveMQ 5.9.0,briancain,tabish,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Oct 24 16:13:48 UTC 2014,,,,,,,,,,,"0|i21gtb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Oct/14 19:05;tabish;Added matching option for the NIO+SSL case, and the various subclasses such as STOMP+NIO+SSL etc. ;;;","24/Oct/14 16:13;briancain;[~tabish121] - thank you for such a quick response and fix! Do you have any time frame for when AMQ 5.11.0 will be released? ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LevelDB files not being released after deletion,AMQ-5404,12749461,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,jamm666,jamm666,21/Oct/14 08:53,16/Feb/16 15:57,14/Jul/23 05:44,21/Dec/15 16:43,,,,,,,,,,5.13.2,5.14.0,,,,,,,,1,,,,,,"During numerous test runs we've seen the file system fill up (df -k) and eventually ActiveMQ failing with a short write error.  When ActiveMQ falls over the file system is freed up to its original state. 

Before ActiveMQ falls over we've tried to find the reason for the file system filling up by hunting through the directories but to no avail.  However when we do a lsof -a +L1 we can see numerous deleted LevelDB log and index files.   

Does anybody know why ActiveMQ/LevelDB is not releasing these files for full clear up by the OS. 

This is on 
Red Hat Linux 6.4 
ActiveMQ 5.10 
Java 1.7.0_45 ",,jamm666,jira-bot,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4684,AMQ-5430,AMQ-4810,AMQ-5817,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Feb 16 15:55:39 UTC 2016,,,,,,,,,,,"0|i21e7b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Dec/15 15:57;chirino;LevelDB is keeping a log file read cache sized to 100.  On a file delete, it's not taking it out of the cache.;;;","21/Dec/15 16:18;jira-bot;Commit 9de3fff1f5c7741e8b22d821aadc4225cd3500a4 in activemq's branch refs/heads/master from [~chirino]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=9de3fff ]

Fixes AMQ-5404: LevelDB files not being released after deletion;;;","16/Feb/16 15:55;jira-bot;Commit da45634e442dce0d60cb029ff1232c3ae5ec4a8b in activemq's branch refs/heads/activemq-5.13.x from [~chirino]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=da45634 ]

Fixes AMQ-5404: LevelDB files not being released after deletion
(cherry picked from commit 9de3fff1f5c7741e8b22d821aadc4225cd3500a4)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
remove extra expiration and timestamp manipulaton which will cause problems,AMQ-5403,12749236,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,robbie,robbie,20/Oct/14 12:41,20/Oct/14 13:57,14/Jul/23 05:44,20/Oct/14 13:57,,,,,,,,,,5.11.0,,,,AMQP,,,,,0,,,,,,"Once the incoming AMQP message has been converted to a JMS message, there may be some further manipulation performed on the expiration and timestamp in AmqpProtocolConverter:

{noformat}
  // Lets handle the case where the expiration was set, but the timestamp
  // was not set by the client. Lets assign the timestamp now, and adjust
  // the expiration.
  if (message.getExpiration() != 0) {
      if (message.getTimestamp() == 0) {
      message.setTimestamp(System.currentTimeMillis());
      message.setExpiration(message.getTimestamp() + message.getExpiration());
      }
  }
{noformat}

This was added in AMQ-5002 as a workaround for a problem in some old message conversation code contributed to 'proton-jms', where the JMSExpiration value was being set to the TTL value from the AMQP message when these actually have different semantics and values. That defect was since resolved via PROTON-474 for inclusion in Proton 0.8. Now that AMQ-5346 is underway, that means we are using the updated proton-jms code and the workaround must be removed otherwise it causes various issues itself:

- It may set a timestamp value where none existed, which could lead to addition of a creation-time field on outbound AMQP messages, whereas the Properties section of the AMQP message is meant to be immutable.
- When setting JMSExpiration to 'new timestamp + old expiration', if the expiration was actually based on the absolute-expiry-time field of the incoming AMQP message then the new JMSExpiration value will be incorrect, much higher than actually requested and preventing the messages from expiring for years longer.",,robbie,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5002,AMQ-5346,PROTON-474,,,,,,,,,"20/Oct/14 12:44;robbie;0001-AMQ-5403-remove-old-expiration-workaround-it-is-no-l.patch;https://issues.apache.org/jira/secure/attachment/12675818/0001-AMQ-5403-remove-old-expiration-workaround-it-is-no-l.patch",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Oct 20 13:57:20 UTC 2014,,,,,,,,,,,"0|i21csf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Oct/14 12:44;robbie;Attaching patch to remove the relevant code.;;;","20/Oct/14 13:57;tabish;Patch applied, thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQP transport handling of durable consumer unsubscribe if incorrect,AMQ-5401,12748945,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,17/Oct/14 18:56,17/Oct/14 18:59,14/Jul/23 05:44,17/Oct/14 18:59,5.10.0,,,,,,,,,5.11.0,,,,AMQP,,,,,0,,,,,,When a durable topic subscription unsubscribe request is handled errors can occur if the caller tries to remove an active durable subscription or the subscription does not exist.  Currently we mark the sender open with an error condition but don't close the broker side which can lead to the client not noticing the error and attempting to complete the unsubscribe operation.  ,,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Oct 17 18:59:35 UTC 2014,,,,,,,,,,,"0|i21b0f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Oct/14 18:59;tabish;fixed on trunk;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to keep message order using ActiveMQ-RAR ,AMQ-5400,12748888,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,smil,smil,17/Oct/14 13:47,16/Jul/15 11:40,14/Jul/23 05:44,16/Jul/15 11:40,5.10.0,5.9.0,,,,,,,,5.12.0,,,,,,,,,0,,,,,,"We have an application server which processes the messages using an MDB.  We are using message grouping to keep the message processing order.

It seems that it is not possible to do this, because in case the onMessage signals rollback, then the queue does not block until the redelivery time, but keeps on dispatching.

ActiveMQSession.java method afterRollback() @938 is triggered in this case. Which will redeliver the message by scheduling it:

connection.getScheduler().executeAfterDelay(new Runnable() {

                                    @Override
                                    public void run() {
                                        ((ActiveMQDispatcher)md.getConsumer()).dispatch(md);
                                    }
                                }, redeliveryDelay);

The session is not blocked or otherwise stopped from processing more messages, so it does it.

Setting prefetch=1 for the consumer did not helped.
I have maxSessions=1 in the activationSpec.
",JBoss EAP6 + ActiveMQ 5.10.0,andytaylor,gtully,jira-bot,lichtin,smil,tmielke,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Oct/14 20:09;smil;block-session-until-redelivery.patch;https://issues.apache.org/jira/secure/attachment/12676410/block-session-until-redelivery.patch",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jul 16 11:39:41 UTC 2015,,,,,,,Patch Available,,,,"0|i21anz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Oct/14 18:10;smil;Hi,

I've provided a patch which blocks the session for the time of the redelivery. It honours the isNonBlockingRedelivery flag of the connection so it can be turned off. As blocking redelivery is the default this should not be a problem.

Cheers,

Tamas;;;","08/Jun/15 14:42;andytaylor;Ive reviewed your patch Tamas and it looks fine, i'll get it committed with a couple of tests ive added;;;","08/Jun/15 15:08;andytaylor;fixed with https://github.com/apache/activemq/commit/c9a3202bc3b526bdf65f239dad68f555d7b83df1;;;","16/Jul/15 11:37;gtully;a typo in the new redelivery guard has introduced a static - stopping parallel delivery.;;;","16/Jul/15 11:39;jira-bot;Commit c85c7c14720dffeb44633547db540533796a8388 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=c85c7c1 ]

AMQ-5400 - rework to remove static lock - impacted parallel delivery and hense performance. Fix and additional tet
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MQTT - out of order acks,AMQ-5399,12748879,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,17/Oct/14 12:39,20/Oct/14 14:43,14/Jul/23 05:44,17/Oct/14 12:41,5.10.0,,,,,,,,,5.11.0,,,,MQTT,,,,,0,,,,,,"As different QoS messages are acked at different points, we can get in the situation where broker gets message acks out of order, leading to exceptions like

{code}javax.jms.JMSException: Unmatched acknowledge: MessageAck {commandId = 0, responseRequired = false, ackType = 2, consumerId = ID:mac.fritz.box-62188-1412945008667-1:3:-1:1, firstMessageId = null, lastMessageId = ID:mac.fritz.box-62188-1412945008667-1:2:-1:1:2, destination = topic://xxx, transactionId = null, messageCount = 1, poisonCause = null}; Expected message count (1) differs from count in dispatched-list (2){code}

The same situation can occur in heavy load environments. The root of the problem is that we send back standard acks which should be in order. As we really ack message by message we should be using individual acks in mqtt filter.",,dejanb,tmielke,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Oct 20 14:43:32 UTC 2014,,,,,,,,,,,"0|i21alz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Oct/14 12:41;dejanb;Fixed with http://git-wip-us.apache.org/repos/asf/activemq/commit/28b45341;;;","20/Oct/14 14:43;tmielke;I can confirm the bug is fixed on latest 5.11-SNAPSHOT.
Thx Dejan!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Linkstealing causes deadlock when old client disconnects before link stealing adds the connection,AMQ-5396,12748453,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,sai.boorlagadda@gmail.com,sai.boorlagadda@gmail.com,15/Oct/14 23:31,20/Oct/14 23:08,14/Jul/23 05:44,20/Oct/14 23:08,5.11.0,,,,,,,,,5.11.0,,,,Broker,,,,,0,,,,,,"During link stealing in progress if the old client(or connection) issues a disconnect can cause a deadlock due the order in which the locks are obtained on RegionBroker.addConnection and TransportConnection.processRemoveConneciton.
",,sai.boorlagadda@gmail.com,tabish,workanandr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Oct/14 02:26;sai.boorlagadda@gmail.com;jstack.txt;https://issues.apache.org/jira/secure/attachment/12675416/jstack.txt","17/Oct/14 00:41;sai.boorlagadda@gmail.com;linkstealing-deadlock.patch;https://issues.apache.org/jira/secure/attachment/12675396/linkstealing-deadlock.patch",,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Oct 20 23:08:02 UTC 2014,,,,,,,Patch Available,,,,"0|i2182v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Oct/14 00:43;sai.boorlagadda@gmail.com;attached the jstack which shows the deadlock;;;","17/Oct/14 22:50;workanandr;Test case to reproduce this (with Mqtt Paho client lib):

* In the broker source, in activemq-broker/src/main/java/org/apache/activemq/broker/region/RegionBroker.java add sleep between the 2 lines in function addConnection() as shown below:
{noformat}
                            TransportConnection transportConnection = (TransportConnection) connection;
                             Thread.sleep(30000);
                             transportConnection.stopAsync();
{noformat}

* Run the broker
* Run the following test case:
{noformat}
    @Test
    public void testLinkStealingDeadlock2() throws MqttException, InterruptedException
    {
        MqttClient client1 = new MqttClient(""tcp://localhost:1883"", ""client1"");

        client1.connect();

        Thread thread = new Thread(new Runnable() {
            @Override
            public void run() {
                try {
                    System.out.println(""Connecting client 2...."");
                    MqttClient client2 = new MqttClient(""tcp://localhost:1883"", ""client1""); // should be same client id
                    client2.connect();
                    System.out.println(""Done connecting client2"");
                } catch (MqttException e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                }
            }
        });
        thread.start(); 
        Thread.sleep(2000);
        System.out.println(""Disconnecting client1..."");
        client1.disconnect();

        System.out.println(""Connecting client3..."");
        MqttClient client3 = new MqttClient(""tcp://localhost:1883"", ""client3"");
        client3.connect();

        System.out.println(""Client3 connected"");

        client3.disconnect();


        Thread.sleep(120*1000);
        Assert.assertTrue(true);
    }
{noformat}

* Run jstack on the JVM
;;;","20/Oct/14 23:08;tabish;Reviewed the patch a bit and it looks good.  The old context can be safely used outside the sync block as the stopAsync is thread safe and will only run once so if the owning connection closes first it will be fine.  I tweaked the patch a bit to avoid the log output when old context is null, as that would spam the logs.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AmqpJMSVendor clips destination names if no prefix set,AMQ-5395,12748062,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,14/Oct/14 15:45,14/Oct/14 15:48,14/Jul/23 05:44,14/Oct/14 15:48,5.10.0,,,,,,,,,5.11.0,,,,AMQP,,,,,0,,,,,,When a client populates the To field of a message but is not using destination prefix values the AmqpJMSVendor is incorrectly trimming the first two characters from the destination name.,,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Oct 14 15:48:38 UTC 2014,,,,,,,,,,,"0|i215qv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Oct/14 15:48;tabish;Fixed on trunk;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect handling of duplicate update message commands in KahaDB can lead to broker startup errors,AMQ-5394,12748048,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,jfugitt,jfugitt,14/Oct/14 14:37,18/Jun/15 19:58,14/Jul/23 05:44,24/Oct/14 13:43,5.10.0,,,,,,,,,5.11.0,,,,Message Store,,,,,0,,,,,,"When using the new (in 5.10) persistJMSRedelivered option to make sure all duplicates are marked as redelivered (the activemq.xml config file used <policyEntry queue="">"" persistJMSRedelivered=""true""></policyEntry>), we occasionally had a broker fail to start up with the following error:

2014-10-07 17:31:15,117 | ERROR | Looking for key 7 but not found in fileMap: {8=db-8.log number = 8 , length = 9132256} | org.apache.activemq.store.kahadb.disk.journal.Journal | main

2014-10-07 17:31:15,117 | ERROR | Failed to start Apache ActiveMQ ([broker0, null], java.io.IOException: Could not locate data file /local/temp/apache-activemq-5.10.0/data/kahadb/db-7.log) | org.apache.activemq.broker.BrokerService | main


The root cause seems to be when KahaDB processes a ""duplicate"" update message command or if it processes an update message command after the message has been removed from kahadb.  The code in KahaDB logs a warning when this occurs from the following else statement and then updates the metadata location and then exits the function as shown below:

...
} else {
            LOG.warn(""Non existent message update attempt rejected. Destination: {}://{}, Message id: {}"", command.getDestination().getType(), command.getDestination().getName(), command.getMessageId());
        }
metadata.lastUpdate = location;
...

It turns out that the metadata.lastUpdate = location; line should not run if we took the else branch above so the simple fix is to move that line up into the if block so that it will not run after the log warning.  Once we did that, we no longer see the broker startup errors.  Note that this log warning does not always lead to a broker startup error as it is also related to writing at the end of a transaction log file or the checkpoint timer interval so it is not simple to reproduce but we have not see the startup error once the metadata.lastUpdate line was moved to the correct location.

A patch will be provided to show the change.",,gtully,jfugitt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5695,,,,,,,,,,,,,,"16/Oct/14 18:18;jfugitt;AMQ5394.patch;https://issues.apache.org/jira/secure/attachment/12675318/AMQ5394.patch","14/Oct/14 14:39;jfugitt;AMQ5394.patch;https://issues.apache.org/jira/secure/attachment/12674775/AMQ5394.patch",,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Oct 24 13:43:37 UTC 2014,,,,,,,,,,,"0|i215nz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Oct/14 17:24;jfugitt;After further testing, it looks like the metadata.lastUpdate location in KahaDB is being set incorrectly in more places than just the function that handles update message (the add message and remove message functions also appear to have branches where this can happen).  A more complete patch will be needed to catch all the cases where this could occur.;;;","16/Oct/14 18:18;jfugitt;Updated patch to fix add/update/remove message command in KahaDB that incorrectly sets metadata lastUpdate location in places.;;;","24/Oct/14 13:43;gtully;patch applied with thanks :-);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MQTTCodec headerParser - not reducing readSize if nulls are read,AMQ-5389,12747429,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,cjutzi,cjutzi,10/Oct/14 22:19,21/Oct/14 21:15,14/Jul/23 05:44,21/Oct/14 21:15,5.11.0,,,,,,,,,5.11.0,,,,MQTT,,,,,0,,,,,,"in the header read you'll notice that if 0's are read, i increases to protect the end of buffer, but when you pass this down to the next parser the size of the buffer passed is readSize-1 not readSize-i
As well there is a check for readsize > 1.. this should be (readsize-i > 1)
{noformat}
@Override
        public void parse(DataByteArrayInputStream data, int readSize) throws IOException {
            int i = 0;
            while (i++ < readSize) {
                byte b = data.readByte();
                // skip repeating nulls
                if (b == 0) {
                    continue;
                }

                header = b;

                currentParser = initializeVariableLengthParser();

                // if (readSize > 1) {
                //     currentParser.parse(data, readSize - 1);
                if (readSize-i > 1) {
                    currentParser.parse(data, readSize - i);

                }
                return;
            }
        }
{noformat}",,cjutzi,surfnerd,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Oct/14 22:29;cjutzi;MQTTCodec2.patch;https://issues.apache.org/jira/secure/attachment/12674282/MQTTCodec2.patch",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Oct 21 21:15:32 UTC 2014,,,,,,,,,,,"0|i211zj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Oct/14 21:15;tabish;Fixed on trunk.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
User Role Granted Full Privileges in jetty.xml,AMQ-5388,12747418,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,jbonofre,jreock,jreock,10/Oct/14 21:25,03/Mar/22 16:00,14/Jul/23 05:44,19/Jan/22 16:49,5.9.0,,,,,,,,,5.15.16,5.16.4,5.17.0,,Web Console,,,,,2,jetty,security,web-console,,,"The default ConstraintMapping for the ""user"" role grants privileges to /admin/*, which supersedes the *.action constraint that is supposed to be granted only to the admin role.

The current pathspec for the user role reads:
<property name=""pathSpec"" value=""/api/*,/admin/*,*.jsp"" />

By granting access to /admin/*, that in turn grants access to all of the *.action URLs, essentially nullifying the attempt to restrict *.action URLs to only the admin role.

To repeat, just log in as the default ""user/user"" account to the web console and add or delete destinations.

Workaround is to change the pathSpec to:

<property name=""pathSpec"" value=""/,*.jsp,*.css"" />

Which allows access to the console but disallows access to the *.action URLs.",Any,arthur.kahn,jira-bot,jreock,william.crowell,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-8522,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jan 19 16:48:51 UTC 2022,,,,,,,,,,,"0|i211x3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Dec/16 15:14;william.crowell;If you use the provided workaround, then the following error is received:

Caused by: java.lang.IllegalArgumentException: PathSpec .jsp. must start with '/' or '*.'

Small correction to the pathSpec.  It should be:

<property name=""pathSpec"" value=""/,*.jsp,*.css"" />;;;","22/Jul/20 14:48;arthur.kahn;This bug is still not solved in 2020 (ActiveMQ 5.15.13)

I replace the impacted lines by:
{code:xml}
<bean id=""securityConstraintMapping"" class=""org.eclipse.jetty.security.ConstraintMapping"">
    <property name=""constraint"" ref=""securityConstraint"" />
    <property name=""pathSpec"" value=""/api/*,*.jsp,*.html,*.png,*.css,/admin/js/*"" />
</bean>
<bean id=""adminSecurityConstraintMapping"" class=""org.eclipse.jetty.security.ConstraintMapping"">
    <property name=""constraint"" ref=""adminSecurityConstraint"" />
    <property name=""pathSpec"" value=""*.action"" />
</bean>
{code};;;","19/Jan/22 16:47;jira-bot;Commit c67ada04c77e9379ef25ac62d5ea1fcf20cf8b8f in activemq's branch refs/heads/main from Vilius Šumskas
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=c67ada0 ]

https://issues.apache.org/jira/browse/AMQ-5388 Fix user permissions in web console
;;;","19/Jan/22 16:48;jira-bot;Commit ffc2aad6e3e9fe79943503f57eec3dda7e5af807 in activemq's branch refs/heads/activemq-5.16.x from Vilius Šumskas
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=ffc2aad ]

https://issues.apache.org/jira/browse/AMQ-5388 Fix user permissions in web console

(cherry picked from commit c67ada04c77e9379ef25ac62d5ea1fcf20cf8b8f)
;;;","19/Jan/22 16:48;jira-bot;Commit 5af38bc2e5fffcb39a83a3436b2979b084d58395 in activemq's branch refs/heads/activemq-5.15.x from Vilius Šumskas
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=5af38bc ]

https://issues.apache.org/jira/browse/AMQ-5388 Fix user permissions in web console

(cherry picked from commit c67ada04c77e9379ef25ac62d5ea1fcf20cf8b8f)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MQTT Codec - buffer mis-alignment on NIO when Back-2-Back packets are received,AMQ-5387,12747412,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,cjutzi,cjutzi,10/Oct/14 21:13,23/Oct/14 23:11,14/Jul/23 05:44,21/Oct/14 21:15,5.11.0,,,,,,,,,5.11.0,,,,MQTT,,,,,0,,,,,,"{noformat}
**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.activemq.transport.mqtt;

import static org.junit.Assert.*;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.util.ArrayList;
import java.util.concurrent.atomic.AtomicInteger;

import org.apache.commons.net.util.Base64;
import org.eclipse.paho.client.mqttv3.IMqttDeliveryToken;
import org.eclipse.paho.client.mqttv3.MqttCallback;
import org.eclipse.paho.client.mqttv3.MqttClient;
import org.eclipse.paho.client.mqttv3.MqttConnectOptions;
import org.eclipse.paho.client.mqttv3.MqttException;
import org.eclipse.paho.client.mqttv3.MqttMessage;
import org.eclipse.paho.client.mqttv3.MqttPersistenceException;
import org.eclipse.paho.client.mqttv3.MqttSecurityException;
import org.eclipse.paho.client.mqttv3.persist.MemoryPersistence;
import org.junit.Test;



/**
 * Test the NIO transport with this Test group
 */
public class PahoMQTTNIOTest extends PahoMQTTTest  implements MqttCallback {

    AtomicInteger m_receiveCounter = new AtomicInteger();
    String BigMessage
    static ArrayList<MqttClient> mqttClients = null;
    static final Integer staticSyncObj = new Integer(1); 
    String messagePayload = null;
    
    public final int numberOfThreads = 500;
    static ArrayList<pubThreadBitMsg> arrThreads = new ArrayList<pubThreadBitMsg>();
    
    boolean f_messageReceived = false;
    boolean f_ackReceived = false;
    boolean f_lost = false;

    /**
     * 
     * 
     * @param client
     * @param location
     * @param accountId
     * @param userId
     * @param clientId
     * @param token
     * @param nameSpace
     * @param message
     * @param qos
     * @param f_retained
     * @param f_keepOpen
     * @return
     * @throws MqttException
     */
    private MqttClient pubNameSpace(MqttClient client,  
                                    String    location, 
                                    String    accountId, 
                                    String    userId, 
                                    String    clientId,
                                    String    token, 
                                    String    nameSpace, 
                                    String    message, 
                                    int       qos, 
                                    boolean   f_retained,  
                                    boolean   f_keepOpen) throws MqttException
    {

        try
        {        
            boolean f_wasConnected = true; 
            
            if (client == null)
            {
                f_wasConnected = false; 
                client = new MqttClient(location, clientId/*, persistence*/);
            }
            
            if (!f_wasConnected)
            {
                MqttConnectOptions options = new MqttConnectOptions();
                options.setKeepAliveInterval(60);
                options.setConnectionTimeout(120);
                options.setPassword(token.toCharArray());
                options.setUserName(accountId+"":""+userId);
                client.connect(options);
                client.setCallback(this);
            }
    
            MqttMessage mqttMessage = new MqttMessage();
            mqttMessage.setPayload(message.getBytes());
            mqttMessage.setQos(qos);
            mqttMessage.setRetained(f_retained);
    
            
            client.publish(nameSpace, mqttMessage);
            
            if (!f_keepOpen)
            {
                client.disconnect();
                client.close();
                client = null; 
            }
            return client; 
        }
        catch (MqttPersistenceException e)
        {
            System.err.println(""pubNameSpace : YOU CAN'T USE THE SAME CLIENTID MULTIPLE TIMES IN A PERSISTENT WAY Excpetion  - ""+e.getMessage());
            if (client != null)
            {
                client.disconnect(); 
                client.close();
                client = null;
            }
        }
        catch (Exception e)
        {
            e.printStackTrace();
            System.err.println(""Exception e = ""+e.getMessage());
            if (client != null)
            {
                client.disconnect(); 
                client.close();
                client = null;
            }
        }
        return null;
    }
    /**
     * 
     * @param location
     * @param accountId
     * @param userId
     * @param clientId
     * @param token
     * @param nameSpace
     * @param message
     * @param qos
     * @param f_retained
     * @param f_keepOpen
     * @return
     * @throws MqttException
     */
    private MqttClient pubNameSpace(String    location, 
                                    String    accountId, 
                                    String    userId, 
                                    String    clientId,
                                    String    token, 
                                    String    nameSpace, 
                                    String    message, 
                                    int       qos, 
                                    boolean   f_retained,  
                                    boolean   f_keepOpen) throws MqttException
    {

        try
        {        
            MqttClient client = new MqttClient(location, clientId/*, persistence*/);
            client.setCallback(this);
            MqttConnectOptions options = new MqttConnectOptions();
            options.setKeepAliveInterval(60);
            options.setConnectionTimeout(120);
            options.setPassword(token.toCharArray());
            options.setUserName(accountId+"":""+userId);
    
            MqttMessage mqttMessage = new MqttMessage();
            mqttMessage.setPayload(message.getBytes());
            mqttMessage.setQos(qos);
            mqttMessage.setRetained(f_retained);
    
            client.connect(options);
            client.publish(nameSpace, mqttMessage);
            
            if (!f_keepOpen)
            {
                client.disconnect();
                client.close();
            }
            return client; 
        }
        catch (MqttPersistenceException e)
        {
            System.err.println(""YOU CAN'T USE THE SAME CLIENTID MULTIPLE TIMES IN A PERSISTENT WAY : ""+e.getMessage());
            assertTrue(false);
        }
        catch (Exception e)
        {
            e.printStackTrace();
            System.err.println(""Exceptoin e = ""+e.getMessage()); 
            assertTrue(false);
        }
        return null;
    }
   
    
    /**
     * 
     * @param input
     * @param output
     * @return
     * @throws IOException
     */
    public static long copyLarge(InputStream input, OutputStream output) throws IOException 
    {
      byte[] buffer = new byte[4096];
      long count = 0L;
      int n = 0;
      while (-1 != (n = input.read(buffer))) {
       output.write(buffer, 0, n);
       count += n;
      }
      return count;
    }
    
    /**
     * 
     * @param p
     * @throws IOException
     */
    public static void outputResults (Process p) throws IOException
    {
        BufferedReader stdInput = new BufferedReader(new
                                         InputStreamReader(p.getInputStream()));

        BufferedReader stdError = new BufferedReader(new
                        InputStreamReader(p.getErrorStream()));

        String s; 
        while ((s = stdInput.readLine()) != null) 
        {
            System.out.println(s);
        }
        while ((s = stdError.readLine()) != null) 
        {
            System.out.println(s);
        }
    }
    
    /**
     * HELPER
     * @param msec
     * @throws InterruptedException
     */
    void pause_til_done_or_time(int msec) throws InterruptedException
    {
        int pauseTime = 100; 
        while (!f_messageReceived && msec > 0 && !f_lost)
        {
            Thread.sleep(pauseTime);
            msec -= pauseTime;
        }
        
    }

    static Integer numberOfMessages = 0; 
    public void clearMessageCount()
    {
        numberOfMessages = 0; 
    }
    public Integer getMessageCount()
    {
        return numberOfMessages; 
    }
    /**
     * 
     * @param msec
     */
    private void waitForItAck(int msec)
    {
        while (!f_ackReceived)
        {
            
            try { Thread.sleep(1000); } catch (Exception e){}
            
            msec= msec-1000;
                            
            if (msec < 0)
            {
                break;
            }
        }
    }
    
    @Override
    public String getProtocolScheme() {
        return ""mqtt+nio"";
    }

    @Override
    public boolean isUseSSL() {
        return false;
    }

    public class PahoCallback implements MqttCallback {

        @Override
        public void connectionLost(Throwable cause) {
            // TODO Auto-generated method stub
            
        }

        @Override
        public void messageArrived(String topic, MqttMessage message)
                throws Exception {
            m_receiveCounter.incrementAndGet();
        }

        @Override
        public void deliveryComplete(IMqttDeliveryToken token) {
            // TODO Auto-generated method stub
            
        }
        
    }
 
    static   MqttClient BalstTestClient = null;
    String   loc = ""tcp://localhost:1883"";

    public class pubThreadBitMsg extends Thread {
        
        public pubThreadBitMsg()
        {
            synchronized (staticSyncObj)
            {
                try
                {
                    System.out.println(""---- pubTheadBitMsg - constructor""); 
                    if (BalstTestClient == null)
                    {
                        BalstTestClient = pubNameSpace(loc, ""cjutzi"", 
                                        ""someone"", 
                                         ""myclientid_cjutzi_pub"", 
                                         ""hello"",
                                         ""/accounts/cjutzi/users/curt/test"", 
                                         ""Starting Client"", 1, false, true);
                        System.out.println(""---- pubTheadBitMsg - init""); 
                    }
                } 
                catch (MqttException e)
                {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                }
            }
        }

        public void run()
        {
//            synchronized (staticSyncObj) 
            {
            try
            {
                System.out.println(""---- pubTheadBitMsg - send""); 
                pubNameSpace(BalstTestClient, loc, ""cjutzi"", 
                              ""someone"", 
                               ""myclientid_cjutzi_pub"", 
                               ""hello"",
                               ""/accounts/cjutzi/users/curt/test"", 
                               BigMessage, 1, false, true);
                } catch (MqttException e)
                {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                }
            }
        }
    }
    
    @Test
    public void test_AckOnOldListenerQos1Blast100B10KBlocks() throws MqttException, InterruptedException
    {
        MqttClient subClient = new MqttClient(""tcp://localhost:1883"",
                ""niosubclient"",
                new MemoryPersistence());
        MqttConnectOptions cOpts = new MqttConnectOptions();
        cOpts.setCleanSession(true);
        cOpts.setUserName(""curt"");
        cOpts.setPassword(""hello"".toCharArray());
        
       
        subClient.setCallback(new PahoCallback());
        subClient.connect(cOpts);
        subClient.subscribe(""nio/test"");
       
        
        for (int i = 0; i < numberOfThreads; i++) 
        {
            arrThreads.add(new pubThreadBitMsg());
        }
        System.out.println(""--started""); 
        for (int i = 0; i < numberOfThreads; i++) 
        {
            arrThreads.get(i).start(); 
        }
        System.out.println(""-- waiting""); 
        Thread.sleep(10000);
        assertTrue(numberOfThreads == m_receiveCounter.get());
    }
    
    
    /**
     * 
     */
    private void resetFlag()
    {
        f_messageReceived = false; 
        f_ackReceived = false; 
    }
    /***************************************************************/
    /**              CALL BACKS FOR MQTT                           */
    /***************************************************************/
   
    

    
    /**
     * 
     */
      public void connectionLost(Throwable arg0)
      {
          System.out.println(""MQTT - Connection Lost"");
//          f_terminate = true;
          f_lost = true;
      }

      /**
       * 
       */
      public void deliveryComplete(IMqttDeliveryToken arg0)
      {
          System.out.println(""MQTT - delivery complete: Delivery Tokeh = ""+arg0.isComplete());
          f_ackReceived = true;
      }
      
      /**
       * 
       */
      public void messageArrived(String arg0, MqttMessage arg1) throws Exception
      {
          synchronized (numberOfMessages)
          {
              numberOfMessages++;   
              System.out.println(""MQTT - messageArrived ""+arg0+""\nMessage: \t[""+arg1+""] QoS: [""+arg1.getQos()+""] isDup [""+arg1.isDuplicate()+""] nameSpace = "");
//            System.out.print(arg1.isDuplicate()?""*"":""."");
              byte[] payloadBytes = arg1.getPayload(); 
              if (payloadBytes.length >0 )
              {
                  messagePayload = new String(payloadBytes); 
              }
              System.out.println(""Message Recieved...""); 
              f_messageReceived = true;
          } 
      }
      
}


{noformat}",Paho as client ,cjutzi,surfnerd,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,0,,0%,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Oct/14 21:16;cjutzi;MQTTCode.java.patch;https://issues.apache.org/jira/secure/attachment/12674260/MQTTCode.java.patch",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Oct 23 23:11:54 UTC 2014,,,,,,,Patch Available,,,,"0|i211vr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/Oct/14 21:16;cjutzi;Reseting of the readSize was incorrect.  It was using the payLoadRead which could span buffers.. In the case it did.. it would result in a bad state in the codec object, and the following frame would be bad (mis aligned) ;;;","10/Oct/14 22:18;tabish;It's simpler if you just attach the test case as a file instead of a large comment block.  ;;;","10/Oct/14 23:04;cjutzi;will do.. 
Thx
Curt;;;","21/Oct/14 21:15;tabish;Fixed on trunk.;;;","23/Oct/14 23:11;surfnerd;Thank you [~cjutzi] I was trying to figure out same issue !;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MQTT Link Stealing fails when client reconnects more than once,AMQ-5385,12746496,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,workanandr,workanandr,07/Oct/14 21:10,09/Oct/14 16:44,14/Jul/23 05:44,09/Oct/14 16:44,5.11.0,,,,,,,,,5.11.0,,,,MQTT,,,,,0,,,,,,"Modified existing JUnit test case to *re-connect* with the same clientid a second time. Existing Test case tried once, which succeeded.
When client reconnects the second time (third connection attempt with the same clientid), link stealing does not happen.

Following is the modified test case.
{noformat}
    @Test(timeout = 60 * 1000)
    public void testDuplicateClientId() throws Exception {
        // test link stealing enabled by default
        final String clientId = ""duplicateClient"";
        MQTT mqtt = createMQTTConnection(clientId, false);
        mqtt.setKeepAlive((short) 2);
        final BlockingConnection connection = mqtt.blockingConnection();
        connection.connect();
        final String TOPICA = ""TopicA"";
        connection.publish(TOPICA, TOPICA.getBytes(), QoS.EXACTLY_ONCE, true);
 
        MQTT mqtt1 = createMQTTConnection(clientId, false);
        mqtt1.setKeepAlive((short) 2);
        final BlockingConnection connection1 = mqtt1.blockingConnection();
        connection1.connect();
 
        assertTrue(""Duplicate client disconnected"", Wait.waitFor(new Wait.Condition() {
            @Override
            public boolean isSatisified() throws Exception {
                return connection1.isConnected();
            }
        }));
 
        assertTrue(""Old client still connected"", Wait.waitFor(new Wait.Condition() {
            @Override
            public boolean isSatisified() throws Exception {
                return !connection.isConnected();
            }
        }));
 
        MQTT mqtt2 = createMQTTConnection(clientId, false);
        mqtt2.setKeepAlive((short) 2);
        final BlockingConnection connection4 = mqtt2.blockingConnection();
        connection4.connect();
 
        assertTrue(""Old client still connected"", Wait.waitFor(new Wait.Condition() {
            @Override
            public boolean isSatisified() throws Exception {
                return !connection1.isConnected();
            }
        }));
       
        assertTrue(""Duplicate client disconnected"", Wait.waitFor(new Wait.Condition() {
            @Override
            public boolean isSatisified() throws Exception {
                return connection4.isConnected();
            }
        }));
 
        connection4.disconnect();
}
{noformat}",,tabish,tbain98,workanandr,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Oct/14 04:38;workanandr;RegionBroker.java.LinkStealing.patch;https://issues.apache.org/jira/secure/attachment/12673826/RegionBroker.java.LinkStealing.patch",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Oct 09 16:44:02 UTC 2014,,,,,,,,,,,"0|i20wcn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Oct/14 04:38;workanandr;Patch for the LinkStealing not working for second or more reconnects issue.;;;","09/Oct/14 15:43;tbain98;""Not Connection for {}"" isn't correct grammar; any chance we can fix that while we're making changes two lines later?;;;","09/Oct/14 16:44;tabish;Fix applied and test case added on trunk;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deadlock on DB connections in JDBCMessageStore.removeMessage,AMQ-5384,12746084,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,tomsko,tomsko,06/Oct/14 09:26,07/Dec/15 20:15,14/Jul/23 05:44,07/Oct/14 14:56,5.9.0,,,,,,,,,5.11.0,,,,Message Store,,,,,0,,,,,,"AMQ 5.9 gets stuck under 30-50 req/second load when using JDBC persistence - this affects our application as it hangs during performance testing (this happens almost every night).
Following stacktraces indicate that there's a deadlock on DB connection:

Stack logged by C3P0, showing when first DB connection has been picked from the pool:
{noformat}
2014-10-06 08:44:40,646 | INFO  | Logging the stack trace by which the overdue resource was checked-out. | com.mchange.v2.resourcepool.BasicResourcePool | C3P0PooledConnectionPoolManager[identityToken->2x1e6s941raztn6mju110
java.lang.Exception: DEBUG STACK TRACE: Overdue resource check-out stack trace.
        at com.mchange.v2.resourcepool.BasicResourcePool.checkoutResource(BasicResourcePool.java:555)
        at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutAndMarkConnectionInUse(C3P0PooledConnectionPool.java:756)
        at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutPooledConnection(C3P0PooledConnectionPool.java:683)
        at com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getConnection(AbstractPoolBackedDataSource.java:140)
        at org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:58)
        at org.apache.activemq.store.jdbc.TransactionContext.begin(TransactionContext.java:163)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.beginTransaction(JDBCPersistenceAdapter.java:510)
        at org.apache.activemq.store.memory.MemoryTransactionStore$Tx.commit(MemoryTransactionStore.java:92)
        at org.apache.activemq.store.memory.MemoryTransactionStore.commit(MemoryTransactionStore.java:259)
        at org.apache.activemq.transaction.XATransaction.storeCommit(XATransaction.java:85)
        at org.apache.activemq.transaction.XATransaction.commit(XATransaction.java:75)
        at org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:253)
        at org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:112)
        at org.apache.activemq.broker.TransportConnection.processCommitTransactionTwoPhase(TransportConnection.java:433)
        at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:102)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:292)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:149)
        at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
        at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:270)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)
        at java.lang.Thread.run(Thread.java:662)
{noformat}

Following stack shows the same thread pending for second DB connection (without releasing the first one):
{noformat}
""ActiveMQ Transport: tcp:///10.132.7.20:36431@5445"" daemon prio=10 tid=0x000000004119d000 nid=0x61bf in Object.wait() [0x00007f41120d7000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	- waiting on <0x00000000fabdd2c0> (a com.mchange.v2.resourcepool.BasicResourcePool)
	at com.mchange.v2.resourcepool.BasicResourcePool.awaitAvailable(BasicResourcePool.java:1414)
	at com.mchange.v2.resourcepool.BasicResourcePool.prelimCheckoutResource(BasicResourcePool.java:606)
	- locked <0x00000000fabdd2c0> (a com.mchange.v2.resourcepool.BasicResourcePool)
	at com.mchange.v2.resourcepool.BasicResourcePool.checkoutResource(BasicResourcePool.java:526)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutAndMarkConnectionInUse(C3P0PooledConnectionPool.java:756)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutPooledConnection(C3P0PooledConnectionPool.java:683)
	at com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getConnection(AbstractPoolBackedDataSource.java:140)
	at org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:58)
	at org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.getStoreSequenceId(DefaultJDBCAdapter.java:290)
	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.getStoreSequenceIdForMessageId(JDBCPersistenceAdapter.java:840)
	at org.apache.activemq.store.jdbc.JDBCMessageStore.removeMessage(JDBCMessageStore.java:194)
	at org.apache.activemq.store.memory.MemoryTransactionStore$4.run(MemoryTransactionStore.java:348)
	at org.apache.activemq.store.memory.MemoryTransactionStore$Tx.commit(MemoryTransactionStore.java:103)
	at org.apache.activemq.store.memory.MemoryTransactionStore.commit(MemoryTransactionStore.java:259)
	at org.apache.activemq.transaction.XATransaction.storeCommit(XATransaction.java:85)
	at org.apache.activemq.transaction.XATransaction.commit(XATransaction.java:69)
	at org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:253)
	at org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:112)
	at org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:424)
	at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:292)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:149)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:270)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)
	at java.lang.Thread.run(Thread.java:662) 
{noformat}

Problem seems to be related with JDBCMessageStore.removeMessage method:
{code:java}
    public void removeMessage(ConnectionContext context, MessageAck ack) throws IOException {
    	long seq = persistenceAdapter.getStoreSequenceIdForMessageId(ack.getLastMessageId(), destination)[0];
...
{code}

Call to {{removeMessage}} already has one DB connection passed in {{context}} method parameter, but calling {{persistenceAdapter.getStoreSequenceIdForMessageId}} creates another DB connection in the same transaction.

Deadlock occurs when all DB connections are used by {{context}}, so that  {{removeMessage}} can't fetch its own connection.

Possible solution would be to pass {{ConnectionContext}} object to {{persistenceAdapter.getStoreSequenceIdForMessageId}} method, so that the method would reuse same connection.",AMQ 5.9.0 with Oracle 11.2 as persistent store. C3P0 as conneciton pool.,gtully,tomsko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4566,,,,,,,AMQ-4566,,,,,,,,,,,,,,"06/Oct/14 19:13;tomsko;patch-AMQ-5384.diff;https://issues.apache.org/jira/secure/attachment/12673166/patch-AMQ-5384.diff",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Oct 07 14:56:11 UTC 2014,,,,,,,,,,,"0|i20tuv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Oct/14 13:00;gtully;your suggestions look bang on. Any chance you have something that would work as a unit test that you could submit with a patch?

There is an optimization in https://issues.apache.org/jira/browse/AMQ-5277 that will avoid this issue I think, but your suggestion is still valid.;;;","06/Oct/14 19:13;tomsko;I've attached a diff file (the only reasonable thing I could generate after studying git tutorial 1/2 h ago ;) ) showing how I fixed my AMQ instance.
I've tested it on v5.9 and it works fine.;;;","07/Oct/14 14:56;gtully;variant of path applied with thanks in http://git-wip-us.apache.org/repos/asf/activemq/commit/ad770ea7;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQBytesMessage mishandles restoration of old message contents,AMQ-5381,12745506,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,brianjohnson,brianjohnson,02/Oct/14 14:15,11/Feb/15 10:43,14/Jul/23 05:44,21/Oct/14 21:15,5.10.0,5.9.1,,,,,,,,5.10.1,5.11.0,,,JMS client,,,,,0,easyfix,,,,,"Changes made in ActiveMQ 5.9.1, AMQ-4887, [[cb5c29d02d02dc7f7fa4f5c1a97bd2a59078bccd|https://github.com/apache/activemq/commit/cb5c29d02d02dc7f7fa4f5c1a97bd2a59078bccd#diff-c0b18b235652457c810fe322bce65e31]] introduced a bug in {{ActiveMQBytesMessage}} which results in a {{java.util.zip.ZipException: incorrect header check}} being thrown at {{org.apache.activemq.command.ActiveMQBytesMessage.restoreOldContent(ActiveMQBytesMessage.java:883)}} when a consumer attempts to reuse a received {{ActiveMQBytesMessage}}.

This bug is triggered under a unique set of circumstances:
# A message is published by a JMS client with compression *_disabled_* on its {{ActiveMQConnection}}
# The message is consumed by a JMS client with compression *_enabled_* on its {{ActiveMQConnection}}
# The JMS consumer makes the received message writable in order to modify and reuse it:
{code}
message.setReadOnlyProperties(false);
message.setReadOnlyBody(false);
{code}
# The JMS consumer modifies the message, triggering a call to {{ActiveMQBytesMessage.initializeWriting()}}

The problem within {{ActiveMQBytesMessage.initializeWriting()}} is that the method determines whether the message should be compressed _when it is published_ (based on its current connection) BEFORE it has restored the message's original content.  In the example above, the message's original {{compressed}} flag is changed from {{false}} to {{true}}, resulting in {{restoreOldContent()}} trying to decompress message contents which were never compressed.

{code}
private void initializeWriting() throws JMSException {
        checkReadOnlyBody();
        if (this.dataOut == null) {
            this.bytesOut = new ByteArrayOutputStream();
            OutputStream os = bytesOut;
            this.dataOut = new DataOutputStream(os);
        }

        // should compression be used when publishing this message??
        ActiveMQConnection connection = getConnection();
        if (connection != null && connection.isUseCompression()) {
            compressed = true;
        }

        // restore the message's old content
        restoreOldContent();
}
{code}

-A simple solution would be to move the {{restoreOldContent()}} method call before the {{connection.isUseCompression()}} conditional in {{ActiveMQBytesMessage.initializeWriting()}}.-

+Had a chance to look into this problem further.  The best fix would be to only set the 'compressed' flag when the message's 'contents' are stored, instead of whenever the message is initialized for writing.+",,brianjohnson,githubbot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Feb 11 10:43:38 UTC 2015,,,,,,,,,,,"0|i20q9r:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Oct/14 14:04;tabish;Recommend you create a JUnit test case to reproduce your problem so that any fix is sure to be preserved in the future.;;;","10/Oct/14 12:48;githubbot;GitHub user letM3in opened a pull request:

    https://github.com/apache/activemq/pull/47

    https://issues.apache.org/jira/browse/AMQ-5381

    Modified ActiveMQBytesMessage so that the 'compressed' flag is only set when the 'content' is stored, instead of whenever writing is initialized.  This resolves https://issues.apache.org/jira/browse/AMQ-5381
    
    Added unit test to test for AMQ-5381 condition.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/letM3in/activemq trunk

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/47.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #47
    
----
commit ebc4304f45293f72cab4aeab881d38c0d53ad47d
Author: Brian D. Johnson <brian@thejohnsonfamily.name>
Date:   2014-10-03T16:56:49Z

    https://issues.apache.org/jira/browse/AMQ-5381 - Fix ActiveMQBytesMessage's 'compressed' flag so that it is only set when the message content is actually compressed/stored

commit 63722a45d8f0827c762f3f880569bffaa9be7901
Author: Brian D. Johnson <brian@thejohnsonfamily.name>
Date:   2014-10-10T11:56:55Z

    Merge remote-tracking branch 'upstream/trunk' into trunk

----
;;;","10/Oct/14 12:53;brianjohnson;Created a pull request, as shown above with a unit test and fix to ActiveMQBytesMessage

https://github.com/apache/activemq/pull/47;;;","17/Oct/14 13:18;brianjohnson;[~tabish121] - how can I get the pull request above reviewed and merged?

Thanks.;;;","21/Oct/14 21:15;tabish;Fixed on trunk. ;;;","14/Nov/14 12:13;brianjohnson;[~tabish121] can this fix be included in 5.10.1?

Thanks.;;;","25/Nov/14 21:24;tabish;There is no plan for a 5.10.1 release at this time. ;;;","11/Feb/15 10:43;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/47
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQP - allow setting prefetch size,AMQ-5379,12745452,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,02/Oct/14 09:32,04/Dec/14 11:46,14/Jul/23 05:44,27/Nov/14 14:08,5.10.0,,,,,,,,,5.11.0,,,,AMQP,,,,,0,,,,,,Currently the prefetch size is hardcoded to the value of 100,,dejanb,robbie,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5221,,,"02/Dec/14 12:09;robbie;0001-AMQ-5379-inspect-the-actual-total-credit-rather-than.patch;https://issues.apache.org/jira/secure/attachment/12684628/0001-AMQ-5379-inspect-the-actual-total-credit-rather-than.patch",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Dec 04 11:46:45 UTC 2014,,,,,,,,,,,"0|i20pxz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Oct/14 09:36;dejanb;Fixed with http://git-wip-us.apache.org/repos/asf/activemq/commit/838bbebe

The value can be set on the transport like

{code}<transportConnector name=""amqp"" uri=""amqp://0.0.0.0:5672?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600&amp;transport.prefetch=10""/>{code}

Also, the value of the remote link credit will be respected if set.;;;","14/Oct/14 16:35;robbie;I just came across the update on http://activemq.apache.org/amqp.html which notes regarding the prefetch config toggle ""that the same value will be used for broker-side amqp receiver link that handles incoming messages"". This is probably going to lead to people accidently reducing the producer credit window to smaller values, which will then hammer producer performance, since even the default value of 100 is likely to be limiting in certain cases already. I would suggest adding a seperate config toggle to alter the credit window for producers independently from the vaue used for consumers.;;;","14/Oct/14 16:47;robbie;Separately, the consumer prefetching has some issues from an AMQP perspective, possibly due to a bit of a mismatch between how the internal consumer prefetch handling of the broker works (being set to a particular size window initially), and how the explicit handling of credit in AMQP 1.0 works (consumers explicitly grant/retract credit for the server to use to send messages, as and when appropriate to satisfy the consumer clients needs).

From an AMQP perspective, a consumer can attach without any credit initiall, then grant it later when it is deemed appropriate to receive messages, and also retract it to ensure it doesnt get any messages during a period when it doesnt want any. These behaviours could be combined to implement 0-prefetch synchronous recieve for example. Currently it would seem that due to the default prefetch value the broker may send messages to the client in cases where it hasnt yet 'asked' (provided any credit) for them, or in cases where it has asked not to get any more until further notice, which could cause problems. It is possible that Proton will handlethis, by buffering all the messages that there is not credit to send, which in itself could cause problems later or lead to some interesting memory usage.;;;","21/Oct/14 13:30;dejanb;Hi [~gemmellr]], thanks for these comments. It totally makes sense to do these changes. I pushed a commit that now configures producer side with the producerCredit property. On the other hand, the size of activemq consumer prefetch is dynamically set using the credit supplied in the link flow.

https://github.com/apache/activemq/commit/ab3de0c4c2b8af83090558ebbea4ef91ce04024b

Can you take a look at it and see if does what I mean it does. As link flow is sent for every message, I change the prefetch only after credit  reaches 0 and if it's different value than the one we have at the moment.

All tests work with this change, but as there are no way to customise the prefetch with current proton jms client, I couldn't test more advanced scenarios.;;;","22/Oct/14 12:46;robbie;Given his familiarity with the broker as a whole, [~tabish121] is possibly in a better position to comment overall on how the changes will work with the broker generally. That said, in terms of the AMQP related code change:

The new 'producerCredit' field in AmqpProtocolConverter is only being used during the initial opening of the producer (i.e proton receiver object). The existing 'prefetch' field value is still being used to replenish the producers credit when it gets used up later by incoming messages, which may mean the wrong amount of credit will be granted if the config values differ, so that process also needs update to use the producerCredit field.

The 'client preference' check here should probably be removed. The producer doesn't really get a say in the credit they are given from the server/receiver, any link credit value they set in a Flow frame is a reflection of the last value they know based on Flows sent to them from the server. AmqpProtocolConverter, Line 824:
{noformat}
        // Client is producing to this receiver object
        org.apache.qpid.proton.amqp.transport.Target remoteTarget = receiver.getRemoteTarget();
        int flow = producerCredit;
        // use client's preference if set
        if (receiver.getRemoteCredit() != 0) {
            flow = receiver.getRemoteCredit();
        }
{noformat}


Slight aside: Flow frames dont need to be sent after processing every message. Some clients may do that currently but when attention turns to efficiency and performance, adjusting the credit in batches and only sending the Flows more sparingly is what most will lkely do.

I think the updated consumer prefetch handling should work in a more AMQP-like fashion in more cases, though I'm not sure if it yet fully handles the desire of a consumer to completely stop message delivery by moving the link credit back down to 0 (e.g using the flow drain flag, or by simply not replenishing credit as it is used for earlier consumed messages), and it may lead to some weirdness around configuring the ActiveMQ consumer prefetch repeatedly to a different values which are lower than the currently outstanding number of already prefetched messages. The main thing I wonder around that is, how would the broker as a whole react to reducing the ActiveMQ consumer prefetch setting below the number of messages that are already prefetched?

(also, the null on the context is redundant since instanceof check handles that)
{noformat}
+    protected void processLinkFlow(Link link) throws Exception {
+        Object context = link.getContext();
+        int credit = link.getRemoteCredit();
+        if (context != null && context instanceof ConsumerContext) {
+            ConsumerContext consumerContext = (ConsumerContext)context;
+            // change ActiveMQ consumer prefetch if needed
+            if (consumerContext.credit == 0 && consumerContext.consumerPrefetch != credit && credit > 0) {
+                ConsumerControl control = new ConsumerControl();
+                control.setConsumerId(consumerContext.consumerId);
+                control.setDestination(consumerContext.destination);
+                control.setPrefetch(credit);
+                consumerContext.consumerPrefetch = credit;
+                sendToActiveMQ(control, null);
+            }
+            consumerContext.credit = credit;
+        }
+        ((AmqpDeliveryListener) link.getContext()).drainCheck();
+    }
{noformat}

Perhaps confusingly, the link Flow event is raised by Proton for reasons other than simply receiving a Flow frame for the link, and incoming flow frames may not actually change the credit (but could effectively add or remote some), so this method may execute for a sending link even without a credit change. Using link.getRemoteCredit() doesnt return the amount of credit previously given by the remote receiver, but rather calculates the currently unused amount by doing '<remaining unused credit> - <messages still queued to send by procesing the transport>' (which I'm not certain of, but seems like it could even be negative if more messages have already attempted to be sent than there is now actually remaining credit for, which I believe makes proton buffer them). As a result, if all of the originally existing link credit had been used by prefetching at this point, only some of that amount of credit has been replenished so far by the remote receiver, link.getRemoteCredit() will presumably yeild a smaller number than the original credit window was, which could make it set the ActiveMQ consumer prefetch to this lower-than-previous value if consumerContext.credit has previously been recorded as 0 while the credit was all used. At this point <up to original credit window> messages may already be prefetched and still awaiting actual consumption, though the ActiveMQ prefetch may now set to a smaller value, only the as-yet-unused remaining AMQP credit. How would the broker react to that? Further, if that credit is then also used, and 'remote credit' hits 0 again, and the client subsequently Flows new credit as it consumes earlier messages, that could lead to 'remote credit' changing again to a different non-zero value than previously, possibly being used to update the ActiveMQ consumer prefetch again to match. This is to say, it could lead to the ActiveMQ consumer prefetch continuously being configured to new values whenever the available AMQP credit changes after previously being all used for a time.

In terms of testing, later releases of the 'old' Qpid AMQP 1.0 JMS client do let you configure the consumer prefetch, though the way of configuring SSL seems to have changed so other tests might need updated to update to using such a release. It would probably even be useful to test the prefetch related behaviour of the broker at a lower level, perhaps suing the proton engine directly, in order to get more fine grained control over the protocol interactions, though that is probably a task for later :);;;","27/Nov/14 14:08;dejanb;Thanks for the comments Robbie. 

The latest commit have the following changes:

- now using producerCredit instead of prefetch in all places related to the producer
- I bumped the default prefetch (and producer credit value) to 1000
- We decided to simplify things in terms of prefetch and credit, as currently we can't control it fully. The user can set the value for the prefetch on the transport connector and if it does it will be used and not changed. If the value is not set, the consumer will use default value until we get the first flow and initial client preference. We will use that value afterwards and not change it. I think this is good enough for the most current use cases. We can refine logic later with the real use cases.
- The problem with redelivery flag on the messages being set is fixed, as we now track the last delivered sequence id and inform the broker on consumer close;;;","02/Dec/14 12:08;robbie;Hi Dejan,

I think we need to change how the credit is observed after the initial flow, patch attached. As AMQPProtocolConverter could create the 'ActiveMQ consumer' with a 1000 msg prefetch (if we havent already also had a Flow before the Attach actually gets processed), it is likely it could buffer up to that many messages sends before we ever get a Flow, at which point the way the credit is currently observed (via getRemoteCredit()) wont actually give the amount of credit we received but rather what is currently believed to be left unused after accounting for buffered messages, leading us to underestimate the actual prefetch (it could even be negative if it already buffered sends for more messages than the actual received credit). I think getCredit() seems to be what to use instead.

Having said all that, I am now also thinking that a better way to go for now might be creating the 'ActiveMQ consumer' with 0 prefetch until the first flow arrives, and then giving it that much prefetch, since the AMQP consumer cant/wont actually be sent any messages over the wire until it gives the broker/proton credit anyway. This would help with multiple consumers etc by avoiding the 'ActiveMQ consumers' prefetching lots of messages they cant actually transmit to the AMQP consumer yet.

The above may possibly make the general issue underlying AMQ-5453 a little worse, since the 'ActiveMQ consumer' wouldnt have any 'advance credit' to use to get messages buffered ready to send before a 'drain' flow occurs. As it is currently almost entirely broken anyway, I'm not sure this would really be much more of an issue than already exists, which will still need a general fix either way. A possible saving grace in this specific case though is that I see that client is sending two flows, one with drain false then one with it true, which might still appear to work occasionally if messages get sent inbetween them.

I think the changes here mean that anyone using ClientAcknowledge with the JMS clients will find it isnt able to recieve more messages than the consumers configured prefetch size within a single ack window, since the desire for more messages is communicated by granting more credit, which would now have no effect. That in itself isnt necessarily worse than it was in ActiveMQ 5.10, which had an internal fixed window of 100 messages, the only difference is that if AMQP clients set their prefetch down below the old fixed 100 (e.g, to 1) they then wont be able to exceed that, whereas previously they would have apparently been able to since up to 99 messages would have actually been buffered awaiting the new credit. I guess that by using the new 'transport.prefetch' config to set a value will essentially force it to behave as it did previously, which may be a workaround in some cases.

When looking an issue relating to transactions, I came across the 'prefetch extension' concept in PrefetchSubscription. It currently looks to mainly use acknowlegement of specific messages to operate, but perhaps it could be modified to use credit (since we cant tell which specific messages, if any, that incoming credit may have been previously associated with) and help toward enabling things to work more along the lines of expectation for AMQP.

Sorry for writing another book size comment, I really dont mean to when I start :P

Robbie;;;","02/Dec/14 14:06;tabish;I'd agree with Robbie's analysis here.  I think we should investigate whether we really need to be jumping the gun on granting prefetch instead of waiting for the client to tell us what it wants.  ;;;","02/Dec/14 15:26;dejanb;Yeah, I also agree with it. The thing is that when I was trying to do that against 0.26 clients, I never got any flow from the client until I send something to it first. Also, setting the prefetch using transport.prefetch option is only for this legacy client as well. We have users that want to use 0.26 clients and control the prefetch, so that's the only way I managed to make it work.

Let me try to write some test that demonstrates this initial prefetch 0 problem with 0.26 client, and maybe we can give it a more thought on how to make it work.;;;","02/Dec/14 15:43;tabish;Can we just encourage them to move onto a later QPid client release as I think that problem is addressed along with other fixes and improvements in later releases.  I've been testing out 0.30+ and been having good luck with a minor problem with QueueBrowsers that I'm trying to track down.  ;;;","04/Dec/14 11:46;dejanb;I pushed the change that sets zero prefetch when nothing else is specified, and then use the first flow packet to adjust it. After upgrade to qpid 0.30 [AMQ-5405], all tests looks good. The commit also contains Robbie's patch.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect wild card replacement in mqtt topics,AMQ-5377,12745217,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,01/Oct/14 10:15,01/Oct/14 10:21,14/Jul/23 05:44,01/Oct/14 10:21,5.10.0,,,,,,,,,5.11.0,,,,MQTT,,,,,0,,,,,,There's no proper conversion from ActiveMQ specific to MQTT wildcards when messages is sent back to the wire. At the moment only '.' is handled.,,dejanb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Oct 01 10:21:59 UTC 2014,,,,,,,,,,,"0|i20oh3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Oct/14 10:21;dejanb;Fixed with http://git-wip-us.apache.org/repos/asf/activemq/commit/fc3d90e8;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQP delivery-count header set to the wrong value following a rollback,AMQ-5374,12744950,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,robbie,robbie,30/Sep/14 13:41,01/Nov/14 12:59,14/Jul/23 05:44,01/Nov/14 12:59,,,,,,,,,,5.11.0,,,,AMQP,,,,,0,,,,,,"The delivery-count field in the AMQP 1.0 message header tracks prior unsuccessful delivery attempts and so should go 0,1,2. In testing against the 5.11-SNAPSHOT I see the value going from 0 (unset, default) initially, to 2, then 3, etc, following repeated rollbacks. I have tracked this to a defect in the proton-jms contrib artifact and corrected it via PROTON-704, for inclusion in Proton 0.8.

The issue can be seen in the below snippets of protocol trace (at the lines marked <<<<<). When the message is first transfered to the client, the delivery count field is null / not set, giving the default value of 0. Later when the message is sent again after a rollback, the delivery-count header has incremented to 2 rather than 1.

{noformat}
<TCP time=""15:22:55.967963"" seqno=""1705009155"" size=""186"">
  <source host=""127.0.0.1"" port=""37703""/>
  <target host=""127.0.0.1"" port=""39557""/>
  
  <frame size=""186"" doff=""2"" chan=""1""> 
    
    <small-descriptor code=""0x0:0x14""/> # transfer
    <list8 size=""8"" count=""4""> # transfer
      <small-uint> 1 </small-uint> # handle
      <uint0/> # delivery-id
      <bin8 size=""1""> # delivery-tag
        ""0""
      </bin8>
      <uint0/> # message-format
      # <null/> settled
      # <null/> more [false]
      # <null/> rcv-settle-mode
      # <null/> state
      # <null/> resume [false]
      # <null/> aborted [false]
      # <null/> batchable [false]
    </list8>
    
    <small-descriptor code=""0x0:0x70""/> # header
    <list8 size=""4"" count=""2""> # header
      <true/> # durable
      <ubyte> 4 </ubyte> # priority
      # <null/> ttl
      # <null/> first-acquirer
      # <null/> delivery-count     <<<<<
    </list8>
    
    <small-descriptor code=""0x0:0x72""/> # message-annotations
    <map8 size=""23"" count=""2""> # message-annotations
      <sym8 size=""13"">
        ""x-opt-to-type""
      </sym8>
      <str8-utf8 size=""5"">
        ""queue""
      </str8-utf8>
    </map8>
    
    <small-descriptor code=""0x0:0x73""/> # properties
    <list8 size=""104"" count=""10""> # properties
      <str8-utf8 size=""54""> # message-id
        ""ID:localhost.localdo""
        ""main-56080-141200416""
        ""5134-2:1:2:1:1""
      </str8-utf8>
      <null/> # user-id
      <str8-utf8 size=""29""> # to
        ""queue://testJMSXDeli""
        ""veryCount""
      </str8-utf8>
      <null/> # subject
      <null/> # reply-to
      <null/> # correlation-id
      <null/> # content-type
      <null/> # content-encoding
      <null/> # absolute-expiry-time
      <time t=""1412004165442""/>#2014/9/29 15:22:45.442 # creation-time
      # <null/> group-id
      # <null/> group-sequence
      # <null/> reply-to-group-id
    </list8>
    
    <small-descriptor code=""0x0:0x77""/> # amqp-value
    <str8-utf8 size=""14""> # amqp-value
      ""TextMessage: 0""
    </str8-utf8>
    
  </frame>
  
</TCP>
{noformat}

{noformat}
<TCP time=""15:22:56.033807"" seqno=""1705009397"" size=""215"">
  <source host=""127.0.0.1"" port=""37703""/>
  <target host=""127.0.0.1"" port=""39557""/>
  
  <frame size=""24"" doff=""2"" chan=""1""> 
    
    <small-descriptor code=""0x0:0x15""/> # disposition
    <list8 size=""11"" count=""5""> # disposition
      <true/> # role
      <small-uint> 1 </small-uint> # first
      <small-uint> 1 </small-uint> # last
      <true/> # settled
      <small-descriptor code=""0x0:0x24""/> # state
      <list0/> # accepted
      # <null/> batchable [false]
    </list8>
    
  </frame>
  
  <frame size=""191"" doff=""2"" chan=""1""> 
    
    <small-descriptor code=""0x0:0x14""/> # transfer
    <list8 size=""9"" count=""4""> # transfer
      <small-uint> 1 </small-uint> # handle
      <small-uint> 1 </small-uint> # delivery-id
      <bin8 size=""1""> # delivery-tag
        ""1""
      </bin8>
      <uint0/> # message-format
      # <null/> settled
      # <null/> more [false]
      # <null/> rcv-settle-mode
      # <null/> state
      # <null/> resume [false]
      # <null/> aborted [false]
      # <null/> batchable [false]
    </list8>
    
    <small-descriptor code=""0x0:0x70""/> # header
    <list8 size=""8"" count=""5""> # header
      <true/> # durable
      <ubyte> 4 </ubyte> # priority
      <null/> # ttl
      <null/> # first-acquirer
      <small-uint> 2 </small-uint> # delivery-count     <<<<<
    </list8>
    
    <small-descriptor code=""0x0:0x72""/> # message-annotations
    <map8 size=""23"" count=""2""> # message-annotations
      <sym8 size=""13"">
        ""x-opt-to-type""
      </sym8>
      <str8-utf8 size=""5"">
        ""queue""
      </str8-utf8>
    </map8>
    
    <small-descriptor code=""0x0:0x73""/> # properties
    <list8 size=""104"" count=""10""> # properties
      <str8-utf8 size=""54""> # message-id
        ""ID:localhost.localdo""
        ""main-56080-141200416""
        ""5134-2:1:2:1:1""
      </str8-utf8>
      <null/> # user-id
      <str8-utf8 size=""29""> # to
        ""queue://testJMSXDeli""
        ""veryCount""
      </str8-utf8>
      <null/> # subject
      <null/> # reply-to
      <null/> # correlation-id
      <null/> # content-type
      <null/> # content-encoding
      <null/> # absolute-expiry-time
      <time t=""1412004165442""/>#2014/9/29 15:22:45.442 # creation-time
      # <null/> group-id
      # <null/> group-sequence
      # <null/> reply-to-group-id
    </list8>
    
    <small-descriptor code=""0x0:0x77""/> # amqp-value
    <str8-utf8 size=""14""> # amqp-value
      ""TextMessage: 0""
    </str8-utf8>
    
  </frame>
  
</TCP>
{noformat}",,robbie,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5346,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Sat Nov 01 12:59:39 UTC 2014,,,,,,,,,,,"0|i20muv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Oct/14 17:17;robbie;I fixed a similar issue in the Native outbound transformer via PROTON-715, which has been included in 0.8RC3.;;;","01/Nov/14 12:59;tabish;We are now on 0.8 which has the fixes needed for this;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SSL handshake stalls broker with NIO,AMQ-5368,12743962,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,oliverd,oliverd,25/Sep/14 07:45,13/Jul/15 11:38,14/Jul/23 05:44,09/Jul/15 10:58,5.10.0,5.8.0,5.9.0,,,,,,,5.12.0,,,,Transport,,,,,0,nio,ssl,,,,"using NIOSSL transport, SSL handshakes for ~5000 connections easily stall a broker taking 100% CPU

I'm using version ActiveMQ 5.8, but it occurs on 5.9, 5.10 versions as well

doing some profiling, it showed up that the SSL handshake on broker side eats up ~90% of overall CPU time
by checking just the handshake status in very high frequency

top 3 methods sorted by own processor time:
com.sun.net.ssl.internal.ssl.SSLEngineImpl.getHandshakeStatus()
org.apache.activemq.transport.nio.NIOSSLTransport.doHandshake()
com.sun.net.ssl.internal.ssl.SSLEngineImpl.getHSStatus(javax.net.ssl.SSLEngineResult$HandshakeStatus)

the reason is the asynchronous nature of the SSL handshake with NIO, especially the execution of delegated tasks:
- NIOSSLTransport.doHandshake() executes delegated tasks using a TaskRunnerFactory asynchronously
- in the meantime it loops calling SSLEngine.getHandshakeStatus()

to improve the situation I did the following changes:
- run delegated tasks synchronously in method doHandshake (handshake status NEED_TASK) instead of asynchronously
- added some small wait cycles in method secureRead as there is not always data available with NIO (to further reduce the number of calls to SSLEngine.getHandshakeStatus)

after these changes the SSL handshake for several thousand connections in parallel was not a problem anymore
","java version ""1.7.0_65""
",dejanb,oliverd,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Sep/14 07:53;oliverd;NIOSSLTransport.patch;https://issues.apache.org/jira/secure/attachment/12671170/NIOSSLTransport.patch",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Jul 13 11:38:21 UTC 2015,,,,,,,Patch Available,,,,"0|i20gv3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Sep/14 07:53;oliverd;NIOSSLTransport.java with 2 modifications:
- run (first) delegated task synchronously
- add some wait cycles for channel reads (to prevent too frequent reads)

debug log statements could be removed, of course;;;","06/Jul/15 10:28;dejanb;Hi Oliver, can you by any chance provide a test case that reproduces this problem? It would help verify the fix and protect it in the future.;;;","09/Jul/15 10:58;dejanb;I implemented a different fix (with using a selector to wait for the socket data in case of buffer underflow). It have the same effect on the handshake performance and resource usage.

https://git1-us-west.apache.org/repos/asf?p=activemq.git;a=commit;h=52e45271

There's a new ""test"" NIOSSLLoadTest.testConnectionHandshakeLoad() which could be used to monitor and profile broker behaviour in this scenario. It's ignored by default, as it will be problematic to run in CI.;;;","11/Jul/15 11:07;tabish;I've noticed that since this fix went in there are intermittent test failures in the STOMP module in Jenkins around NIO tests and handshake timeouts, might be worth a look. ;;;","13/Jul/15 11:38;dejanb;Thanks Tim, I had an unrealistic selector read timeout during handshake. This fix

https://git1-us-west.apache.org/repos/asf?p=activemq.git;a=commit;h=ad8879d2 

uses soTimeout value or blocks forever if that value is not set. This should help with the test in slow environments.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MQTT topic name in received message is wrong in network of brokers scenario,AMQ-5365,12742609,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,workanandr,workanandr,18/Sep/14 23:16,20/Oct/14 19:06,14/Jul/23 05:44,20/Oct/14 19:06,5.11.0,,,,,,,,,5.11.0,,,,MQTT,,,,,0,mqtt,networkofbrokers,,,,"Setup:
Broker1 and Broker2 are networked using a duplex connection.
<Broker1> -------------- <Broker2>

Transport connector of Broker1:
-----------------------------------------
<transportConnector name=""mqtt""uri=""mqtt://0.0.0.0:1883?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600&amp;transport.subscriptionStrategy=mqtt-virtual-topic-subscriptions”/>


Transport connector of Broker2:
-----------------------------------------
<transportConnector name=""mqtt""uri=""mqtt://0.0.0.0:2883?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600&amp;transport.subscriptionStrategy=mqtt-virtual-topic-subscriptions”/>

Problem:
In a network of brokers scenario with MQTT clients, sometimes the topic that is reported (to the clients) when the message is received has extra information prefixed to what the consumer subscribed to. For example, if the consumer received a message on topic dup/msg/test, it is received as:

Consumer/duptestsub:AT_LEAST_ONCE/VirtualTopic/dup/msg/tes",,netlancermobi,surfnerd,tabish,workanandr,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Oct 20 19:06:17 UTC 2014,,,,,,,,,,,"0|i208if:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Sep/14 02:18;netlancermobi;Please, can you provide the network connector configuration. are you making use of wild card ?

;;;","22/Sep/14 16:59;workanandr;Broker1:
             <networkConnector uri=""static:(tcp://localhost:62002)""/>
             <transportConnector uri=""tcp://localhost:62001""/>

Broker2:
             <networkConnector uri=""static:(tcp://localhost:62001)""/>
             <transportConnector uri=""tcp://localhost:62002""/>;;;","23/Sep/14 15:18;netlancermobi;This is happening for a topic which is not hierarchical as well. ;;;","17/Oct/14 17:31;netlancermobi;Works with the following modified onSend method in MQTTVirtualTopicSubscriptionStrategy 

    @Override
    public String onSend(ActiveMQDestination destination) {
        String amqTopicName = destination.getPhysicalName();
        int idx = amqTopicName.indexOf(VIRTUALTOPIC_PREFIX);
        if (idx > 0) {
            amqTopicName = amqTopicName.substring(idx + VIRTUALTOPIC_PREFIX.length());
            LOG.debug(""onSend TopicName = {} "",amqTopicName);
        }
        return amqTopicName;
    }
;;;","20/Oct/14 19:06;tabish;patch applied with some modification to catch all cases of VirtualTopic names on the send.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
mqtt-doc: Wild card mapping tables in the doc is wrong,AMQ-5360,12741777,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,joeluo,joeluo,16/Sep/14 13:22,16/Sep/14 13:37,14/Jul/23 05:44,16/Sep/14 13:37,,,,,,,,,,,,,,Documentation,,,,,0,,,,,,"The wild card mapping table in the following documentation page is wrong:
http://activemq.apache.org/mqtt.html

The correct mapping should be the following:

'.' => '/'
'*' => '+'
'>' => '#'

so in ActiveMQ wildcard '*' should map to single-level wildcard '+' in MQTT while wildcard '>' should map to multi-level wildcard '#' in MQTT.

http://activemq.apache.org/wildcards.html
http://public.dhe.ibm.com/software/dw/webservices/ws-mqtt/MQTT_V3.1_Protocol_Specific.pdf
",,joeluo,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,2014-09-16 13:22:03.0,,,,,,,,,,,"0|i203if:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to see message contents from the web UI,AMQ-5356,12741382,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,cshannon,aranzuglia,aranzuglia,15/Sep/14 03:08,01/Feb/16 10:49,14/Jul/23 05:44,03/Sep/15 12:54,5.12.0,,,,,,,,,5.13.0,,,,Web Console,,,,,23,,,,,,"When browsing the messages from a queue I'm unable to go into the message's content. Does Jetty need to be upgraded?

The URL I'm trying to reach (/admin/message.jsp):

http://192.168.220.188:8161/admin/message.jsp?id=ID%3avcms1-53950-1410478946965-7%3a1%3a2%3a1%3a1&JMSDestination=contactupdatequeue

I'm using JDK8, tried with 8u11 and 8u20.

The output from ps:

/usr/local/jdk1.8.0_20/bin/java -Xms1G -Xmx1G -Djava.util.logging.config.file=logging.properties -Djava.security.auth.login.config=/opt/activemq-5.10.0/conf/login.config -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote -Djava.awt.headless=true -Djava.io.tmpdir=/opt/activemq-5.10.0/tmp -Dactivemq.classpath=/opt/activemq-5.10.0/conf; -Dactivemq.home=/opt/activemq-5.10.0 -Dactivemq.base=/opt/activemq-5.10.0 -Dactivemq.conf=/opt/activemq-5.10.0/conf -Dactivemq.data=/opt/activemq-5.10.0/data -jar /opt/activemq-5.10.0/bin/activemq.jar start

I get the following exception:

2014-09-15 00:07:07,442 | INFO  | ActiveMQ WebConsole available at http://0.0.0.0:8161/ | org.apache.activemq.web.WebConsoleStarter | main
2014-09-15 00:07:07,482 | INFO  | Initializing Spring FrameworkServlet 'dispatcher' | /admin | main
2014-09-15 00:07:07,808 | INFO  | jolokia-agent: No access restrictor found at classpath:/jolokia-access.xml, access to all MBeans is allowed | /api | main
2014-09-15 01:25:58,377 | INFO  | Connector vm://localhost started | org.apache.activemq.broker.TransportConnector | qtp693267461-37
2014-09-15 01:25:59,870 | WARN  |  | org.eclipse.jetty.servlet.ServletHandler | qtp693267461-39
org.apache.jasper.JasperException: PWC6033: Unable to compile class for JSP

PWC6197: An error occurred at line: 20 in the jsp file: /WEB-INF/tags/form/forEachMapEntry.tag
PWC6199: Generated servlet error:
The type java.util.Map$Entry cannot be resolved. It is indirectly referenced from required .class files


        at org.apache.jasper.compiler.DefaultErrorHandler.javacError(DefaultErrorHandler.java:123)[jsp-2.1-glassfish-2.1.v20100127.jar:]
        at org.apache.jasper.compiler.ErrorDispatcher.javacError(ErrorDispatcher.java:296)[jsp-2.1-glassfish-2.1.v20100127.jar:]
        at org.apache.jasper.compiler.Compiler.generateClass(Compiler.java:376)[jsp-2.1-glassfish-2.1.v20100127.jar:]
        at org.apache.jasper.compiler.Compiler.compile(Compiler.java:437)[jsp-2.1-glassfish-2.1.v20100127.jar:]
        at org.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:608)[jsp-2.1-glassfish-2.1.v20100127.jar:]
        at org.apache.jasper.servlet.JspServletWrapper.loadTagFile(JspServletWrapper.java:261)[jsp-2.1-glassfish-2.1.v20100127.jar:]
        at org.apache.jasper.compiler.TagFileProcessor.loadTagFile(TagFileProcessor.java:683)[jsp-2.1-glassfish-2.1.v20100127.jar:]
        at org.apache.jasper.compiler.TagFileProcessor.access$000(TagFileProcessor.java:88)[jsp-2.1-glassfish-2.1.v20100127.jar:]
        at org.apache.jasper.compiler.TagFileProcessor$TagFileLoaderVisitor.visit(TagFileProcessor.java:739)[jsp-2.1-glassfish-2.1.v20100127.jar:]
        at org.apache.jasper.compiler.Node$CustomTag.accept(Node.java:1501)[jsp-2.1-glassfish-2.1.v20100127.jar:]
        at org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2291)[jsp-2.1-glassfish-2.1.v20100127.jar:]
        at org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2341)[jsp-2.1-glassfish-2.1.v20100127.jar:]
        at org.apache.jasper.compiler.TagFileProcessor$TagFileLoaderVisitor.visit(TagFileProcessor.java:743)[jsp-2.1-glassfish-2.1.v20100127.jar:]
        at org.apache.jasper.compiler.Node$CustomTag.accept(Node.java:1501)[jsp-2.1-glassfish-2.1.v20100127.jar:]
        at org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2291)[jsp-2.1-glassfish-2.1.v20100127.jar:]
        at org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2341)[jsp-2.1-glassfish-2.1.v20100127.jar:]
        at org.apache.jasper.compiler.TagFileProcessor$TagFileLoaderVisitor.visit(TagFileProcessor.java:743)[jsp-2.1-glassfish-2.1.v20100127.jar:]
        at org.apache.jasper.compiler.Node$CustomTag.accept(Node.java:1501)[jsp-2.1-glassfish-2.1.v20100127.jar:]
        at org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2291)[jsp-2.1-glassfish-2.1.v20100127.jar:]
        at org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2341)[jsp-2.1-glassfish-2.1.v20100127.jar:]
        at org.apache.jasper.compiler.Node$Visitor.visit(Node.java:2347)[jsp-2.1-glassfish-2.1.v20100127.jar:]
        at org.apache.jasper.compiler.Node$Root.accept(Node.java:498)[jsp-2.1-glassfish-2.1.v20100127.jar:]
        at org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2291)[jsp-2.1-glassfish-2.1.v20100127.jar:]
        at org.apache.jasper.compiler.TagFileProcessor.loadTagFiles(TagFileProcessor.java:757)[jsp-2.1-glassfish-2.1.v20100127.jar:]
        at org.apache.jasper.compiler.Compiler.generateJava(Compiler.java:222)[jsp-2.1-glassfish-2.1.v20100127.jar:]
        at org.apache.jasper.compiler.Compiler.compile(Compiler.java:435)[jsp-2.1-glassfish-2.1.v20100127.jar:]
        at org.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:608)[jsp-2.1-glassfish-2.1.v20100127.jar:]
        at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:360)[jsp-2.1-glassfish-2.1.v20100127.jar:]
        at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:486)[jsp-2.1-glassfish-2.1.v20100127.jar:]
        at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:380)[jsp-2.1-glassfish-2.1.v20100127.jar:]
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)[geronimo-servlet_2.5_spec-1.2.jar:1.2]
        at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:652)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1320)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]
        at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)[spring-web-3.2.8.RELEASE.jar:3.2.8.RELEASE]
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)[spring-web-3.2.8.RELEASE.jar:3.2.8.RELEASE]
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1291)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]
        at org.apache.activemq.web.SessionFilter.doFilter(SessionFilter.java:45)[activemq-web-5.10.0.jar:5.10.0]
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1291)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]
        at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:102)[file:/opt/activemq-5.10.0/webapps/admin/WEB-INF/classes/:]
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1291)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]
        at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:443)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]
        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]
        at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:521)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]
        at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:227)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]
        at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1044)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]
        at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:372)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]
        at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:189)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]
        at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:978)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]
        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]
        at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]
        at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:521)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]
        at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]
        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]
        at org.eclipse.jetty.server.Server.handle(Server.java:367)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]
        at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:486)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]
        at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:926)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]
        at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:988)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]
        at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]
        at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]
        at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]
        at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]
        at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]
        at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]
        at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]
        at java.lang.Thread.run(Thread.java:745)[:1.8.0_11]
",,acourtneybrown,aranzuglia,artem.karpenko,clauds2x,cott@internetstaff.com,crive,cshannon,erwelch,gerard@charlesconsulting.com,gmotts,jasenj1,jira-bot,kokushibyou,lynge,metatech,mgeorge,mykolap,neillfontes,skup,sobkowiak,stazzioli,tabish,tom_m,twalzer,wilx,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5979,,,AMQ-5928,AMQ-5818,AMQ-5272,,,,,AMQ-5980,,,,,,,,SM-2698,,,,,,"27/Mar/15 09:38;mgeorge;AMQ-5356.patch;https://issues.apache.org/jira/secure/attachment/12707727/AMQ-5356.patch",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Feb 01 10:49:37 UTC 2016,,,,,,,,,,,"0|i2013r:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Nov/14 21:28;kokushibyou;Also seeing this problem with java 1.8.0_25, if that data is at all useful.
{code}
2014-11-07 13:26:40,653 | WARN  | /admin/message.jsp | org.eclipse.jetty.servlet.ServletHandler | qtp2059572982-49
org.apache.jasper.JasperException: PWC6033: Unable to compile class for JSP

PWC6197: An error occurred at line: 20 in the jsp file: /WEB-INF/tags/form/forEachMapEntry.tag
PWC6199: Generated servlet error:
The type java.util.Map$Entry cannot be resolved. It is indirectly referenced from required .class files
{code};;;","23/Feb/15 18:22;artem.karpenko;I confirm this issue with ActiveMQ 5.11.1 and jdk 1.8.0_31;;;","19/Mar/15 15:32;crive;I can confirm the issue seems to be shown only when using jdk 1.8.0, I have tried the same activemq configuration using jdk 1.7 and it works fine.;;;","27/Mar/15 09:38;mgeorge;Here's a quick work-around that works on Java 8.  It uses an array rather than the map entries.;;;","12/May/15 18:32;stazzioli;Implemented the fix you attached by hand and works perfectly with jdk1.8.0_25.
Thanks Man!;;;","10/Jul/15 21:15;skup;hello, I am curious why this is marked Minor, since on MAC 10.9.

If so, this is disappointing since I have been running java8 for a long time now with all sorts of dev tools.  It's not easy/supported to run Java7 and 8 side by side.

I guess I will learn the CLI tool for this feature?

thx, Irene - Nasa Ames Unmanned flight aeronautics
;;;","10/Jul/15 21:26;tabish;Have you tested this using a 5.12-SNAPSHOT to see if it is actually still an issue?;;;","14/Jul/15 13:37;neillfontes;[~tabish121] it still happens with 5.12-SNAPSHOT. I've patched on top of it and it works fine now with 1.8.0_45-b14. +1 vote to be included on the next build.;;;","14/Jul/15 15:25;cshannon;It does appear that the core problem here is with Jetty.  I believe Jetty needs to be upgraded to version 9.x to play nicely with JDK 8.

There would need to be some code modifications done to do the migration though.

Edit:  There has already been some work done for migration: https://issues.apache.org/jira/browse/AMQ-5517

;;;","14/Jul/15 15:35;cshannon;Since support for Jetty 9 was added in ActiveMQ 5.11.0, can someone who's having problems with this test out running with Jetty 9.2.x and see if that solves the issue?;;;","27/Jul/15 14:37;gerard@charlesconsulting.com;I'd be willing to try this but it's not clear how to go about doing this (we treat activemq as a black box except for setting the *xml configuration files). Is there a link to documentation on how to change the jetty used?;;;","27/Jul/15 14:38;crive;Thanks for your email.
I am on annual leave until the 3rd of August with no access to email
I will deal with your query upon my return.

Regards,
Marco Crivellaro
;;;","27/Jul/15 15:09;cshannon;I believe all you should need to do is replace all the Jetty 8 jars with Jetty 9 jars at runtime and it should work.  ActiveMQ uses reflection to determine which version is used at runtime. ;;;","28/Jul/15 07:20;mykolap;Actual release of ActiveMQ 5.11 can't start with 9.1 and 9.3 jetty.;;;","28/Jul/15 07:24;mykolap;It's not true, I try 9.1 and 9.3 and get errors like this:
2015-07-28 10:14:05,701 | ERROR | Failed to load: class path resource [activemq.xml], reason: Error creating bean with name 'securityHandler' defined in class path resource [jetty.xml]: Cannot create inner bean 'sec' of type [org.eclipse.jetty.server.handler.HandlerCollection] while setting bean property 'handler'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sec' defined in class path resource [jetty.xml]: Cannot create inner bean 'org.eclipse.jetty.webapp.WebAppContext#534df152' of type [org.eclipse.jetty.webapp.WebAppContext] while setting bean property 'handlers' with key [0]; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.eclipse.jetty.webapp.WebAppContext#534df152' defined in class path resource [jetty.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Could not instantiate bean class [org.eclipse.jetty.webapp.WebAppContext]: Constructor threw exception; nested exception is java.lang.NoClassDefFoundError: javax/servlet/http/HttpSessionIdListener | org.apache.activemq.xbean.XBeanBrokerFactory | main
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'securityHandler' defined in class path resource [jetty.xml]: Cannot create inner bean 'sec' of type [org.eclipse.jetty.server.handler.HandlerCollection] while setting bean property 'handler'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sec' defined in class path resource [jetty.xml]: Cannot create inner bean 'org.eclipse.jetty.webapp.WebAppContext#534df152' of type [org.eclipse.jetty.webapp.WebAppContext] while setting bean property 'handlers' with key [0]; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.eclipse.jetty.webapp.WebAppContext#534df152' defined in class path resource [jetty.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Could not instantiate bean class [org.eclipse.jetty.webapp.WebAppContext]: Constructor threw exception; nested exception is java.lang.NoClassDefFoundError: javax/servlet/http/HttpSessionIdListener;;;","28/Jul/15 10:43;cshannon;Hmm, I looked and the Websocket support does support Jetty 9 but it might be the case that some work needs to be done to the configuration in the jetty.xml file for the web ui.  I know that in Jetty 9.x some classes were changed so the configuration would need to change as well.

[~tabish121],  Is there any reason we can't migrate everything to the latest 9.x and make that the default? (I was thinking of targeting this work for the 5.13 release) ;;;","28/Jul/15 12:59;tabish;Yes, we should look at moving to the latest release post 5.12;;;","14/Aug/15 10:22;cshannon;I set up a test with JDK8 and Jetty 9.2.13 and verified that this error is fixed with the newer version of Jetty.

[~tabish121], Do you see any reason we need to keep Jetty 8 around or can we just remove it and only support Jetty 9.x?  ;;;","14/Aug/15 10:23;crive;Thanks for your email.
I am currently out of office with no access to email, I will be back in the afternoon of 17th of August.

Regards,
Marco Crivellaro

;;;","14/Aug/15 13:59;tabish;Given the Jetty 8 is EOL there shouldn't be any issue moving 5.13.0 on to v9.  We could I suppose keep the code that detect the jetty version and uses the correct bits if we really wanted to keep support for 8 as an option. ;;;","14/Aug/15 14:30;cshannon;I think we should just drop Jetty 8 altogether because the issue is that there are several API changes in v9.  Several classes in the web demo need would need to be rewritten to detect different versions of jetty plus jetty.xml configuration changes, etc beyond what we already detect for websockets and I'm not sure we'd really be gaining anything considering Jetty 8 is EOL.

I'm working on a patch now for Jetty 9.x;;;","14/Aug/15 14:34;tabish;Pay extra attention to the unit tests in activemq-http which make use of the Java based WebSocket client in jetty 8 as I think that has all changed in v9 to require the JSR 356 methodology ;;;","14/Aug/15 16:27;cshannon;Thanks for the tip.  I figure it might take a little bit of time to convert everything over but I at least wanted to get started on it.;;;","17/Aug/15 20:13;cshannon;[~tabish121],

I've made some good progress with this.  I've ripped out Jetty 8 and updated to the latest Jetty 9.2 and I updated all of the tests in activemq-http.  I'm working on updating the spring config now for the web console and testing that out.  A couple things though:

- Do we need to use the gernomio spec jars?  Jetty 9.2 needs the servlet 3.1 spec jar and I only see a 3.0 geronimo version.
- Is anyone using the Krb5AndCertsSslSocketConnector? That would need to be re-written completely to work with Jetty 9 but I don't see any tests for it or anything so I'm not sure if it's being used.;;;","17/Aug/15 20:56;tabish;1. The Geronimo spec jars use an Apache license, others may be GPL which we cannot use, it may be necessary to contact the Geronimo project to request a 3.1 release similar to what the was needed for Artemis with the JMS 2.0 spec jar.  

2. I don't know if anyone is using that or not, given there is not tests we don't even know if it works now.  I'd guess it's not broadly used but I couldn't say for sure.  It could be removed as broken in a 5.13 release and anyone who really needs that could contribute something that works with Jetty 9 if they really wanted to update their broker and relied on that feature.;;;","17/Aug/15 21:19;cshannon;Ok, thanks I figured it was an Apache license issue.  I think I will need to request both new Servlet and a new JSP spec jar so I will contact the project and send them a note tomorrow.

I'll look at the Kerberos stuff in more detail to see if it's reasonable to migrate for Jetty 9.x support.  If it's going to be difficult then it could be removed and a new Jira could be opened to address it if someone needs it.  I don't want to hold up the Jetty upgrade for that one class as the web console is broken for anyone using JDK8 right now.;;;","25/Aug/15 15:32;cshannon;This is done except for the OSGi piece.  It looks like Karaf will need to be upgraded to support a newer version of Jetty.;;;","03/Sep/15 12:52;jira-bot;Commit f44c3d20ed2a9f74746a02418a4381909936a000 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=f44c3d2 ]

https://issues.apache.org/jira/browse/AMQ-5356

Upgraded to Jetty 9.2.x to solve JDK 8 compatibility issues.
This required migrating to the new WebSocket API.
;;;","03/Sep/15 12:52;jira-bot;Commit 0f492f3b4bc2665fd38ea66813381e4bd9ca3b64 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=0f492f3 ]

https://issues.apache.org/jira/browse/AMQ-5356

Migrated to Karaf 4.  This was required to support Jetty 9.2.x.
Fixed all OSGi unit tests.
;;;","03/Sep/15 12:54;cshannon;I have upgraded Jetty to the latest 9.2.x and fixed the web console and all websocket support.  I also migrated to Karaf 4 for our OSGi tests since Jetty 9.2 wasn't compatible with Karaf 2.x.  I'll keep an eye on our CI builds and revisit this if there are any test failures.;;;","12/Oct/15 22:52;sobkowiak;Is it possible to port this fix to 5.12.x?;;;","12/Oct/15 22:53;crive;Thanks for your mail.

I'm travelling on business until the 14th of October having only limited access to my email.

Kind regards
Marco
;;;","13/Oct/15 13:50;cshannon;I don't think it would be a good idea to put this into 5.12.x.  The changes required here were fairly major as the Jetty upgrade was a large API change to the Websocket API so it required making major modifications to the web layer and all of the configuration associated with it.  It also required dependency changes such as updating the Servlet API, etc.  Lastly, I had to upgrade to a new major version of Karaf for OSGI support (from 2.x to 4.x) so applying this as a minor release doesn't seem appropriate.  ;;;","13/Oct/15 14:51;sobkowiak;Ok, no problem if the fix requires so complex changes. We will wait for 5.13.x. Thanks for the clarification. ;;;","01/Feb/16 10:49;metatech;For information, under ServiceMix 5.x/Karaf 2.x, this problem can be solved by upgrading bundle ""org.ops4j.pax.web.pax-web-jsp"" to version ""3.2.8"" (see https://ops4j1.jira.com/browse/PAXWEB-916).;;;",,,,,,
persistJMSRedelivered feature breaks the ability for KahaDB to compact its journal files,AMQ-5354,12741100,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,gtully,jfugitt,jfugitt,12/Sep/14 16:54,15/Sep/14 15:00,14/Jul/23 05:44,15/Sep/14 15:00,5.10.0,,,,,,,,,5.11.0,,,,Message Store,,,,,0,,,,,,"While doing testing with persistJMSRedelivered enabled in the ActiveMQ config file (which is new in 5.10), it became obvious that the KahaDB transaction log files are never being compacted even though all messages had been consumed.  This is very easy to reproduce using a standard config with the following policyEntry to enable the feature:
<destinationPolicy>
            <policyMap>
              <policyEntries>
                <policyEntry queue="">"" persistJMSRedelivered=""true""></policyEntry>

After waiting several minutes it was obvious the KahaDB transaction logs (~2500 files using 30GB of disk space) were not getting compacted and a log with DEBUG enabled (attached) shows that the files are getting filtered out as gc candidates.

Since the updateMessage function is essentially doing a second ""add message"" operation down in KahaDB, it appears that the reference to the original message is not being cleaned up from the locationIndex preventing compaction of any message.  
I will attach a patch that fixes the issue but this appears to be a pretty critical issue when using the persistJMSRedelivered feature.",,gtully,jfugitt,lichtin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Sep/14 16:58;jfugitt;AMQ5354.patch;https://issues.apache.org/jira/secure/attachment/12668384/AMQ5354.patch","12/Sep/14 16:57;jfugitt;activemq.log;https://issues.apache.org/jira/secure/attachment/12668383/activemq.log",,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Sep 15 15:00:42 UTC 2014,,,,,,,Patch Available,,,,"0|i1zzcv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Sep/14 16:57;jfugitt;ActiveMQ TRACE log that illustrates the problem with attempting to gc KahaDB transaction log files when using the persistJMSRedelivered feature.;;;","12/Sep/14 16:58;jfugitt;Patch for KahaDB that fixes the problem where persistJMSRedelivered is breaking KahaDB's ability to compact its transaction log files.;;;","15/Sep/14 15:00;gtully;patch applied with thanks :-)

https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=a0c42a61;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Mismatch of camel versions allowed,AMQ-5353,12740226,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dkulp,dkulp,dkulp,09/Sep/14 20:19,28/Mar/16 07:03,14/Jul/23 05:44,28/Mar/16 07:03,5.10.0,,,,,,,,,,,,,Camel,OSGi/Karaf,,,,1,,,,,,"
The Karaf features file allows a Camel range of [2.12,3).   However, that range is not entered into the bundle plugin for the modules that import camel so they result in having a range of [2.13,3) precluding them from working with Camel 2.12.",,davsclaus,dkulp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Mar 28 07:03:03 UTC 2016,,,,,,,,,,,"0|i1zumf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Mar/16 07:03;davsclaus;Has been fixed for a while;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQP messages published transactionally should be accepted using a TransactionalState,AMQ-5352,12740188,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,robbie,robbie,09/Sep/14 16:57,09/Sep/14 18:20,14/Jul/23 05:44,09/Sep/14 18:20,5.10.0,,,,,,,,,5.11.0,,,,AMQP,,,,,0,,,,,,"Currently, when an incoming AMQP message is part of a transaction, it is accepted using the regular Accepted terminal state on the disposition reply. According to the spec [1] the disposition should actually use a TransactionalState with Accepted outcome.

[1] http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-transactions-v1.0-os.html#doc-idp111808",,robbie,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Sep/14 17:00;robbie;AMQ-5352.patch;https://issues.apache.org/jira/secure/attachment/12667439/AMQ-5352.patch",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Sep 09 18:20:03 UTC 2014,,,,,,,Patch Available,,,,"0|i1zudz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Sep/14 17:00;robbie;Attaching patch which checks if the deliverystate was transactional and if so replies with a disposition using a TransactionalState containing the same txn-id and the Accepted outcome.;;;","09/Sep/14 18:20;tabish;Fixed on trunk.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Separate the AMQP maxFrameSize setting from the WireFormat maxFrameSize setting.,AMQ-5350,12740151,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,tabish,tabish,09/Sep/14 14:56,09/Sep/14 15:45,14/Jul/23 05:44,09/Sep/14 15:00,5.10.0,,,,,,,,,5.11.0,,,,AMQP,,,,,0,,,,,,"We currently set the maxFrameSize value in Proton using the WireFormat maxFrameSize value.  This not the correct application of this property as it is meant to control the max size a frame we will accept before we disconnect a client whereas in AMQP this control how large a frame is before the transport starts splitting the data into multiple frames.  

Setting this value on Proton has other side effects like increased memory utilization and decreased performance.  Instead of linking these we should introduce an additional property on the AMQP WireFormat class to allow for setting the maxAmqpFrameSize which defaults to no max.  ",,clebertsuconic,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Sep 09 15:45:30 UTC 2014,,,,,,,,,,,"0|i1zu5z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Sep/14 15:00;tabish;Fixed on trunk.;;;","09/Sep/14 15:36;clebertsuconic;do you still set maxFrameSize on the transport?


I found out that not setting it at all will make performance to be 10X better due to some issues on Proton. It's a bug on Proton probably and still not fixed.;;;","09/Sep/14 15:45;tabish;No, it's not set unless the URI of the TransportConnector includes the wireFormat.maxAmqpFrameSize value.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
persistJMSRedelivered flag doesn't work correctly when exceptions occur,AMQ-5347,12739972,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,jfugitt,jfugitt,08/Sep/14 21:02,31/Oct/14 19:32,14/Jul/23 05:44,31/Oct/14 16:46,5.10.0,,,,,,,,,5.11.0,,,,Broker,,,,,0,,,,,,"The new flag in 5.10 that ensures the JMSRedelivered flag persists across broker restarts does not work correctly when an exception occurs when attempting to write the ""message update"" to disk before the restart.  In that case, messages can be assigned to receivers, the broker can be restarted, and then the messages are re-assigned to receivers and do not include the JMSRedelivered flag as expected.  I will attach a unit test and proposed fix to illustrate the problem.

Also, here is additional information I had sent to the mailing list:
When using the new option persisteJMSRedelivered (to ensure the redelivered flag is set correctly on potentially duplicate messages that are re-dispatched by the broker even after a restart): <policyEntry queue="">"" persistJMSRedelivered=""true""></policyEntry>

there is still a case where a message can be re-sent and will not be marked as redelivered.  I can open a JIRA and probably create a unit test but it is pretty clear from the pasted code below where the exception is getting swallowed.  Would the preferred fix be to update the broker interface and make preProcessDispatch throw an IOException or would it be better to add a new field to the MessageDispatch class to indicate an exception occurred and leave the interface alone?

The specific case when this can happen is when a MessageStore returns an exception during the updateMessage call, which then gets swallowed (and an ERROR logged) and still allows the message to be dispatched to the consumer.  The exception seems like it should actually propagate out of the preProcessDispatch function in RegionBroker as shown below, but this would require changing the Broker interface and making the void preProcessDispatch function throw an IOException.

//RegionBroker.java
    @Override
    public void preProcessDispatch(MessageDispatch messageDispatch) {
        Message message = messageDispatch.getMessage();
        if (message != null) {
            long endTime = System.currentTimeMillis();
            message.setBrokerOutTime(endTime);
            if (getBrokerService().isEnableStatistics()) {
                long totalTime = endTime - message.getBrokerInTime();
                ((Destination) message.getRegionDestination()).getDestinationStatistics().getProcessTime().addTime(totalTime);
            }
            if (((BaseDestination) message.getRegionDestination()).isPersistJMSRedelivered() && !message.isRedelivered() && message.isPersistent()) {
                final int originalValue = message.getRedeliveryCounter();
                message.incrementRedeliveryCounter();
                try {
                    ((BaseDestination) message.getRegionDestination()).getMessageStore().updateMessage(message);
                } catch (IOException error) {
                    LOG.error(""Failed to persist JMSRedeliveryFlag on {} in {}"", message.getMessageId(), message.getDestination(), error);
                } finally {
                    message.setRedeliveryCounter(originalValue);
                }
            }
        }
    }

//TransportConnection.java
    protected void processDispatch(Command command) throws IOException {
        MessageDispatch messageDispatch = (MessageDispatch) (command.isMessageDispatch() ? command : null);
        try {
            if (!stopping.get()) {
                if (messageDispatch != null) {
                    broker.preProcessDispatch(messageDispatch);
                }
                dispatch(command);  //This code will dispatch the message whether or not the updateMessage function actually worked
            }
        ...
",,arkin,gtully,jfugitt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Sep/14 21:07;jfugitt;AMQ5347.patch;https://issues.apache.org/jira/secure/attachment/12667243/AMQ5347.patch","08/Sep/14 21:07;jfugitt;RedeliveryRestartWithExceptionTest.java;https://issues.apache.org/jira/secure/attachment/12667244/RedeliveryRestartWithExceptionTest.java",,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Oct 31 19:32:55 UTC 2014,,,,,,,Patch Available,,,,"0|i1zt33:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Sep/14 21:07;jfugitt;Attached a proposed patch against the latest code on github for the persistJMSRedelivered issue.

Also, attached a new unit test that passes when run from activemq-unit-tests after the fix is applied.;;;","31/Oct/14 16:46;gtully;thanks for the test case and patch. I decided to keep the broker interface as is b/c lots of folks have their own plugins so the exception is propagated via a runtime exception. The exception kills the connection and hence the consumer and the delivery failure is properly accounted for.
A variant of your test where the broker remains alive exposed another issue with the redelivery flag and dispatch ordering. That is also sorted with
http://git-wip-us.apache.org/repos/asf/activemq/commit/52e1a05a ;;;","31/Oct/14 19:32;jfugitt;Great thanks.  Killing the connection was the important thing and the runtime exception looks like it accomplishes that.  Originally, I looked at a way to sneak the exception through the interface since changing would impact so many files/plugins but ended up just submitting the patch so that the intent was clear.  Glad you were able to get this in.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve LDAP communication,AMQ-5345,12739858,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,08/Sep/14 11:51,06/Feb/15 10:44,14/Jul/23 05:44,08/Sep/14 11:51,5.10.0,,,,,,,,,5.10.1,5.11.0,,,,,,,,0,,,,,,Various improvement in how we communicate with LDAP,,dejanb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Feb 06 10:44:44 UTC 2015,,,,,,,,,,,"0|i1zsdz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Feb/15 10:44;dejanb;This issue fixes CVE-2014-3612. Take a look at http://activemq.apache.org/security-advisories.html for more details.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
QueueBrowser with expired messages hangs until woken by expired messages background job,AMQ-5340,12738296,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,slowstrider,slowstrider,01/Sep/14 16:08,15/Sep/15 12:58,14/Jul/23 05:44,06/Jul/15 20:49,5.10.0,5.9.0,,,,,,,,5.12.0,,,,Broker,,,,,1,QueueBrowser,,,,,"I would expect browsing a queue with only a few messages to not take a long time. Indeed it normally takes only a few ms. in my application. But sometimes the ActiveMQQueueBrowser hangs for up to 30 seconds at method before returning!

When the issue occurs, the loop in hasMoreElements() calls waitForMessage() multiple times which times out after 2s at semaphore.wait(2000) without receiving any message from the broker. I found that when the broker's background job that checks for expired messages runs, the browser happens to be woken even if there are no expired messages. So setting the expireMessagesPeriod to a low value (e.g. 200ms) is a good workaround for this issue, but this is quite brittle because it uses internal broker implementation that may not even be related to the issue!

To reproduce:

- (this is what I do in my application) create a queue, send a few message with an expiration time of 10 seconds and repeatedly browse it until it is empty. If I browse the queue after these 10 seconds have passed, the issue occurs!
- I can always reproduce the issue by running AMQ580BrowsingBug from the related bug report AMQ-4595: this browsing test seems to always hang. I slightly adjusted the test so you can easily change the expired messages period and see the runtime differ when changing this.",,cshannon,GercoDries,githubbot,gtully,slowstrider,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQCPP-576,AMQNET-505,AMQ-4595,,,,,,,,,,,,"01/Sep/14 16:12;slowstrider;AMQ5340BrowsingPerformanceBug.java;https://issues.apache.org/jira/secure/attachment/12665787/AMQ5340BrowsingPerformanceBug.java","23/Jun/15 09:21;slowstrider;AMQ5340BrowsingPerformanceBugCorrected.java;https://issues.apache.org/jira/secure/attachment/12741255/AMQ5340BrowsingPerformanceBugCorrected.java","22/Jun/15 16:57;cshannon;AMQ5340BrowsingWithSpring.java;https://issues.apache.org/jira/secure/attachment/12741070/AMQ5340BrowsingWithSpring.java",,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Sep 15 12:58:19 UTC 2015,,,,,,,,,,,"0|i1zk2f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Sep/14 16:12;slowstrider;Attached JUnit test that shows the issue. On my machine it runs in 0.7ms when sending 50 messages using EXPIRE_MESSAGES_PERIOD = 200. With EXPIRE_MESSAGES_PERIOD = 10000 and otherwise the same settings it runs in 10.5s, with EXPIRE_MESSAGES_PERIOD = 30000 in 30.5s.;;;","14/Oct/14 02:39;GercoDries;I'm experiencing this issue as well, but my messages are not expiring. Steps to reproduce on AMQ 5.10.0, default configuration - just unzip and run:

 # Send a few messages to a queue
 # Browse it repeatedly
 # Observe that on some browse attempts hasMoreMessages() takes a very long time (tens of seconds);;;","18/Jun/15 21:07;cshannon;This is not a problem and is working as intended.  Your issue is that you are using a transaction and you never call commit so your messages are never acknowledged by the broker.  Since your messages are never acknowledged, hasMoreElements() will always return true because the QueueBrowser is never notified that it is done browsing until the expire messages task runs and removes the messages.

In your test on line 115 when you create your session, if you change {{connection.createSession(true, Session.AUTO_ACKNOWLEDGE)}} to {{connection.createSession(false, Session.AUTO_ACKNOWLEDGE}} then your test will immediately finish and not hang.

 If you still want to use a transaction then you need to call commit on the session after you get each element or hasMoreElements() is never going to finish.  So you would change your loop to:

{code:java}
while (enumeration.hasMoreElements()) {
	TextMessage m = (TextMessage) enumeration.nextElement();
	browsed++;
        session.commit();
	LOG.info(""B[{}]: {}"", browsed, m.getText().substring(0, 100));
}
{code};;;","19/Jun/15 16:28;cshannon;After talking with [~tabish121] about this issue, I'm going to take a look and see what it would take to change the QueueBrowser behavior so it doesn't participate in a transaction since it doesn't really make sense to be transacted. ;;;","22/Jun/15 16:19;slowstrider;[~christopher.l.shannon], following your suggestion for either properly handling transactions or not using transactions solves the issue in the example I created.

What is very weird is that the issue still remains in my actual application. I am using standalone Spring (3.2.5.RELEASE, no J2EE container). I use the browseSelected method of a org.springframework.jms.core.JmsTemplate that is configured with an ActiveMQConnectionFactory. As is the default, it does not use a transaction and it uses auto acknowledge.

Problem also remains when I set sessionTransacted to true on the JmsTemplate and call commit after fetching each message.;;;","22/Jun/15 16:58;cshannon;[~slowstrider],

That is odd because it should work fine.  I just modified your example to use a JmsTemplate and browseSelected to browse the queue and everything works as expected and finishes in less than 1 second.  I went ahead and uploaded my change so you can see what I did.   I'm using Spring version 3.2.11.RELEASE (current version in ActiveMQ's master) ;;;","22/Jun/15 20:56;slowstrider;Thank you for taking the time to solve this issue. Perhaps it's some specific configuration in my setup e.g. in activemq.xml or my Spring configuration which creates the queue. I will see if I can isolate the issue.;;;","23/Jun/15 09:17;slowstrider;I found out what I did wrong. The AMQ5340BrowsingPerformanceBug.java does not reproduce the issue and indeed contains the bug you have mentioned. It does not actually do what I am claiming in the bug description! With a small change I can reproduce the original bug I mentioned:

- set a time to live of 1 second for the messages that are sent
- set expireMessagesPeriod to 10 seconds
- repeatedly browse the queue until it is empty, sleeping for 100ms in between

One would expect this to end after at most 1200 ms or so, but it actually runs for 10 seconds! After all messages have expired enumeration.hasMoreElements() blocks instead of immediately returning false.;;;","23/Jun/15 09:21;slowstrider;AMQ5340BrowsingPerformanceBugCorrected actually shows the issue I'm experiencing.;;;","23/Jun/15 09:29;slowstrider;In summary: after there are expired messages, the queue browser's enumeration.hasMoreElements() blocks until the expired messages are removed by the background job.

The blocking is unexpected. I would expect the enumeration to immediately return no messages at all, or perhaps alternatively immediately return the expired messages which the background job hasn't removed yet.;;;","23/Jun/15 18:14;cshannon;Thanks for submitting your updated test case, I can see where this an issue now.

[~gtully] and [~tabish121],

This is another interesting issue relating to expired messages.  The problem with this test case is the messages are added to the subscription to be dispatched but when the subscription goes to dispatch them the logic detects the messages are expired so the QueueBrowser client never gets any messages.  Unfortunately, since the QueueBrowser never receives any messages it never sends back any acks and acks are what trigger the logic to send a NULL_MESSAGE signaling the browser is done.  This happens in the iterate method in Queue.

So basically the QueueBrowser needs some way to know that it will never receive any messages.  The QueueBrowser already calls off to waitForMessage() in the hasMoreElements() so using the pullCommand might work here as that would trigger the NULL_MESSAGE to get sent back.  However, right now a pull command is never sent if prefetch is greater than 0.;;;","24/Jun/15 07:16;slowstrider;When the queue has no messages at all the browser returns immediately. This is true before sending any message as well as after the expired messages have been removed by the background job.;;;","25/Jun/15 10:06;gtully;[~christopher.l.shannon]  - it does not make sense to me that a queue browser would check expiry, it should get a snapshot of messages from its creation time.
maybe the simplest thing is to make the expiry check from org.apache.activemq.broker.region.PrefetchSubscription#dispatchPending conditional on not being a browser:                                
{code} if (!isBrowser()  && node!=QueueMessageReference.NULL_MESSAGE && node.isExpired()) {{code}
;;;","25/Jun/15 13:03;cshannon;[~gtully],

I agree, not checking expiry for browsers makes sense.  This almost works but it appears there is something else that would need to be changed too...The problem is when running the test case against this change, the last run breaks.  The {{enumeration.hasMoreElements()}} returns true but the only thing pending is the NULL control message so then {{enumeration.nextElement()}} returns null.  It's detecting that no new messages were added in the iterate() method in Queue and calling brwoser.decrementQueueRef() which sends the NULL control message.  I haven't looked at it yet to figure out why it's doing that.;;;","06/Jul/15 11:50;githubbot;GitHub user cshannon opened a pull request:

    https://github.com/apache/activemq/pull/127

    https://issues.apache.org/jira/browse/AMQ-5340

    A QueueBrowser no longer checks expiry on messages to prevent a
    browser from hanging in between the hasMoreElements check and actually
    getting a message.  This means that if messages were in the queue when
    the browser started it will receive messages even if they are now
    expired. Even though the browser will get the expired message, the
    broker will still expire it to prevent future access to it.


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/cshannon/activemq AMQ-5340

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/127.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #127
    
----
commit ebac24a95870fda9de760709ffb5533adaa5c7f7
Author: Christopher L. Shannon <christopher.l.shannon@gmail.com>
Date:   2015-07-06T02:11:23Z

    https://issues.apache.org/jira/browse/AMQ-5340
    
    A QueueBrowser no longer checks expiry on messages to prevent a
    browser from hanging in between the hasMoreElements check and actually
    getting a message.  This means that if messages were in the queue when
    the browser started it will receive messages even if they are now
    expired. Even though the browser will get the expired message, the
    broker will still expire it to prevent future access to it.
    
    Thanks to Henno Vermeulen for providing a test case.

----
;;;","06/Jul/15 11:53;cshannon;I finally got some time to come back to this.  I created a PR so that a queue browser now ignores expiration but the broker will still expire the message on dispatch.  This way the browser will get a snapshot when started and prevent it from hanging but any future calls (a new browser, etc) won't get the messages as they have expired on the broker end.  ;;;","06/Jul/15 20:23;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/127
;;;","06/Jul/15 20:49;tabish;Fix applied, thanks!;;;","15/Sep/15 12:58;slowstrider;Thank you for solving this, I upgraded to ActiveMQ 5.12.0 and my tests now succeed while they fail in 5.10.0.;;;",,,,,,,,,,,,,,,,,,,,,,
Bug in ConcurrentLinkedQueue leads to excessive CPU-consumption by ActiveMQ process,AMQ-5337,12737331,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,Wawan,Wawan,28/Aug/14 08:09,18/Dec/14 00:51,14/Jul/23 05:44,29/Aug/14 19:54,5.10.0,5.9.0,5.9.1,,,,,,,5.10.1,5.11.0,,,Broker,,,,,0,,,,,,"The AdvisoryBroker use a ConcurrentLinkedQueue to store consumers.
This standard JDK class has a bug which can lead to an OutOfMemory : https://bugs.openjdk.java.net/browse/JDK-8054446

In our environment we observe that ActiveMQ process cpu usage is continually climbing and that the ConcurrentLinkedQueue in the AdvisoryBroker grows indefinitely.

The ConcurrentLinkedQueue is a non-blocking concurrent FIFO datastructure provided by the core Java Development Kit API starting from Java 5. 
AdvisoryBroker use offer() method to add a new consumer in the ConcurrentLinkedQueue, and remove() method to remove it.
When the consumer removed is the last element of the queue, the Consumer object is nulled but a node remain in the queue. The null node is then never garbage collected. This is true only for the last element of the queue. Any other element is removed safely.

Related bug : https://issues.apache.org/jira/browse/AMQ-4853
",Linux Ubuntu,kefir,tabish,Wawan,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5474,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Aug 29 19:54:02 UTC 2014,,,,,,,,,,,"0|i1zfjb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/Aug/14 19:54;tabish;In light of the concerns here about OOM issues with the concurrent queue I've switched the code to use a LinkedHashMap and protected access with a R/W lock.  The existing tests show no loss of performance due to this change.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
XPath selector - make xml parser features configurable ,AMQ-5333,12736785,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,26/Aug/14 12:45,06/Feb/15 10:43,14/Jul/23 05:44,26/Aug/14 12:53,5.10.0,,,,,,,,,5.11.0,,,,,,,,,0,,,,,,We need to be able to set xml parser features configurable using system properties.,,dejanb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Feb 06 10:43:25 UTC 2015,,,,,,,,,,,"0|i1zc7j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Aug/14 12:53;dejanb;Fixed with http://git-wip-us.apache.org/repos/asf/activemq/commit/b9696ac8 with some sensible defaults introduced. Features can be set by using system properties starting with ""org.apache.activemq.documentBuilderFactory.feature:"" prefix, like

{code}-Dorg.apache.activemq.documentBuilderFactory.feature:http://xml.org/sax/features/external-general-entities=true{code};;;","06/Feb/15 10:43;dejanb;This issue fixes CVE-2014-3600. take a look at http://activemq.apache.org/security-advisories.html for more details.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MQTT unsubscribe command doesn't remove durable subscriber from topic,AMQ-5330,12736021,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,smartgear,smartgear,22/Aug/14 09:17,04/Sep/14 10:05,14/Jul/23 05:44,04/Sep/14 10:05,5.9.0,,,,,,,,,,,,,MQTT,,,,,0,,,,,,"I used a mqtt client, Paho, connected to ActiveMQ5.9.0 and subscribed a topic with cleansession=false. Then I found a durable consumer was created on specified topic. Then I unsubscribed from that topic and closed the mqtt connection. After that I found the durable consumer was still there. I think the durable consumer should be removed when client unsubscribed from the specified topic, otherwise the client would have no chance to remove it.",windows xp sp3,smartgear,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Sep 04 08:52:41 UTC 2014,,,,,,,,,,,"0|i1z827:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Aug/14 10:10;tabish;Please retest against v5.10.0 as there are many MQTT fixes there. ;;;","04/Sep/14 08:52;smartgear;I just tried with v5.10.0.
the problem doesn't exist in v5.10.0.
thanks a lot.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ Message getProperty and setProperty inconsistent behaviour,AMQ-5323,12734405,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,,joaomelo,joaomelo,15/Aug/14 12:39,18/Dec/14 00:39,14/Jul/23 05:44,15/Aug/14 18:24,5.10.0,,,,,,,,,5.10.1,5.11.0,,,JMS client,,,,,0,,,,,,"When you retrieve the JMSDeliveryMode property from an ActiveMQ message, it returns either ""PERSITENT"" or ""NON_PERSISTENT"".

However, when using the set property, it only supports either Integer values or Boolean values.

That is why is sensible to support the mapping from the above string representation (""PERSITENT"" or ""NON_PERSISTENT"") to integer (1 or 2).",,joaomelo,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4144,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,412345,,,Fri Aug 15 18:24:07 UTC 2014,,,,,,,,,,,"0|i1yxpb:",412332,,,,,,,,,,,,,,,,,,,,,"15/Aug/14 18:24;tabish;Fixed on trunk.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activeMQ  levelDB,AMQ-5321,12733793,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,kevin2014,kevin2014,13/Aug/14 15:23,03/Feb/17 23:06,14/Jul/23 05:44,03/Feb/17 23:06,5.10.0,,,,,,,,,,,,,LevelDB,,,,,0,,,,,,"https://issues.apache.org/jira/browse/AMQ-5257    which was duplicated by
https://issues.apache.org/jira/browse/AMQ-5105.
claimed to be fixed in 5.11.0,   but when I used the binaries of 5.11.0  from unreleased   (https://repository.apache.org/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.11-SNAPSHOT/) , it is not fixed yet.

here is what I got:


PSHOT\bin\win32>activemq.bat
wrapper  | --> Wrapper Started as Console
wrapper  | Launching a JVM...
jvm 1    | Wrapper (Version 3.2.3) http://wrapper.tanukisoftware.org
jvm 1    |   Copyright 1999-2006 Tanuki Software, Inc.  All Rights Reserved.
jvm 1    |
jvm 1    | Java Runtime: Oracle Corporation 1.7.0_67 C:\Program Files (x86)\Java
\jre7
jvm 1    |   Heap sizes: current=15872k  free=12305k  max=1013632k
jvm 1    |     JVM args: -Dactivemq.home=../.. -Dactivemq.base=../.. -Djavax.net
.ssl.keyStorePassword=password -Djavax.net.ssl.trustStorePassword=password -Djav
ax.net.ssl.keyStore=../../conf/broker.ks -Djavax.net.ssl.trustStore=../../conf/b
roker.ts -Dcom.sun.management.jmxremote -Dorg.apache.activemq.UseDedicatedTaskRu
nner=true -Djava.util.logging.config.file=logging.properties -Dactivemq.conf=../
../conf -Dactivemq.data=../../data -Djava.security.auth.login.config=../../conf/
login.config -Xmx1024m -Djava.library.path=../../bin/win32 -Dwrapper.key=7JJvTVF
5VnXQi50z -Dwrapper.port=32000 -Dwrapper.jvm.port.min=31000 -Dwrapper.jvm.port.m
ax=31999 -Dwrapper.pid=6236 -Dwrapper.version=3.2.3 -Dwrapper.native_library=wra
pper -Dwrapper.cpu.timeout=10 -Dwrapper.jvmid=1
jvm 1    | Extensions classpath:
jvm 1    |   [..\..\lib,..\..\lib\camel,..\..\lib\optional,..\..\lib\web,..\..\l
ib\extra]
jvm 1    | ACTIVEMQ_HOME: ..\..
jvm 1    | ACTIVEMQ_BASE: ..\..
jvm 1    | ACTIVEMQ_CONF: ..\..\conf
jvm 1    | ACTIVEMQ_DATA: ..\..\data
jvm 1    | Loading message broker from: xbean:activemq.xml
jvm 1    |  INFO | Refreshing org.apache.activemq.xbean.XBeanBrokerFactory$1@193
c227: startup date [Wed Aug 13 10:00:30 EDT 2014]; root of context hierarchy
jvm 1    |  INFO | Using Persistence Adapter: Replicated LevelDB[C:\ActiveMQ\apa
che-activemq-5.11-20140808.003936-58-bin\apache-activemq-5.11-SNAPSHOT\bin\win32
\..\..\data\leveldb, bosvsvm01:2181//activemq/leveldb-stores]
jvm 1    |  INFO | Starting StateChangeDispatcher
jvm 1    |  INFO | Client environment:zookeeper.version=3.4.5-1392090, built on
09/30/2012 17:52 GMT
jvm 1    |  INFO | Client environment:host.name=WMT-VS009.bost.local
jvm 1    |  INFO | Client environment:java.version=1.7.0_67
jvm 1    |  INFO | Client environment:java.vendor=Oracle Corporation
jvm 1    |  INFO | Client environment:java.home=C:\Program Files (x86)\Java\jre7

jvm 1    |  INFO | Client environment:java.class.path=../../bin/wrapper.jar;../.
./bin/activemq.jar
jvm 1    |  INFO | Client environment:java.library.path=../../bin/win32
jvm 1    |  INFO | Client environment:java.io.tmpdir=C:\Users\george\AppData\Lo
cal\Temp\
jvm 1    |  INFO | Client environment:java.compiler=<NA>
jvm 1    |  INFO | Client environment:os.name=Windows 7
jvm 1    |  INFO | Client environment:os.arch=x86
jvm 1    |  INFO | Client environment:os.version=6.1
jvm 1    |  INFO | Client environment:user.name=george
jvm 1    |  INFO | Client environment:user.home=C:\Users\george
jvm 1    |  INFO | Client environment:user.dir=C:\ActiveMQ\apache-activemq-5.11-
20140808.003936-58-bin\apache-activemq-5.11-SNAPSHOT\bin\win32
jvm 1    |  INFO | Initiating client connection, connectString=bosvsvm01:2181
 sessionTimeout=2000 watcher=org.apache.activemq.leveldb.replicated.groups.ZKCli
ent@1fbdfd0
jvm 1    |  WARN | SASL configuration failed: javax.security.auth.login.LoginExc
eption: No JAAS configuration section named 'Client' was found in specified JAAS
 configuration file: '../../conf/login.config'. Will continue connection to Zook
eeper server without SASL authentication, if Zookeeper server allows it.
jvm 1    |  INFO | Opening socket connection to server brlvsvolap01.bluecrest.lo
cal/10.42.0.109:2181
jvm 1    |  WARN | unprocessed event state: AuthFailed
jvm 1    |  INFO | Socket connection established to bosvsvm01:2181.bos.local
/10.42.0.109:2181, initiating session
jvm 1    |  INFO | Session establishment complete on server bosvsvm01:2181.bos.local/10.42.0.109:2181, sessionid = 0x4474d0f01983ec1, negotiated timeout = 4
000




I used to have this ""Client"" warning before, but zookeeper allowed it, and I could access to  web management of my cluster.  But now I can not. 
I tried the solution listed  https://issues.apache.org/jira/browse/AMQ-5105
but it does not work on my side.",windows 7,kevin2014,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,411821,,,Fri Feb 03 23:06:37 UTC 2017,,,,,,,,,,,"0|i1yujz:",411812,,,,,,,,,,,,,,,,,,,,,"03/Feb/17 23:06;tabish;LevelDB has been deprecated and is no longer supported.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect Documentation  in org.apache.activemq.management.SizeStatisticImpl,AMQ-5320,12733735,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,,bansalp,bansalp,13/Aug/14 11:17,13/Aug/14 13:51,14/Jul/23 05:44,13/Aug/14 13:51,5.10.0,,,,,,,,,5.11.0,,,,JMS client,,,,,0,,,,,,"org.apache.activemq.management.SizeStatisticImpl has incorrect / misleading documentation for getters method.

I feel instead of time they should use size in documentation.",,bansalp,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,411763,,,Wed Aug 13 13:51:01 UTC 2014,,,,,,,,,,,"0|i1yu7b:",411754,,,,,,,,,,,,,,,,,,,,,"13/Aug/14 13:51;tabish;updated the docs a bit. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"JDBC store; commit called on connection that uses autocommit during ""deleteAllMessages"" .",AMQ-5318,12733038,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,pgfox,pgfox,09/Aug/14 16:35,19/Aug/14 16:41,14/Jul/23 05:44,11/Aug/14 15:16,5.10.0,,,,,,,,,5.11.0,,,,Broker,,,,,0,,,,,,"The oracle v12 driver throws the following exception if commit() is called on a connection that has auto-commit enabled(see [1]) . This seems to be a change in behaviour since v11.  

{code}

caused by: java.sql.SQLException: Could not commit with auto-commit set on
	at oracle.jdbc.driver.PhysicalConnection.commit(PhysicalConnection.java:4443)
	at oracle.jdbc.driver.PhysicalConnection.commit(PhysicalConnection.java:4490)
	at org.apache.commons.dbcp.DelegatingConnection.commit(DelegatingConnection.java:334)
	at org.apache.commons.dbcp.DelegatingConnection.commit(DelegatingConnection.java:334)
	at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.commit(PoolingDataSource.java:211)
	at org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.doDropTables(DefaultJDBCAdapter.java:148)
	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.deleteAllMessages(JDBCPersistenceAdapter.java:534)
	... 40 more

{code}


In the org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter#doDropTables() it explicitly calls connection.commit() without checking if auto-commit is enabled.  In other places auto-commit does seem to be checked before commit is called  - org.apache.activemq.store.jdbc.TransactionContext#commit().

The v12 driver does allow  autocommit-SpecCompliance to be turned off by setting system property ""oracle.jdbc.autoCommitSpecCompliant=false"". But it does seem like org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter#doDropTables() is not strictly adhering to the spec. 

I think it would be better to do a check if auto-commit is on before calling connection.commit(). 


I will attach a github pull request with test and potential fix - for someone to review.
",,githubbot,pgfox,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4836,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,411066,,,Mon Aug 11 15:17:06 UTC 2014,,,,,,,Patch Available,,,,"0|i1ypz3:",411058,,,,,,,,,,,,,,,,,,,,,"09/Aug/14 16:36;githubbot;GitHub user pgfox opened a pull request:

    https://github.com/apache/activemq/pull/43

    AMQ-5318: JDBC store; commit called on connection that uses autocommit during ""deleteAllMessages""

    issue reported at AMQ-5318


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/pgfox/activemq jdbcAutoCommitCheck

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/43.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #43
    
----
commit 5a52536e409eae5dfae69ddb03e2dfa31112f90c
Author: pgf <pat.g.fox@gmail.com>
Date:   2014-08-09T14:27:40Z

    added a check for autocommit before calling commit when dropping and creating tables + test case.

----
;;;","09/Aug/14 16:37;pgfox;github pull request. https://github.com/apache/activemq/pull/43
;;;","11/Aug/14 15:16;tabish;Patch applied.  Thanks!;;;","11/Aug/14 15:17;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/43
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE on brokerView addConnector,AMQ-5317,12732830,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,08/Aug/14 13:01,08/Aug/14 13:14,14/Jul/23 05:44,08/Aug/14 13:14,5.10.0,,,,,,,,,5.11.0,,,,Broker,JMX,,,,0,,,,,,"Doing a quick sanity of transport connector stop/start via remove/add found:
{code}java.lang.NullPointerException
	at org.apache.activemq.broker.TransportConnector.start(TransportConnector.java:202)
	at org.apache.activemq.broker.jmx.BrokerView.addConnector(BrokerView.java:358)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:279)
	at com.sun.jmx.mbeanserver.StandardMBeanIntrospector.invokeM2(StandardMBeanIntrospector.java:112)
	at com.sun.jmx.mbeanserver.StandardMBeanIntrospector.invokeM2(StandardMBeanIntrospector.java:46)
	at com.sun.jmx.mbeanserver.MBeanIntrospector.invokeM(MBeanIntrospector.java:237)
	at com.sun.jmx.mbeanserver.PerInterface.invoke(PerInterface.java:138)
	at com.sun.jmx.mbeanserver.MBeanSupport.invoke(MBeanSupport.java:252)
	at javax.management.StandardMBean.invoke(StandardMBean.java:405)
	at org.apache.activemq.broker.jmx.AnnotatedMBean.invoke(AnnotatedMBean.java:198)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:819)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:801)
	at javax.management.MBeanServerInvocationHandler.invoke(MBeanServerInvocationHandler.java:292)
	at com.sun.proxy.$Proxy5.addConnector(Unknown Source)
	at org.apache.activemq.broker.jmx.MBeanTest.testAddRemoveConnectorBrokerView(MBeanTest.java:1384)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at org.apache.activemq.CombinationTestSupport.runBare(CombinationTestSupport.java:107)
	at org.apache.activemq.CombinationTestSupport.runBare(CombinationTestSupport.java:113)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:74)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:202)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:120){code}",,gtully,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,410858,,,Fri Aug 08 13:14:44 UTC 2014,,,,,,,,,,,"0|i1yoq7:",410851,,,,,,,,,,,,,,,,,,,,,"08/Aug/14 13:14;gtully;fix and test in http://git-wip-us.apache.org/repos/asf/activemq/commit/7c2735d0;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"LoggingBrokerPluggin, configuration variable logMessageEvents is not used",AMQ-5316,12732764,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,,pgfox,pgfox,08/Aug/14 06:27,08/Aug/14 16:27,14/Jul/23 05:44,08/Aug/14 16:27,,,,,,,,,,5.11.0,,,,Broker,,,,,0,,,,,,"LoggingBrokerPluggin.logMessageEvents is not used.

It would be good to remove it from the configuration to avoid confusion - patch attached.

It would also be good to remove this from http://activemq.apache.org/logging-interceptor.html



",,pgfox,tabish,tom_m,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Aug/14 06:28;pgfox;LoggingBrokerPlugin.patch;https://issues.apache.org/jira/secure/attachment/12660567/LoggingBrokerPlugin.patch",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,410792,,,Fri Aug 08 16:27:27 UTC 2014,,,,,,,Patch Available,,,,"0|i1yobr:",410785,,,,,,,,,,,,,,,,,,,,,"08/Aug/14 16:27;tabish;Applied patch, thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException in DemandForwardingBridgeSupport.collectBrokerInfos,AMQ-5315,12732737,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,leebutts,leebutts,08/Aug/14 01:20,18/Dec/14 00:27,14/Jul/23 05:44,29/Aug/14 14:07,5.10.0,,,,,,,,,5.10.1,5.11.0,,,,,,,,0,,,,,,"We have seen the following NPE setting up a demand forwarding bridge
{code}
java.lang.NullPointerException: null
	at org.apache.activemq.network.DemandForwardingBridgeSupport.collectBrokerInfos(DemandForwardingBridgeSupport.java:365) [activemq-broker-5.10.0.jar:5.10.0]
	at org.apache.activemq.network.DemandForwardingBridgeSupport.access$400(DemandForwardingBridgeSupport.java:105) [activemq-broker-5.10.0.jar:5.10.0]
	at org.apache.activemq.network.DemandForwardingBridgeSupport$5.run(DemandForwardingBridgeSupport.java:331) [activemq-broker-5.10.0.jar:5.10.0]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [na:1.7.0_60]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [na:1.7.0_60]
	at java.lang.Thread.run(Thread.java:745) [na:1.7.0_60]
{code}

This occurred in one of our tests but only under load so seems to be a race condition of some sort.
",,furn,leebutts,morogan,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Aug/14 02:20;leebutts;BridgeNPETest.java;https://issues.apache.org/jira/secure/attachment/12664802/BridgeNPETest.java",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,410765,,,Fri Aug 29 14:07:32 UTC 2014,,,,,,,,,,,"0|i1yo5r:",410758,,,,,,,,,,,,,,,,,,,,,"08/Aug/14 02:18;leebutts;Test logs of bridge failure
{code}
2014-08-07 23:01:10,467       INFO  ceUtil-StartThread-1 o.a.a.broker.BrokerService     activemq.broker=testBroker-T1oFi-LDN-1 Apache ActiveMQ 5.10.0 (testBroker-T1oFi-LDN-1, ID:leeimac.local-57747-1407452432914-0:48) is starting
2014-08-07 23:01:10,467       INFO  ceUtil-StartThread-1 o.a.a.b.BrokerPluginSupport    activemq.broker=testBroker-T1oFi-LDN-1 Broker Plugin com.x.jms.AbstractActiveMQTest$BrokerEventListener started
2014-08-07 23:01:10,468       INFO  ceUtil-StartThread-1 t.TransportServerThreadSupport activemq.broker=testBroker-T1oFi-LDN-1 Listening for connections at: tcp://localhost:57986?socket.tcpNoDelay=true&soTimeout=60000&closeAsync=false
2014-08-07 23:01:10,468       INFO  ceUtil-StartThread-1 o.a.a.b.TransportConnector     activemq.broker=testBroker-T1oFi-LDN-1 Connector tcp://localhost:57986?socket.tcpNoDelay=true&soTimeout=60000&closeAsync=false started
2014-08-07 23:01:10,468       INFO  ceUtil-StartThread-1 .a.n.DiscoveryNetworkConnector activemq.broker=testBroker-T1oFi-LDN-1 Establishing network connection from vm://testBroker-T1oFi-LDN-1?async=false&network=true to tcp://localhost:57985?socket.tcpNoDelay=true&soTimeout=60000&closeAsync=false
2014-08-07 23:01:10,469       INFO  ceUtil-StartThread-1 o.a.a.b.TransportConnector     activemq.broker=testBroker-T1oFi-LDN-1 Connector vm://testBroker-T1oFi-LDN-1 started
2014-08-07 23:01:10,470       INFO  ceUtil-StartThread-1 o.a.a.network.NetworkConnector activemq.broker=testBroker-T1oFi-LDN-1 Network Connector DiscoveryNetworkConnector:NC-LOCAL-localhost:BrokerService[testBroker-T1oFi-LDN-1] started
2014-08-07 23:01:10,470       INFO  ceUtil-StartThread-1 .a.n.DiscoveryNetworkConnector activemq.broker=testBroker-T1oFi-LDN-1 Establishing network connection from vm://testBroker-T1oFi-LDN-1?async=false&network=true to failover:(tcp://localhost:57987,tcp://localhost:57988)?nested.socket.tcpNoDelay=true&nested.soTimeout=60000&nested.closeAsync=false&randomize=false&maxReconnectAttempts=0
2014-08-07 23:01:10,471       INFO  ceUtil-StartThread-1 o.a.a.network.NetworkConnector activemq.broker=testBroker-T1oFi-LDN-1 Network Connector DiscoveryNetworkConnector:NC-WAN-NYC-DefaultDynamic-0:BrokerService[testBroker-T1oFi-LDN-1] started
2014-08-07 23:01:10,471       INFO  ceUtil-StartThread-1 o.a.a.broker.BrokerService     activemq.broker=testBroker-T1oFi-LDN-1 Apache ActiveMQ 5.10.0 (testBroker-T1oFi-LDN-1, ID:leeimac.local-57747-1407452432914-0:48) started
2014-08-07 23:01:10,471       INFO  ceUtil-StartThread-1 o.a.a.broker.BrokerService     activemq.broker=testBroker-T1oFi-LDN-1 For help or more information please see: http://activemq.apache.org
2014-08-07 23:01:10,471       WARN  ceUtil-StartThread-1 o.a.a.broker.BrokerService     activemq.broker=testBroker-T1oFi-LDN-1 Store limit is 102400 mb (current store usage is 0 mb). The data directory: /var/folders/zd/s8yvndzs0tb08zq2hbm5h89r0000gn/T/testBroker-T1oFi-LDN-1/testBroker-T1oFi-LDN-1/KahaDB only has 38816 mb of usable space - resetting to maximum available disk space: 38816 mb
2014-08-07 23:01:10,471       ERROR ActiveMQ Task-1      o.a.a.t.f.FailoverTransport    activemq.broker=testBroker-T1oFi-LDN-1 Failed to connect to [tcp://localhost:57987, tcp://localhost:57988] after: 1 attempt(s)
2014-08-07 23:01:10,472       INFO  oker-T1oFi-LDN-1#190 .DemandForwardingBridgeSupport activemq.broker=testBroker-T1oFi-LDN-1 Network connection between vm://testBroker-T1oFi-LDN-1#190 and tcp://localhost/127.0.0.1:57985@57994 (testBroker-T1oFi-LDN-0) has been established.
2014-08-07 23:01:10,472       INFO  oker-T1oFi-LDN-1#192 .DemandForwardingBridgeSupport activemq.broker=testBroker-T1oFi-LDN-1 Network connection between vm://testBroker-T1oFi-LDN-1#192 and unconnected shutdown due to a local error: {}
java.lang.NullPointerException: null
	at org.apache.activemq.network.DemandForwardingBridgeSupport.collectBrokerInfos(DemandForwardingBridgeSupport.java:365) [activemq-broker-5.10.0.jar:5.10.0]
	at org.apache.activemq.network.DemandForwardingBridgeSupport.access$400(DemandForwardingBridgeSupport.java:105) [activemq-broker-5.10.0.jar:5.10.0]
	at org.apache.activemq.network.DemandForwardingBridgeSupport$5.run(DemandForwardingBridgeSupport.java:331) [activemq-broker-5.10.0.jar:5.10.0]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [na:1.7.0_60]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [na:1.7.0_60]
	at java.lang.Thread.run(Thread.java:745) [na:1.7.0_60]
2014-08-07 23:01:10,472       INFO  -T1oFi-LDN-1] Task-3 .DemandForwardingBridgeSupport activemq.broker=testBroker-T1oFi-LDN-1 testBroker-T1oFi-LDN-1 bridge to Unknown stopped
{code};;;","08/Aug/14 17:28;tabish;One case that looks like a possibility is in the collectBrokerInfos method:

{code}
        try {
            remoteBrokerInfo = futureRemoteBrokerInfo.get();
            if (remoteBrokerInfo == null) {
                fireBridgeFailed();
            }
        } catch (Exception e) {
            serviceRemoteException(e);
            return;
        }
{code}

we should probably be returning after the call to fireBridgeFailed otherwise the method would continue on with the remoteBrokerInfo being null which could lead to this error.  The futureRemoteBrokerInfo future is cancelled in transport listener set in the start method.  ;;;","08/Aug/14 17:58;tabish;Added a fix for an NPE case;;;","11/Aug/14 16:55;morogan;That results in a different NPE at:

as the idGeneratory will be null, usually set org/apache/activemq/network/DemandForwardingBridgeSupport.java:383 or org/apache/activemq/network/DemandForwardingBridgeSupport.java:385

java.lang.NullPointerException: null
        at org.apache.activemq.network.DemandForwardingBridgeSupport.startLocalBridge(DemandForwardingBridgeSupport.java:441) [activemq-broker-5.10.0-MAHI.jar:5.10.0-MAHI]
        at org.apache.activemq.network.DemandForwardingBridgeSupport.doStartLocalAndRemoteBridges(DemandForwardingBridgeSupport.java:422) [activemq-broker-5.10.0-MAHI.jar:5.10.0-MAHI]
        at org.apache.activemq.network.DemandForwardingBridgeSupport.access$500(DemandForwardingBridgeSupport.java:105) [activemq-broker-5.10.0-MAHI.jar:5.10.0-MAHI];;;","11/Aug/14 17:12;tabish;Suggest you work on a unit test that can reproduce otherwise we will just keep stabbing in the dark. ;;;","28/Aug/14 02:20;leebutts;Unit test attached, recreates NPE in log output;;;","29/Aug/14 14:07;tabish;Should be fixed now, thanks for the test case. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMq consumer intermittently hanging after reconnect,AMQ-5313,12732561,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,wayn23,wayn23,07/Aug/14 14:32,16/Sep/14 20:24,14/Jul/23 05:44,16/Sep/14 20:24,5.9.0,,,,,,,,,5.9.1,,,,JMS client,,,,,1,,,,,,"I have run into an intermittent problem with ActiveMQ V5.9.0. The intermittent was tracked down to being a connection error that does not get properly recovered. 

I have recreated the problem in a very small example by creating a Camel 
consumer route that retrieves messages from a JMS queue and writes the text message to a log.   

        from(TEST_QUEUE).routeId(TEST_QUEUE).convertBodyTo(String.class) 
             .log(LoggingLevel.INFO, loggerName, ""Request Received "");
 
  The connection string used is 
  failover:(tcp://serverd05.company.com:26093?keepAlive=true)?jms.prefetchPolicy.all=0
   
Please note that polling is being used when the prefetch size is set to 0. 

I then use Hawtio on the ActiveMQ broker to add some text messages to the queue. It works fine.
 
I then stop the Client Connector on the ActiveMQ broker side to simulate a 
broken connection on the consumer side. (The broker must be remote to the consumer or the error will not occur.)  The client logs show that an 
EOFException is caught and the connection is reestablished. The connection also appears on the ActiveMQ broker. it only looks good though. Sending new text messages to the queue will not be processed. They will just sit there.  There are no errors or warnings logged on either the consumer or broker servers. Restarting the consumer will cause the messages to get processed. The reconnection only intermittently fails. I find is much more like to occur if 10 minutes pass from the previous message being processed. 

I turned on trace=yes in the connection string and found the root cause is the PullMessage commands are occasionally not being issued after a reconnect.  On cases where it works, the log shows that the PullMessage commands do reinstate. 

I am wondering if this might be a race condition, as this problem only showed up when the consumer was on fast servers 
","AIX 6.1, AIX 7.1, IBM Java 6, IBM Java 7",ian@ianbrandt.com,pminearo,tom_m,wayn23,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Aug/14 16:20;wayn23;fail.log;https://issues.apache.org/jira/secure/attachment/12660390/fail.log",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,410589,,,Tue Sep 16 20:24:37 UTC 2014,,,,,,,,,,,"0|i1yn33:",410583,,,,,,,,,,,,,,,,,,,,,"07/Aug/14 14:34;wayn23;Log file showing a reconnection that does not resume issuing PullMessages.;;;","07/Aug/14 16:20;wayn23;Log showing PullMessages do not return after handling a reconnect.;;;","07/Aug/14 18:41;pminearo;After reading up on this, we have seen a similar problem, possibly?

http://activemq.2283324.n4.nabble.com/JMS-to-JMS-Bridge-Connection-td4684129.html
;;;","07/Aug/14 20:12;wayn23;I have read through the referenced JMS-to-JMS-Bridge-Conenction article, but I don't think it is related, although what is in common is it is triggered by a broken connection.  In this JIRA scope the reconnection is made successfully and remains connected as expected.  The connection can be explored with JMX on both the consumer and broker sides.  The only problem is the PullMessage command is never issued after the reconnect, so no actual messages are pulled.  The keepAlive=true option is used and the keepAlive commands are sent across the connection with no problem.  The root problem is something is intermittently not happening to establish the issuing of PullMessage commands after a reconnect ;;;","16/Sep/14 20:22;wayn23;Narrowed problem down to the use a LinkedHashMap as a MessageCache in the ConsumerStateTracker class in ActiveMQ.  
The LinkedHashMap has a special method called removeEldestEntry that is called whenever a new entry is put into the HashMap.  In IBM JRE, this is called every time an entry is added to the HashMap, regardless if the key already exists or not.  In Oracle JRE, this method is only invoked if the key value being added is new (which in a polling config is always the same key for polling command).
When the removeEldestEntry is invoked and the external field currentCacheSize exceeds 128K, it would automatically remove the oldest entry in the list.  In ActiveMQ 5.9.0, the field currentCacheSize was being grown by 400 bytes for every polling call to a queue (so 1 per second) regardless of whether adding a new entry to the queue or not.  Once the currentCacheSize exceeded 128K (after about 6 mins), the removeEldestEntry method in the IBM JRE would start to remove the eldest entry which in a polling state was the entry just inserted (so the message cache would be 0 entries in size and when a disconnect occurs, it wouldn't replay the PullCommands that were needed to resume the polling).  In the Oracle JRE, the removeEldestEntry was not being invoked because the pullMessage command was not a new entry.
Regardless of the scenario above, a change was made in ActiveMQ 5.9.1 in that the currentCacheSize only grows by 400 bytes on the first poll, so, now the currentCache size only grows with additional polling consumers instead of after each poll.  Moving the ActiveMQ client to 5.9.1 will longer exhibit the issue with the Polling Consumer not resuming polling, as the removeEldestEntry will not remove the eldest entry until we exceed 320 polling consumers (as opposed to before, where it would remove the entry with just 1 entry in the cache after 6 mins of time).;;;","16/Sep/14 20:24;wayn23;A change was made in ActiveMQ 5.9.1 in that the currentCacheSize was only being grown by 400 on the first poll, so, now the currentCache size only grows with additional polling consumers instead of after each poll itself.  With this change, we should no longer exhibit the issue with the Polling Consumer not resuming polling, as the removeEldestEntry will not remove the eldest entry until we exceed 320 polling consumers (as opposed to before, where it would remove the entry with just 1 entry in the cache after 6 mins of time).
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
XAException message should encode the xaErrorCode,AMQ-5311,12732534,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,07/Aug/14 12:22,07/Aug/14 12:50,14/Jul/23 05:44,07/Aug/14 12:50,5.10.0,,,,,,,,,5.11.0,,,,Broker,JMS client,,,,0,errorCode,xa,,,,"openwire will only marshall the message string, so an XAException will always be initialised clients side with errorCode=0, which maps to XA_OK or an invalid error code.
Appending xaErrorCode:X to the message will allow the XAException.errorCode to be extracted client side and propagated correctly, so a TM can respond to an XAER_NOTA.
Currently we set a generic XAER_RMERR which can force the TM to retry.",,gtully,tmielke,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,410562,,,Thu Aug 07 12:50:34 UTC 2014,,,,,,,,,,,"0|i1ymx3:",410556,,,,,,,,,,,,,,,,,,,,,"07/Aug/14 12:50;gtully;fix in http://git-wip-us.apache.org/repos/asf/activemq/commit/ab1e9c78;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MQTT Transport codec does not properly deal with partial read of frame header,AMQ-5307,12731754,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,tabish,tabish,tabish,04/Aug/14 14:56,05/Aug/14 07:43,14/Jul/23 05:44,04/Aug/14 22:59,5.10.0,,,,,,,,,5.11.0,,,,MQTT,Transport,,,,0,,,,,,The Codec used to parse MQTT Frames does not properly deal with the case where only part of the initial frame header arrives.  This can happen in NIO+SSL etc where the incoming packet has only the first byte or so of the frame which causes the process header method get stuck in an endless loop.  ,,netlancermobi,tabish,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,409783,,,Tue Aug 05 07:43:30 UTC 2014,,,,,,,,,,,"0|i1yi6n:",409775,,,,,,,,,,,,,,,,,,,,,"04/Aug/14 15:23;tmielke;Seems to be related to [ENTMQ-751|https://issues.jboss.org/browse/ENTMQ-751].;;;","04/Aug/14 22:59;tabish;Fixed on trunk.;;;","05/Aug/14 07:43;tmielke;I can confirm the problem is resolved using the unit test attached to [ENTMQ-751|https://issues.jboss.org/browse/ENTMQ-751].;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Composite destination creation in perf test always builds topics,AMQ-5306,12731718,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,jkorab,jkorab,04/Aug/14 12:00,05/Aug/14 00:36,14/Jul/23 05:44,05/Aug/14 00:33,5.10.0,,,,,,,,,5.11.0,,,,Performance Test,,,,,0,,,,,,"When the performance test is triggered via the following flags, the resulting test run sends messages to two topics, as opposed to queues:

mvn activemq-perf:producer -Dproducer.composite=true -DsysTest.totalDests=2 -Dproducer.destName=queue://foo

Messages will be sent to topic://foo.0 and topic://foo.1.

Pull request incoming.",,githubbot,jkorab,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,409747,,,Tue Aug 05 00:36:51 UTC 2014,,,,,,,,,,,"0|i1yhyn:",409739,,,,,,,,,,,,,,,,,,,,,"04/Aug/14 15:05;githubbot;GitHub user jkorab opened a pull request:

    https://github.com/apache/activemq/pull/39

    Fix for AMQ-5306

    Cleaned up logic around the use of comma separated destinations, sysTest.totalDests and producer.destComposite. The logic is as follows:
    
    Given -Dproducer.destName=foo:
    default (-DsysTest.totalDests=1)
    * publishes to 1 destination - foo
    
    -DsysTest.totalDests=2
    * publishes to 2 destinations - foo.0, foo.1
    
    Given -Dproducer.destName=foo,cheese:
    default (-Dproducer.destComposite=false -DsysTest.totalDests=1)
    * publishes to 2 destinations - foo and cheese
    
    (-Dproducer.destComposite=false) -DsysTest.totalDests=2
    * publishes to 4 destinations - foo.0, foo.1 and cheese.0, cheese.1
    
    -Dproducer.destComposite=true (-DsysTest.totalDests=1)
    * publishes to 1 composite destination - ""foo,cheese""
    
    -Dproducer.destComposite=true -DsysTest.totalDests=2
    * publishes to 1 composite destination - ""foo.0,foo.1,cheese.0,cheese.1""

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/jkorab/activemq trunk

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/39.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #39
    
----
commit 1702265c73296955a1c2baf72d405a805efe8cd9
Author: jkorab <jakub.korab@gmail.com>
Date:   2014-07-31T16:15:03Z

    Modified so that single-destination tests do not append a numerical prefix.

commit 42ac31d04ddddfc23bdc6718ae6d80e40dc4f772
Author: jkorab <jakub.korab@gmail.com>
Date:   2014-07-31T16:37:34Z

    Unified the logic for appending numerical prefixes between normal one-off destinations and composite destinations. Fixed composite destination construction logic that created 2 destinations when sysTest.totalDests was 1 or 2.

commit 1b69f1c8bc020261b498ba0867b4abf0c3b33b3c
Author: jkorab <jakub.korab@gmail.com>
Date:   2014-08-04T10:53:36Z

    Merge remote-tracking branch 'upstream/trunk' into trunk

commit a6c8c15f2ae666725b846e2008d7a80dd9cfbe3e
Author: jkorab <jakub.korab@gmail.com>
Date:   2014-08-04T14:09:55Z

    Fix for AMQ-5306. Cleaned up logic around the creation of multiple and composite destinations. Added tests.

commit 4e04d434f87ef4389e316c37d0a74e847e71c1d8
Author: jkorab <jakub.korab@gmail.com>
Date:   2014-08-04T14:55:29Z

    AMQ-5306 Added logic for use case where 2 comma separated dests are named, and composite = true

----
;;;","05/Aug/14 00:33;tabish;patch applied.;;;","05/Aug/14 00:36;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/39
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
groupClass not applied to TempDestinationAuthorizationEntry,AMQ-5304,12731312,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tmielke,tmielke,tmielke,01/Aug/14 12:24,17/Dec/14 21:47,14/Jul/23 05:44,12/Aug/14 07:47,5.10.0,,,,,,,,,5.10.1,5.11.0,,,Broker,,,,,0,authorization,security,,,,"When configuring the authorization plugin with a <tempDestinationAuthorizationEntry> that also set a groupClass, this groupClass is not properly applied to the TempDestinationAuthorizationEntry instance. 

E.g. consider this example config
{code:xml}
      <authorizationPlugin>
        <map>
          <authorizationMap groupClass=""org.apache.karaf.jaas.boot.principal.RolePrincipal"">
            <authorizationEntries>
              <authorizationEntry queue="">"" read=""admin"" write=""client,admin"" admin=""client,admin"" />
              <authorizationEntry topic="">"" read=""client,admin"" write=""admin"" admin=""admin""/>
              <authorizationEntry topic=""ActiveMQ.Advisory.>"" read=""admin,client"" write=""admin,client"" admin=""admin""/>
           </authorizationEntries>

           <tempDestinationAuthorizationEntry>
             <tempDestinationAuthorizationEntry read=""client,admin"" write=""client,admin"" admin=""client,admin"" groupClass=""org.apache.karaf.jaas.boot.principal.RolePrincipal""/>
           </tempDestinationAuthorizationEntry>

         </authorizationMap>
        </map>
      </authorizationPlugin>
{code}


The groupClass attribute is set on the TempDestinationAuthorizationEntry instance but we don't apply the groupClass to the AuthorizationEntry by calling afterPropertiesSet();

As a result, authorization fails when trying to create a temp destination. 
This can happen when deploying the broker inside a Karaf container and have Karaf do the authentication (such as in JBoss A-MQ). 
The groupClass is properly set on the authorizationEntries within the <authorizationEntries> list and only fails to be applied properly on the tempDestinationAuthorizationEntry. 



",,dejanb,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Aug/14 12:31;tmielke;AMQ-5304.patch;https://issues.apache.org/jira/secure/attachment/12659146/AMQ-5304.patch",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,409384,,,Tue Aug 12 07:46:54 UTC 2014,,,,,,,Patch Available,,,,"0|i1yfrz:",409380,,,,,,,,,,,,,,,,,,,,,"01/Aug/14 12:29;tmielke;I have a unit test but its based on Pax-Exam and loads JBoss A-MQ 6.0 directly. Will try to find out if I can write a more generic unit test.
;;;","01/Aug/14 12:31;tmielke;Attaching a possible fix for this bug in AMQ-5304.patch.
Will still try to also come up with a unit test that can be incorporated into the source tree.
;;;","06/Aug/14 13:33;dejanb;Added the test (ignored for now) with the following commit

https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=acf84b43

The patch also looks good to me.

;;;","12/Aug/14 07:46;tmielke;Fixed in commit [ec2a3c750bbfb33763ac56b8b0a660bdf8542145|https://fisheye6.atlassian.com/changelog/activemq-git?cs=ec2a3c750bbfb33763ac56b8b0a660bdf8542145].;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MQTT Subscriptions on VirtualTopic prefixed destinations failed retained tests.,AMQ-5303,12731181,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,31/Jul/14 21:27,05/Jun/15 22:05,14/Jul/23 05:44,05/Jun/15 22:05,5.10.0,,,,,,,,,5.12.0,,,,MQTT,,,,,0,,,,,,"For an MQTT Subscription on a Virtual Topic such as ""VirtualTopic.FOO"" the retained message contract doesn't seem to be honoured ",,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5298,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,409253,,,Fri Jun 05 22:05:52 UTC 2015,,,,,,,,,,,"0|i1yezb:",409249,,,,,,,,,,,,,,,,,,,,,"31/Jul/14 21:27;tabish;Test case for this:

{code}
    @Test(timeout = 120 * 1000)
    public void testRetainedMessageOnVirtualTopic() throws Exception {
        MQTT mqtt = createMQTTConnection();
        mqtt.setKeepAlive((short) 2);

        final String RETAIN = ""RETAIN"";
        final String TOPICA = ""VirtualTopic/TopicA"";

        final String[] clientIds = { null, ""foo"", ""durable"" };
        for (String clientId : clientIds) {

            LOG.info(""Running test loop with Client ID: {}"", clientId);

            mqtt.setClientId(clientId);
            mqtt.setCleanSession(!""durable"".equals(clientId));

            BlockingConnection connection = mqtt.blockingConnection();
            connection.connect();

            // set retained message and check
            connection.publish(TOPICA, RETAIN.getBytes(), QoS.EXACTLY_ONCE, true);
            connection.subscribe(new Topic[]{new Topic(TOPICA, QoS.AT_LEAST_ONCE)});
            Message msg = connection.receive(5000, TimeUnit.MILLISECONDS);
            assertNotNull(""No retained message for "" + clientId, msg);
            assertEquals(RETAIN, new String(msg.getPayload()));
            msg.ack();
            assertNull(connection.receive(500, TimeUnit.MILLISECONDS));

            // test duplicate subscription
            connection.subscribe(new Topic[]{new Topic(TOPICA, QoS.AT_LEAST_ONCE)});
            msg = connection.receive(15000, TimeUnit.MILLISECONDS);
            assertNotNull(""No retained message on duplicate subscription for "" + clientId, msg);
            assertEquals(RETAIN, new String(msg.getPayload()));
            msg.ack();
            assertNull(connection.receive(500, TimeUnit.MILLISECONDS));
            connection.unsubscribe(new String[]{""TopicA""});

            // clear retained message and check that we don't receive it
            connection.publish(TOPICA, """".getBytes(), QoS.AT_MOST_ONCE, true);
            connection.subscribe(new Topic[]{new Topic(TOPICA, QoS.AT_LEAST_ONCE)});
            msg = connection.receive(500, TimeUnit.MILLISECONDS);
            assertNull(""Retained message not cleared for "" + clientId, msg);
            connection.unsubscribe(new String[]{""TopicA""});

            // set retained message again and check
            connection.publish(TOPICA, RETAIN.getBytes(), QoS.EXACTLY_ONCE, true);
            connection.subscribe(new Topic[]{new Topic(TOPICA, QoS.AT_LEAST_ONCE)});
            msg = connection.receive(5000, TimeUnit.MILLISECONDS);
            assertNotNull(""No reset retained message for "" + clientId, msg);
            assertEquals(RETAIN, new String(msg.getPayload()));
            msg.ack();
            assertNull(connection.receive(500, TimeUnit.MILLISECONDS));

            // re-connect and check
            connection.disconnect();
            connection = mqtt.blockingConnection();
            connection.connect();
            connection.subscribe(new Topic[]{new Topic(TOPICA, QoS.AT_LEAST_ONCE)});
            msg = connection.receive(5000, TimeUnit.MILLISECONDS);
            assertNotNull(""No reset retained message for "" + clientId, msg);
            assertEquals(RETAIN, new String(msg.getPayload()));
            msg.ack();
            assertNull(connection.receive(500, TimeUnit.MILLISECONDS));

            connection.unsubscribe(new String[]{""TopicA""});

            connection.disconnect();
        }
    }
{code};;;","31/Jul/14 21:28;tabish;Must have this fix first.;;;","04/Jun/15 19:28;tabish;Added fix for the default subscription strategy to avoid duplicate subscribe when an MQTT connection reconnects and there was a prior durable subscription to a VirtualTopic.X destination.  ;;;","05/Jun/15 22:05;tabish;Fix on master.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
documentation bug -wrong link at AMQ > Features > Security > Cached LDAP Authorization Module,AMQ-5302,12731102,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,ludvicekj,ludvicekj,31/Jul/14 16:28,25/Aug/14 10:00,14/Jul/23 05:44,31/Jul/14 16:40,,,,,,,,,,,,,,,,,,,0,activemq,documentation,,,,"There is broken link on doc page 
http://activemq.apache.org/cached-ldap-authorization-module.html in Initializing section.
......
We provide two ldif files for easy starting. The first one is for Apache Directory Server (*ldif*).
.....
ldif link says 404. Shouldn't it lead to https://svn.apache.org/repos/asf/activemq/trunk/activemq-unit-tests/src/test/resources/org/apache/activemq/security/activemq-apacheds.ldif ?",,ludvicekj,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,409174,,,Mon Aug 25 10:00:02 UTC 2014,,,,,,,,,,,"0|i1yehz:",409170,,,,,,,,,,,,,,,,,,,,,"31/Jul/14 16:40;tabish;updated page, site should regenerate in an hour or so. ;;;","05/Aug/14 14:03;ludvicekj;Page probably wasn't regenerated yet. Link to ""Apache Directory Server (ldif),"" Still results to 404.;;;","25/Aug/14 10:00;ludvicekj;link was fixed and page regenerated;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Inifinite loop when attempting to replay levelDB logs to rebuild index,AMQ-5300,12730988,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,vhle01,vhle01,31/Jul/14 03:47,02/Mar/15 13:45,14/Jul/23 05:44,07/Jan/15 17:12,5.10.0,5.9.1,,,,,,,,5.11.0,,,,LevelDB,,,,,3,,,,,,"While searching for a workaround for issue AMQ-5284, I came across this issue.

To work around the serialization issue (AMQ-5284), I deleted the index snapshots from the LevelDB datastore. This will replay the logs to regenerate the index. However, if a log rotation has already occurred, you will get an infinite loop upon restart.

Here are the steps to reproduce what I am seeing:

Configure ActiveMQ 5.10.0 to use a LevelDB data store with the log size of about 1MB.
{code}
<persistenceAdapter>
    <levelDB directory=""${activemq.data}/leveldb"" logSize=""1000000"" />
</persistenceAdapter>
{code}

Then I started up the broker and published 10,000 persistent messages to a queue, causing the log files to rotate (twice in my case). I see the following files in the data store folder:
{code}
-rw-rw-r--. 1 user users 1000071 Jul 30 11:15 0000000000000000.log
-rw-rw-r--. 1 user users 1000009 Jul 30 11:16 00000000000f4287.log
drwxrwxr-x. 2 user users    4096 Jul 30 11:16 00000000001e84d0.index
-rw-rw-r--. 1 user users 1000000 Jul 30 11:17 00000000001e84d0.log
drwxrwxr-x. 2 user users    4096 Jul 30 11:11 dirty.index
-rw-rw-r--. 1 user users       0 Jul 30 11:11 lock
drwxrwxr-x. 2 user users    4096 Jul 30 11:11 plist.index
-rw-rw-r--. 1 user users      24 Jul 30 11:11 store-version.txt
{code}

I then consume 5,000 messages, which causes the first log to be deleted since it is no longer being referenced. I see the following log statements:
{code}
2014-07-30 11:29:14,960 | DEBUG | Log no longer referenced: 0 | org.apache.activemq.leveldb.LevelDBClient | Thread-2
2014-07-30 11:29:14,967 | DEBUG | Deleting log at 0 | org.apache.activemq.leveldb.LevelDBClient | Thread-2
{code}

And I see the remaining files in the data store folder (notice the 0000000000000000.log is gone):
{code}
-rw-rw-r--. 1 user users 1000009 Jul 30 11:16 00000000000f4287.log
-rw-rw-r--. 1 user users 1000011 Jul 30 11:29 00000000001e84d0.log
drwxrwxr-x. 2 user users    4096 Jul 30 11:29 00000000002dc71b.index
-rw-rw-r--. 1 user users 1000000 Jul 30 11:29 00000000002dc71b.log
drwxrwxr-x. 2 user users    4096 Jul 30 11:11 dirty.index
-rw-rw-r--. 1 user users       0 Jul 30 11:11 lock
drwxrwxr-x. 2 user users    4096 Jul 30 11:11 plist.index
-rw-rw-r--. 1 user users      24 Jul 30 11:11 store-version.txt
{code}

At this point, I shut down the broker and here is the listing of what's left in the data store:
{code}
-rw-rw-r--. 1 user users 1000009 Jul 30 11:16 00000000000f4287.log
-rw-rw-r--. 1 user users 1000011 Jul 30 11:29 00000000001e84d0.log
-rw-rw-r--. 1 user users 1000000 Jul 30 11:29 00000000002dc71b.log
drwxrwxr-x. 2 user users    4096 Jul 30 11:36 0000000000301737.index
drwxrwxr-x. 2 user users    4096 Jul 30 11:11 dirty.index
drwxrwxr-x. 2 user users    4096 Jul 30 11:11 plist.index
-rw-rw-r--. 1 user users      24 Jul 30 11:11 store-version.txt
{code}

I then delete the index folder within the data store (in my case ""0000000000301737.index""). I am doing this to force a replay of the logs to regenerate the index (due to the serialization issue I ran into).

And finally, this is the message I am getting once I start the broker back up (infinite loop of this same message, and I have to shut down the broker):

{code}
2014-07-30 11:40:27,415 | WARN  | No reader available for position: 0, log_infos: {1000071=LogInfo(/home/user/apache-activemq-5.10.0/data/leveldb/00000000000f4287.log,1000071,1000009), 2000080=LogInfo(/home/user/apache-activemq-5.10.0/data/leveldb/00000000001e84d0.log,2000080,1000011), 3000091=LogInfo(/home/user/apache-activemq-5.10.0/data/leveldb/00000000002dc71b.log,3000091,0)} | org.apache.activemq.leveldb.RecordLog | main
{code}",Linux,Altaflux,anujkhandelwal,artem.karpenko,brianjohnson,burtonator,gtully,hkroger,netlancermobi,pawel.kaczmarczyk,vhle01,wbrendel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,409060,,,Mon Mar 02 13:45:42 UTC 2015,,,,,,,,,,,"0|i1ydsn:",409056,,,,,,,,,,,,,,,,,,,,,"31/Oct/14 10:53;anujkhandelwal;I have seen exact same issue with my ActiveMQ broker (5.10). It looks like a bug, Can someone please take a look here ?;;;","18/Dec/14 22:47;burtonator;I'm having similar issues with corruption in AMQ.  could you upload your code for testing?  I can then test it to see if I have similar behavior.  

I may be wrong I think your problem is that it CAN NOT recover in your situation because the log has been deleted and it has no index to start from.

It should print a better message though.;;;","07/Jan/15 17:12;gtully;fix and test in http://git-wip-us.apache.org/repos/asf/activemq/commit/b54606b1;;;","30/Jan/15 04:26;Altaflux;Hi Good day,

It seems this issue is not fixed as I have been able to replicated on Replicated Level DB and the lastest 5.11 snapshot. The levelDB corrupts even at the point that every time I kill current master the next slave to take the position starts doing the infinite loop. The only way to fix this is to delete the leveldb data from all ActiveMQ instances which obviously lets me without messages. I find this issue to be quite critical as it occurs even on graceful shut downs of ActiveMQ.

I have a attached a copy of the logs and my levelDB directory. (If all messages on the Queue look the same is because they are, for testing purposes i send the same message over and over)
https://drive.google.com/file/d/0B6ANh1aTzRg3S2Q2SVRUY0ZhT0k/view?usp=sharing


My settings are:
Ubuntu 14.04 64bit
leveldb jin linux-x64

            <replicatedLevelDB
                    directory=""${mailSystem.activeMQ.rebDB}""
                    replicas=""3""
                    sync=""local_mem""
                    logSize=""25413000""
                    indexCompression=""none""
                    zkAddress=""lstkmy90430:2181,lstkmy36606:2181,lstkmy52108:2181""
                    zkPath=""/activemq/leveldb-stores""
                    />

;;;","02/Mar/15 13:45;artem.karpenko;Since this is resolved and specifically mentiones LevelDB, I've opened another issue for Replicated LevelDB: AMQ-5618;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MQTT does to calls to unsubscribe on a duplicate subscription request.,AMQ-5299,12730956,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,,tabish,tabish,31/Jul/14 00:03,31/Jul/14 00:04,14/Jul/23 05:44,31/Jul/14 00:04,5.10.0,,,,,,,,,5.11.0,,,,MQTT,,,,,0,,,,,,"When a duplicate subscription with differing QoS value is received the protocol converter does two onUnsubscribe calls, only one is needed.",,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,409028,,,Thu Jul 31 00:04:19 UTC 2014,,,,,,,,,,,"0|i1ydlj:",409024,,,,,,,,,,,,,,,,,,,,,"31/Jul/14 00:04;tabish;Fixed on trunk;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MQTT Transport can generate class cast exception when subscription is to a Virtual Topic,AMQ-5298,12730935,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,tabish,tabish,30/Jul/14 22:35,31/Jul/14 21:28,14/Jul/23 05:44,31/Jul/14 21:24,5.10.0,,,,,,,,,5.11.0,,,,MQTT,,,,,0,,,,,,When a client subscribes to a Virtual Topic and sends a duplicate subscription request the method that resends the old retained messages tries to cast the destination from the TopicRegion is finds to a Topic but in this case it would be a VirtualTopicIntercepter and an exception is thrown disconnecting the client.,,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5303,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,409007,,,Thu Jul 31 21:24:37 UTC 2014,,,,,,,,,,,"0|i1ydh3:",409004,,,,,,,,,,,,,,,,,,,,,"30/Jul/14 22:37;tabish;The test to demonstrate this is a modification of testRetainedMessage in MQTTTest.java

{code}
    @Test(timeout = 120 * 1000)
    public void testRetainedMessageOnVirtualTopic() throws Exception {
        MQTT mqtt = createMQTTConnection();
        mqtt.setKeepAlive((short) 2);

        final String RETAIN = ""RETAIN"";
        final String TOPICA = ""VirtualTopic/TopicA"";

        final String[] clientIds = { null, ""foo"", ""durable"" };
        for (String clientId : clientIds) {

            LOG.info(""Running test loop with Client ID: {}"", clientId);

            mqtt.setClientId(clientId);
            mqtt.setCleanSession(!""durable"".equals(clientId));

            BlockingConnection connection = mqtt.blockingConnection();
            connection.connect();

            // set retained message and check
            connection.publish(TOPICA, RETAIN.getBytes(), QoS.EXACTLY_ONCE, true);
            connection.subscribe(new Topic[]{new Topic(TOPICA, QoS.AT_LEAST_ONCE)});
            Message msg = connection.receive(5000, TimeUnit.MILLISECONDS);
            assertNotNull(""No retained message for "" + clientId, msg);
            assertEquals(RETAIN, new String(msg.getPayload()));
            msg.ack();
            assertNull(connection.receive(500, TimeUnit.MILLISECONDS));

            // test duplicate subscription
            connection.subscribe(new Topic[]{new Topic(TOPICA, QoS.AT_LEAST_ONCE)});
            msg = connection.receive(15000, TimeUnit.MILLISECONDS);
            assertNotNull(""No retained message on duplicate subscription for "" + clientId, msg);
            assertEquals(RETAIN, new String(msg.getPayload()));
            msg.ack();
            assertNull(connection.receive(500, TimeUnit.MILLISECONDS));
            connection.unsubscribe(new String[]{""TopicA""});

            // clear retained message and check that we don't receive it
            connection.publish(TOPICA, """".getBytes(), QoS.AT_MOST_ONCE, true);
            connection.subscribe(new Topic[]{new Topic(TOPICA, QoS.AT_LEAST_ONCE)});
            msg = connection.receive(500, TimeUnit.MILLISECONDS);
            assertNull(""Retained message not cleared for "" + clientId, msg);
            connection.unsubscribe(new String[]{""TopicA""});

            // set retained message again and check
            connection.publish(TOPICA, RETAIN.getBytes(), QoS.EXACTLY_ONCE, true);
            connection.subscribe(new Topic[]{new Topic(TOPICA, QoS.AT_LEAST_ONCE)});
            msg = connection.receive(5000, TimeUnit.MILLISECONDS);
            assertNotNull(""No reset retained message for "" + clientId, msg);
            assertEquals(RETAIN, new String(msg.getPayload()));
            msg.ack();
            assertNull(connection.receive(500, TimeUnit.MILLISECONDS));

            // re-connect and check
            connection.disconnect();
            connection = mqtt.blockingConnection();
            connection.connect();
            connection.subscribe(new Topic[]{new Topic(TOPICA, QoS.AT_LEAST_ONCE)});
            msg = connection.receive(5000, TimeUnit.MILLISECONDS);
            assertNotNull(""No reset retained message for "" + clientId, msg);
            assertEquals(RETAIN, new String(msg.getPayload()));
            msg.ack();
            assertNull(connection.receive(500, TimeUnit.MILLISECONDS));

            connection.unsubscribe(new String[]{""TopicA""});

            connection.disconnect();
        }
    }
{code};;;","30/Jul/14 22:39;tabish;This patch fixes the crash but there are issues with the retained messages because it's a VurtualTopic.

{noformat}
diff --git a/activemq-mqtt/src/main/java/org/apache/activemq/transport/mqtt/MQTTProtocolConverter.java b/activemq-mqtt/src/main/java/org/apache/activemq/transport/mqtt/MQTTProtocolConverter.java
index cc51ce7..af5f003 100644
--- a/activemq-mqtt/src/main/java/org/apache/activemq/transport/mqtt/MQTTProtocolConverter.java
+++ b/activemq-mqtt/src/main/java/org/apache/activemq/transport/mqtt/MQTTProtocolConverter.java
@@ -40,6 +40,7 @@
 import org.apache.activemq.broker.region.Subscription;
 import org.apache.activemq.broker.region.TopicRegion;
 import org.apache.activemq.broker.region.policy.RetainedMessageSubscriptionRecoveryPolicy;
+import org.apache.activemq.broker.region.virtual.VirtualTopicInterceptor;
 import org.apache.activemq.command.ActiveMQBytesMessage;
 import org.apache.activemq.command.ActiveMQDestination;
 import org.apache.activemq.command.ActiveMQMapMessage;
@@ -503,7 +504,11 @@
             for (Subscription subscription : dest.getConsumers()) {
                 if (subscription.getConsumerInfo().getConsumerId().equals(consumerId)) {
                     try {
-                        ((org.apache.activemq.broker.region.Topic)dest).recoverRetroactiveMessages(connectionContext, subscription);
+                        if (dest instanceof org.apache.activemq.broker.region.Topic) {
+                            ((org.apache.activemq.broker.region.Topic)dest).recoverRetroactiveMessages(connectionContext, subscription);
+                        } else if (dest instanceof VirtualTopicInterceptor) {
+                            ((VirtualTopicInterceptor)dest).getTopic().recoverRetroactiveMessages(connectionContext, subscription);
+                        }
                         if (subscription instanceof PrefetchSubscription) {
                             // request dispatch for prefetch subs
                             PrefetchSubscription prefetchSubscription = (PrefetchSubscription) subscription;
{noformat};;;","31/Jul/14 21:24;tabish;Fixed the NPE scenario.  The issue with retained messages is not really related to this code so a separate issue will be opened to cover that.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web-console does not initialize under Spring-4.x,AMQ-5296,12730780,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,akuhtz,akuhtz,30/Jul/14 12:39,07/Dec/15 20:28,14/Jul/23 05:44,07/Dec/15 20:28,5.10.0,,,,,,,,,5.11.0,,,,Web Console,,,,,0,,,,,,"Web-console does not initialize under Spring-4.x because dispatcher-servlet.xml has very old bean definition.
See PR #37 (https://github.com/apache/activemq/pull/37)",,akuhtz,cshannon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,408853,,,Mon Dec 07 20:28:42 UTC 2015,,,,,,,Patch Available,,,,"0|i1ycjb:",408851,,,,,,,,,,,,,,,,,,,,,"07/Dec/15 20:28;cshannon;This has been fixed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HTTPS Network Connector doesn't work with Mutual authentication- HTTPSClientTransport uses wrong SSLSocketFactory,AMQ-5295,12730591,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,nannou9,nannou9,29/Jul/14 20:04,11/Feb/15 10:43,14/Jul/23 05:44,13/Aug/14 16:45,5.9.0,,,,,,,,,5.10.1,5.11.0,,,Connector,,,,,0,mutualSSL,SSL,TLS,,,"HttpsClientTransport is getting wrong SSLSocketFactory.

The problem is here:
{code}
    private SchemeRegistry createSchemeRegistry() {

        SchemeRegistry schemeRegistry = new SchemeRegistry();
        try {
            // register the default socket factory so that it looks at the javax.net.ssl.keyStore,
            // javax.net.ssl.trustStore, etc, properties by default
            SSLSocketFactory sslSocketFactory =
                    new SSLSocketFactory((javax.net.ssl.SSLSocketFactory) javax.net.ssl.SSLSocketFactory.getDefault(),
                    SSLSocketFactory.BROWSER_COMPATIBLE_HOSTNAME_VERIFIER);
            schemeRegistry.register(new Scheme(""https"", getRemoteUrl().getPort(), sslSocketFactory));
            return schemeRegistry;
        } catch (Exception e) {
            throw new IllegalStateException(""Failure trying to create scheme registry"", e);
        }
    }
{code}

The problem with that code is, that it never take SSLSocketFactory from spring context. So the one defined in XML is ignored.

So it's code have to be replaced with:

{code}
    private SchemeRegistry createSchemeRegistry() {

        SchemeRegistry schemeRegistry = new SchemeRegistry();
        try {
            // register the default socket factory so that it looks at the javax.net.ssl.keyStore,
            // javax.net.ssl.trustStore, etc, properties by default
            SSLSocketFactory sslSocketFactory = createSocketFactory();
            schemeRegistry.register(new Scheme(""https"", getRemoteUrl().getPort(), sslSocketFactory));
            return schemeRegistry;
        } catch (Exception e) {
            throw new IllegalStateException(""Failure trying to create scheme registry"", e);
        }
    }
{code}

And then new method should be added:

{code}
    /**
     * Creates a new SSL SocketFactory. The given factory will use user-provided
     * key and trust managers (if the user provided them).
     *
     * @return Newly created (Ssl)SocketFactory.
     * @throws IOException
     */
    protected SocketFactory createSocketFactory() throws IOException {
        if (SslContext.getCurrentSslContext() != null) {
            SslContext ctx = SslContext.getCurrentSslContext();
            try {
                return ctx.getSSLContext().getSocketFactory();
            } catch (Exception e) {
                throw IOExceptionSupport.create(e);
            }
        } else {
            return SSLSocketFactory.getDefault();
        }

    }
{code}

This is consistent solution with other transports.

I will prepare patches and tests for this scenerio.

Greetings
Piotr Klimczak",JBoss Fuse 6.1,githubbot,nannou9,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,57600,57600,,0%,57600,57600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,408664,,,Wed Feb 11 10:43:39 UTC 2015,,,,,,,,,,,"0|i1ybef:",408662,,,,,,,,,,,,,,,,,,,,,"30/Jul/14 09:24;nannou9;It looks like it is not the only problem with mutual authentication functionality.
Once SSLSocketFactory is ok, then NullPointerExceptions occurs.
Debugging...;;;","30/Jul/14 10:10;nannou9;I've just hit a logging bug.
When certificate is not trusted, then real reason is not thrown.
It is also not logged unless debug is enabled.
And then code fails with NPE in much different part of code not pointing to the real cause of problem.
When problems with keys from SSL security point of view was solved, everything started to work.

So now working on patches.;;;","05/Aug/14 16:15;githubbot;GitHub user PiotrKlimczak opened a pull request:

    https://github.com/apache/activemq/pull/40

    https://issues.apache.org/jira/browse/AMQ-5295

    HTTPS Network Connector doesn't work with Mutual authentication- HTTPSClientTransport uses wrong SSLSocketFactory

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/PiotrKlimczak/activemq trunk

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/40.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #40
    
----
commit 8a56a40ab8494740cc05b50d848a3be65e8b2ff5
Author: PiotrKlimczak <nannou9@gmail.com>
Date:   2014-08-05T16:09:52Z

    [AMQ-5295] HTTPS Network Connector doesn't work with Mutual
    authentication- HTTPSClientTransport uses wrong SSLSocketFactory

----
;;;","05/Aug/14 16:17;nannou9;Pull request created:
https://github.com/apache/activemq/pull/40

Patch submitted on behalf of WM Promus by Piotr Klimczak;;;","06/Aug/14 17:06;githubbot;GitHub user PiotrKlimczak opened a pull request:

    https://github.com/apache/activemq/pull/42

    [AMQ-5295] HTTPS Network Connector doesn't work with Mutual

    authentication- HTTPSClientTransport uses wrong SSLSocketFactory

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/PiotrKlimczak/activemq trunk-5295

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/42.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #42
    
----
commit 8a56a40ab8494740cc05b50d848a3be65e8b2ff5
Author: PiotrKlimczak <nannou9@gmail.com>
Date:   2014-08-05T16:09:52Z

    [AMQ-5295] HTTPS Network Connector doesn't work with Mutual
    authentication- HTTPSClientTransport uses wrong SSLSocketFactory

----
;;;","06/Aug/14 17:07;githubbot;Github user PiotrKlimczak closed the pull request at:

    https://github.com/apache/activemq/pull/40
;;;","13/Aug/14 16:45;tabish;Patch applied, thanks.;;;","11/Feb/15 10:43;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/42
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Return proper error codes to MQTT client on failed connect.,AMQ-5288,12729497,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,tabish,tabish,24/Jul/14 17:00,24/Jul/14 17:31,14/Jul/23 05:44,24/Jul/14 17:31,5.10.0,,,,,,,,,5.11.0,,,,MQTT,,,,,1,,,,,,"Currently the MQTT protocol converter doesn't really try to map connection error into the MQTT spec codes.  We need to distinguish between bad client Ids and authentication issues.  We should return codes that match these error conditions

InvalidClientIdException - 0x02 Connection Refused, identifier rejected
CredentialException - 0x04 Connection Refused, bad user name or password
SecurityException - 0x05 Connection Refused, not authorized

",,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,407571,,,Thu Jul 24 17:31:31 UTC 2014,,,,,,,,,,,"0|i1y4tz:",407585,,,,,,,,,,,,,,,,,,,,,"24/Jul/14 17:31;tabish;Fixed on trunk;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"""For example:"" snippets from https://activemq.apache.org/getting-started.html not shown in Chrome",AMQ-5286,12729145,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,mattrpav,cimamoglu,cimamoglu,23/Jul/14 11:34,03/Mar/21 17:41,14/Jul/23 05:44,03/Mar/21 17:41,,,,,,,,,,,,,,Documentation,,,,,1,,,,,,"Works in Safari (Version 7.0.5 (9537.77.4)), but not in Firefox 29.0.1 or Chrome:

My version:
Google Chrome	36.0.1985.125 (Official Build 283153) 
OS	Mac OS X 
Blink	537.36 (@177902)
JavaScript	V8 3.26.31.8
Flash	14.0.0.145
User Agent	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.125 Safari/537.36
Command Line	/Applications/Google Chrome.app/Contents/MacOS/Google Chrome -psn_0_40970 --no-startup-window --flag-switches-begin --flag-switches-end
Executable Path	/Applications/Google Chrome.app/Contents/MacOS/Google Chrome
",,cimamoglu,mattrpav,poggs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,407219,,,Wed Mar 03 17:41:39 UTC 2021,,,,,,,,,,,"0|i1y2of:",407235,,,,,,,,,,,,,,,,,,,,,"23/Jul/14 12:26;cimamoglu;The console messages show the problem pretty obviously:

[blocked] The page at 'https://activemq.apache.org/rest.html' was loaded over HTTPS, but ran insecure content from 'http://activemq.apache.org/styles/site.css': this content should also be loaded over HTTPS.
 rest.html:21
[blocked] The page at 'https://activemq.apache.org/rest.html' was loaded over HTTPS, but ran insecure content from 'http://activemq.apache.org/styles/type-settings.css': this content should also be loaded over HTTPS.
 rest.html:22
[blocked] The page at 'https://activemq.apache.org/rest.html' was loaded over HTTPS, but ran insecure content from 'http://activemq.apache.org/styles/prototype.js': this content should also be loaded over HTTPS.
 rest.html:1
[blocked] The page at 'https://activemq.apache.org/rest.html' was loaded over HTTPS, but ran insecure content from 'http://activemq.apache.org/styles/rico.js': this content should also be loaded over HTTPS.
 rest.html:1
[blocked] The page at 'https://activemq.apache.org/rest.html' was loaded over HTTPS, but ran insecure content from 'http://activemq.apache.org/styles/site.js': this content should also be loaded over HTTPS.
 rest.html:1
[blocked] The page at 'https://activemq.apache.org/rest.html' was loaded over HTTPS, but ran insecure content from 'http://activemq.apache.org/styles/highlighter/styles/shCore.css': this content should also be loaded over HTTPS.
 rest.html:35
[blocked] The page at 'https://activemq.apache.org/rest.html' was loaded over HTTPS, but ran insecure content from 'http://activemq.apache.org/styles/highlighter/styles/shThemeEclipse.css': this content should also be loaded over HTTPS.
 rest.html:36
[blocked] The page at 'https://activemq.apache.org/rest.html' was loaded over HTTPS, but ran insecure content from 'http://activemq.apache.org/styles/highlighter/scripts/shCore.js': this content should also be loaded over HTTPS.
 rest.html:1
[blocked] The page at 'https://activemq.apache.org/rest.html' was loaded over HTTPS, but ran insecure content from 'http://activemq.apache.org/styles/highlighter/scripts/shBrushJava.js': this content should also be loaded over HTTPS.
;;;","23/Jul/14 17:42;poggs;A quick fix for this is to replace ""http://"" in the following with ""//"", or even just remove http://activemq.apache.org from the tags:

    <link href=""http://activemq.apache.org/styles/site.css"" rel=""stylesheet"" type=""text/css""/>
    <link href=""http://activemq.apache.org/styles/type-settings.css"" rel=""stylesheet"" type=""text/css""/>
    <script src=""http://activemq.apache.org/styles/prototype.js"" type=""text/javascript""></script>
    <script src=""http://activemq.apache.org/styles/rico.js"" type=""text/javascript""></script>    
    <script src=""http://activemq.apache.org/styles/site.js"" type=""text/javascript""></script>;;;","03/Mar/21 17:41;mattrpav;Fixed with website conversion;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Activemq-karaf feature.xml missing org.fusesource.hawtbuf since 5.9.0,AMQ-5282,12728496,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,guido.schweizer,guido.schweizer,21/Jul/14 09:46,28/Mar/16 07:03,14/Jul/23 05:44,28/Mar/16 07:03,5.10.0,5.9.0,5.9.1,,,,,,,,,,,Camel,,,,,0,,,,,,"Activemq-karaf feature.xml missing org.fusesource.hawtbuf since 5.9.0
it was there in 5.8.0 looking like this:

<bundle dependency=""true"">mvn:org.fusesource.hawtbuf/hawtbuf/1.9</bundle>
<bundle dependency=""true"">mvn:org.fusesource.hawtbuf/hawtbuf-proto/1.9</bundle>

Problem was found on apache karaf 2.3.3 while starting:
 Unable to resolve 263.0: missing requirement [263.0] osgi.wiring.package; (&(osgi.wiring.package=org.fusesource.hawtbuf)(version>=1.9.0)(!(version>=2.0.0)))


	",Apache Karaf 2.3.3 with activemq-camel 5.9.0,davsclaus,guido.schweizer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,406572,,,Mon Mar 28 07:03:26 UTC 2016,,,,,,,,,,,"0|i1xyq7:",406592,,,,,,,,,,,,,,,,,,,,,"28/Mar/16 07:03;davsclaus;Has been fixed for a while;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect handling of unknown values in selectors,AMQ-5281,12728178,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,traylz,traylz,18/Jul/14 10:02,22/Aug/14 19:01,14/Jul/23 05:44,18/Aug/14 17:25,5.8.0,5.x,,,,,,,,5.11.0,,,,,,,,,0,,,,,,"Due to JmsMessage specification :
http://docs.oracle.com/javaee/1.4/api/javax/jms/Message.html
There are rules how unknown Values evaluates. 

I found 4 violations of specificatoion:
1) Equals expression ""="".
""unknownProp = 0"" should evaluate to UNKNOWN.
In AMQ it evaluates to FALSE instead.
2) Not equals expression ""<>"".
""unknownProp <> 0"" should evaluate to UNKNOWN, it evaluates to FALSE instead.
3) Or expression ""or"".
""unknown or false"" should evaluate to UNKNOWN. It evaluates to FALSE instead.
4) And expression ""and"".
""unknown and false"" should evaluate to FALSE. It evaluates to UNKNOWN instead.
",,githubbot,tabish,traylz,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5280,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,406283,,,Fri Aug 22 19:01:12 UTC 2014,,,,,,,,,,,"0|i1xwyf:",406304,,,,,,,,,,,,,,,,,,,,,"21/Jul/14 07:45;traylz;The is caused by org.apache.activemq.filter.LogicExpression, in this lines:

{code}
    public static BooleanExpression createAND(BooleanExpression lvalue, BooleanExpression rvalue) {
        return new LogicExpression(lvalue, rvalue) {

            public Object evaluate(MessageEvaluationContext message) throws JMSException {

                Boolean lv = (Boolean)left.evaluate(message);

               // Can we do an AND shortcut??
                if (lv == null) {
                    return null;
                }
                if (!lv.booleanValue()) {
                    return Boolean.FALSE;
                }

                Boolean rv = (Boolean)right.evaluate(message);
                return rv == null ? null : rv;
            }

            public String getExpressionSymbol() {
                return ""AND"";
            }
        };
    }
{code}

You see comment ""//Can we do an AND shortcut??""?
That's the cause of that bug.

When left value is unknown method returns null. That's incorrect. You should check if right value is false and return false in that case.;;;","21/Jul/14 07:57;traylz;I can create a pull-request on github with fix and some more test, if that OK with you.;;;","21/Jul/14 15:55;tabish;It does seem like we don't fully follow the mandated behaviour.  The first thing to do is create or add a test to the existing unit tests that demonstrates the error.  There is a selector test class (SelectorTest.java) you could add to and then supply a patch that corrects the issue.  By adding a test you have confidence that the fix will remain into the future.;;;","17/Aug/14 17:24;githubbot;GitHub user traylz opened a pull request:

    https://github.com/apache/activemq/pull/44

    AMQ-5281: Incorrect handling of unknown values in selectors

    See https://issues.apache.org/jira/browse/AMQ-5281 for details.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/traylz/activemq trunk

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/44.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #44
    
----
commit b018d89875a4cc8e92b355aeb087ba112872c1e2
Author: Grigory <gstraylz@gmail.com>
Date:   2014-08-17T17:17:48Z

    AMQ-5281: Incorrect handling of unknown values in selectors (=, <>, or, and)

----
;;;","17/Aug/14 17:25;traylz;Ok, I created pull-request on git-hub, please, review
https://github.com/apache/activemq/pull/44.
I will update description of JIRA now;;;","18/Aug/14 17:25;tabish;Patch applied with thanks.;;;","22/Aug/14 19:01;githubbot;Github user traylz closed the pull request at:

    https://github.com/apache/activemq/pull/44
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
failover redelivery to alternative consumers with pending transaction  causes rollback *and* dlq processing,AMQ-5279,12727925,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,17/Jul/14 13:47,17/Dec/14 19:46,14/Jul/23 05:44,17/Jul/14 16:08,5.10.0,,,,,,,,,5.10.1,5.11.0,,,JMS client,,,,,0,dlq,failover,redelivery,transaction,,"failover isolates the application client from transport failures. For a single consumer, if there is a pending transaction and an ack is lost the transaction can still commit after failover if the messages is redispatched. If it is not redispatched, then the transaction will rollback.
With multiple consumers it is possible that an alternative consumer will get redelivery. If the alternative consumer is on a different connection the duplicate dispatch (tracked by a connection) is not identified, redelivery ensues and the pending transaction rolls back.
If the consumer is on the same connection, the redelivery is treated as a duplicate, the message gets a poison ack and the pending transaction rolls back. This is a double whammy and results in a delivery to the DLQ in error.

The redelivery should be routed to the alternative consumer as if it were on a different connection so that the message can be consumed.
We should DLQ only when the redispatch is not pending on any consumer.",,gtully,sbrandt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,406030,,,Thu Jul 17 16:08:58 UTC 2014,,,,,,,,,,,"0|i1xvev:",406050,,,,,,,,,,,,,,,,,,,,,"17/Jul/14 16:08;gtully;fix in http://git-wip-us.apache.org/repos/asf/activemq/commit/c34851fd;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Proton JMS transformer causes corrupted payload with redelivered messages,AMQ-5278,12727671,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,jfugitt,jfugitt,16/Jul/14 15:15,03/Nov/14 19:19,14/Jul/23 05:44,03/Nov/14 19:19,5.10.0,,,,,,,,,5.11.0,,,,AMQP,,,,,0,amqp,,,,,"When using AMQP with transformer=jms, redelivered messages have a corrupted payload (payload of all zeros).  Creating this JIRA to link to the already opened Proton JIRA (624) and to provide a unit test for ActiveMQ.

See https://issues.apache.org/jira/browse/PROTON-624 for details.
",,jfugitt,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,PROTON-624,,,,,,,,,,,,,,"16/Jul/14 15:18;jfugitt;AMQ5278Test.java;https://issues.apache.org/jira/secure/attachment/12656051/AMQ5278Test.java",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,405776,,,Mon Nov 03 19:19:33 UTC 2014,,,,,,,,,,,"0|i1xtvb:",405798,,,,,,,,,,,,,,,,,,,,,"16/Jul/14 15:18;jfugitt;Attached unit test.;;;","16/Jul/14 23:07;tabish;The proton issue was resolved today, targeted for v0.8.  We'll upgrade to that release once it's out. ;;;","03/Nov/14 19:19;tabish;This is fixed with the update to the new Proton-J 0.8 version. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JDBC ack does not use messageId.entryLocator,AMQ-5277,12727110,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,14/Jul/14 15:57,17/Dec/14 02:51,14/Jul/23 05:44,14/Jul/14 21:19,5.10.0,,,,,,,,,5.10.1,5.11.0,,,Broker,Message Store,,,,0,jdbc,performance,,,,"The jdbc message store was doing a jdbc roundtrip to find the sequence id of a message before a remove. this information was being retained in the messageId entryLocator on insert.
However it was not being recreated on a recover and it was lost on a message ack unless vm transport was in play.

By reusing the entryLocator information there is a ~30% improvement in simple produce/consume roundrtip tests. ",,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,405217,,,Mon Jul 14 21:19:13 UTC 2014,,,,,,,,,,,"0|i1xqjb:",405251,,,,,,,,,,,,,,,,,,,,,"14/Jul/14 21:19;gtully;fix in http://git-wip-us.apache.org/repos/asf/activemq/commit/3b5d89a7;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Stuck messages and CPU churn when aborted transacted message expires,AMQ-5274,12726798,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,gtully,yannick.malins,yannick.malins,11/Jul/14 12:48,12/Dec/16 11:21,14/Jul/23 05:44,11/Sep/14 20:25,5.10.0,5.8.0,5.9.0,5.9.1,,,,,,5.11.0,,,,,,,,,0,,,,,,"The test case is a simple producer/consumer:

Producer: 20 messages are injected, with a timeout of 10s.

Consumer: The redelivery policy is set to 0 retries (the issue exists with other values). The consumer uses transactions and throws a runtime exception on each message received.

queue stats show 20 enqueue, 19 dequeue, 1 pending

DLQ stat show 20 enqueue: all 20 messages go to DLQ, IDs ending in 1-10 for failing, 11-20 for expiry (approx)

the pending item (ID ending in 10) is a ""ghost message"" , and remains stuck indefinitely in queue.test

if you browse, the message is not shown

A) if you restart the broker, after a short while the message is cleaned:

jvm 1    |  WARN | Duplicate message add attempt rejected. Destination: QUEUE://ActiveMQ.DLQ, Message id: ID:REDACTED-52872-1405079629779-1:1:1:1:10
jvm 1    |  WARN | org.apache.activemq.broker.region.cursors.QueueStorePrefetch@5b427f3c:ActiveMQ.DLQ,batchResetNeeded=false,storeHasMessages=true,size=0,cacheEnabled=true,maxBatchSize:20,hasSpace:tru
e - cursor got duplicate: ID:REDACTED--52872-1405079629779-1:1:1:1:10, 4
jvm 1    |  WARN | duplicate message from store ID:REDACTED--52872-1405079629779-1:1:1:1:10, redirecting for dlq processing


B) if you purge, ActiveMQ logs a warning: ""WARN | queue://queue.test after purge complete, message count stats report: 1""
	the queue is marked as being empty.
	however if you restart the broker, the message re-appears shorty, before being cleaned as above
	
	
SUPPLEMENTARY: with activeMQ 5.9.0 and above , if you run the injection several times, the CPU usage of ActiveMQ climbs drastically until the queue is purged.


","win64, RHEL11",gtully,tabish,tmielke,tom_m,yannick.malins,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6534,,,,,,,,,,,"11/Jul/14 12:50;yannick.malins;AMQ-5274.zip;https://issues.apache.org/jira/secure/attachment/12655206/AMQ-5274.zip","27/Aug/14 12:33;tmielke;AMQ-5274v2.zip;https://issues.apache.org/jira/secure/attachment/12664632/AMQ-5274v2.zip","15/Jul/14 18:07;tabish;AMQ5274Test.java;https://issues.apache.org/jira/secure/attachment/12655826/AMQ5274Test.java","11/Jul/14 13:53;yannick.malins;logs_extract.txt;https://issues.apache.org/jira/secure/attachment/12655210/logs_extract.txt",,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,404905,,,Fri Sep 12 09:20:00 UTC 2014,,,,,,,,,,,"0|i1xonb:",404943,,,,,,,,,,,,,,,,,,,,,"11/Jul/14 12:50;yannick.malins;test case and readme;;;","11/Jul/14 13:53;yannick.malins;debug log file;;;","11/Jul/14 14:32;yannick.malins;see attached log - this seems to be due to the ""sync with message expiry processing"" if clause in queuesubscription.acknowledge()

it seems that if the message is expired it is not removed - but that the expiry doesn't remove it either;;;","11/Jul/14 15:03;tabish;See if you can work out a JUnit test case that shows the issue, then when it's fixed the test will ensure that it remains fixed into the future. ;;;","15/Jul/14 18:07;tabish;Attempted to create test to reproduce could not find any problems with this or the provided test against 5.11-SNAPSHOT.;;;","16/Jul/14 07:50;yannick.malins;Hi Tim,

I just ran my test against apache-activemq-5.11-20140715.223633-34 on win64 , and I got exactly the same issue.

The test script prints that it rejects messages 1->10 (the others have already expired), and after it closes, when you go to:

http://localhost:8161/admin/queues.jsp

you see:

ActiveMQ.DLQ	20	0	20	0	Browse Active Consumers
Active Producers
  	Send To Purge Delete
queue.test	1	0	20	19	Browse Active Consumers
Active Producers
  	Send To Purge Delete

There is one ""ghost"" message stuck in queue.test

I will try integrating your junit and running that to see if I can reproduce with that, it will make things easier indeed;;;","28/Jul/14 16:25;yannick.malins;OK, I found some time to integrate the junit test. It seems something in the config is wrong, because if I change the dlq statisfaction method to the following:

      @Override
      public boolean isSatisified() throws Exception {
        long size = dlqView.getQueueSize();
        LOG.info(""DLQ Size: {}"", size);
        if (size == 20) {
          for (Object O : dlqView.browseMessages()) {
            LOG.info(((ActiveMQTextMessage) O).toString());
          }
          return true;
        }
        return false;
      }

I notice that all the messages have dlqDeliveryFailureCause=expired , which should only be the case for the untreated messages. The others should have session rollback/abort as the fail reason.

I will try to see what we are missing;;;","25/Aug/14 14:36;yannick.malins;Also reproduced with jboss-a-mq-6.1.0.redhat-379 , the only difference to the maven test case is adding the configured user/pass in the connection factory defined in context-jms.xml;;;","27/Aug/14 12:23;tmielke;Uploading a modified version AMQ-5274v2.zip that runs a JUnit test. Simply run mvn test to reproduce the issue.;;;","11/Sep/14 20:25;gtully;fix in https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=26807cd4

inflight messages are not expired by the broker side background periodic check. In this way, acks do not compete with expiry.;;;","12/Sep/14 09:20;yannick.malins;Validated the fix on last night's snapshot! Thanks Gary;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"NIO transports using blocking accept calls, very slow shutdown",AMQ-5269,12726598,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dkulp,dkulp,dkulp,10/Jul/14 14:55,10/Jul/14 20:38,14/Jul/23 05:44,10/Jul/14 20:34,5.10.0,,,,,,,,,5.11.0,,,,Transport,,,,,0,,,,,,"
Currently, all the TCP based transports are using the old blocking style of socket.accept() to accept connections.   This works ""OK"" except that for sockets that have a channel associated with them, the socket.close() doesn't cause it to return immediately.  It still waits for the SoTimeout which is currently set a 2 seconds.   That can cause 2 second delays for any shutdown which causes long, unnecessary delays, particularly in the tests.

One possible ""fix"" is to drop the socket.setSoTimeout(2000) call to something much smaller.   However, that would turn the accept thread into a more ""busy wait"" scenario which is undesirable.

A better fix is to change the accepts for the sockets that have a ServerSocketChannel to use the NIO based selectors for the accept operations.   The selector.disable()/selector.close() allows the socket and everything to close immediately.  The result is that the NIO based tests now take the same amount of time as the non-NIO based tests (for which socket.close() causes the accept to return immediately).

Pull request forthcoming.",,dkulp,githubbot,tabish,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Jul/14 16:34;dkulp;AMQ-5269.patch;https://issues.apache.org/jira/secure/attachment/12655028/AMQ-5269.patch",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,404705,,,Thu Jul 10 20:38:47 UTC 2014,,,,,,,,,,,"0|i1xnfb:",404743,,,,,,,,,,,,,,,,,,,,,"10/Jul/14 16:34;dkulp;Attaching a patch for now as my ""git"" stuff is in a bit of a mess and I need to clean that up.   ;;;","10/Jul/14 19:22;githubbot;GitHub user dkulp opened a pull request:

    https://github.com/apache/activemq/pull/33

    [AMQ-5269] Update NIO based transports to use a Select mechanism

    Update NIO based transports to use a Select mechanism for the accepts instead of the blocking select.
    
    Cuts about 10 minutes off the activemq-stomp tests, drops the NIO test execution time down to equal to the non-NIO based tests.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/dkulp/activemq AMQ-5269

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/33.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #33
    
----
commit 52ef9745d9bafbeab940ed4937c014be3abc9655
Author: Daniel Kulp <dkulp@apache.org>
Date:   2014-07-10T14:57:44Z

    [AMQ-5269] Update NIO based transports to use a Select mechanism for the accepts instead of the blocking select.
    Cuts about 10 minutes off the activemq-stomp tests, drops the NIO test execution time down to equal to the non-NIO based tests.

----
;;;","10/Jul/14 19:24;dkulp;On my Mac:

Before:
{code}
Running org.apache.activemq.transport.stomp.Stomp11NIOSSLTest
Tests run: 27, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 126.509 sec - in org.apache.activemq.transport.stomp.Stomp11NIOSSLTest
Running org.apache.activemq.transport.stomp.Stomp11NIOTest
Tests run: 27, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 124.051 sec - in org.apache.activemq.transport.stomp.Stomp11NIOTest
Running org.apache.activemq.transport.stomp.Stomp11SslAuthTest
Tests run: 27, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 73.105 sec - in org.apache.activemq.transport.stomp.Stomp11SslAuthTest
{code}

After:
{code}
Running org.apache.activemq.transport.stomp.Stomp11NIOSSLTest
Tests run: 27, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 71.824 sec - in org.apache.activemq.transport.stomp.Stomp11NIOSSLTest
Running org.apache.activemq.transport.stomp.Stomp11NIOTest
Tests run: 27, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 70.408 sec - in org.apache.activemq.transport.stomp.Stomp11NIOTest
Running org.apache.activemq.transport.stomp.Stomp11SslAuthTest
Tests run: 27, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 72.747 sec - in org.apache.activemq.transport.stomp.Stomp11SslAuthTest
{code};;;","10/Jul/14 20:01;tabish;Reviewed and ran a bunch of the tests here and everything seems good, can commit if you are satisfied with the current changeset;;;","10/Jul/14 20:34;tabish;Fixed on trunk, thanks.;;;","10/Jul/14 20:38;githubbot;Github user dkulp closed the pull request at:

    https://github.com/apache/activemq/pull/33
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PooledConnectionFactory gets in endless loop when storing into JNDI,AMQ-5268,12726570,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,mkubricht,mkubricht,10/Jul/14 12:06,16/Dec/14 00:28,14/Jul/23 05:44,10/Jul/14 23:04,5.10.0,5.9.0,5.9.1,,,,,,,5.10.1,5.11.0,,,Pool,,,,,0,jndi,pool,,,,"We got into troubles when upgrading from 5.7.0 to new version 5.10.0. One of our tests which uses binding of *PooledConnectionFactory* into JNDI (tomcat-naming) got *stuck* and computes *in endless loop*.

Problem is implementation of interface {{org.apache.activemq.jndi.JNDIStorableInterface}} in class {{org.apache.activemq.pool.PooledConnectionFactory}}:
- method {{populateProperties(Properties props)}} implementation uses {{IntrospectionSupport.getProperties(...)}} in order to set properties for all getters,
- setting properties works for basic types, but causes stack overflow for getters - {{getReference()}} and {{getProperties()}} which creates recursion loops
- loop #1: PooledConnectionFactory.getProperties -> PooledConnectionFactory.populateProperties -> IntrospectionSupport.getProperties -> PooledConnectionFactory.getProperties
- loop #2: PooledConnectionFactory.getProperties -> PooledConnectionFactory.populateProperties -> IntrospectionSupport.getProperties -> PooledConnectionFactory.getReference -> JNDIReferenceFactory.createReference -> PooledConnectionFactory.getProperties
- additional info: recursion loop doesn't end with StackOverflowError, but InvocationTargetException is propagated to IntrospectionSupport.getProperties method where it is being ignored and causes ""almost endless"" computation (exponential complexity)

Example test without using JNDI, but using key methods showing the problem and its possible solution/workaround for AMQ 5.10.0 is attached.

We found that error exists for AMQ 5.9.0 and newer after resolving following issue AMQ-4757.","JDK-1.6.0_38, tomcat-naming (JNDI)",mkubricht,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Jul/14 12:08;mkubricht;AmqJndiReference.java;https://issues.apache.org/jira/secure/attachment/12654976/AmqJndiReference.java",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,404677,,,Fri Jul 11 08:58:56 UTC 2014,,,,,,,,,,,"0|i1xn93:",404715,,,,,,,,,,,,,,,,,,,,,"10/Jul/14 14:10;tabish;Can you create a JUnit test that shows the problem, and create a patch that resolves it?;;;","10/Jul/14 23:04;tabish;Fixed on trunk.  ;;;","11/Jul/14 08:58;mkubricht;That was fast. I was preparing to create you a patch when I found that you've already fixed it. Thanks for it.

Anyway I have some notes that might be considered:
- exactly same problem is for class {{org.apache.activemq.pool.XaPooledConnectionFactory}} (it uses IntrospectionSupport as well in method populateProperties)
- my example might confuse you about property names - originally Gary Tully use ""pool"" prefix for the properties ({{org.apache.activemq.pool.PooledConnectionFactory.POOL_PROPS_PREFIX}}), the prefix probably should remain,
- more on prefix: I would like ""pool."" (with dot at the end) more as it is used elsewhere (for example when parsing destination policies -> {{org.apache.activemq.ActiveMQConnectionFactory.populateProperties(Properties)}});;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Stuck Messages in Single Broker when using JDBC Persistent Store,AMQ-5266,12726356,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,09/Jul/14 16:03,09/Feb/16 12:54,14/Jul/23 05:44,10/Jul/14 12:17,5.10.0,,,,,,,,,5.11.0,,,,Message Store,,,,,0,Hanging,JDBC,Order,,,"With multiple concurrent producer transactions and active fast consumers it is possible to get out of order db insertions and scans resulting in a skipped dispatch. This scenario is exacerbated when the cursor cache is disabled because every dispatch will potentially result in a scan.
the JDBC store maps jms transaction to jdbc connection transactions at the point of a commit and these can occur in parallel. The broker tracks a sequenceId to ensure ordering relative to a jms connection and  scans respect that order but there is currently nothing to stop a scan seeing a later sequence before an earlier sequence is stored. In other words, inserts can race, but the reader needs to limit a read to the lowest outstanding sequence.

On a restart, any stuck messages will be replayed correctly, because the cursor transient state w.r.t to the last sequence id read will be reset.",,gtully,jira-bot,tmielke,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6164,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,404463,,,Fri Jul 17 11:32:26 UTC 2015,,,,,,,,,,,"0|i1xlxz:",404502,,,,,,,,,,,,,,,,,,,,,"10/Jul/14 12:17;gtully;fix in http://git-wip-us.apache.org/repos/asf/activemq/commit/6348d119

scans are now limited to the last insert or the minimum pending insert, which ensures that we don't read ahead of the destination order.;;;","17/Jul/15 11:32;jira-bot;Commit 7c116631b504e31fb0bd9f805b1b77090d16f4ff in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=7c11663 ]

AMQ-5266 - fix leak in transaction context - completions were not cleared on close/commit
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMX destination entires fail due to race condition in MBeanBridgeDestination,AMQ-5265,12726188,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,jgenender,jgenender,08/Jul/14 21:03,08/Mar/21 09:09,14/Jul/23 05:44,09/Jul/14 14:58,5.10.0,5.9.1,,,,,,,,5.10.1,5.11.0,,,Broker,,,,,0,,,,,,"JMX statistics on destinations creates a race condition in the MBeanBridgeDestination's onInboundMessage, onOutboundMessage, and the purgeInactiveDestinationView task.  If the task fires and removes the objectName while the onInboundMessage or onOutboundMessage fires, it will spit out warnings of it already being created if multiple threads are running.  The fix is to properly synchronize in the purgeInactiveDestinationView and also be sure it cleans up itself in the destinationObjectNameMap.

Patch is attached as is a git pull request (for whatever is easier)",,dejanb,githubbot,gtully,jgenender,thammoud,,,,,,,,,,,,,,,,,,,,,"lucastetreault commented on pull request #114:
URL: https://github.com/apache/activemq/pull/114#issuecomment-792580779


   Can one of the admins verify this patch?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/21 08:39;githubbot;600","lucastetreault removed a comment on pull request #114:
URL: https://github.com/apache/activemq/pull/114#issuecomment-792580779


   Can one of the admins verify this patch?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/21 09:09;githubbot;600",,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Jul/14 21:04;jgenender;AMQ-5265.patch;https://issues.apache.org/jira/secure/attachment/12654681/AMQ-5265.patch","05/May/15 14:11;thammoud;activemq.patch;https://issues.apache.org/jira/secure/attachment/12730506/activemq.patch",,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,404295,,,Mon Jun 15 10:52:47 UTC 2015,,,,,,,Patch Available,,,,"0|i1xkwv:",404335,,,,,,,,,,,,,,,,,,,,,"08/Jul/14 21:07;githubbot;GitHub user jgenender opened a pull request:

    https://github.com/apache/activemq/pull/31

    AMQ-5265 - fix race condition for task

    AMQ-5265 - fix race condition for task in MBeanBridgeDestination for running the purgeInactiveDestinationViewTask and the execution of onOutboundMessage and onInboundMessage

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/jgenender/activemq trunk

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/31.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #31
    
----
commit a519384355d0e4acc74e9871ea33e2ee1d113ed5
Author: Jeff Genender <jgenender@savoirtech.com>
Date:   2014-07-08T21:05:41Z

    AMQ-5265 - fix race condition for task

----
;;;","09/Jul/14 14:58;dejanb;Patch applied. Thanks!;;;","11/Feb/15 10:43;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/31
;;;","04/May/15 19:43;thammoud;Hello,

I do still see the problem in 5.11.1. The culprit is destinationObjectNameMap which is being used for both inbound and outbound messages.  A destination that is put from the onInBoundMessage gets trashed by the one put from the onOutBoundMessage. The cleanup code in the stop() method will clean only one MBean instance leaving the other one dangling. 

My setup is as follows:

Two Networked Brokers (Full Duplex) (A and B). Two clients each publishing on the same exact topic. Each client is connected to exactly one of the brokers. Kill Broker B. Restart Broker B. On reconnect, you will see the error in Broker A. 

;;;","05/May/15 14:11;thammoud;Attached is a patch that believe will address the issue.;;;","14/Jun/15 19:16;githubbot;GitHub user Hauenstein opened a pull request:

    https://github.com/apache/activemq/pull/114

    https://issues.apache.org/jira/browse/AMQ-5265

    This is a revision of AMQ-5265 -- the original fix didn't quite clean up all of the mbeans that MBeanBridgeDestination created, as [noted in the original issue by Tarek Hammoud](https://issues.apache.org/jira/browse/AMQ-5265?focusedCommentId=14527137&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14527137).  The key for the map used to track the ObjectNames was an ActiveMQDestination (which uses the destination's physical name for its equals() implementation) caused the inbound and outbound entries in the map to randomly replace each other.
    
    Like Tarek, I could reproduce this issue using 5.11.1 with two networked brokers (full duplex) with a client publishing to a topic.  After I restart a broker, the logs on the non-restarted broker show the MBeanBridgeDestination reporting many InstanceAlreadyExistsExceptions when trying to register the unintentionally-duplicated mbeans.
    
    Please let me know if this makes sense or if there are any changes you would suggest (ex: is there a reasonable way or an example I could follow to add a unit test for something like this?).  Thanks!

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/Hauenstein/activemq master

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/114.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #114
    
----
commit 139916e3eee1b60992e13657069358186e57247f
Author: L. Hauenstein <logan.hauenstein@gmail.com>
Date:   2015-06-11T18:34:28Z

    https://issues.apache.org/jira/browse/AMQ-5265
    
    Revision of AMQ-5265 - fixed the map that tracks
    MBeanBridgeDestination's registered mbeans so that it cleans itself up
    correctly when stopped.

----
;;;","15/Jun/15 10:52;gtully;[~Hauenstein] peek at https://github.com/apache/activemq/blob/138e52b08c2f49b730817932a6e63f2a135854f1/activemq-unit-tests/src/test/java/org/apache/activemq/network/DuplexNetworkMBeanTest.java for some unit test inspiration, or other tests in that package;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ hangs on shutdown when JMS Bridge is created,AMQ-5262,12725879,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,pminearo,pminearo,07/Jul/14 23:15,16/Dec/14 00:08,14/Jul/23 05:44,08/Jul/14 20:21,5.10.0,5.9.0,5.9.1,,,,,,,5.10.1,5.11.0,,,Broker,,,,,1,,,,,,"We are having a problem with ActiveMQ hanging on shutdown.  Here is the scenario, we have a stand alone application that runs an embedded ActiveMQ which creates a JMS Queue Bridge via Spring configs. When we call shutdown, the TCPTransport that connects the JMS Queue Bridge does not shutdown, it hangs on java.net.SocketInputStream.socketRead0(). 

{noformat}
java.lang.Thread.State: RUNNABLE
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.read(SocketInputStream.java:129)
	at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)
	at org.apache.activemq.transport.tcp.TcpTransport$2.fill(TcpTransport.java:604)
	at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)
	at org.apache.activemq.transport.tcp.TcpTransport$2.read(TcpTransport.java:589)
	at java.io.DataInputStream.readInt(DataInputStream.java:370)
	at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:275)
	at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:221)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:213)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)
	at java.lang.Thread.run(Thread.java:662)
{noformat}

Digging around on the forums and the issue tracker, the work around seems to add a parameter to the URI (Ex - tcp://localhost:60606?daemon=true).  

According to this StackOverflow posting (http://stackoverflow.com/questions/2213340/what-is-daemon-thread-in-java) which quotes from Java Concurrency in Practice 

* When a new thread is created it inherits the daemon status of its parent.
* Normal thread and daemon threads differ in what happens when they exit. When the JVM halts any remaining daemon threads are abandoned: **finally blocks are not executed**, stacks are not unwound - JVM just exits. Due to this reason daemon threads should be used sparingly and it is dangerous to use them for tasks that might perform any sort of I/O.

So, making the Socket that connects the JMS Queue Bridge a Daemon thread, seems to be the wrong solution.  

I was trying to debug the initialization of ActiveMQ, and noticed the org.apache.activemq.network.jms.JmsConnector class has a stop() method on it.  I believe this class creates the connection for the JMS Bridge, right?  If so, the stop method does not seem to shutdown the connection properly. 

{code}
public void stop() throws Exception {

        if (started.compareAndSet(true, false)) {

            ThreadPoolUtils.shutdown(connectionSerivce);
            connectionSerivce = null;

            for (DestinationBridge bridge : inboundBridges) {
                bridge.stop();
            }
            for (DestinationBridge bridge : outboundBridges) {
                bridge.stop();
            }
            LOG.info(""JMS Connector {} stopped"", getName());
        }
        
}
{code}

The question I have is why is the stop() method relying on the ThreadPoolUtils.shutdown(connectionSerivce) and NOT calling close() on the Connections first? For example:

{code}
public void stop() throws Exception {

        if (started.compareAndSet(true, false)) {

			foreignConnection.get().close();
			localConnection.get().close();
			
            ThreadPoolUtils.shutdown(connectionSerivce);
            connectionSerivce = null;

            for (DestinationBridge bridge : inboundBridges) {
                bridge.stop();
            }
            for (DestinationBridge bridge : outboundBridges) {
                bridge.stop();
            }
            LOG.info(""JMS Connector {} stopped"", getName());
        }
        
}
{code}
It was a little difficult to follow the code, so I may be missing something.  BUT shouldn't the connections close first?  Or am I looking in the wrong place.  

I have created a small project that creates this scenario.
https://github.com/pminearo/activemq-shutdown-bug.git

This was done with ActiveMQ 5.9.  Though, since this bug has been around for quite some time, it most likely is still in 5.10, 5.11, and 6.0.
",,ian@ianbrandt.com,pminearo,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,404037,,,Tue Jul 08 20:28:15 UTC 2014,,,,,,,,,,,"0|i1xjcv:",404078,,,,,,,,,,,,,,,,,,,,,"08/Jul/14 20:10;tabish;It does seems like there should be a close there, although probably after the connectionService is stopped to prevent any attempts at reconnect from contending with the close.  

In reality we recommend using Camel as the Bridging technology as it has proven itself to be far better at doing this sort of thing.  See: http://activemq.apache.org/jms-to-jms-bridge.html;;;","08/Jul/14 20:21;tabish;Close connections when the connector is stopped. ;;;","08/Jul/14 20:28;pminearo;The JMS Bridge so far has been working great.  The only issue we have seen is this hanging resource.  So, cleaning up the resources properly would fix the issue and make the use of Camel no longer a needed option.  Are there more technical reasons to not use the JMS Bridge the way it is set up in the Test project I included?  Is this functionality a legacy spec and no longer supported?  Did it change in 6.0? etc? 
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Connection reference leak in PooledConnectionFactory leading to expired connections stuck in the pool,AMQ-5258,12725221,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,barlabanov,barlabanov,03/Jul/14 09:51,16/Dec/14 00:02,14/Jul/23 05:44,07/Jul/14 18:30,5.10.0,5.9.1,,,,,,,,5.10.1,5.11.0,,,Pool,,,,,0,,,,,,"org.apache.activemq.jms.pool.PooledConnectionFactory creates a connection on startup without giving it back to the pool:

{code:java}
    public void start() {
        LOG.debug(""Staring the PooledConnectionFactory: create on start = {}"", isCreateConnectionOnStartup());
        stopped.set(false);
        if (isCreateConnectionOnStartup()) {
            try {
                // warm the pool by creating a connection during startup
                createConnection();
            } catch (JMSException e) {
                LOG.warn(""Create pooled connection during start failed. This exception will be ignored."", e);
            }
        }
    }
{code}

So no close() method of PooledConnection is called and so no decrementReferenceCount is called on ConnectionPool. So referenceCount never becomes 0.
Later on if an exception occurs and hasExpired of ConnectionPool is set to true, the connection will not be closed since expiredCheck() method of ConnectionPool always compares referenceCount with 0 and does close() only if it is 0.

So we have a dead ConnectionPool instance and all usages result in ""XXX closed"" errors.

The fix would be to add call to close() just after doing createConnection() in PooledConnectionFactory#start() to make referenceCount go to 0. Something like this:

{code:java}
    public void start() {
        LOG.debug(""Staring the PooledConnectionFactory: create on start = {}"", isCreateConnectionOnStartup());
        stopped.set(false);
        if (isCreateConnectionOnStartup()) {
            try {
                // warm the pool by creating a connection during startup
                createConnection().close(); // <--- makes sure referenceCount goes to 0
            } catch (JMSException e) {
                LOG.warn(""Create pooled connection during start failed. This exception will be ignored."", e);
            }
        }
    }
{code}",,barlabanov,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,403404,,,Mon Jul 07 18:30:34 UTC 2014,,,,,,,,,,,"0|i1xfi7:",403452,,,,,,,,,,,,,,,,,,,,,"07/Jul/14 18:30;tabish;Fixed, connection is created and closed to allow it to reside in the pool as unused and error out or time out as expect. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQP WARN  Transport Connection failed: java.io.IOException,AMQ-5256,12724822,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,01/Jul/14 21:30,15/Dec/14 23:53,14/Jul/23 05:44,01/Jul/14 21:36,5.10.0,,,,,,,,,5.10.1,5.11.0,,,AMQP,,,,,0,amqp,hang,IOException,,,"concurrent AMQP connection, client hung on half closed connection, waiting for response to open.{code}   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	- waiting on <7df15ba78> (a org.apache.qpid.amqp_1_0.transport.ConnectionEndpoint)
	at java.lang.Object.wait(Object.java:485)
	at org.apache.qpid.amqp_1_0.transport.ConnectionEndpoint.open(ConnectionEndpoint.java:154)
	- locked <7df15ba78> (a org.apache.qpid.amqp_1_0.transport.ConnectionEndpoint)
	- locked <7df15ba78> (a org.apache.qpid.amqp_1_0.transport.ConnectionEndpoint)
	at org.apache.qpid.amqp_1_0.client.Connection.<init>(Connection.java:284)
	at org.apache.qpid.amqp_1_0.client.Connection.<init>(Connection.java:143)
	at org.apache.qpid.amqp_1_0.jms.impl.ConnectionImpl.connect(ConnectionImpl.java:115)
	- locked <7df8bd048> (a java.lang.Object)
	at org.apache.qpid.amqp_1_0.jms.impl.ConnectionImpl.start(ConnectionImpl.java:284){code}
Broker log contains:{code}
[ActiveMQ Transport: tcp:///127.0.0.1:64496@64488            ] - WARN  Transport     - Transport Connection to: tcp://127.0.0.1:64496 failed: java.io.IOException{code}
",,gtully,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5273,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,403005,,,Tue Jul 01 21:36:05 UTC 2014,,,,,,,,,,,"0|i1xd33:",403061,,,,,,,,,,,,,,,,,,,,,"01/Jul/14 21:36;gtully;fix and test in http://git-wip-us.apache.org/repos/asf/activemq/commit/5aef16ad;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Typo In settings parameter for policyEntries,AMQ-5253,12724461,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,alexgal,alexgal,30/Jun/14 14:30,21/Jul/14 20:09,14/Jul/23 05:44,21/Jul/14 20:09,5.9.0,,,,,,,,,5.11.0,,,,,,,,,0,,,,,,"I noticed that there is a typo in property used for deleting inactive destinations.
In documentation example(http://activemq.apache.org/delete-inactive-destinations.html)
""inactiveTimoutBeforeGC"" used. Which has one letter missing in word ""Timout"". 

I tried to change property name to ""inactiveTimeoutBeforeGC"" and active mq failed to start afterwards, so seems there is typo in parameter name. 
","OS X Version 10.9.3
AMQ were installed through homebrew",alexgal,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,402644,,,Mon Jul 21 20:09:44 UTC 2014,,,,,,,,,,,"0|i1xayf:",402711,,,,,,,,,,,,,,,,,,,,,"30/Jun/14 16:44;tabish;We should probably create an alternative set of accessors and deprecate the old one's so that we have names that are spelled correctly.  ;;;","21/Jul/14 20:09;tabish;Fixed on trunk. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Purge through webconsole fails if authorizationPlugin is used,AMQ-5252,12724421,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,rwagg,rwagg,30/Jun/14 11:07,16/Apr/15 23:13,14/Jul/23 05:44,16/Apr/15 23:13,5.10.0,,,,,,,,,5.12.0,,,,Web Console,,,,,0,,,,,,"Upgrading from a 5.5.1 broker to 5.10. 
I've managed to work around the issue by making some changes to org.apache.activemq.web.LocalBrokerFacade, but unsure if this is the root issue or a band-aid fix. 

{code}
Set destinations = getManagedBroker().getQueueRegion().getDestinations(destination); 
{code}

returns a AuthorizationDestinationFilter when the code is expecting a org.apache.activemq.broker.region.Queue - calling getNext() on the AuthorizationDestinationFilter returns the expected Queue. 
            

Old code:
{code}
 public void purgeQueue(ActiveMQDestination destination) throws Exception {	
        Set destinations = getManagedBroker().getQueueRegion().getDestinations(destination);
        for (Iterator i = destinations.iterator(); i.hasNext();) 
        {        	
            Destination dest = (Destination) i.next();
            if (dest instanceof Queue) {
                Queue regionQueue = (Queue) dest;
                regionQueue.purge();
           }
        }
    }
{code}
new:

{code}
 public void purgeQueue(ActiveMQDestination destination) throws Exception {	
        Set destinations = getManagedBroker().getQueueRegion().getDestinations(destination);
        for (Iterator i = destinations.iterator(); i.hasNext();) 
        {        	
            Destination dest = (Destination) i.next();
            if (dest instanceof Queue) {
                Queue regionQueue = (Queue) dest;
                regionQueue.purge();
            }
            else if(dest instanceof  AuthorizationDestinationFilter)
            {
            	AuthorizationDestinationFilter adf = (AuthorizationDestinationFilter)dest;
            	if (adf.getNext() instanceof Queue) 
            	{
            		Queue regionQueue = (Queue)adf.getNext();
                    regionQueue.purge();  
            	}
            }
        }
    }
{code}


Attached is the activemq.xml file we're using to test this - creating a message on the webconsole and then attempting to purge it will fail unless either the code change above is made, or the <plugins> section of activemq.xml is commented out. ",,maenxe,rwagg,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5685,,,,,,,,,,,,,,,,,,,,,,,,"30/Jun/14 11:09;rwagg;activemq.xml;https://issues.apache.org/jira/secure/attachment/12653135/activemq.xml",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,402604,,,Thu Apr 16 23:13:19 UTC 2015,,,,,,,,,,,"0|i1xapj:",402671,,,,,,,,,,,,,,,,,,,,,"28/Oct/14 00:52;maenxe;I believe that I am having the same issue.  This was working fine for us in 5.6, but failed when we upgraded to 5.10.  We also tried to update to 5.7, and it fails there too.  The other symptom that we see is that attempts to use the sendMessage function of the webconsole returns the following error in the browser:
{noformat}
Exception occurred while processing this request, check the log for more information!
{noformat}

And the following in the activemq.log:
{noformat}
2014-10-27 17:49:03,771 [//localhost#105] WARN  TransportConnection            - Failed to add Connection ID:dev-jms1-44015-1412438005557-56116:5
java.lang.SecurityException: User name [admin] or password is invalid.
        at org.apache.activemq.security.SimpleAuthenticationBroker.addConnection(SimpleAuthenticationBroker.java:85)
        at org.apache.activemq.broker.MutableBrokerFilter.addConnection(MutableBrokerFilter.java:97)
        at org.apache.activemq.broker.TransportConnection.processAddConnection(TransportConnection.java:764)
        at org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:139)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:294)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:148)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)
        at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
        at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:246)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:112)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:42)
2014-10-27 17:49:03,774 [tp331361732-182] WARN  ServletHandler                 -
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is javax.jms.JMSSecurityException: User name [admin] or password is invalid.
        at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:965)
        at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:855)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:713)
        at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:829)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
        at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:652)
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1320)
        at org.apache.activemq.web.AuditFilter.doFilter(AuditFilter.java:59)
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1291)
        at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1291)
        at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:102)
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1291)
        at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:443)
        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
        at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:521)
        at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:227)
        at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1044)
        at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:372)
        at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:189)
        at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:978)
        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
        at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
        at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:521)
        at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
        at org.eclipse.jetty.server.Server.handle(Server.java:367)
        at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:486)
        at org.eclipse.jetty.server.AbstractHttpConnection.content(AbstractHttpConnection.java:937)
        at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.content(AbstractHttpConnection.java:998)
        at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:861)
        at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:240)
        at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
        at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
        at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
        at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
        at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
        at java.lang.Thread.run(Thread.java:744)
Caused by: javax.jms.JMSSecurityException: User name [admin] or password is invalid.
        at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:52)
        at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1417)
        at org.apache.activemq.ActiveMQConnection.ensureConnectionInfoSent(ActiveMQConnection.java:1522)
        at org.apache.activemq.ActiveMQConnection.start(ActiveMQConnection.java:527)
        at org.apache.activemq.web.WebClient.getConnection(WebClient.java:260)
        at org.apache.activemq.web.WebClient.createSession(WebClient.java:347)
        at org.apache.activemq.web.WebClient.getSession(WebClient.java:248)
        at org.apache.activemq.web.controller.SendMessage.createMessage(SendMessage.java:172)
        at org.apache.activemq.web.controller.SendMessage.sendMessages(SendMessage.java:71)
        at org.apache.activemq.web.controller.SendMessage.handleRequest(SendMessage.java:56)
        at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
        at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:925)
        at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:856)
        at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:953)
        ... 38 more
Caused by: java.lang.SecurityException: User name [admin] or password is invalid.
        at org.apache.activemq.security.SimpleAuthenticationBroker.addConnection(SimpleAuthenticationBroker.java:85)
        at org.apache.activemq.broker.MutableBrokerFilter.addConnection(MutableBrokerFilter.java:97)
        at org.apache.activemq.broker.TransportConnection.processAddConnection(TransportConnection.java:764)
        at org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:139)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:294)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:148)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)
        at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
        at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:246)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:112)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:42)
2014-10-27 17:49:03,775 [tp331361732-182] WARN  ServletHandler                 - /admin/sendMessage.action
javax.jms.JMSSecurityException: User name [admin] or password is invalid.
        at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:52)
        at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1417)
        at org.apache.activemq.ActiveMQConnection.ensureConnectionInfoSent(ActiveMQConnection.java:1522)
        at org.apache.activemq.ActiveMQConnection.start(ActiveMQConnection.java:527)
        at org.apache.activemq.web.WebClient.getConnection(WebClient.java:260)
        at org.apache.activemq.web.WebClient.createSession(WebClient.java:347)
        at org.apache.activemq.web.WebClient.getSession(WebClient.java:248)
        at org.apache.activemq.web.controller.SendMessage.createMessage(SendMessage.java:172)
        at org.apache.activemq.web.controller.SendMessage.sendMessages(SendMessage.java:71)
        at org.apache.activemq.web.controller.SendMessage.handleRequest(SendMessage.java:56)
        at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
        at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:925)
        at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:856)
        at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:953)
        at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:855)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:713)
        at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:829)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
        at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:652)
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1320)
        at org.apache.activemq.web.AuditFilter.doFilter(AuditFilter.java:59)
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1291)
        at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1291)
        at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:102)
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1291)
        at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:443)
        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
        at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:521)
        at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:227)
        at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1044)
        at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:372)
        at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:189)
        at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:978)
        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
        at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
        at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:521)
        at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
        at org.eclipse.jetty.server.Server.handle(Server.java:367)
        at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:486)
        at org.eclipse.jetty.server.AbstractHttpConnection.content(AbstractHttpConnection.java:937)
        at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.content(AbstractHttpConnection.java:998)
        at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:861)
        at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:240)
        at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
        at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
        at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
        at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
        at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
        at java.lang.Thread.run(Thread.java:744)
Caused by: java.lang.SecurityException: User name [admin] or password is invalid.
        at org.apache.activemq.security.SimpleAuthenticationBroker.addConnection(SimpleAuthenticationBroker.java:85)
        at org.apache.activemq.broker.MutableBrokerFilter.addConnection(MutableBrokerFilter.java:97)
        at org.apache.activemq.broker.TransportConnection.processAddConnection(TransportConnection.java:764)
        at org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:139)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:294)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:148)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)
        at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
        at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:246)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:112)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:42)
2014-10-27 17:49:05,776 [s1] Task-205991] INFO  TransportConnection            - Stopping vm://localhost#104 because Failed with SecurityException: User name [admin] or password is invalid.
{noformat}

These actions work fine if authorizationPlugin is commented out of the activemq.xml config.;;;","16/Apr/15 23:13;tabish;Fix by patch in AMQ-5685 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Scheduler missing some synchronization,AMQ-5251,12724276,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,jahlborn,jahlborn,28/Jun/14 03:54,30/Jul/16 12:20,14/Jul/23 05:44,28/Jun/14 14:22,5.10.0,,,,,,,,,5.10.1,5.11.0,,,Broker,,,,,0,,,,,,the org.apache.activemq.thread.Scheduler.executePeriodically() method should be synchronized since it modifies the timerTasks map.,,jahlborn,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6382,AMQ-5508,AMQ-5543,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,402461,,,Sat Jun 28 14:22:49 UTC 2014,,,,,,,,,,,"0|i1x9tb:",402528,,,,,,,,,,,,,,,,,,,,,"28/Jun/14 14:22;tabish;Fixed;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"""cursor got duplicate"" error after upgrade",AMQ-5249,12724267,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,ruralhunter,ruralhunter,28/Jun/14 01:59,14/Mar/17 21:08,14/Jul/23 05:44,14/Mar/17 21:08,5.10.0,5.9.1,,,,,,,,,,,,,,,,,7,,,,,,"I was using 5.9.0 and meet one problem so I tried to upgrade activemq. I tried both 5.9.1 and 5.10.0 and encouterred a same problem. I saw messages filled DLQ very quickly. I checked the clients both producer and consumer but there was no error. I checked activemq log and found the log is full of these warnings:
2014-06-27 23:22:09,337 | WARN  | org.apache.activemq.broker.region.cursors.QueueStorePrefetch@19117501:com.cyyun.webmon.spider.update,batchResetNeeded=false,storeHasMessages=true,size=211,cacheEnabled=true,maxBatchSize:200,hasSpace:true - cursor got duplicate: ID:211.com-52399-1400732399425-1:1:235992:1:1, 4 | org.apache.activemq.broker.region.cursors.AbstractStoreCursor | ActiveMQ Broker[localhost] Scheduler
2014-06-27 23:22:09,337 | WARN  | org.apache.activemq.broker.region.cursors.QueueStorePrefetch@19117501:com.xxxx.update,batchResetNeeded=false,storeHasMessages=true,size=211,cacheEnabled=true,maxBatchSize:200,hasSpace:true - cursor got duplicate: ID:nbzjjf22805-34129-1403880308671-1:1:28:1:1, 4 | org.apache.activemq.broker.region.cursors.AbstractStoreCursor | ActiveMQ Broker[localhost] Scheduler
2014-06-27 23:22:09,338 | WARN  | org.apache.activemq.broker.region.cursors.QueueStorePrefetch@19117501:com.xxxxx.update,batchResetNeeded=false,storeHasMessages=true,size=211,cacheEnabled=true,maxBatchSize:200,hasSpace:true - cursor got duplicate: ID:jxncxnj2-48598-1403856107346-1:1:6007:1:1, 4 | org.apache.activemq.broker.region.cursors.AbstractStoreCursor | ActiveMQ Broker[localhost] Scheduler
2014-06-27 23:22:09,338 | WARN  | org.apache.activemq.broker.region.cursors.QueueStorePrefetch@19117501:com.xxxx.update,batchResetNeeded=false,storeHasMessages=true,size=211,cacheEnabled=true,maxBatchSize:200,hasSpace:true - cursor got duplicate: ID:jxnc17-60227-1400730816361-1:1:149072:1:1, 4 | org.apache.activemq.broker.region.cursors.AbstractStoreCursor | ActiveMQ Broker[localhost] Scheduler
2014-06-27 23:22:09,339 | WARN  | org.apache.activemq.broker.region.cursors.QueueStorePrefetch@19117501:com.xxxx.update,batchResetNeeded=false,storeHasMessages=true,size=211,cacheEnabled=true,maxBatchSize:200,hasSpace:true - cursor got duplicate: ID:cyyun-46954-1403800808565-1:1:9765:1:1, 4 | org.apache.activemq.broker.region.cursors.AbstractStoreCursor | ActiveMQ Broker[localhost] Scheduler
2014-06-27 23:22:09,339 | WARN  | org.apache.activemq.broker.region.cursors.QueueStorePrefetch@19117501:com.xxxx.update,batchResetNeeded=false,storeHasMessages=true,size=211,cacheEnabled=true,maxBatchSize:200,hasSpace:true - cursor got duplicate: ID:ubuntu-55495-1403497638437-1:1:53086:1:1, 4 | org.apache.activemq.broker.region.cursors.AbstractStoreCursor | ActiveMQ Broker[localhost] Scheduler
2014-06-27 23:22:09,340 | WARN  | org.apache.activemq.broker.region.cursors.QueueStorePrefetch@19117501:com.xxxx.update,batchResetNeeded=false,storeHasMessages=true,size=211,cacheEnabled=true,maxBatchSize:200,hasSpace:true - cursor got duplicate: ID:cyyun-39030-1403880008363-1:1:70:1:1, 4 | org.apache.activemq.broker.region.cursors.AbstractStoreCursor | ActiveMQ Broker[localhost] Scheduler

The problem mostly happens right after activemq starts and sometimes happened after activemq worked normally for a while.

For now I have to roll back to 5.9.0 and the problem doesn't occure.",,achernyakhovsky,aivanise,anujkhandelwal,barlabanov,batwad,DuKu,githubbot,gtully,isral1,jogeraerts,pbruski_,ruralhunter,syberyan,xabhi,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6562,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,402452,,,Fri Jan 13 11:12:12 UTC 2017,,,,,,,,,,,"0|i1x9rb:",402519,,,,,,,,,,,,,,,,,,,,,"02/Jul/14 10:29;gtully;Can you describe the nature of your usecase?
The fix for https://issues.apache.org/jira/browse/AMQ-5212 may be what you need. It narrows down the dlq processing on duplicates from the store. You would need to verify against a 5.11-SNAPSHOT to confirm.;;;","03/Jul/14 09:53;ruralhunter;I'm not sure how to describe the usercase. I checked the messages in DLQ and they are from a same queue. The queue is populated by activemq component in apache camel and consumed by another java application.;;;","29/Jul/14 22:37;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/36
;;;","18/Aug/14 18:09;tabish;The use case and broker configuration are not given.  There is not enough information to investigate this.;;;","27/Aug/14 01:22;ruralhunter;This happens again today. Please check  my broker configuration below:
<broker xmlns=""http://activemq.apache.org/schema/core"" brokerName=""localhost"" dataDirectory=""${activemq.data}"">

        <destinationPolicy>
            <policyMap>
              <policyEntries>
                <policyEntry topic="">"" >
                    <!-- The constantPendingMessageLimitStrategy is used to prevent
                         slow topic consumers to block producers and affect other consumers
                         by limiting the number of messages that are retained
                         For more information, see:

                         http://activemq.apache.org/slow-consumer-handling.html

                    -->
                  <pendingMessageLimitStrategy>
                    <constantPendingMessageLimitStrategy limit=""1000""/>
                  </pendingMessageLimitStrategy>
                </policyEntry>
              </policyEntries>
            </policyMap>
        </destinationPolicy>


        <!--
            The managementContext is used to configure how ActiveMQ is exposed in
            JMX. By default, ActiveMQ uses the MBean server that is started by
            the JVM. For more information, see:

            http://activemq.apache.org/jmx.html
        -->
        <managementContext>
            <managementContext createConnector=""false""/>
        </managementContext>

        <!--
            Configure message persistence for the broker. The default persistence
            mechanism is the KahaDB store (identified by the kahaDB tag).
            For more information, see:

            http://activemq.apache.org/persistence.html
        -->
        <persistenceAdapter>
            <!--<levelDB directory=""${activemq.data}/leveldb""/>-->
		<kahaDB directory=""${activemq.data}/kahadb""/>
        </persistenceAdapter>


          <!--
            The systemUsage controls the maximum amount of space the broker will
            use before disabling caching and/or slowing down producers. For more information, see:
            http://activemq.apache.org/producer-flow-control.html
          -->
          <systemUsage>
            <systemUsage>
                <memoryUsage>
                    <memoryUsage percentOfJvmHeap=""70"" />
                </memoryUsage>
                <storeUsage>
                    <storeUsage limit=""100 gb""/>
                </storeUsage>
                <tempUsage>
                    <tempUsage limit=""50 gb""/>
                </tempUsage>
            </systemUsage>
        </systemUsage>

        <!--
            The transport connectors expose ActiveMQ over a given protocol to
            clients and other brokers. For more information, see:

            http://activemq.apache.org/configuring-transports.html
        -->
        <transportConnectors>
            <!-- DOS protection, limit concurrent connections to 1000 and frame size to 100MB -->
            <transportConnector name=""openwire"" uri=""tcp://0.0.0.0:61616?maximumConnections=5000&amp;wireFormat.maxFrameSize=104857600""/>
            <transportConnector name=""amqp"" uri=""amqp://0.0.0.0:5672?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600""/>
            <transportConnector name=""stomp"" uri=""stomp://0.0.0.0:61613?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600""/>
            <transportConnector name=""mqtt"" uri=""mqtt://0.0.0.0:1883?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600""/>
            <transportConnector name=""ws"" uri=""ws://0.0.0.0:61614?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600""/>
	    <transportConnector name=""nio"" uri=""nio://0.0.0.0:62626?maximumConnections=10000&amp;wireFormat.maxFrameSize=104857600""/>
        </transportConnectors>

        <!-- destroy the spring context on shutdown to stop jetty -->
        <shutdownHooks>
            <bean xmlns=""http://www.springframework.org/schema/beans"" class=""org.apache.activemq.hooks.SpringContextHook"" />
        </shutdownHooks>

    </broker>;;;","27/Aug/14 01:39;ruralhunter;This usually can be fixed by restarting activemq;;;","13/Oct/14 07:22;anujkhandelwal;I saw same warnings in my broker today. Broker is running with ActiveMQ 5.10. and in my configuration I am using discardingDLQplugin. 

       <amq:plugins>
            <amq:discardingDLQBrokerPlugin dropAll=""true""/>          
        </amq:plugins>


Thanks,
Anuj
;;;","28/Oct/14 10:42;pbruski_;We're seeing this too on 5.10. If there's anything we can do to help, let us know.
We've upgraded from 5.9.0, which was rock stable.;;;","29/Oct/14 10:55;pbruski_;This is our broker definition
{code}
    <bean id=""broker"" class=""com.atlassian.bamboo.amq.BambooBrokerService""
          init-method=""start"" destroy-method=""stop"">
      <property name=""useJmx"" value=""${bamboo.broker.useJmx}"" />
      <property name=""brokerName"" value=""bamboo"" />
      <property name=""deleteAllMessagesOnStartup"" value=""${bamboo.ignore.server.state.on.restart}"" />
      <property name=""persistent"" value=""true"" />
      <property name=""dataDirectory"" value=""${bamboo.home}/jms-store"" />
      <property name=""destinationPolicy"">
        <amq:policyMap>
          <amq:policyEntries>
            <amq:policyEntry queue="">"" producerFlowControl=""false"">
              <amq:deadLetterStrategy>
                <amq:sharedDeadLetterStrategy processExpired=""false""/>  <!-- discard expired messages: -->
              </amq:deadLetterStrategy>
            </amq:policyEntry>
          </amq:policyEntries>
        </amq:policyMap>
      </property>
      <property name=""systemUsage"">
        <amq:systemUsage>
          <amq:memoryUsage>
            <amq:memoryUsage limit=""128 mb""/>
          </amq:memoryUsage>
          <amq:storeUsage>
            <amq:storeUsage limit=""100 gb""/>
          </amq:storeUsage>
          <amq:tempUsage>
            <amq:tempUsage limit=""50 gb""/>
          </amq:tempUsage>
        </amq:systemUsage>
      </property>

    </bean>

  <bean id=""connectionFactory"" class=""org.apache.activemq.pool.PooledConnectionFactory"" destroy-method=""stop"" depends-on=""broker"">
    <constructor-arg>
      <bean class=""com.atlassian.bamboo.v2.build.agent.BambooActiveMQConnectionFactory"">
        <constructor-arg value=""vm://bamboo""/>
        <property name=""prefetchPolicy"">
          <amq:prefetchPolicy queuePrefetch=""1""/>
        </property>
        <property name=""sendTimeout"" value=""${activemq.sync.response.timeout}""/>
      </bean>
    </constructor-arg>
  </bean>
{code};;;","29/Oct/14 11:24;gtully;can you validate a 5.11 snapshot. There has been a bunch of refactoring to the queue/cursor/store interaction with a view to resolving the occurrence of duplicates from the store. With concurrentStoreAndDispatch=true for kahadb(true by default) there is the possibility of duplicates when the cache becomes exhausted and the cursor reverts to the store. These are now identified and suppressed they don't clutter the DLQ.;;;","29/Oct/14 12:23;pbruski_;Thank you for you response. The problem is that I'd have to push it out to production (we can't reproduce it on our test servers).
Is current 5.11-SNAPSHOT stable enough to do that? Is 5.11 final far away?;;;","29/Oct/14 16:58;gtully;5.11 is in very good shape. Looking to close it down in the next week or so.;;;","30/Oct/14 17:34;pbruski_;OK, we'll upgrade as soon as it's available. It will take some time before it ends up on production and then we should wait for at least two weeks before confirming the fix - the rate of occurrence is roughly once per week.;;;","23/Dec/14 08:11;achernyakhovsky;I am seeing:
2014-12-23 07:19:32,491 | WARN  | org.apache.activemq.broker.region.cursors.QueueStorePrefetch@4eed1516:xstomp.request,batchResetNeeded=false,size=1,cacheEnabled=false,maxBatchSize:1,hasSpace:false,pendingCachedIds.size:0,lastSyncCachedId:null,lastSyncCachedId-seq:null,lastAsyncCachedId:null,lastAsyncCachedId-seq:null,store=org.apache.activemq.store.memory.MemoryMessageStore@2f037fd5 - cursor got duplicate from store ID:ip-10-140-168-52-43583-1419289565347-1:1:4:1:46539 seq: 974372 | org.apache.activemq.broker.region.cursors.AbstractStoreCursor | ActiveMQ NIO Worker 11233
2014-12-23 07:19:32,492 | WARN  | org.apache.activemq.broker.region.cursors.QueueStorePrefetch@4eed1516:xstomp.request,batchResetNeeded=false,size=1,cacheEnabled=false,maxBatchSize:1,hasSpace:false,pendingCachedIds.size:0,lastSyncCachedId:null,lastSyncCachedId-seq:null,lastAsyncCachedId:null,lastAsyncCachedId-seq:null,store=org.apache.activemq.store.memory.MemoryMessageStore@2f037fd5 - cursor got duplicate from store ID:ip-10-45-179-71-55811-1419289516957-1:1:7:1:46574 seq: 974373 | org.apache.activemq.broker.region.cursors.AbstractStoreCursor | ActiveMQ NIO Worker 11233
2014-12-23 07:19:32,492 | WARN  | org.apache.activemq.broker.region.cursors.QueueStorePrefetch@4eed1516:xstomp.request,batchResetNeeded=false,size=1,cacheEnabled=false,maxBatchSize:1,hasSpace:false,pendingCachedIds.size:0,lastSyncCachedId:null,lastSyncCachedId-seq:null,lastAsyncCachedId:null,lastAsyncCachedId-seq:null,store=org.apache.activemq.store.memory.MemoryMessageStore@2f037fd5 - cursor got duplicate from store ID:ip-10-140-168-52-43583-1419289565347-1:1:9:1:46540 seq: 974374 | org.apache.activemq.broker.region.cursors.AbstractStoreCursor | ActiveMQ NIO Worker 11233
2014-12-23 07:19:32,493 | WARN  | duplicate message from store ID:ip-10-140-168-52-43583-1419289565347-1:1:7:1:46411, redirecting for dlq processing | org.apache.activemq.broker.region.Queue | ActiveMQ NIO Worker 11233
2014-12-23 07:19:32,495 | WARN  | duplicate message from store ID:ip-10-140-168-52-43583-1419289565347-1:1:7:1:46414, redirecting for dlq processing | org.apache.activemq.broker.region.Queue | ActiveMQ NIO Worker 11233
2014-12-23 07:19:32,496 | WARN  | duplicate message from store ID:ip-10-140-168-52-43583-1419289565347-1:1:4:1:46405, redirecting for dlq processing | org.apache.activemq.broker.region.Queue | ActiveMQ NIO Worker 11233
2014-12-23 07:19:32,497 | WARN  | duplicate message from store ID:ip-10-140-168-52-43583-1419289565347-1:1:9:1:46406, redirecting for dlq processing | org.apache.activemq.broker.region.Queue | ActiveMQ NIO Worker 11233

My confifuration is different though. I run 2 static brokers. 
I see these messages on both 5.10.0 and apache-activemq-5.11-20141222.222708-183. 5.9.0 works fine under exactly the same test hardware and configuration. It is highly reproducible.

;;;","23/Dec/14 08:15;achernyakhovsky;Feel free to contact me for the details. I will be glad if I can be of any help.;;;","23/Dec/14 12:11;gtully;@Alex - can you work on a unit test case. There are a bunch of related test in the activemq-unit-test module that you could use for inspiration.
The warnings in themselves are not a bad thing, there may actually be some duplicate sends under various conditions that need to be suppressed by the cursor if the producer audit is exhausted or a message is replayed across a network.
When you suggest that it works fine in 5.9, do you use the same metric? as in all messages sent are consumed? 
A valid test would need to verify each message is received once and once only.;;;","24/Dec/14 10:06;achernyakhovsky;Gary,

I will check the unit test module but I am afraid it might prove hard to replicate our environment.
Maybe it will be more productive if I work with you or someone assigned to this issue to understand what exactly is happening and then proceed with the test.

Here is some info:
1) Our production system consists of about half a dozen of servers running clients producing messages, then another set of about 10 consuming the load while producing some messages for consumption by themselves and another set of about 5 servers running apache storm. (The numbers change as we scale). 8 queues are created across the board.
2) We've ran into some reliability issues with the network of brokers while using AMQ 5.8.0 (transient) so we resorted to a single beefed up server.
3) Now we are on 5.10.0 and it is able to keep up with the current load but the load tends to grow and we would want to have some failover capability too.
4) I am running a load test for the same configuration as in production with 5, 7, 6 servers and again a beefy AMQ 5.10.0 server works fine.
5) When I add another AMQ server using static connector everything seems to work fine under lighter load. As load grows, even before the message consumption starts falling behind I am seeing a flood of the ""duplicate"" messages. They of course are not a problem by themselves but the DLQ fills up really quickly and AMQs die horrible out of memory death. Exactly the same behavior under the same setup and load is observed for the 5 or .11-SNAPSHOT (I basically swap the activemq link in the /opt folder)
6) Keeping the whole system the same, when I switch to 5.9.0 the issue disappears - no ""duplicate"" in the log, DLQ does not get populated.

So the question is what gives? The consumers seem to process all the messages at least it shouldn't be different from 5.9 to 5.10 to 5.11. Do you believe something has changed in 5.10 and it might be a legit behavior?

Let me know. I can provide additional details and assist with debugging if needed.
;;;","07/Jan/15 10:56;syberyan;Same problem over here with 5.10.0. Happens on a topic for us.
DLQ suddenly starts filling up with these messages:

2015-01-06 04:58:58,331 [10.29.0.4:46476] WARN  Topic                          - duplicate message from store ID:svlumipmq01.x.y.be-59515-1420515005092-3:975:-1:1:107, redirecting for dlq processing
2015-01-06 04:58:58,475 [10.29.0.4:46476] WARN  AbstractStoreCursor            - TopicStorePrefetch(m2mGatewayEventClient,m2mGatewayDurableEventSubscription) ID:svlumipweb01.x.y.be-47894-1419262838671-5:1:1:3 - org.apache.activemq.broker.region.cursors.TopicStorePrefetch@7ec6ea1b:m2mbox.IT-LUMI-9-MB-Herdi1.event.cogen.level/changed,batchResetNeeded=false,storeHasMessages=true,size=0,cacheEnabled=true,maxBatchSize:200,hasSpace:true - cursor got duplicate: ID:svlumipmq01.x.y.be-59515-1420515005092-3:975:-1:1:109, 4;;;","07/Jan/15 12:09;gtully;@Alex - there was a change of behaviour in 5.10 - to treat duplicates from the store a as problem - in the past, they were ignored by the cursor but could get redispatched on a restart or if the audit was exhausted, they would be redispatched as duplicates. in 5.10, if the page in logic from the store gets a duplicate if does the DLQ thing. So in some ways the difference between 5.9 and 5.10 is expected.
What is unknown is what exact scenario causes the behaviour you see.
The trigger for the duplicates I tracked in the past was queue memory limit being reached with concurrent producers to the same destination, some of which were transactional. The interleaving could leave the cursor and store out of sync, such that when the cursor needed to page in from the store, it would use the wrong start point.
Your trigger seems to be related to the network bridge, which would introduce a non transacted client ack consumer and non transacted producer. Maybe you can simulate that at load without the bridge.
We need to determine the sequence of events that lead to the duplicate from the store to understand if it is legitimate or not and if not, to ensure we don't fill the DLQ in this case.;;;","07/Jan/15 12:14;gtully;@Christian - can you verify against 5.11-SNAPSHOT and if the problem persists try and build a simple reproducible test case? There are a bunch of tests around https://issues.apache.org/jira/browse/AMQ-5266 - peek at the activity tab. They may give inspiration.;;;","07/Jan/15 13:45;syberyan;@Gary: I managed to reproduce the problem with a local instance, maybe the following info might give you some insights.

- started a client publishing messages to a topic continuously 
- our camel application was consuming from that topic
- while everything was running ok, I restarted activemq
- the duplicate message warnings started appearing immediately after startup
- even after killing the client, the broker seems to be 'stuck' in this state. Each single message will trigger the warning from then on.
- not all 'duplicate' messages end up in the DLQ. Seems to be timing related. (Looks like the faster the machine, the less messages end up in the DLQ.)  
- reproducable both with an oracle and a kahadb store

I connected a debugger and noticed that the handling thread enters AbstractStoreCursor.recoverMessage() twice, hence the duplicate warning because it already exists in the audit map. PrefetchSubscription.add() seems to trigger the 2 executions, once through pending.addMessageLast(node) and once through dispatchPending()...

Here are 2 stacktraces showing how it enters that method.
{code}

ActiveMQ Transport: tcp:///0:0:0:0:0:0:0:1:56106@1883@10055 daemon, prio=5, in group 'main', status: 'RUNNING'
	  at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.recoverMessage(AbstractStoreCursor.java:90)
	  at org.apache.activemq.broker.region.cursors.TopicStorePrefetch.recoverMessage(TopicStorePrefetch.java:77)
	  at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.addMessageLast(AbstractStoreCursor.java:194)
	  at org.apache.activemq.broker.region.cursors.StoreDurableSubscriberCursor.addMessageLast(StoreDurableSubscriberCursor.java:198)
	  at org.apache.activemq.broker.region.PrefetchSubscription.add(PrefetchSubscription.java:159)
	  at org.apache.activemq.broker.region.DurableTopicSubscription.add(DurableTopicSubscription.java:272)
	  at org.apache.activemq.broker.region.policy.SimpleDispatchPolicy.dispatch(SimpleDispatchPolicy.java:48)
	  at org.apache.activemq.broker.region.Topic.dispatch(Topic.java:717)
	  at org.apache.activemq.broker.region.Topic.doMessageSend(Topic.java:510)
	  at org.apache.activemq.broker.region.Topic.send(Topic.java:441)
	  at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:424)
	  at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:445)
	  at org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:297)
	  at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:147)
	  at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)
	  at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:307)
	  at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:147)
	  at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:152)
	  at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:496)
	  at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:756)
	  at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:294)
	  at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:148)
	  at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:45)
	  at org.apache.activemq.transport.mqtt.MQTTInactivityMonitor.onCommand(MQTTInactivityMonitor.java:123)
	  at org.apache.activemq.transport.mqtt.MQTTTransportFilter.sendToActiveMQ(MQTTTransportFilter.java:91)
	  at org.apache.activemq.transport.mqtt.MQTTProtocolConverter.sendToActiveMQ(MQTTProtocolConverter.java:132)
	  at org.apache.activemq.transport.mqtt.MQTTProtocolConverter.onMQTTPublish(MQTTProtocolConverter.java:566)
	  at org.apache.activemq.transport.mqtt.MQTTProtocolConverter.onMQTTCommand(MQTTProtocolConverter.java:175)
	  at org.apache.activemq.transport.mqtt.MQTTTransportFilter.onCommand(MQTTTransportFilter.java:79)
	  at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	  at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)
	  at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)
	  at java.lang.Thread.run(Thread.java:745)
{code}


{code}

ActiveMQ Transport: tcp:///0:0:0:0:0:0:0:1:56106@1883@10055 daemon, prio=5, in group 'main', status: 'RUNNING'
	 blocks ActiveMQ Transport: tcp:///127.0.0.1:56056@61616@9345
	 blocks ActiveMQ BrokerService[localhost] Task-178@8926
	  at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.recoverMessage(AbstractStoreCursor.java:103)
	  at org.apache.activemq.broker.region.cursors.TopicStorePrefetch.recoverMessage(TopicStorePrefetch.java:77)
	  at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.recoverMessage(AbstractStoreCursor.java:85)
	  at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBTopicMessageStore$5.execute(KahaDBStore.java:931)
	  at org.apache.activemq.store.kahadb.disk.page.Transaction.execute(Transaction.java:779)
	  at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBTopicMessageStore.recoverNextMessages(KahaDBStore.java:905)
	  at org.apache.activemq.store.ProxyTopicMessageStore.recoverNextMessages(ProxyTopicMessageStore.java:115)
	  at org.apache.activemq.broker.region.cursors.TopicStorePrefetch.doFillBatch(TopicStorePrefetch.java:113)
	  at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:277)
	  at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.hasNext(AbstractStoreCursor.java:162)
	  at org.apache.activemq.broker.region.cursors.StoreDurableSubscriberCursor.hasNext(StoreDurableSubscriberCursor.java:255)
	  at org.apache.activemq.broker.region.PrefetchSubscription.dispatchPending(PrefetchSubscription.java:646)
	  at org.apache.activemq.broker.region.DurableTopicSubscription.dispatchPending(DurableTopicSubscription.java:278)
	  at org.apache.activemq.broker.region.PrefetchSubscription.add(PrefetchSubscription.java:161)
	  at org.apache.activemq.broker.region.DurableTopicSubscription.add(DurableTopicSubscription.java:272)
	  at org.apache.activemq.broker.region.policy.SimpleDispatchPolicy.dispatch(SimpleDispatchPolicy.java:48)
	  at org.apache.activemq.broker.region.Topic.dispatch(Topic.java:717)
	  at org.apache.activemq.broker.region.Topic.doMessageSend(Topic.java:510)
	  at org.apache.activemq.broker.region.Topic.send(Topic.java:441)
	  at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:424)
	  at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:445)
	  at org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:297)
	  at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:147)
	  at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)
	  at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:307)
	  at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:147)
	  at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:152)
	  at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:496)
	  at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:756)
	  at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:294)
	  at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:148)
	  at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:45)
	  at org.apache.activemq.transport.mqtt.MQTTInactivityMonitor.onCommand(MQTTInactivityMonitor.java:123)
	  at org.apache.activemq.transport.mqtt.MQTTTransportFilter.sendToActiveMQ(MQTTTransportFilter.java:91)
	  at org.apache.activemq.transport.mqtt.MQTTProtocolConverter.sendToActiveMQ(MQTTProtocolConverter.java:132)
	  at org.apache.activemq.transport.mqtt.MQTTProtocolConverter.onMQTTPublish(MQTTProtocolConverter.java:566)
	  at org.apache.activemq.transport.mqtt.MQTTProtocolConverter.onMQTTCommand(MQTTProtocolConverter.java:175)
	  at org.apache.activemq.transport.mqtt.MQTTTransportFilter.onCommand(MQTTTransportFilter.java:79)
	  at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	  at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)
	  at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)
	  at java.lang.Thread.run(Thread.java:745)
{code}
;;;","08/Jan/15 06:11;anujkhandelwal;Hi,

We are using 5.10 broker. 
We saw this error messages. 
[20150107 15:01:52.282 EST (ActiveMQ Transport: tcp:///10.79.26.196:41859@61613) org.apache.activemq.broker.region.cursors.AbstractStoreCursor#recoverMess
age 103 WARN] - TopicStorePrefetch(cas_stuff_price_info_to_jsh,new_golden_price_message) ID:kepler47.com-49402-1420406276070-1:22507:-1:1 - org
.apache.activemq.broker.region.cursors.TopicStorePrefetch@7524aad9:pricing.goldenPriceFeed,batchResetNeeded=false,storeHasMessages=true,size=52586,cacheEn
abled=false,maxBatchSize:200,hasSpace:true - cursor got duplicate: ID:helium16.nyc-49994-1420473196066-5:6690:1:1:4257, 4 

From the source code of org.apache.activemq.broker.region.cursors.AbstractStoreCursor#recoverMess
age it looks like duplicates messages got stored in kahadb for same destination. The topic for which it happend has a durable subscriber. 
I want to understand in what cases kahadb stores duplicate messages ? Is this a bug? 


Thanks,
Anuj
;;;","15/Jan/15 09:50;barlabanov;In our case after getting quite a lot of ""cursor got duplicate"" in a DQL, we start to observe ""Problem retrieving message for browse"" error with NullPointerException for that DLQ when trying to browse the queue. Restart helps.

2015-01-14 20:26:00,659 | ERROR | Problem retrieving message for browse | org.apache.activemq.broker.region.Queue | ActiveMQ Broker[dcdng] Scheduler
java.lang.NullPointerException;;;","12/May/15 08:12;jogeraerts;Bouncing into the same issue on activemq 5.9.0

{code}
JBossFuse:admin@root> list -t 0 | grep active
[ 131] [Active     ] [Created     ] [       ] [   50] activemq-osgi (5.9.0.redhat-610379)
[ 137] [Active     ] [            ] [       ] [   50] activeio-core (3.1.4)
[ 139] [Active     ] [Created     ] [       ] [   50] activemq-karaf (5.9.0.redhat-610379)
[ 207] [Active     ] [            ] [       ] [   60] activemq-camel (5.9.0.redhat-610379)
{code}

{code}
fuseesb.log.2015-04-30.gz:13:15:35,941 | WARN  | 344189615-182566 | AbstractStoreCursor              | 131 - org.apache.activemq.activemq-osgi - 5.9.0.redhat-610379 | org.apache.activemq.broker.region.cursors.QueueStorePrefetch@8ec707b:Pim.Plu.Hybris,batchResetNeeded=false,storeHasMessages=false,size=5,cacheEnabled=true,maxBatchSize:5,hasSpace:true - cursor got duplicate: ID:prd-esb-inno1-37535-1429248180616-5:4:6:1:3, 4
fuseesb.log.2015-04-30.gz:13:15:36,003 | WARN  | 344189615-182566 | AbstractStoreCursor              | 131 - org.apache.activemq.activemq-osgi - 5.9.0.redhat-610379 | org.apache.activemq.broker.region.cursors.QueueStorePrefetch@8ec707b:Pim.Plu.Hybris,batchResetNeeded=false,storeHasMessages=false,size=6,cacheEnabled=true,maxBatchSize:6,hasSpace:true - cursor got duplicate: ID:prd-esb-inno1-37535-1429248180616-5:5:7:1:62, 4
fuseesb.log.2015-04-30.gz:13:15:36,066 | WARN  | 344189615-182566 | AbstractStoreCursor              | 131 - org.apache.activemq.activemq-osgi - 5.9.0.redhat-610379 | org.apache.activemq.broker.region.cursors.QueueStorePrefetch@8ec707b:Pim.Plu.Hybris,batchResetNeeded=false,storeHasMessages=false,size=7,cacheEnabled=true,maxBatchSize:7,hasSpace:true - cursor got duplicate: ID:prd-esb-inno1-60724-1429933192681-1:3:5:1:837, 4
{code}

Occurs both for topics as queues. 

We are using mysql as store, with 2 nodes in failover. ;;;","13/Jan/17 11:12;gtully;For the durable topic sub case this scenario is captured in https://issues.apache.org/jira/browse/AMQ-6562 and the ""cursor got duplicate from store"" warn is now suppressed.;;;",,,,,,,,,,,,,,,,
activemq:bstat doesn't work in Karaf,AMQ-5245,12723616,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,jbonofre,jbonofre,25/Jun/14 12:05,15/Oct/18 15:36,14/Jul/23 05:44,15/Oct/18 15:36,5.9.1,,,,,,,,,,,,,OSGi/Karaf,,,,,0,,,,,,"{code}
karaf@root()> activemq:bstat 
ERROR: java.lang.RuntimeException: Failed to execute query task. Reason: java.lang.IllegalStateException: Attribute Uptime can not be found
java.lang.RuntimeException: Failed to execute query task. Reason: java.lang.IllegalStateException: Attribute Uptime can not be found
        at org.apache.activemq.console.command.QueryCommand.runTask(QueryCommand.java:131)
        at org.apache.activemq.console.command.BstatCommand.runTask(BstatCommand.java:86)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.AbstractJmxCommand.execute(AbstractJmxCommand.java:387)
        at org.apache.activemq.karaf.commands.ActiveMQCommandSupport.doExecute(ActiveMQCommandSupport.java:46)
        at org.apache.karaf.shell.console.AbstractAction.execute(AbstractAction.java:33)
        at org.apache.karaf.shell.console.OsgiCommandSupport.execute(OsgiCommandSupport.java:39)
        at org.apache.felix.gogo.commands.basic.AbstractCommand.execute(AbstractCommand.java:35)
        at Proxy71c61764_cfe8_42c8_9401_198eac480ee5.execute(Unknown Source)
        at Proxy71c61764_cfe8_42c8_9401_198eac480ee5.execute(Unknown Source)
        at org.apache.felix.gogo.runtime.CommandProxy.execute(CommandProxy.java:78)
        at org.apache.felix.gogo.runtime.Closure.executeCmd(Closure.java:477)
        at org.apache.felix.gogo.runtime.Closure.executeStatement(Closure.java:403)
        at org.apache.felix.gogo.runtime.Pipe.run(Pipe.java:108)
        at org.apache.felix.gogo.runtime.Closure.execute(Closure.java:183)
        at org.apache.felix.gogo.runtime.Closure.execute(Closure.java:120)
        at org.apache.felix.gogo.runtime.CommandSessionImpl.execute(CommandSessionImpl.java:89)
        at org.apache.karaf.shell.console.impl.jline.ConsoleImpl$DelegateSession.execute(ConsoleImpl.java:521)
        at org.apache.karaf.shell.console.impl.jline.ConsoleImpl.run(ConsoleImpl.java:212)
        at java.lang.Thread.run(Thread.java:744)
        at org.apache.karaf.shell.console.impl.jline.ConsoleFactoryService$3.doRun(ConsoleFactoryService.java:126)
        at org.apache.karaf.shell.console.impl.jline.ConsoleFactoryService$3$1.run(ConsoleFactoryService.java:117)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.apache.karaf.jaas.modules.JaasHelper.doAs(JaasHelper.java:47)
        at org.apache.karaf.shell.console.impl.jline.ConsoleFactoryService$3.run(ConsoleFactoryService.java:115)
Error executing command: java.lang.IllegalStateException: Attribute Uptime can not be found

{code}",,jbonofre,sobkowiak,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,SM-2304,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,401801,,,Mon Jan 26 23:51:02 UTC 2015,,,,,,,,,,,"0|i1x5rz:",401870,,,,,,,,,,,,,,,,,,,,,"26/Jan/15 23:51;sobkowiak;I have tested this command with ActiveMQ 5.10.1 on Karaf 2.4.1 and 3.0.3-SNAPSHOT and it seems to be fixed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ failed to start when the file path includes blank space,AMQ-5243,12723341,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,mfshen,mfshen,24/Jun/14 12:01,20/Apr/16 20:47,14/Jul/23 05:44,20/Apr/16 20:47,5.10.0,,,,,,,,,5.13.3,5.14.0,,,,,,,,1,,,,,,"Folder ""Program Files""
F:\Program Files\apache-activemq-5.10.0\bin>activemq.bat start
Error: Could not find or load main class Files\apache-activemq-5.10.0\bin\..\conf\login.config

*NOTE* If remove blank spaces from the file path, then it works.
Folder ""ProgramFiles""
F:\ProgramFiles\apache-activemq-5.10.0\bin>activemq.bat start",,bert.r,hadrian,illojones,mfshen,narendran.ss,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6213,,,,,,,,,,AMQ-4910,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,401528,,,Wed Apr 20 03:51:44 UTC 2016,,,,,,,,,,,"0|i1x44f:",401601,,,,,,,,,,,,,,,,,,,,,"24/Jun/14 14:51;tabish;Is this script a modified version that is Talend specific?  ;;;","25/Jun/14 01:41;mfshen;No, i used the pure Apache ActiveMQ: apache-activemq-5.10.0, i updated the description, thanks.;;;","05/Mar/15 22:19;illojones;It seems (like AMQ-4910) this issue was introduced in commit 981c8e247f11871265a20a48e463096028188f36.

In bin/activemq.bat, the following changes were made:

{code}-if ""%ACTIVEMQ_OPTS%"" == """" set ACTIVEMQ_OPTS=-Xms1G -Xmx1G -Djava.util.logging.config.file=logging.properties
-Dhawtio.authenticationEnabled=false
+if ""%ACTIVEMQ_OPTS%"" == """" set ACTIVEMQ_OPTS=-Xms1G -Xmx1G -Djava.util.logging.config.file=logging.properties
-Dhawtio.realm=activemq -Dhawtio.role=admins -Dhawtio.rolePrincipalClasses=org.apache.activemq.jaas.GroupPrincipal
-Djava.security.auth.login.config=%ACTIVEMQ_CONF%\login.config{code}

If the directory that %ACTIVEMQ_CONF% resolves to contains a space (e.g. C:\Program Files\activemq), everything after the space is treated as a separate argument.  I was able to work around this by adding double quotes around the path in the last argument, i.e.:

{code}if ""%ACTIVEMQ_OPTS%"" == """" set ACTIVEMQ_OPTS=-Xms1G -Xmx1G -Djava.util.logging.config.file=logging.properties
-Dhawtio.realm=activemq -Dhawtio.role=admins -Dhawtio.rolePrincipalClasses=org.apache.activemq.jaas.GroupPrincipal
-Djava.security.auth.login.config=""%ACTIVEMQ_CONF%\login.config""{code};;;","24/Sep/15 07:43;bert.r;I just ran into this too. Indeed, putting double quotes around {{%ACTIVEMQ_CONF%\login.config}} fixes this. It would be good if this little fix could go into the product.;;;","20/Apr/16 03:51;narendran.ss;I downloaded ""apache-activemq-5.9.0-bin.zip"" I still see this issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Spurious WARN  FailoverTransport - Transport .. failed, reason: , attempting to automatically reconnect java.io.EOFException",AMQ-5241,12723104,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,gtully,gtully,23/Jun/14 11:08,13/Jul/16 18:15,14/Jul/23 05:44,23/Jun/14 11:24,,,,,,,,,,5.10.1,5.11.0,,,,,,,,0,Failover,WARN,,,,"Occasional spurious reconnect from Failover during normal close processing. Incorrectly reporting a problem{code}2014-06-23 12:01:47,095 [0.1:61616@63805] - WARN  FailoverTransport              - Transport (tcp://localhost/127.0.0.1:61616@63805) failed, reason: , attempting to automatically reconnect
java.io.EOFException
	at java.io.DataInputStream.readInt(DataInputStream.java:375)
	at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:258)
	at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:221)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:213)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)
	at java.lang.Thread.run(Thread.java:695){code}

Issue is broker response to shutdown info is closing broker end of the socket before client has chance to stop the local transport. So client gets eof before it closes and reports and tries to reconnect in error. Because we treat abortive disconnect as a warn event this can lead to confusion.",,gtully,mimi.zhao@twcable.com,RMishra,samion,trejkaz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,401291,,,Wed Jul 13 18:15:32 UTC 2016,,,,,,,,,,,"0|i1x2on:",401368,,,,,,,,,,,,,,,,,,,,,"23/Jun/14 11:24;gtully;fix in http://git-wip-us.apache.org/repos/asf/activemq/commit/ce911baf;;;","18/Nov/14 20:27;mimi.zhao@twcable.com;Is it possible that we can have a patch for this issue? ;;;","10/Mar/16 04:02;trejkaz;I see the same stack trace being output a lot to System.out during our test runs, even though we don't log to System.out and we're already updated to v5.13.0.

Maybe ours aren't spurious but it isn't clear how I am supposed to know.

{noformat}
     [java] java.io.EOFException
     [java] 	at java.io.DataInputStream.readInt(DataInputStream.java:392)
     [java] 	at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:267)
     [java] 	at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:240)
     [java] 	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:232)
     [java] 	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:215)
     [java] 	at java.lang.Thread.run(Thread.java:745)
{noformat}
;;;","04/Apr/16 13:13;samion;We still experience the same with 5.12.1 as well.;;;","13/Jul/16 18:15;RMishra;I have over 600 agents connecting to ActiveMQ broker version 5.13.3. Log is filling up with those error. Any one has solution ?

 WARN  | Transport Connection to: tcp://xxx.xxx.xxx.xxx:53283 failed: java.io.EOFException | org.apache.activemq.broker.TransportConnection.Transport | ActiveMQ Transport: tcp:///xxx.xxx.xxx.xxx:53283@61616
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Link stealing doesn't work for MQTT + Webscokets,AMQ-5237,12722848,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,tabish,surfnerd,surfnerd,20/Jun/14 18:47,18/Aug/14 21:44,14/Jul/23 05:44,18/Aug/14 21:38,5.10.0,,,,,,,,,5.11.0,,,,MQTT,,,,,0,mqtt,websocket,,,,"Link stealing with existing clientid doesn't work for MQTT WS.
As per MQTT definition, same clientID should replace existing connection.

Simple testing: 
Connect with MQTT WS client library ( Eclipse Paho JS) and connect-disconnect multiple times. 
It will give error of client already connected. ","Java 7 , Windows server 2012 or Ubuntu 12.04",surfnerd,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,401035,,,Mon Aug 18 21:44:52 UTC 2014,,,,,,,,,,,"0|i1x15r:",401119,,,,,,,,,,,,,,,,,,,,,"18/Aug/14 21:38;tabish;This should be working now, try it out on the next SNAPSHOT build;;;","18/Aug/14 21:44;tabish;On the WS and WSS transports you need to add the allowLinkStealing=true option to the TransportConnector URI;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"MQTT broker with ACL, try to connect using bad credential sends first connection event and next disconnect event to client ",AMQ-5233,12722436,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,xandros,xandros,19/Jun/14 08:02,21/Jul/14 19:57,14/Jul/23 05:44,21/Jul/14 19:57,5.9.1,,,,,,,,,5.11.0,,,,Broker,,,,,0,acl,broker,connection,disconnection,mqtt,"Configure broker with :

    <amq:broker useJmx=""false"" persistent=""false"">
        <amq:transportConnectors>
            <amq:transportConnector name=""mqtt"" uri=""${jms.brokerurl}"">            
        </amq:transportConnectors>
        <amq:networkConnectors/>

        <amq:plugins>
            <amq:simpleAuthenticationPlugin>
                <amq:users>
                    <amq:authenticationUser username=""test"" password=""test"" groups=""admins,guests,users"" />
                </amq:users>
            </amq:simpleAuthenticationPlugin>
            <amq:authorizationPlugin>
                <amq:map>
                    <amq:authorizationMap>
                        <amq:authorizationEntries>
                            <amq:authorizationEntry queue="">"" read=""admins"" write=""admins"" admin=""admins"" />
                            <amq:authorizationEntry topic="">"" read=""admins"" write=""admins"" admin=""admins"" />
                            <amq:authorizationEntry topic=""ActiveMQ.Advisory.>"" read=""admins"" write=""admins"" admin=""admins""/>
                        </amq:authorizationEntries>
                    </amq:authorizationMap>
                </amq:map>
            </amq:authorizationPlugin>
        </amq:plugins>
    </amq:broker>

Connecting with mosquittolib (C) with bad credential rise first ""on_connection"" event as the connection is OK, and next ""on_disconnection"" event. Expected behavior is failed connection with BAD CREDENTIAL reported error form broker.
","Windows 7 - 64 bit
Eclipse Kepler
JDK 1.7
Spring 4.0
MosquittoLib (C) on iOS
",tabish,xandros,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,400627,,,Mon Jul 21 19:57:43 UTC 2014,,,,,,,,,,,"0|i1wypb:",400721,,,,,,,,,,,,,,,,,,,,,"21/Jul/14 19:57;tabish;Improved the connection error handling and added test.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Initial Configuration Lists wrong JAR files,AMQ-5230,12721753,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,pminearo,pminearo,17/Jun/14 18:31,18/Jun/14 18:46,14/Jul/23 05:44,18/Jun/14 15:20,5.10.0,5.8.0,5.9.0,5.9.1,,,,,,,,,,Documentation,,,,,0,,,,,,"http://activemq.apache.org/initial-configuration.html

Under Required JARs, the following JAR files are listed:
activemq-core.jar
activeio-core.jar
kahadb.jar

According to this forum discussion, 

http://activemq.2283324.n4.nabble.com/When-will-activemq-core-5-9-be-present-in-maven-central-repo-td4675087.html

the following JARs should be listed:
activemq-broker
activemq-client
activemq-spring
activemq-kahadb-store

Could we get this documentation updated to specify what is needed/optional for the supported versions? Or at least the latest released version?
",,davsclaus,ian@ianbrandt.com,pminearo,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5232,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,399949,,,Wed Jun 18 15:20:35 UTC 2014,,,,,,,,,,,"0|i1wum7:",400056,,,,,,,,,,,,,,,,,,,,,"17/Jun/14 18:44;davsclaus;You are looking at the wrong documentation, that is for the old AMQ 4.x release.

For the 5.x release its here
http://activemq.apache.org/version-5-initial-configuration.html;;;","17/Jun/14 18:51;pminearo;Ahhh...Could you put a Note a the top for that page because it comes up in searches ahead of the version 5 configuration page?

Also, the Version 5 page lists:
activemq-core.jar
commons-logging.jar

Which isn't the same as what is supposed to be used?;;;","18/Jun/14 15:20;tabish;I've updated the page with more current names;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"When create on start is set to true, the JMS Pool can return the same connection twice in a row",AMQ-5226,12720980,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,12/Jun/14 20:30,15/Dec/14 21:55,14/Jul/23 05:44,13/Jun/14 14:32,5.10.0,5.9.0,5.9.1,,,,,,,5.10.1,5.11.0,,,Pool,,,,,0,,,,,,"When the PooledConnectionFactory is configured to create connection on start, it can return the same connection twice in a row before moving on to returning other new connections which violates the round robin policy when there is more than one connection configured for pooling. ",,sbrandt,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,399178,,,Fri Jun 13 14:32:35 UTC 2014,,,,,,,,,,,"0|i1wpxb:",399292,,,,,,,,,,,,,,,,,,,,,"13/Jun/14 14:32;tabish;Created a bit of a workaround the ensure that we always return the created instance as the pool grows.  It's a bit of a hack but it gets us around some of the abuses we do to commons-pool ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
broker will not start when using leveldb,AMQ-5225,12720948,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,jrushford,jrushford,12/Jun/14 19:12,03/Feb/17 23:05,14/Jul/23 05:44,03/Feb/17 23:05,5.10.0,,,,,,,,,5.14.0,,,,LevelDB,,,,,6,,,,,,"I've configured a 3 node activemq cluster using this as my guide: http://activemq.apache.org/replicated-leveldb-store.html

1) Startup activemq on 1st node.
2) Startup activemq on 2nd node

     At this point I see a log message on the 1st node stating it was promoted to master.  Next I see this Exception and am unable to connect to the broker.  Each time an activemq instance is promoted to master, this exception occurs and broker is left unusable.


java.io.IOException: com.google.common.base.Objects.firstNonNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:39)[activemq-client-5.10.0.jar:5.10.0]
	at org.apache.activemq.leveldb.LevelDBClient.might_fail(LevelDBClient.scala:552)[activemq-leveldb-store-5.10.0.jar:5.10.0]
	at org.apache.activemq.leveldb.LevelDBClient.replay_init(LevelDBClient.scala:657)[activemq-leveldb-store-5.10.0.jar:5.10.0]
	at org.apache.activemq.leveldb.LevelDBClient.start(LevelDBClient.scala:558)[activemq-leveldb-store-5.10.0.jar:5.10.0]
	at org.apache.activemq.leveldb.DBManager.start(DBManager.scala:648)[activemq-leveldb-store-5.10.0.jar:5.10.0]
	at org.apache.activemq.leveldb.LevelDBStore.doStart(LevelDBStore.scala:235)[activemq-leveldb-store-5.10.0.jar:5.10.0]
	at org.apache.activemq.leveldb.replicated.MasterLevelDBStore.doStart(MasterLevelDBStore.scala:110)[activemq-leveldb-store-5.10.0.jar:5.10.0]
	at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:55)[activemq-client-5.10.0.jar:5.10.0]
	at org.apache.activemq.leveldb.replicated.ElectingLevelDBStore$$anonfun$start_master$1.apply$mcV$sp(ElectingLevelDBStore.scala:226)[activemq-leveldb-store-5.10.0.jar:5.10.0]
	at org.fusesource.hawtdispatch.package$$anon$4.run(hawtdispatch.scala:330)[hawtdispatch-scala-2.11-1.21.jar:1.21]
	at java.lang.Thread.run(Thread.java:744)[:1.7.0_51]
2014-06-12 19:02:32,350 | INFO  | Stopped LevelDB[/opt/apache-activemq-5.10.0/bin/linux-x86-64/../../data/leveldb] | org.apache.activemq.leveldb.LevelDBStore | LevelDB IOException handler.
",Centos 6.3,davicdsalves,enietzel,johnleach,jrushford,krm1312,netlancermobi,scoopex,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,399147,,,Sun Sep 04 22:11:28 UTC 2016,,,,,,,,,,,"0|i1wpqv:",399262,,,,,,,,,,,,,,,,,,,,,"13/Jun/14 11:42;johnleach;I'm getting the same with just a straight single broker. The config has worked for many months under 5.9.0, but upgrading to 5.10.0 gives this on startup and never finishes starting up:

2014-06-13 11:11:10,931 | INFO  | Using Persistence Adapter: LevelDB[/home/activemq/apache-activemq/data/leveldb] | org.apache.activemq.broker.BrokerService | main
2014-06-13 11:11:10,999 | INFO  | Using the pure java LevelDB implementation. | org.apache.activemq.leveldb.LevelDBClient | main
2014-06-13 11:11:11,074 | INFO  | No IOExceptionHandler registered, ignoring IO exception | org.apache.activemq.broker.BrokerService | LevelDB IOException handler.
java.io.IOException: com.google.common.base.Objects.firstNonNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:39)[activemq-client-5.10.0.jar:5.10.0]
	at org.apache.activemq.leveldb.LevelDBClient.might_fail(LevelDBClient.scala:552)[activemq-leveldb-store-5.10.0.jar:5.10.0]
	at org.apache.activemq.leveldb.LevelDBClient.replay_init(LevelDBClient.scala:657)[activemq-leveldb-store-5.10.0.jar:5.10.0]
	at org.apache.activemq.leveldb.LevelDBClient.start(LevelDBClient.scala:558)[activemq-leveldb-store-5.10.0.jar:5.10.0]
	at org.apache.activemq.leveldb.DBManager.start(DBManager.scala:648)[activemq-leveldb-store-5.10.0.jar:5.10.0]
	at org.apache.activemq.leveldb.LevelDBStore.doStart(LevelDBStore.scala:235)[activemq-leveldb-store-5.10.0.jar:5.10.0]
	at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:55)[activemq-client-5.10.0.jar:5.10.0]
	at org.apache.activemq.broker.BrokerService.doStartPersistenceAdapter(BrokerService.java:640)[activemq-broker-5.10.0.jar:5.10.0]
	at org.apache.activemq.broker.BrokerService.startPersistenceAdapter(BrokerService.java:629)[activemq-broker-5.10.0.jar:5.10.0]
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:594)[activemq-broker-5.10.0.jar:5.10.0]
	at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:73)[activemq-spring-5.10.0.jar:5.10.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)[:1.6.0_31]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)[:1.6.0_31]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)[:1.6.0_31]
	at java.lang.reflect.Method.invoke(Method.java:622)[:1.6.0_31]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1638)[spring-beans-3.2.8.RELEASE.jar:3.2.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1579)[spring-beans-3.2.8.RELEASE.jar:3.2.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1509)[spring-beans-3.2.8.RELEASE.jar:3.2.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:521)[spring-beans-3.2.8.RELEASE.jar:3.2.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)[spring-beans-3.2.8.RELEASE.jar:3.2.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:296)[spring-beans-3.2.8.RELEASE.jar:3.2.8.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)[spring-beans-3.2.8.RELEASE.jar:3.2.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:293)[spring-beans-3.2.8.RELEASE.jar:3.2.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)[spring-beans-3.2.8.RELEASE.jar:3.2.8.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:628)[spring-beans-3.2.8.RELEASE.jar:3.2.8.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:932)[spring-context-3.2.8.RELEASE.jar:3.2.8.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)[spring-context-3.2.8.RELEASE.jar:3.2.8.RELEASE]
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)[xbean-spring-3.16.jar:3.16]
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)[xbean-spring-3.16.jar:3.16]
	at org.apache.activemq.xbean.XBeanBrokerFactory$1.<init>(XBeanBrokerFactory.java:104)[activemq-spring-5.10.0.jar:5.10.0]
	at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:104)[activemq-spring-5.10.0.jar:5.10.0]
	at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:67)[activemq-spring-5.10.0.jar:5.10.0]
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)[activemq-broker-5.10.0.jar:5.10.0]
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)[activemq-broker-5.10.0.jar:5.10.0]
	at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:87)[activemq-console-5.10.0.jar:5.10.0]
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)[activemq-console-5.10.0.jar:5.10.0]
	at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:150)[activemq-console-5.10.0.jar:5.10.0]
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)[activemq-console-5.10.0.jar:5.10.0]
	at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:104)[activemq-console-5.10.0.jar:5.10.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)[:1.6.0_31]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)[:1.6.0_31]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)[:1.6.0_31]
	at java.lang.reflect.Method.invoke(Method.java:622)[:1.6.0_31]
	at org.apache.activemq.console.Main.runTaskClass(Main.java:262)[activemq.jar:5.10.0]
	at org.apache.activemq.console.Main.main(Main.java:115)[activemq.jar:5.10.0]
2014-06-13 11:11:11,090 | INFO  | Stopped LevelDB[/home/activemq/apache-activemq/data/leveldb] | org.apache.activemq.leveldb.LevelDBStore | LevelDB IOException handler.
;;;","13/Jun/14 11:42;johnleach;I've tried wiping out the data dir too - it's not a corrupted db problem.;;;","14/Jun/14 15:10;netlancermobi;Hi, 

 the problem is because two different versions of guava cache related classes present in classpath. AMQ-5105 is for this issue.

following workaround allows activemq to be run with leveldb configured

1. remove pax-url-aether-1.5.2.jar from lib directory 
2. comment out the log query section

    <bean id=""logQuery"" class=""org.fusesource.insight.log.log4j.Log4jLogQuery""
          lazy-init=""false"" scope=""singleton""
          init-method=""start"" destroy-method=""stop"">
    </bean>

Thanks,

;;;","24/Jun/14 17:25;davicdsalves;Removing the _com_ folder from the pax-url-aether-1.5.2.jar solved it too.;;;","28/Oct/14 20:23;enietzel;FYI Also had this same issue but it wasn't because pax-url-aether was on the classpath but rather an old version of google-collections-1.0...

Just in case if someone else runs into something similar this option "" -verbose:class"" will help detect which class is being loaded.;;;","22/Jan/15 17:10;scoopex;This should be fixed :-)

I do:
{code}
zip --delete /opt/activemq/lib/pax-url-aether-1.5.2.jar ""com/*""
{code};;;","04/Sep/16 22:11;johnleach;This is fixed in 5.14.0.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
XA pooled connection factories are not recoverable,AMQ-5224,12720863,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,gnodet,gnodet,12/Jun/14 12:56,21/Jul/15 16:30,14/Jul/23 05:44,01/Jul/14 21:57,5.10.0,5.9.1,,,,,,,,5.11.0,,,,,,,,,0,,,,,,PooledConnectionFactory#setConnectionFactory hides the XAConnectionFactory interface which is used by the resource manager.,,artnaseef,gnodet,graben,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ARIES-1158,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,399062,,,Tue Jul 21 16:30:55 UTC 2015,,,,,,,,,,,"0|i1wp8f:",399179,,,,,,,,,,,,,,,,,,,,,"12/Jun/14 13:18;graben;Reason for recovery working with ActiveMQ pool might be a different usage than implemented in Aries TX JMS



e.g.
<bean id=""internalConnectionFactory"" 
        class=""org.apache.activemq.ActiveMQXAConnectionFactory"">
           <argument value=""tcp://localhost:61616"" />
           <property name=""userName"" value=""admin"" />
           <property name=""password"" value=""admin"" />
</bean>

<bean id=""connectionFactory"" 
        class=""org.apache.activemq.jms.pool.JcaPooledConnectionFactory""
                 init-method=""start"" destroy-method=""stop"">
           <property name=""connectionFactory"" ref=""internalConnectionFactory""/>
           <property name=""transactionManager"" ref=""transactionManager""/>
           <property name=""name"" value=""activemq"" />
</bean>

<bean id=""resourceManager"" class=""org.apache.activemq.jms.pool.GenericResourceManager"" 
                 init-method=""recoverResource"">
           <property name=""connectionFactory"" ref=""internalConnectionFactory""/>
           <property name=""transactionManager"" ref=""transactionManager""/>
           <property name=""resourceName"" value=""activemq"" />
           <property name=""userName"" value=""admin"" />
           <property name=""password"" value=""admin"" />
</bean>;;;","13/Jun/14 09:26;gnodet;You're right.
Though the problem is that XAConnectionFactory does not inherit from ConnectionFactory, so for JMS implementations that have separate implementations for both, the code is unusable.;;;","13/Jun/14 10:15;gnodet;A few improvements to activemq-jms-pool at
  https://github.com/gnodet/activemq/commits/fix-jms-pool;;;","13/Jun/14 16:37;tabish;I've applied those updates to trunk along with some updates to some tests in activemq-pool that broker as a result. ;;;","01/Jul/14 21:57;tabish;Marking this as resolved since no further feedback received since the patches were applied. ;;;","21/Jul/15 16:30;artnaseef;This change breaks backward compatibility by changing the signature of the public method.  Here is one example impact:

{noformat}
Error during dispatch. (java.lang.NoSuchMethodError: org.apache.activemq.jms.pool.PooledConnectionFactory.setConnectionFactory(Ljavax/jms/ConnectionFactory;)V)
java.lang.NoSuchMethodError: org.apache.activemq.jms.pool.PooledConnectionFactory.setConnectionFactory(Ljavax/jms/ConnectionFactory;)V
{noformat}

It seems to me that rather than changing the appropriate method signature taking a {{ConnectionFactory}} to accepting any {{Object}} because some XAConnectionFactory implementations do not properly implement {{ConnectionFactory}} is a bad way to go - introducing complexity where it is unneeded.  It would be far simpler to wrap those XAConnectionFactory with thin ConnectionFactory implementations.

Anyway, the damage is done here - if we change the signature back, another non-backward-compatible change will be introduced.

Please consider all the impacts of these changes, especially since we do not have plans to bump the ActiveMQ major version number.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq-jms-pool is missing OSGi metadata,AMQ-5223,12720840,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,gnodet,gnodet,12/Jun/14 11:23,15/Dec/14 21:58,14/Jul/23 05:44,13/Jun/14 16:36,5.10.0,5.9.1,,,,,,,,5.10.1,5.11.0,,,,,,,,0,,,,,,Adding <packaging>bunde<packaging> fixes the issue,,gnodet,graben,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ARIES-1158,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,399039,,,Fri Jun 13 16:36:25 UTC 2014,,,,,,,,,,,"0|i1wp3b:",399156,,,,,,,,,,,,,,,,,,,,,"12/Jun/14 13:21;graben;activemq-jms-pool is part of the activemq-osgi bundle. That might be the reason the artifact doesn't has OSGi metadata itself. Since this pool is generic it should be usable without ActiveMQ broker/client independently.;;;","13/Jun/14 16:36;tabish;Add the packaging bundle option.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Advisory messages are still empty when received with a Stomp subscription,AMQ-5220,12720308,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,vchampion,vchampion,10/Jun/14 09:31,18/Dec/14 00:24,14/Jul/23 05:44,07/Aug/14 18:20,5.x,,,,,,,,,5.10.1,5.11.0,,,Transport,,,,,1,,,,,,"The subject of this task similiar as AMQ-2098. Bug still exists, and it can be reproduced according to steps below.

This simple script written in PHP uses standard Stomp client
{code}
$stomp       = new \Stomp('tcp://localhost:61613', 'admin', 'admin');
$stomp->subscribe('/topic/stats');

$stomp->begin($transaction = microtime(true));
$status = $stomp->send('/queue/ActiveMQ.Statistics.Destination.testqueue', '', Array('reply-to' => '/topic/stats', 'persistent' => 'true'));

$message = $stomp->readFrame();
$stomp->ack($message->headers['message-id']);
$stomp->commit($transaction);
{code}
And in $message we'll have empty body paramter. It's because ActiveMQ returned message without body that's show in a captured packets between ActiveMQ and PHP communication below
{code}
T 127.0.0.1:53988 -> 127.0.0.1:61613 [AP]
CONNECT
login:admin
passcode:admin

T 127.0.0.1:53988 -> 127.0.0.1:61613 [AP]
.

T 127.0.0.1:61613 -> 127.0.0.1:53988 [AP]
CONNECTED
heart-beat:0,0
session:ID:amneziac-59996-1402320672417-5:8
server:ActiveMQ/5.9.1
version:1.0
.

T 127.0.0.1:53988 -> 127.0.0.1:61613 [AP]
SUBSCRIBE
ack:client
destination:/topic/stats
activemq.prefetchSize:1

T 127.0.0.1:53988 -> 127.0.0.1:61613 [AP]
.

T 127.0.0.1:53988 -> 127.0.0.1:61613 [AP]
BEGIN
transaction:1402321825.9952

T 127.0.0.1:53988 -> 127.0.0.1:61613 [AP]
.

T 127.0.0.1:53988 -> 127.0.0.1:61613 [AP]
SEND
reply-to:/topic/stats
persistent:true
destination:/queue/ActiveMQ.Statistics.Destination.testqueue

T 127.0.0.1:53988 -> 127.0.0.1:61613 [AP]
.

T 127.0.0.1:61613 -> 127.0.0.1:53988 [AP]
MESSAGE
message-id:ID:amneziac-59996-1402320672417-2:1:0:0:8
type:Advisory
destination:/topic/stats
timestamp:1402321826311
expires:0
priority:4
.

T 127.0.0.1:53988 -> 127.0.0.1:61613 [AP]
ACK
message-id:ID:amneziac-59996-1402320672417-2:1:0:0:8

T 127.0.0.1:53988 -> 127.0.0.1:61613 [AP]
.

T 127.0.0.1:53988 -> 127.0.0.1:61613 [AP]
COMMIT
transaction:1402321825.9952

T 127.0.0.1:53988 -> 127.0.0.1:61613 [AFP]
.
DISCONNECT
{code}","ActiveMQ 5.9.1, Sun Java 1.7.0_51, Ubuntu Linux",githubbot,lisachenko,nannou9,tabish,vchampion,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-2098,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,398507,,,Thu Aug 07 18:20:53 UTC 2014,,,,,,,,,,,"0|i1wlw7:",398632,,,,,,,,,,,,,,,,,,,,,"13/Jun/14 20:10;tabish;Try creating a new unit test in activemq-stomp that demonstrates your issue.  ;;;","23/Jun/14 10:26;vchampion;I'm sorry, but now I haven't enough time to make unit test in java.. because I'm not java programmist. Can anybody make this test? 
May be I will make it later when I learn java basics and unit test creation. 

For my task I replaced usage of STOMP request by reading information from xml information page of Active MQ.;;;","06/Aug/14 11:04;nannou9;I have quickly written some messy unit test for this scenario.

Same stats message consumed from topic by TCP connector is ok while the one received by STOMP is 0- length.

So I can confirm that it is some stomp related problem.

Will try to look core of this issue.;;;","06/Aug/14 12:51;vchampion;Thank you Piotr! May be you create task with unit test in activemeq-stomp as Timothy suggested?;;;","06/Aug/14 13:30;nannou9;Yes, sure.
But just was curious what was the reason.
So the problem is combination of 2 reasons:
1. Stomp ProtocolConverter expects the stomp client to directly subscribe advisory addresses. So it will work when subscribing topic is prefixed with ""ActiveMQ.Advisory.""
2. Statistics plugin is kind of unique advisory system, as instead if directly subscribing advisory topic, you need to send a message with reply-to header. So when reply-to header and your reply topic has a name without ""ActiveMQ.Advisory."" prefix, then it fails as translator finder is assuming that destination (or rather source) is not and advisory one. It simply ueses wrong frame translator. It thinks that it is a byte or string message while it is map message.

So this method is source of this issue:
{code}
    protected FrameTranslator findTranslator(String header, ActiveMQDestination destination) {
        FrameTranslator translator = frameTranslator;
        try {
            if (header != null) {
                translator = (FrameTranslator) FRAME_TRANSLATOR_FINDER
                        .newInstance(header);
            } else {
                if (destination != null && AdvisorySupport.isAdvisoryTopic(destination)) {
                    translator = new JmsFrameTranslator();
                }
            }
        } catch (Exception ignore) {
            // if anything goes wrong use the default translator
        }

        if (translator instanceof BrokerContextAware) {
            ((BrokerContextAware)translator).setBrokerContext(brokerContext);
        }

        return translator;
    }

{code}

So I will try to prepare both: unit test and fix for this problem.

Greetings
Piotr Klimczak;;;","06/Aug/14 16:38;nannou9;Problem fixed, Test written.
All working.
Regression test passed for STOMP.
Also fixed some NPE hell in JmsFrameTranslator.

Code submitted to my forked repo: https://github.com/PiotrKlimczak/activemq/commit/d294ba0c095d8f3116e4b2c03bc35bf8251e381a

All we need now is to push it to trunk.

Patch submitted on behalf of WM Promus by Piotr Klimczak
;;;","06/Aug/14 17:01;githubbot;GitHub user PiotrKlimczak opened a pull request:

    https://github.com/apache/activemq/pull/41

    https://issues.apache.org/jira/browse/AMQ-5220 Empty body for Statistics

    Advisory Messages when using STOMP protocol

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/PiotrKlimczak/activemq trunk-5220

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/41.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #41
    
----
commit 5a616e1b581c3a2942d63424b10891a7c5066137
Author: PiotrKlimczak <nannou9@gmail.com>
Date:   2014-08-06T16:30:26Z

    https://issues.apache.org/jira/browse/AMQ-5220 Empty body for Statistics
    Advisory Messages when using STOMP protocol

----
;;;","07/Aug/14 18:20;tabish;Thanks for the patch, applied it with some additional cleanups and tweaks. ;;;","07/Aug/14 18:20;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/41
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BrokerXmlConfigStartTest fails on Windows,AMQ-5216,12718849,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,kearls,kearls,kearls,06/Jun/14 14:04,06/Jun/14 14:18,14/Jul/23 05:44,06/Jun/14 14:18,,,,,,,,,,,,,,,,,,,0,,,,,,"This test fails on windows because paths are not built correctly.

Error Message

Illegal character in opaque part at index 8: xbean:E:\j\workspace\activemq-5.9.0.redhat-6-1-x-patch-platform\jdk\jdk7\label\windows\assembly\target\conf/activemq-dynamic-network-broker1.xml
Stacktrace

java.net.URISyntaxException: Illegal character in opaque part at index 8: xbean:E:\j\workspace\activemq-5.9.0.redhat-6-1-x-patch-platform\jdk\jdk7\label\windows\assembly\target\conf/activemq-dynamic-network-broker1.xml
	at java.net.URI$Parser.fail(URI.java:2829)
	at java.net.URI$Parser.checkChars(URI.java:3002)
	at java.net.URI$Parser.parse(URI.java:3039)
	at java.net.URI.<init>(URI.java:595)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:85)
	at org.apache.activemq.config.BrokerXmlConfigStartTest.testStartBrokerUsingXmlConfig1(BrokerXmlConfigStartTest.java:87)
",Windows Server 2008,kearls,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,397048,,,Fri Jun 06 14:18:54 UTC 2014,,,,,,,,,,,"0|i1wcun:",397166,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"06/Jun/14 14:18;kearls;Fixed with 07dad1cd558f9f14d3520018c0da20dd0e6e81e5;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deadlock with duplicate detection and dlq processing in kahadb,AMQ-5212,12718604,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,05/Jun/14 11:56,15/Dec/14 21:42,14/Jul/23 05:44,09/Jun/14 11:40,5.9.0,5.9.1,,,,,,,,5.10.1,5.11.0,,,Broker,Message Store,,,,0,,,,,,"Contention between access to the destination map from store duplicate processing and dlq destination creation from the cursor. But could be between any destination creation/deletion.
From the test case: {code}Found one Java-level deadlock:
=============================
""ActiveMQ Transport: tcp://27.0.0.1:60895@60852"":
  waiting for ownable synchronizer 7df695ea8, (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync),
  which is held by ""ActiveMQ Transport: tcp://27.0.0.1:60894@60852""
""ActiveMQ Transport: tcp://27.0.0.1:60894@60852"":
  waiting for ownable synchronizer 7df605fd8, (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync),
  which is held by ""ConcurrentQueueStoreAndDispatch""
""ConcurrentQueueStoreAndDispatch"":
  waiting for ownable synchronizer 7df695ea8, (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync),
  which is held by ""ActiveMQ Transport: tcp://27.0.0.1:60894@60852""

Java stack information for the threads listed above:
===================================================
""ActiveMQ Transport: tcp://27.0.0.1:60895@60852"":
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <7df695ea8> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:156)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:811)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:842)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1178)
	at java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock.lock(ReentrantReadWriteLock.java:890)
	at org.apache.activemq.broker.region.AbstractRegion.addDestination(AbstractRegion.java:129)
	at org.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:334)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:172)
	at org.apache.activemq.advisory.AdvisoryBroker.addDestination(AdvisoryBroker.java:184)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:172)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:172)
	at org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:177)
	at org.apache.activemq.broker.region.RegionBroker.addProducer(RegionBroker.java:384)
	at org.apache.activemq.broker.BrokerFilter.addProducer(BrokerFilter.java:107)
	at org.apache.activemq.advisory.AdvisoryBroker.addProducer(AdvisoryBroker.java:172)
	at org.apache.activemq.broker.CompositeDestinationBroker.addProducer(CompositeDestinationBroker.java:56)
	at org.apache.activemq.broker.BrokerFilter.addProducer(BrokerFilter.java:107)
	at org.apache.activemq.broker.MutableBrokerFilter.addProducer(MutableBrokerFilter.java:112)
	at org.apache.activemq.broker.TransportConnection.processAddProducer(TransportConnection.java:565)
	at org.apache.activemq.command.ProducerInfo.visit(ProducerInfo.java:108)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:294)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:148)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:270)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)
	at java.lang.Thread.run(Thread.java:695)
""ActiveMQ Transport: tcp://27.0.0.1:60894@60852"":
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <7df605fd8> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:156)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:811)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:842)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1178)
	at java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock.lock(ReentrantReadWriteLock.java:890)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.getMessageCount(KahaDBStore.java:490)
	at org.apache.activemq.store.ProxyMessageStore.getMessageCount(ProxyMessageStore.java:101)
	at org.apache.activemq.broker.region.Queue.initialize(Queue.java:389)
	at org.apache.activemq.broker.region.DestinationFactoryImpl.createDestination(DestinationFactoryImpl.java:87)
	at org.apache.activemq.broker.region.AbstractRegion.createDestination(AbstractRegion.java:546)
	at org.apache.activemq.broker.region.AbstractRegion.addDestination(AbstractRegion.java:135)
	at org.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:334)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:172)
	at org.apache.activemq.advisory.AdvisoryBroker.addDestination(AdvisoryBroker.java:184)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:172)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:172)
	at org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:177)
	at org.apache.activemq.broker.region.RegionBroker.addProducer(RegionBroker.java:384)
	at org.apache.activemq.broker.BrokerFilter.addProducer(BrokerFilter.java:107)
	at org.apache.activemq.advisory.AdvisoryBroker.addProducer(AdvisoryBroker.java:172)
	at org.apache.activemq.broker.CompositeDestinationBroker.addProducer(CompositeDestinationBroker.java:56)
	at org.apache.activemq.broker.BrokerFilter.addProducer(BrokerFilter.java:107)
	at org.apache.activemq.broker.MutableBrokerFilter.addProducer(MutableBrokerFilter.java:112)
	at org.apache.activemq.broker.TransportConnection.processAddProducer(TransportConnection.java:565)
	at org.apache.activemq.command.ProducerInfo.visit(ProducerInfo.java:108)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:294)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:148)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:270)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)
	at java.lang.Thread.run(Thread.java:695)
""ConcurrentQueueStoreAndDispatch"":
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <7df695ea8> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:156)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:811)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireShared(AbstractQueuedSynchronizer.java:941)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireShared(AbstractQueuedSynchronizer.java:1261)
	at java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock.lock(ReentrantReadWriteLock.java:677)
	at org.apache.activemq.broker.region.AbstractRegion.getDestinations(AbstractRegion.java:243)
	at org.apache.activemq.broker.region.RegionBroker.getDestinations(RegionBroker.java:149)
	at org.apache.activemq.store.kahadb.KahaDBStore.rollbackStatsOnDuplicate(KahaDBStore.java:286)
	at org.apache.activemq.store.kahadb.MessageDatabase.updateIndex(MessageDatabase.java:1316)
	at org.apache.activemq.store.kahadb.MessageDatabase$11.execute(MessageDatabase.java:1140)
	at org.apache.activemq.store.kahadb.disk.page.Transaction.execute(Transaction.java:779)
	at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:1137)
	at org.apache.activemq.store.kahadb.MessageDatabase$10.visit(MessageDatabase.java:1074)
	at org.apache.activemq.store.kahadb.data.KahaAddMessageCommand.visit(KahaAddMessageCommand.java:241)
	at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:1071)
	at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:978)
	at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:958)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.addMessage(KahaDBStore.java:426)
	at org.apache.activemq.store.kahadb.KahaDBStore$StoreQueueTask.run(KahaDBStore.java:1281)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)
	at java.lang.Thread.run(Thread.java:695)

Found 1 deadlock.{code}",,gtully,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4952,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,396803,,,Mon Jun 09 11:40:55 UTC 2014,,,,,,,,,,,"0|i1wbcf:",396922,,,,,,,,,,,,,,,,,,,,,"09/Jun/14 11:40;gtully;fix and test in further refinement in http://git-wip-us.apache.org/repos/asf/activemq/commit/27b3a7c3
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQDestination.createDestination() should prevent empty destination name,AMQ-5211,12718493,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,boday,boday,04/Jun/14 21:51,15/Dec/14 21:38,14/Jul/23 05:44,06/Jun/14 16:05,5.9.0,,,,,,,,,5.10.1,5.11.0,,,,,,,,0,,,,,,"currently you can call ActiveMQDestination createDestination("""",ActiveMQDestination.QUEUE_TYPE) to create a queue with no name.  

while this doesn't seem to be an issue at first...if you are using mKahadb, ActiveMQ will fail to restart after this queue/store directory are created.

see this post: http://activemq.2283324.n4.nabble.com/mkahadb-Failed-to-start-per-destination-persistence-adapter-for-destination-td4678754.html#a4679848

the web console already prevents this, we should prevent this from other entry points to this API (QueueView.moveMessagesTo() from JMX in my case)...
",,boday,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Jun/14 04:31;boday;AMQ-5211.patch;https://issues.apache.org/jira/secure/attachment/12648593/AMQ-5211.patch",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,396692,,,Fri Jun 06 16:05:35 UTC 2014,,,,,,,Patch Available,,,,"0|i1wanz:",396811,,,,,,,,,,,,,,,,,,,,,"05/Jun/14 20:46;tabish;This seems sensible enough.  Empty destination names don't make much sense.  Would be good if there were some unit tests to protect the change. ;;;","05/Jun/14 21:06;boday;agreed Tim, I'll add a unit test to the patch...;;;","06/Jun/14 04:26;boday;patch to add validation with simple unit tests for empty queue/topic names and fixed a few typos;;;","06/Jun/14 16:05;tabish;Fixed on trunk.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Outdated links on the ""How can I see what destinations are used""",AMQ-5199,12716303,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,lichtin,lichtin,23/May/14 10:46,23/May/14 13:20,14/Jul/23 05:44,23/May/14 13:20,,,,,,,,,,,,,,,,,,,0,,,,,,"http://activemq.apache.org/how-can-i-see-what-destinations-are-used.html

The links to the code no longer work. Thanks for adjusting!",,lichtin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,394511,,,2014-05-23 10:46:07.0,,,,,,,,,,,"0|i1vxdj:",394652,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MessageConsumer and Producer are not thread safe,AMQ-5198,12716030,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,Malli,Malli,22/May/14 09:24,25/Sep/15 19:15,14/Jul/23 05:44,18/Jul/14 14:13,5.9.0,,,,,,,,,5.10.1,5.11.0,,,,,,,,0,,,,,,"We currently have an object that acts both as a consumer and as a producer over the same queue.

Lazy initialization of the scheduler is not 100% thread safe when a consumer and a producer are created sharing the same connection.


We encountered the following sporadic NPE when a rollback() is invoked:
Caused by: java.lang.NullPointerException
        at org.apache.activemq.thread.Scheduler.executeAfterDelay(Scheduler.java:64)
        at org.apache.activemq.ActiveMQMessageConsumer.rollback(ActiveMQMessageConsumer.java:1278)
        at org.apache.activemq.ActiveMQMessageConsumer$5.afterRollback(ActiveMQMessageConsumer.java:1054)
        at org.apache.activemq.TransactionContext.afterRollback(TransactionContext.java:157)
        ... 11 more



We believe that the lazy initialized getScheduler() is open for a race condition when a publish and rollback are happening concurrently.

try {
                        result = scheduler = new Scheduler(""ActiveMQConnection[""+info.getConnectionId().getValue()+""] Scheduler"");
                        scheduler.start();
                    } catch(Exception e) {
                        throw JMSExceptionSupport.create(e);
                    }

The suggested fix is to simply invoke the start within the constructor of the Scheduler class.",,jahlborn,Malli,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/May/14 09:17;Malli;ActiveMq.zip;https://issues.apache.org/jira/secure/attachment/12646480/ActiveMq.zip",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,394234,,,Fri Sep 25 19:15:23 UTC 2015,,,,,,,,,,,"0|i1vvon:",394372,,,,,,,,,,,,,,,,,,,,,"22/May/14 15:25;tabish;Do you have a test case that can reproduce this ;;;","23/May/14 08:23;Malli;Hi Timothy,

unfortunately, as you might understand, it's pretty hard to trigger a race condition reliably. 
Please let me know if you need anyway a small test set up anyway.;;;","23/May/14 09:17;Malli;Hi Timothy,

I've attached a testcase that successfully hits the NPE when the scheduler.start() method is delayed.

The first consumer enters the block and while it still has to perform the start() the second will find the first if condition if (result == null) false, hence it won't have the Timer object initialised and an exception is thrown.

I hope this explanation is clear enough;;;","02/Jun/14 07:56;Malli;Hi Timothy,

any update on this?;;;","04/Jun/14 13:48;tabish;Haven't had time to investigate as the test is quite large.  A simpler JUnit test case would be quicker to investigate otherwise this will have to wait.  In JMS land the Session is meant to be a single threaded resource to you can probably work around any issue here by giving each it's own Session instance. ;;;","24/Jun/14 09:06;Malli;Hi Timothy,

As I mentioned the problem is not related to the Session, but the Connection itself not being thread safe. We currently make use of a single Session per thread.

We both agree that an 'in frequently triggered' race condition doesnt exactly lend itself to a simple junit, but I believe that the test case I provided you with the actual patch should be quite straight-forward to test.;;;","18/Jul/14 08:28;Malli;Hi,

is there any update on this?;;;","18/Jul/14 14:13;tabish;Fixed the assignment of the member variable to occur after the created scheduler is initialized so that the initialization doesn't allow the instance to escape the synchronized block.  ;;;","25/Sep/15 19:15;jahlborn;[~tabish121] - just came across this bug and looked at the fix.  This isn't actually correctly thread-safe at this point.  The new code is using the broken version of double-checked locking.  In order for this to be fixed correctly, the scheduler reference must be made volatile.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQP protocol handler doesn't set session incoming capacity ,AMQ-5195,12715622,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,tabish,tabish,20/May/14 22:24,20/May/14 22:26,14/Jul/23 05:44,20/May/14 22:26,5.9.0,5.9.1,,,,,,,,5.10.0,,,,AMQP,,,,,0,,,,,,The AMQP protocol converter doesn't currently set the incoming credit on an open session which forces a flow frame to be sent back to a producer on every message even if the producer has available credit.  We should set the session credit to the (max frame size * producer prefetch).  We also need to better handle the remotely settled state of producer deliveries such that we only send a flow frame back when credit is running low to reduce the frames that travel back on every receive.  ,,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,393907,,,Tue May 20 22:26:53 UTC 2014,,,,,,,,,,,"0|i1vtov:",394047,,,,,,,,,,,,,,,,,,,,,"20/May/14 22:26;tabish;Fixed on trunk. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java Files Started Appearing in activemq-all jar starting in 5.9.0,AMQ-5193,12715562,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,johnnyclark,johnnyclark,20/May/14 18:28,05/Jun/14 09:35,14/Jul/23 05:44,04/Jun/14 19:15,5.9.0,5.9.1,,,,,,,,5.10.0,,,,,,,,,0,,,,,,"activemq-all-5.8.0.jar and older versions do not contain any .java files, 
only .class files as I would expect.  Strating in version 
activemq-all-5.9.0.jar .java and .class files are included in the JAR. 

Was this intentional?  I'm having a problem related to the fact that Maven 
is attempting to compile the.java files within the jar.  I'm sure I can work around the issue in the short term, however I wanted to make sure that you were aware of it.  It seems odd to me that the .java files are included in the .jar file, normally they would only appear in the sources jar (example: activemq-all-5.9.0-sources.jar). ",,johnnyclark,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,393847,,,Wed Jun 04 19:15:25 UTC 2014,,,,,,,,,,,"0|i1vtdj:",393995,,,,,,,,,,,,,,,,,,,,,"22/May/14 15:26;tabish;What are the Java files you see appearing in the jar?;;;","22/May/14 20:16;johnnyclark;If I download activemq-all-5.9.0.jar from http://mvnrepository.com/artifact/org.apache.activemq/activemq-all/5.9.0 or http://repo1.maven.org/maven2/org/apache/activemq/activemq-all/5.9.0/
there are 2,261 .java files inside of it.  For example: org\apache\activemq\ActiveMQConnection.java;;;","04/Jun/14 18:43;tabish;I think this is related to the change for: AMQ-4549 ;;;","04/Jun/14 19:15;tabish;added shade transformer that ensures the sources are not shaded into the uber jar.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Rollback on XASession when closing back to pool,AMQ-5189,12714812,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,graben,graben,16/May/14 17:20,29/May/14 14:33,14/Jul/23 05:44,29/May/14 14:33,5.7.0,5.8.0,5.9.0,5.9.1,,,,,,5.10.0,,,,Pool,,,,,0,,,,,,"If you have a pool of XASession under load (heavy load might be necessary) I register sometimes following Exception ""Cannot rollback() inside an XASession"" in afterCompletion synchronisation. After some analysis and patching with logging I recognized that the session object is returned back to pool before setting the xa flag back to false. This leads to the effect that this session gets be used again by another thread while the earlier one switches the xa flag to false.","Windows, UNIX",geerzo,graben,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/May/14 07:27;graben;vcs-diff962688386413870521.patch;https://issues.apache.org/jira/secure/attachment/12647313/vcs-diff962688386413870521.patch",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,393125,,,Thu May 29 14:33:55 UTC 2014,,,,,,,,,,,"0|i1vp2n:",393291,,,,,,,,,,,,,,,,,,,,,"17/May/14 08:22;graben;A solution might be to register a PooledSessionEventListener in XA synchronisation which does the ignore and xa flagging onSessionClosed.;;;","19/May/14 15:03;geerzo;I think this issue was fixed in 5.9. Can you confirm it's an issue in the newer versions because or provide a test case because I'm not seeing the issue currently.;;;","19/May/14 18:12;graben;Since this problem is not deterministic its quite hard to deliver a test case. But if you look at the code you can see that this problem does still exist in trunk code.
Look at XaConnectionPool line 106 where the close operation on the PooledSession object is invoked which returns itself back into the pool in line 152. But the Synchronization object of XaConnectionPool does still change values after that in line 107 and 108 while the pool object might be used again in another thread. So it is obvious that a collition can occured!;;;","27/May/14 09:10;graben;Any feedback on my comment?;;;","29/May/14 07:27;graben;Patch suggestion;;;","29/May/14 14:33;tabish;Nice idea, patch looks good, applied to trunk. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Virtual destination consumers do not support retroactive message recovery,AMQ-5187,12714571,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,dhirajsb,dhirajsb,15/May/14 18:36,22/Jul/15 14:01,14/Jul/23 05:44,29/Jul/14 21:25,5.9.1,,,,,,,,,5.11.0,,,,Broker,,,,,0,,,,,,"Virtual destinations intercept messages sent by producers and pass them onto consumers, but when consumers connect to mapped destinations, they do not receive retroactive messages. 
This is particularly required for MQTT clients using virtual topics to send retained messages to consumer queues. ",,dhirajsb,githubbot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5898,,,,,,,"29/Jul/14 16:19;dhirajsb;0001-AMQ-5187-updated-virtual-destinations-to-support-rec.patch;https://issues.apache.org/jira/secure/attachment/12658432/0001-AMQ-5187-updated-virtual-destinations-to-support-rec.patch","29/Jul/14 16:19;dhirajsb;0002-AMQ-5187-updated-test-to-verify-that-second-virtual-.patch;https://issues.apache.org/jira/secure/attachment/12658433/0002-AMQ-5187-updated-test-to-verify-that-second-virtual-.patch","29/Jul/14 16:19;dhirajsb;0003-Fixed-AMQ-5187-optimized-MappedQueueFilter-to-recove.patch;https://issues.apache.org/jira/secure/attachment/12658434/0003-Fixed-AMQ-5187-optimized-MappedQueueFilter-to-recove.patch","29/Jul/14 16:19;dhirajsb;0004-AMQ-5187-removed-redundant-import.patch;https://issues.apache.org/jira/secure/attachment/12658435/0004-AMQ-5187-removed-redundant-import.patch","29/Jul/14 16:19;dhirajsb;AMQ-5187.patch;https://issues.apache.org/jira/secure/attachment/12658436/AMQ-5187.patch",,,,,5.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,392884,,,Wed Feb 11 10:43:38 UTC 2015,,,,,,,,,,,"0|i1vnmf:",393055,,,,,,,,,,,,,,,,,,,,,"18/May/14 17:50;githubbot;GitHub user dhirajsb opened a pull request:

    https://github.com/apache/activemq/pull/24

    Fixed AMQ-5187 added support for virtual destination subscription recovery

    This patch adds support for applying subscription recovery policy to mapped Queues for virtual destinations. This is a MUST for mapping MQTT retained messages from Virtual/Composite Topics to mapped Queues. 
    
    Since it depends on AMQ-5160, it Includes commits from https://github.com/apache/activemq/pull/22. 

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/dhirajsb/activemq AMQ-5187

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/24.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #24
    
----
commit d45de03ec781a37deaf959202f6549f076be4c2a
Author: Dhiraj Bokde <dhirajsb@yahoo.com>
Date:   2014-05-08T02:05:36Z

    Partial fix for AMQ-5160, attempts to resolve retained messages using subscription recovery policy, but fails to resend retained messages for duplicate subscriptions

commit e510d129eb80f493d300e2f5fe370c83f1d946ad
Author: Dhiraj Bokde <dhirajsb@yahoo.com>
Date:   2014-05-12T19:37:54Z

    Fixed AMQ-5160, Added RegionBroker.getConnectionContext(), made Topic.recoverRetroactiveMessages() public to force message recovery from MQTTProtocolConverter for duplicate subscriptions, added new tests for retained messages and JMX interoperability

commit 33e663da38e737aa13200dbf5c10a231465fe0e6
Author: Dhiraj Bokde <dhirajsb@yahoo.com>
Date:   2014-05-13T02:51:21Z

    Fixed AMQ-5160, fixed browse() to include messages from wrapped policy

commit 5648cd37febf9363397fc2b97c5f23c45427e9fc
Author: Dhiraj Bokde <dhirajsb@yahoo.com>
Date:   2014-05-13T03:25:11Z

    Fixed AMQ-5160, removed redundant MQTTRetainedMessages

commit b579dc472e340a15e45675df2c70a133fcbf1b61
Author: Dhiraj Bokde <dhirajsb@yahoo.com>
Date:   2014-05-13T07:29:03Z

    Fixed AMQ-5160, force durable subscriptions to always recover retroactive messages

commit 7fe6dc0efa9cf645210758907d158f1874a3b5bf
Author: Dhiraj Bokde <dhirajsb@yahoo.com>
Date:   2014-05-13T07:29:40Z

    Fixed AMQ-5160, remove durable subscription in onUnsubscribe()

commit 4e611393cd857ae08bb2e7412631b560af52350c
Author: Dhiraj Bokde <dhirajsb@yahoo.com>
Date:   2014-05-13T07:30:11Z

    Fixed AMQ-5160, polished MQTT tests

commit 0ea3513759caab52083e402d558d6c864661dfad
Author: Dhiraj Bokde <dhirajsb@yahoo.com>
Date:   2014-05-13T07:45:05Z

    Fixed AMQ-5160, fixed test testNoMessageReceivedAfterUnsubscribeMQTT

commit b29112e49219c8ce281920687d1244d7bb3b5074
Author: Dhiraj Bokde <dhirajsb@yahoo.com>
Date:   2014-05-13T19:14:21Z

    Fixed AMQ-5160, changed DurableTopicSubscription to only recover retroactive messages for retroactive topics or consumers

commit fb3008f6644c834bbd54c917729ed246fb96fc6a
Author: Dhiraj Bokde <dhirajsb@yahoo.com>
Date:   2014-05-13T19:15:14Z

    Fixed AMQ-5160, removed producer's retain property from retained messages

commit a0ee487b0dd9ac17ae89fe07c365cb5a2603e9c1
Author: Dhiraj Bokde <dhirajsb@yahoo.com>
Date:   2014-05-13T19:16:44Z

    Fixed AMQ-5160, fixed race condition for retained messages

commit 30d23491ac900d6e8ac4f0fd64ea86e2e3f0fe7b
Author: Dhiraj Bokde <dhirajsb@yahoo.com>
Date:   2014-05-13T20:15:04Z

    Fixed AMQ-5160, restored previous DurableSubscription behaviour of only recovering messages when cursor is empty, retained messages are always recovered

commit 01749352991a2b0bceaec8896d6a3493ea15487d
Author: Dhiraj Bokde <dhirajsb@yahoo.com>
Date:   2014-05-16T21:21:19Z

    Fixed AMQ-5160, fixed durable subscription retroactive recovery

commit f0c3b9675e216221ba6d8a2aa9d23620f7206a78
Author: Dhiraj Bokde <dhirajsb@yahoo.com>
Date:   2014-05-17T03:03:50Z

    AMQ-5187, updated virtual destinations to support recovering retractive messages from virtual and composite topics, added MQTT tests to verify retain message recovery

commit 5e8a763d8f8493b858d2a20cab98defbc53ec935
Author: Dhiraj Bokde <dhirajsb@yahoo.com>
Date:   2014-05-17T03:17:26Z

    AMQ-5187, updated test to verify that second virtual topic queue consumer does not receive retained message

----
;;;","19/May/14 17:09;dhirajsb;I've also written a post about this fix at http://rockablogbaby.blogspot.com/2014/05/scalable-iot-integration-using-apache.html;;;","28/Jul/14 22:40;tabish;It looks like your PR-22 was merged which contained some of the work in PR-24.  Problem is that given other changes that have gone in 24 won't apply cleanly.  Can you take a look and perhaps rebase against trunk to produce an updated pull request that will work with current trunk code?  ;;;","29/Jul/14 03:37;dhirajsb;I've resolved conflicts and updated my patch branch. Please try it again. ;;;","29/Jul/14 14:02;tabish;The patch now has commits for issues already applied on trunk so it still produces a lot of conflicts.  Maybe just merge you branch with trunk and then create a patch by comparison via: git format-patch trunk >> mqtt.patch ;;;","29/Jul/14 16:19;dhirajsb;Sorry about the branch mess. I am attaching the result of 
{code}
git format-patch trunk >> AMQ-5187.patch
{code};;;","29/Jul/14 17:58;tabish;This doesn't seem to apply entirely cleanly to trunk either, bits get dropped due to conflicts.;;;","29/Jul/14 18:30;dhirajsb;Merged master repo trunk branch into AMQ-5187 branch. Should be able to apply the github PR now. ;;;","29/Jul/14 21:25;tabish;Applied patch with a few small tweaks.  Moved the composite test case to it's own test since it requires specific Broker config and doesn't really need to be tested on each transport type.  ;;;","11/Feb/15 10:43;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/24
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQP producers aren't removed,AMQ-5186,12714479,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,15/May/14 13:11,15/May/14 13:17,14/Jul/23 05:44,15/May/14 13:17,5.9.0,,,,,,,,,5.10.0,,,,AMQP,,,,,0,,,,,,Consumers are only closed when the whole session is removed.,,dejanb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,392792,,,Thu May 15 13:17:56 UTC 2014,,,,,,,,,,,"0|i1vn33:",392966,,,,,,,,,,,,,,,,,,,,,"15/May/14 13:17;dejanb;Fixed on trunk with commit ff64b14bc78466df96d16b1d04e862a7ddef3204;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Old WebConsole Move function does not work,AMQ-5184,12714136,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,Wawan,Wawan,14/May/14 08:59,18/Jun/14 13:12,14/Jul/23 05:44,18/Jun/14 13:12,5.9.1,,,,,,,,,5.10.0,,,,Web Console,,,,,0,,,,,,"When using the old web console, moving a message from a queue to another is not possible anymore. 
This is a regression related to queue selection combo box sorting.

The bug is located in webapps/admin/message.jsp

Version 5.9.1

<td><a href=""<c:url value=""javascript:confirmAction('queue', 'moveMessage.action?destination=%target%&JMSDestination=${requestContext.messageQuery.JMSDestination}&messageId=${row.JMSMessageID}&JMSDestinationType=queue&secret=${sessionScope['secret']})""/>""

Fix: (location at the end of the row, one quote missing and one parenthese misplaced )

<td><a href=""<c:url value=""javascript:confirmAction('queue', 'moveMessage.action?destination=%target%&JMSDestination=${requestContext.messageQuery.JMSDestination}&messageId=${row.JMSMessageID}&JMSDestinationType=queue&secret=${sessionScope['secret']}""/>')""","Linux Ubuntu
Tests done with Firefox / chromium / IE 8.0",Wawan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4175,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,392449,,,Wed Jun 18 13:12:58 UTC 2014,,,,,,,,,,,"0|i1vl2v:",392634,Regression,,,,,,,,,,,,,,,,,,,,"18/Jun/14 13:12;Wawan;Duplicate;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ web demo - chat example - Very slow on JBoss7 after AMQ-4801,AMQ-5182,12713666,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,greyfairer,greyfairer,12/May/14 16:57,07/Oct/14 14:13,14/Jul/23 05:44,07/Oct/14 14:13,5.9.0,5.9.1,,,,,,,,5.11.0,,,,,,,,,0,,,,,,"When running the chat example on JBoss 7, the Ajax Servlet uses the Jetty Servlet 3.0 Continuation support.

The chat client is terribly slow in this case. A chat message is only received when the polling connector starts polling, every 30 seconds.

In ActiveMQ 5.8, the chat messages come in immediately.",JBoss-AS 7.2.0,greyfairer,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4801,,,,,,,AMQ-3094,"12/May/14 17:07;greyfairer;0001-Revert-partial-change-from-AMQ-4801.patch;https://issues.apache.org/jira/secure/attachment/12644432/0001-Revert-partial-change-from-AMQ-4801.patch",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,391982,,,Tue Oct 07 14:13:12 UTC 2014,,,,,,,,,,,"0|i1vi9z:",392183,Regression,,,,,,,,,,,,,,,,,,,,"12/May/14 16:57;greyfairer;To fix AMQ-3094, a test was added to check if the current continuation is still suspended to avoid losing messages to be returned on the continuation.

In AMQ-4801, the test was expanded to also check if !continuation.isInitial(). This has nothing to do with the given bug, and causes messages to be postponed, even when a continuation is available.;;;","12/May/14 17:07;greyfairer;Added patch to revert change from AMQ-4801;;;","07/Oct/14 14:13;gtully;patch applied with thanks in http://git-wip-us.apache.org/repos/asf/activemq/commit/b5581166;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Links on http://activemq.apache.org/security.html out of date,AMQ-5180,12713573,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,lichtin,lichtin,12/May/14 07:36,12/May/14 14:19,14/Jul/23 05:44,12/May/14 14:19,,,,,,,,,,,,,,,,,,,0,,,,,,"Can the links on page http://activemq.apache.org/security.html be updated?
Much appreciated.

I'm trying to upgrade to 5.9.1 and noticed the jaasAuthenticationPlugin is enabled by default (in activemq-karaf). Need to understand how to modify the client-side to provide the required information.",,lichtin,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,391889,,,Mon May 12 14:19:48 UTC 2014,,,,,,,,,,,"0|i1vhpr:",392092,,,,,,,,,,,,,,,,,,,,,"12/May/14 14:19;tabish;Links fixed;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cannot use the JDBCIOExceptionHandler when kahadb is configured with lease-database-locker,AMQ-5174,12712617,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,gtully,paulgale,paulgale,06/May/14 16:30,22/Dec/14 12:41,14/Jul/23 05:44,22/Dec/14 12:41,5.10.0,5.9.0,5.9.1,,,,,,,5.11.0,,,,Message Store,,,,,0,,,,,,"The {{JDBCIOExceptionHandler}} is limited to operating with the {{JDBCPersistenceAdapter}}. 

It should be allowed to work in combination with the {{KahaDBPersistenceAdapter}} if it's configured to use a {{LeaseDatabaseLocker}} as a locker.",,githubbot,gtully,kevin2014,paulgale,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,390933,,,Mon Dec 22 12:41:20 UTC 2014,,,,,,,,,,,"0|i1vc1b:",391168,,,,,,,,,,,,,,,,,,,,,"12/Aug/14 15:34;kevin2014;is there any timeline that the activeMQ 5.11.0 released?   it is fixing some bugs in 5.10.0,  so I am expecting a released version to download.
Thanks;;;","12/Nov/14 14:54;gtully;If the instanceof dependency is changed to org.apache.activemq.broker.LockableServiceSupport that may suffice.

Maybe add LeaseLockerIOExceptionHandler that will work with any store that implements LockableServiceSupport and deprecate the JDBCIOExceptionHandler;;;","19/Dec/14 22:29;githubbot;GitHub user PaulGale opened a pull request:

    https://github.com/apache/activemq/pull/53

    Fix for https://issues.apache.org/jira/browse/AMQ-5174 

    - Cannot use the `JDBCIOExceptionHandler` when `KahaDB` is configured to use a `lease-database-locker`.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/PaulGale/activemq trunk

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/53.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #53
    
----
commit 1bbce490adbe0525a7b8211a6522fd712cbf4fa8
Author: PaulGale <paul.n.gale@gmail.com>
Date:   2014-12-19T22:13:52Z

    Fix for https://issues.apache.org/jira/browse/AMQ-5174 - Cannot use the JDBCIOExceptionHandler when kahadb is configured with lease-database-locker

----
;;;","22/Dec/14 12:38;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/53
;;;","22/Dec/14 12:41;gtully;patch applied with thanks - http://git-wip-us.apache.org/repos/asf/activemq/commit/e16815ad;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Kaha DB cleanup fails to reclaim disk space after some time,AMQ-5173,12712588,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,imran99,imran99,06/May/14 14:42,07/May/14 09:10,14/Jul/23 05:44,07/May/14 09:10,5.6.0,,,,,,,,,5.9.1,,,,,,,,,0,,,,,,"We are seeing an issue where a broker using Kaha DB will gradually increase its footprint on disk over time and never shrink back down again even when all queues are empty.

The default cleanup settings will reclaim space at first but over time it seems the size of the data directory will grow and never shrink back down to its original size.

I can reproduce this with a test that sends and consumes a large number of messages to a single queue (.net client, broker hosted on windows). The data file grows and will never shrink back down again.

{code}
        [Test]
        public void ButLoadOfMessagesOnASingleQueue()
        {
            const int messagesPerProducerThread = 1000000;
            const int numberProducers = 1;
            const int numberConsumers = 3;
            var producersConsumers = new List<Task>();

            var factory = new ConnectionFactory
            {
                AcknowledgementMode = AcknowledgementMode.Transactional,
                AsyncSend = true
            };

            for (var i = 0; i < numberProducers; i++)
            {
                var producer = Task.Factory.StartNew(() => Send(factory, messagesPerProducerThread));
                producersConsumers.Add(producer);
            }
            for (var i = 0; i < numberConsumers; i++)
            {
                var consumer = Task.Factory.StartNew(() => Consume(factory));
                producersConsumers.Add(consumer);
            }

            Task.WaitAll(producersConsumers.ToArray());
        }

        private void Send(IConnectionFactory connectionFactory, int noMessages)
        {
            var connection = connectionFactory.CreateConnection();
            connection.Start();

            var session = connection.CreateSession();
            var destination = SessionUtil.GetDestination(session, GetQueueName(1));
            var producer = session.CreateProducer(destination);
            for (var i = 0; i < noMessages; i++)
            {
                producer.Send(new ActiveMQTextMessage(i.ToString()));

                if (i%100 == 0)
                    session.Commit();
            }
            session.Commit();
            connection.Close();
        }

        private void Consume(IConnectionFactory connectionFactory)
        {
            var connection = connectionFactory.CreateConnection();
            connection.Start();

            var session = connection.CreateSession();
            var destination = SessionUtil.GetDestination(session, GetQueueName(1));
            var consumer = session.CreateConsumer(destination);
            var count = 0;
            while (true)
            {
                if (consumer.Receive(TimeSpan.FromSeconds(5)) == null)
                    break;
                count++;

                if (count%100 == 0)
                    session.Commit();
            }
            session.Commit();
            connection.Close();
        }
{code}",,imran99,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,390904,,,Wed May 07 09:09:37 UTC 2014,,,,,,,,,,,"0|i1vbuv:",391139,,,,,,,,,,,,,,,,,,,,,"06/May/14 18:46;tabish;Have you tested with a current release of ActiveMQ?  The latest release is v5.9.1;;;","07/May/14 08:22;imran99;5.9.1 is not an option for us at the moment. I also didn't see any jiras relating to something similar for releases after 5.6 but i'll install 5.9.1 and give it a try.;;;","07/May/14 09:09;imran99;[~tabish121] looks like 5.9.1 does handle this better and does not exhibit this behavior when running the same test. Any idea which jira implemented this fix?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CLONE - ActiveMQ 5.x does not support the notion of a grace-period for heart beats as supported by the STOMP protocol,AMQ-5168,12711959,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tcharl,tcharl,02/May/14 15:10,02/May/14 15:26,14/Jul/23 05:44,02/May/14 15:26,5.9.1,,,,,,,,,,,,,,,,,,0,easyfix,,,,,"Regarding the configuration of heart beating the STOMP protocol spec states:

    ""- because of timing inaccuracies, the receiver SHOULD be tolerant and take into account an error margin""

However, it appears that ActiveMQ 5.x is not tolerant of any error margin. 

Despite the fact that the spec says SHOULD rather than MUST it would make the implementation of STOMP clients easier if the error margin was published.

As the broker aggressively enforces the heart beat timeouts false failover attempts can result.

Apparently Apollo supports an error margin of 1.5x the configured heart beat. If it could be made configurable that would be even better! 
",,tcharl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4674,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,390278,,,Fri May 02 15:26:45 UTC 2014,,,,,,,,,,,"0|i1v82f:",390515,,,,,,,,,,,,,,,,,,,,,"02/May/14 15:12;tcharl;see AMQ-4674 for users comment (NPE thrown after fix).
;;;","02/May/14 15:26;tcharl;Sorry, miss clone;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ web-console fails to start in Karaf - missing import ,AMQ-5167,12711935,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,ieugen,ieugen,02/May/14 12:20,26/Jun/14 08:26,14/Jul/23 05:44,26/Jun/14 07:58,5.9.1,,,,,,,,,5.10.0,,,,OSGi/Karaf,,,,,1,,,,,,"Steps to reprodouce: 

1. start Karaf 2.3.5 or 3.0.1. 
2. install activemq feature : 
feature:repo-add activemq 5.9.1 
feature:install activemq-broker 

Stack trace: 

~~~
aused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter': Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Could not instantiate bean class [org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter]: Constructor threw exception; nested exception is java.lang.NoClassDefFoundError: javax/xml/stream/XMLStreamException
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1037)[145:org.apache.activemq.activemq-web-console:5.9.1]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:983)[145:org.apache.activemq.activemq-web-console:5.9.1]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:487)[145:org.apache.activemq.activemq-web-console:5.9.1]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)[145:org.apache.activemq.activemq-web-console:5.9.1]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:289)[145:org.apache.activemq.activemq-web-console:5.9.1]
	at org.springframework.web.servlet.DispatcherServlet.createDefaultStrategy(DispatcherServlet.java:810)[145:org.apache.activemq.activemq-web-console:5.9.1]
	at org.springframework.web.servlet.DispatcherServlet.getDefaultStrategies(DispatcherServlet.java:779)[145:org.apache.activemq.activemq-web-console:5.9.1]
	at org.springframework.web.servlet.DispatcherServlet.initHandlerAdapters(DispatcherServlet.java:587)[145:org.apache.activemq.activemq-web-console:5.9.1]
	at org.springframework.web.servlet.DispatcherServlet.initStrategies(DispatcherServlet.java:444)[145:org.apache.activemq.activemq-web-console:5.9.1]
	at org.springframework.web.servlet.DispatcherServlet.onRefresh(DispatcherServlet.java:432)[145:org.apache.activemq.activemq-web-console:5.9.1]
	at org.springframework.web.servlet.FrameworkServlet.onApplicationEvent(FrameworkServlet.java:772)[145:org.apache.activemq.activemq-web-console:5.9.1]
	at org.springframework.web.servlet.FrameworkServlet$ContextRefreshListener.onApplicationEvent(FrameworkServlet.java:1083)[145:org.apache.activemq.activemq-web-console:5.9.1]
	at org.springframework.web.servlet.FrameworkServlet$ContextRefreshListener.onApplicationEvent(FrameworkServlet.java:1080)[145:org.apache.activemq.activemq-web-console:5.9.1]
	at org.springframework.context.event.GenericApplicationListenerAdapter.onApplicationEvent(GenericApplicationListenerAdapter.java:51)[145:org.apache.activemq.activemq-web-console:5.9.1]
	at org.springframework.context.event.SourceFilteringListener.onApplicationEventInternal(SourceFilteringListener.java:96)[145:org.apache.activemq.activemq-web-console:5.9.1]
	at org.springframework.context.event.SourceFilteringListener.onApplicationEvent(SourceFilteringListener.java:68)[145:org.apache.activemq.activemq-web-console:5.9.1]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:96)[145:org.apache.activemq.activemq-web-console:5.9.1]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:334)[145:org.apache.activemq.activemq-web-console:5.9.1]
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:948)[145:org.apache.activemq.activemq-web-console:5.9.1]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)[145:org.apache.activemq.activemq-web-console:5.9.1]
	at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:651)[145:org.apache.activemq.activemq-web-console:5.9.1]
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:599)[145:org.apache.activemq.activemq-web-console:5.9.1]
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:665)[145:org.apache.activemq.activemq-web-console:5.9.1]
	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:518)[145:org.apache.activemq.activemq-web-console:5.9.1]
	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:459)[145:org.apache.activemq.activemq-web-console:5.9.1]
	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:136)[145:org.apache.activemq.activemq-web-console:5.9.1]
	at javax.servlet.GenericServlet.init(GenericServlet.java:161)[80:org.apache.geronimo.specs.geronimo-servlet_3.0_spec:1.0]
	at org.eclipse.jetty.servlet.ServletHolder.initServlet(ServletHolder.java:532)[85:org.eclipse.jetty.aggregate.jetty-all-server:8.1.14.v20131031]
	... 33 more
Caused by: org.springframework.beans.BeanInstantiationException: Could not instantiate bean class [org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter]: Constructor threw exception; nested exception is java.lang.NoClassDefFoundError: javax/xml/stream/XMLStreamException
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:163)[145:org.apache.activemq.activemq-web-console:5.9.1]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87)[145:org.apache.activemq.activemq-web-console:5.9.1]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1030)[145:org.apache.activemq.activemq-web-console:5.9.1]
	... 60 more
Caused by: java.lang.NoClassDefFoundError: javax/xml/stream/XMLStreamException
	at org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.<init>(AnnotationMethodHandlerAdapter.java:203)[145:org.apache.activemq.activemq-web-console:5.9.1]
~~~",,dejanb,githubbot,ieugen,jbonofre,sobkowiak,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,SM-2311,,,,,,,,,,,,,,,SM-2303,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,390254,,,Thu Jun 26 08:26:13 UTC 2014,,,,,,,,,,,"0|i1v7x3:",390491,,,,,,,,,,,,,,,,,,,,,"21/May/14 18:30;sobkowiak;After correcting this error another exception has been thrown when creating a new queue in the web console

{code}
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)[74:org.eclipse.jetty.util:7.6.9.v20130131]
	at java.lang.Thread.run(Thread.java:745)[:1.7.0_55]
Caused by: java.io.IOException: Could not create wire format factory for: default, reason: java.lang.NoClassDefFoundError: javax/net/ssl/SSLServerSocket
	at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:27)[156:org.apache.activemq.activemq-web-console:5.9.2.SNAPSHOT]
	at org.apache.activemq.transport.TransportFactory.createWireFormatFactory(TransportFactory.java:204)[156:org.apache.activemq.activemq-web-console:5.9.2.SNAPSHOT]
	at org.apache.activemq.transport.TransportFactory.createWireFormat(TransportFactory.java:188)[156:org.apache.activemq.activemq-web-console:5.9.2.SNAPSHOT]
	at org.apache.activemq.transport.TransportFactory.doConnect(TransportFactory.java:118)[156:org.apache.activemq.activemq-web-console:5.9.2.SNAPSHOT]
	at org.apache.activemq.transport.TransportFactory.connect(TransportFactory.java:64)[156:org.apache.activemq.activemq-web-console:5.9.2.SNAPSHOT]
	at org.apache.activemq.ActiveMQConnectionFactory.createTransport(ActiveMQConnectionFactory.java:315)[156:org.apache.activemq.activemq-web-console:5.9.2.SNAPSHOT]
	... 53 more
Caused by: java.lang.NoClassDefFoundError: javax/net/ssl/SSLServerSocket
	at org.apache.activemq.util.IntrospectionSupport.setProperty(IntrospectionSupport.java:163)[156:org.apache.activemq.activemq-web-console:5.9.2.SNAPSHOT]
	at org.apache.activemq.util.IntrospectionSupport.setProperties(IntrospectionSupport.java:110)[156:org.apache.activemq.activemq-web-console:5.9.2.SNAPSHOT]
	at org.apache.activemq.transport.TransportFactory.createWireFormatFactory(TransportFactory.java:201)[156:org.apache.activemq.activemq-web-console:5.9.2.SNAPSHOT]
	... 57 more
Caused by: java.lang.ClassNotFoundException: javax.net.ssl.SSLServerSocket not found by org.apache.activemq.activemq-web-console [156]
	at org.apache.felix.framework.BundleWiringImpl.findClassOrResourceByDelegation(BundleWiringImpl.java:1460)[org.apache.felix.framework-4.0.3.jar:]
	at org.apache.felix.framework.BundleWiringImpl.access$400(BundleWiringImpl.java:72)[org.apache.felix.framework-4.0.3.jar:]
	at org.apache.felix.framework.BundleWiringImpl$BundleClassLoader.loadClass(BundleWiringImpl.java:1843)[org.apache.felix.framework-4.0.3.jar:]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)[:1.7.0_55]
	... 60 more
{code};;;","21/May/14 18:33;githubbot;GitHub user sobkowiak opened a pull request:

    https://github.com/apache/activemq/pull/25

    AMQ-5167 ActiveMQ web-cosole fails to start in Karaf - missing import

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/sobkowiak/activemq activemq-5.9

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/25.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #25
    
----
commit cbed53e1ea06efca5ad2506c339c09428b818d3f
Author: Krzysztof Sobkowiak <krzys.sobkowiak@gmail.com>
Date:   2014-05-21T18:31:29Z

    AMQ-5167 ActiveMQ web-cosole fails to start in Karaf - missing import

----
;;;","21/May/14 18:39;githubbot;GitHub user sobkowiak opened a pull request:

    https://github.com/apache/activemq/pull/26

    AMQ-5167 ActiveMQ web-cosole fails to start in Karaf - missing import

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/sobkowiak/activemq trunk

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/26.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #26
    
----
commit ba1dc88b923182fe398cc90b7da3addad05591a7
Author: Krzysztof Sobkowiak <krzys.sobkowiak@gmail.com>
Date:   2014-05-21T18:31:29Z

    AMQ-5167 ActiveMQ web-cosole fails to start in Karaf - missing import
    
    (Cherry picked from the commit cbed53e1ea06efca5ad2506c339c09428b818d3f)

----
;;;","04/Jun/14 16:05;githubbot;Github user sobkowiak closed the pull request at:

    https://github.com/apache/activemq/pull/26
;;;","04/Jun/14 16:07;githubbot;GitHub user sobkowiak opened a pull request:

    https://github.com/apache/activemq/pull/27

    AMQ-5167 ActiveMQ web-cosole fails to start in Karaf - missing import

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/sobkowiak/activemq trunk

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/27.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #27
    
----
commit c7d261cf6b8d00da2917fb959b47cf3699b24a52
Author: Krzysztof Sobkowiak <krzys.sobkowiak@gmail.com>
Date:   2014-06-04T16:06:22Z

    AMQ-5167 ActiveMQ web-cosole fails to start in Karaf - missing import

----
;;;","04/Jun/14 21:06;sobkowiak;Please apply the pull request https://github.com/apache/activemq/pull/25 for {{activemq-5.9.x}} and https://github.com/apache/activemq/pull/27 for {{trunk}}. https://github.com/apache/activemq/pull/26 is no more valid and I have closed it. ;;;","05/Jun/14 09:34;dejanb;Patch applied to trunk. Thanks!;;;","05/Jun/14 09:41;sobkowiak;Will you not release the 5.9.x line anymore? ;;;","05/Jun/14 09:46;dejanb;I don't have any plans to do it. If someone wants to do it, he can apply the patch to that branch before the release.;;;","05/Jun/14 15:09;githubbot;Github user sobkowiak closed the pull request at:

    https://github.com/apache/activemq/pull/27
;;;","25/Jun/14 11:34;jbonofre;I merge on 5.9.x branch just in case.;;;","26/Jun/14 08:26;githubbot;Github user sobkowiak closed the pull request at:

    https://github.com/apache/activemq/pull/25
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MessageDatabase does not consistently apply tracker settings,AMQ-5166,12711710,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,jahlborn,jahlborn,01/May/14 14:16,06/May/14 20:32,14/Jul/23 05:44,06/May/14 20:32,5.9.1,,,,,,,,,5.10.0,,,,Message Store,,,,,0,,,,,,"The ""failoverProducersAuditDepth"" and ""maxFailoverProducersToTrack"" settings for MessageDatabase are actually used by the underlying MetaData's ActiveMQMessageAuditNoSync instance.  However, the MetaData instance and ActiveMQMessageAuditNoSync may change over the life of the MessageDatabase, and these settings are not perpetuated to the new instances (or restored instances).",,jahlborn,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/May/14 14:18;jahlborn;aq_patch.txt;https://issues.apache.org/jira/secure/attachment/12642851/aq_patch.txt",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,390031,,,Tue May 06 20:32:24 UTC 2014,,,,,,,Patch Available,,,,"0|i1v6jr:",390269,,,,,,,,,,,,,,,,,,,,,"01/May/14 14:18;jahlborn;Attached the aq_patch.txt which ensures that the settings get passed along to every new tracker instance.;;;","06/May/14 20:32;tabish;Tested against trunk and doesn't seem to break any tests locally.  Patch applied with thanks. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix destination statistics queue name,AMQ-5165,12711418,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,30/Apr/14 08:43,30/Apr/14 08:45,14/Jul/23 05:44,30/Apr/14 08:45,5.10.0,,,,,,,,,5.10.0,,,,,,,,,0,,,,,,"Destination statistics queue name is documented as

ActiveMQ.Statistics.Destination.[DEST_NAME]

but it is really implemented as

ActiveMQ.Statistics.Destination[DEST_NAME]

The documented syntax worked on earlier versions due to the way we handled destination map. The fix for https://issues.apache.org/jira/browse/AMQ-5074 changed that, so we need to explicitly support both syntaxes now.",,dejanb,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,389739,,,Wed Apr 30 08:45:34 UTC 2014,,,,,,,,,,,"0|i1v4rz:",389981,,,,,,,,,,,,,,,,,,,,,"30/Apr/14 08:45;dejanb;Fixed with http://git-wip-us.apache.org/repos/asf/activemq/commit/4eb5097f;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
QueueMasterSlaveSingleUrlTest.testAdvisory fails,AMQ-5164,12711133,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,kearls,kearls,29/Apr/14 09:32,20/May/15 12:52,14/Jul/23 05:44,20/May/15 12:52,,,,,,,,,,5.12.0,,,,,,,,,0,,,,,,"This test currently fails with the following error:

testAdvisory(org.apache.activemq.broker.ft.QueueMasterSlaveSingleUrlTest)  Time elapsed: 24.891 sec  <<< FAILURE!
junit.framework.AssertionFailedError: Didn't received advisory
	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNotNull(Assert.java:256)
	at junit.framework.TestCase.assertNotNull(TestCase.java:426)
	at org.apache.activemq.broker.ft.QueueMasterSlaveTestSupport.testAdvisory(QueueMasterSlaveTestSupport.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at org.apache.activemq.CombinationTestSupport.runBare(CombinationTestSupport.java:107)
	at org.apache.activemq.CombinationTestSupport.runBare(CombinationTestSupport.java:113)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:254)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:149)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)


Results :

Failed tests: 
  QueueMasterSlaveSingleUrlTest>CombinationTestSupport.runBare:113->CombinationTestSupport.runBare:107->QueueMasterSlaveTestSupport.testAdvisory:153 Didn't received advisory

Tests run: 1, Failures: 1, Errors: 0, Skipped: 0

",,gtully,kearls,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,389454,,,Wed May 20 12:52:28 UTC 2015,,,,,,,,,,,"0|i1v30n:",389696,Regression,Unit Test Broken,,,,,,,,,,,,,,,,,,,"20/May/15 12:52;gtully;Seems exponential backoff on failover was allowing the receive to timeout. Test reinstated.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Slave broker does not shutdown after persistence store lockout.,AMQ-5162,12710546,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,25/Apr/14 13:04,27/May/14 13:31,14/Jul/23 05:44,25/Apr/14 13:10,5.9.0,,,,,,,,,5.10.0,,,,,,,,,0,,,,,,"Adding the following exception handler to broker configuration suppose to shutdown broker when persistence store becomes unavailable.
{code}<ioExceptionHandler>
    <jDBCIOExceptionHandler stopStartConnectors=""false""/>
</ioExceptionHandler>{code}
This is seems to work for master broker but the slave broker seems to ignore it and continues to work.",,dejanb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,388867,,,Tue May 27 13:31:17 UTC 2014,,,,,,,,,,,"0|i1uzfj:",389113,,,,,,,,,,,,,,,,,,,,,"25/Apr/14 13:11;dejanb;Fixed with http://git-wip-us.apache.org/repos/asf/activemq/commit/d60022ec;;;","27/May/14 13:31;dejanb;I made additional fix for this, introducing the configuration parameter to control this behaviour.

{code}<lease-database-locker handleStartException=""true""/>{code}

By the default, we reverted to the old behaviour as some folks want the slave to keep trying. There's no way to differentiate misconfiguration and server shutdown based on exception, so one needs to decide how she wants to handle this.

http://git-wip-us.apache.org/repos/asf/activemq/commit/b5c6c1ea;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wildcard subscriptions bypass Authentication / Authorization,AMQ-5160,12710147,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,dejanb,surfnerd,surfnerd,23/Apr/14 21:03,01/Jul/15 22:13,14/Jul/23 05:44,26/May/14 09:29,5.9.1,,,,,,,,,5.10.0,,,,MQTT,,,,,0,authentication,authorization,mqtt,security,,"I am using MQTT on AMQ 5.9.1
After latest MQTT hardening from [~dhirajsb] , there is an issue of MQTT retained messages.

Simple case:
Set Authentication / Authorization for two different TOPICS.
Send retained message to one topic.

Try to subscribe ""#"" with other second user.
It will show retained messages published by TOPIC 1. 

here i have attached test configurations.

",,dejanb,dhirajsb,githubbot,surfnerd,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5814,,,,,,,,,,,,,,"23/Apr/14 21:04;surfnerd;activemq.xml;https://issues.apache.org/jira/secure/attachment/12641570/activemq.xml","23/Apr/14 21:04;surfnerd;groups.properties;https://issues.apache.org/jira/secure/attachment/12641571/groups.properties","23/Apr/14 21:04;surfnerd;login.config;https://issues.apache.org/jira/secure/attachment/12641572/login.config","07/May/14 12:09;dejanb;patch.txt;https://issues.apache.org/jira/secure/attachment/12643744/patch.txt","23/Apr/14 21:04;surfnerd;users.properties;https://issues.apache.org/jira/secure/attachment/12641573/users.properties",,,,,5.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,388469,,,Wed Feb 11 10:43:38 UTC 2015,,,,,,,,,,,"0|i1ux1j:",388724,,,,,,,,,,,,,,,,,,,,,"24/Apr/14 10:35;dhirajsb;Can you also check what happens with non-retained messages? Currently retained messages are not checked for authorization per matched destination with wildcard topics. I wonder whether the same holds true for non-retained messages??
;;;","24/Apr/14 15:29;surfnerd;hi [~dhirajsb],

Yes . I checked.
It is also true for non-retained messages.
So in-short MQTT doesn't follow authorization for any wild-card subscription. ;;;","24/Apr/14 18:07;dhirajsb;If I had to hazard a guess, I'd say that if its happening with non-retained messages, then it would be true of any ActiveMQ protocol. In other words, this will have to fixed in the Broker where subscription matching happens for non-retained messages, and will need a fix in the MQTT transport for retained messages. ;;;","24/Apr/14 21:11;surfnerd;Okay. I understand. So we need to fix authorization for wildcard subscription.
Can you please guide me how to proceed for it ? I can help making patch.;;;","27/Apr/14 02:05;surfnerd;Can someone help me in this ?
It's big security flaw.;;;","28/Apr/14 18:29;dhirajsb;Hi Surf, I'm looking into this issue, will enlist the help of ActiveMQ committers if needed. ;;;","02/May/14 02:17;githubbot;GitHub user dhirajsb opened a pull request:

    https://github.com/apache/activemq/pull/21

    Fix for AMQ-5160, add support for wildcard destination authorization

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/dhirajsb/activemq trunk

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/21.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #21
    
----
commit 071c2d30ba5b497a66937c724605d18d04a7e516
Author: Dhiraj Bokde <dbokde@redhat.com>
Date:   2014-05-01T18:21:50Z

    Initial fix for AMQ-5160 to support subscription authorization for destination filters

commit 2b6758c822a90ea6f78501c86b397e0d6550fb56
Author: Hadrian Zbarcea <hadrian@apache.org>
Date:   2014-05-01T19:25:31Z

    Temporarily disable failing test

commit 343c90415aca46f450ed493219facf6812a6dad9
Author: Dhiraj Bokde <dbokde@redhat.com>
Date:   2014-05-02T02:13:01Z

    Fixed AMQ-5160, allowed wildcard subscriptions for future destinations, added tests for wildcard authorization, fixed consumer and producer AdvisoryTopic names for composite destinations by replacing ',' with '&sbquo;'

----
;;;","02/May/14 07:26;surfnerd;Thanks [~dhirajsb] for the patch. I just tried it.

I see some weird behaviour:
1. When admin publishes , all the clients receive the message. Disregarding Authorization. ( If they have subscribed to wildcard)
2. Sometimes it shows not allowed to subscribe ""+"" wildcard. Sometimes it works.;;;","02/May/14 15:30;dhirajsb;Hi Surf, 

Sorry if you have already done it, but did you test with a fresh activemq data directory? Older un-authorized subscriptions in broker store could cause weird behavior like you describe. Also, can you share your test code as a JUnit test case? 

Retained message behavior is still not sorted out, the patch should only affect non-retained messages. 

Regards,
Dhiraj. ;;;","04/May/14 05:55;surfnerd;Hi [~dhirajsb] ,

Sorry I don't have JUnit test case. I normally try with Mosquito python client.
Yes. I cleaned data directory and weird behaviour is gone !

As you indicated, retained messages still don't follow authorization. Do you need any help in that direction ?;;;","05/May/14 08:23;dejanb;Patch applied. Thanks Dhiraj. I'll leave the issue open until retained messages are sorted.;;;","06/May/14 09:47;dejanb;Added a test for the remaining retained messages issue

https://fisheye6.atlassian.com/changelog/activemq-git?cs=64baf092f073f8c2256a2f2ed704f708562d65a5;;;","06/May/14 10:53;dejanb;I was looking a bit more into this. The problem is that we're managing these retained messages in the mqtt filter and sending it directly to the subscription. So it buy-passes all broker interceptors (including security ones). I think the better option would be to reuse subscription recovery policy mechanism

http://activemq.apache.org/subscription-recovery-policy.html

and adapt it for mqtt use-cases. I'll take a stub at refactoring this.;;;","06/May/14 20:43;dhirajsb;[~dejanb] How are you planning on adding the MQTT retained message recovery policy? In theory it should be added on the fly from the MQTT protocol converter when an MQTT client sends a message to a Topic. Also, if another recovery policy exists on the Topic, then the MQTT policy should act in parallel with it. What do you think? 
In general I like the idea of the recovery policy, since it would allow non-MQTT connections to receive retained messages too. 

Meanwhile, I opened a pull request https://github.com/apache/activemq/pull/21 to add authorization for retained messages with the current approach. 
;;;","07/May/14 01:51;surfnerd;Hey [~dhirajsb] 
I got this error in your last retained message fix.

MQTTTransportFactory.java:[57,20] error: unreported exception Exception; must be caught or declared to be thrown

Can you please verify ?;;;","07/May/14 06:55;dhirajsb;[~surfnerd], I pushed a new commit in the PR to resolve that issue. Not sure why it didn't get caught the first time by IntelliJ Idea when I was testing it before sending the PR. ;;;","07/May/14 12:09;dejanb;Hi Dhiraj, here's the patch that implements retained messages using subscription recovery. Here, Topic is using LastImageSubscriptionRecoveryPolicy by default, with the filter to cache only message with specified header (which we set in mqtt filter).
The thing that still needs to be investigated is handling of duplicate subscriptions (as we can't do nothing anymore, but unsubscribe/subscribe to get retained messages). There's a test failing due to this and I need to see how we can fix that. Anyhow, I think this approach is more natural as the message will go through the whole stack of broker interceptors (and also allow retained message feature in jms land). But it still needs some work.;;;","07/May/14 23:09;surfnerd;[~dhirajsb]
I just tried your patch again. Now it is showing different error.

[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:2.
5.1:compile (default-compile) on project activemq-mqtt: Compilation failure: Com
pilation failure:
[ERROR] bootstrap class path not set in conjunction with -source 1.6
[ERROR] MQTTProtocolConverter.java:[399,55] error: cannot find symbol
[ERROR] symbol:   class TransportConnectionListener
[ERROR] location: class TransportConnection
[ERROR] MQTTProtocolConverter.java:[400,50] error: cannot find symbol
[ERROR] -> [Help 1]
;;;","08/May/14 02:09;githubbot;GitHub user dhirajsb opened a pull request:

    https://github.com/apache/activemq/pull/22

    Partial fix for AMQ-5160, attempts to resolve retained messages using su...

    ...bscription recovery policy, but fails to resend retained messages for duplicate subscriptions

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/dhirajsb/activemq AMQ5160.policy

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/22.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #22
    
----
commit 3d8b79c6e34020ba12ea4b222af99753790955cf
Author: Dhiraj Bokde <dhirajsb@yahoo.com>
Date:   2014-05-08T02:05:36Z

    Partial fix for AMQ-5160, attempts to resolve retained messages using subscription recovery policy, but fails to resend retained messages for duplicate subscriptions

----
;;;","08/May/14 02:15;dhirajsb;Hi [~dejanb], I took a look at the patch and fixed a couple of issues with it and have submitted a new PR https://github.com/apache/activemq/pull/22. I created a new policy, which ensures that retained message policy won't get accidentally removed if user sets another policy. It also makes sure that existing subscriptions don't receive messages with the retained flag set, only new subscriptions do. However, its still not complete. 

It still has the problem of not being able to resend Retained messages for duplicate subscriptions. I don't see any way of being able to do that short of the approach you took in your patch to remove the existing subscription and create it again. But this goes against MQTT-3.8.4-3, which says the subscription must NOT be interrupted, i.e. pending messages should not be lost. So, recreating the sub breaks the test that looks for pending messages, and not recreating the sub breaks another test that looks for resent retained messages. 

From what I figure so far, a possible solution would be the hybrid of my earlier PR https://github.com/apache/activemq/pull/21 (which walks 'up' the filter chain and finds the required SecurityContext to perform authorization in the MQTTProtocolConverter), and a RetainedMessageSubscriptionRecoveryPolicy to let non-MQTT clients also receive Retained messages (which is filtered out in the MQTTProtocolConverter so MQTT clients don't receive duplicates). 

Unless you can think of some trick to resend retained messages for a duplicate sub without removing it, I don't see any other way of being able to make it work for both MQTT and non-MQTT clients. ;;;","08/May/14 02:18;dhirajsb;[~surfnerd], you need to rebuild the module activemq-broker too. BTW, don't combine PR 21 and 22, since they are alternative solutions to this problem. PR 21 works for MQTT clients only, and 22 breaks some MQTT tests. ;;;","08/May/14 09:00;surfnerd;[~dhirajsb] Thanks..I rebuilt whole project and it worked !

On the other side, MQTT WS is not receiving messages at all ! (publish works fine)

jvm 1    |  WARN | Transport Connection to: MQTTSocket_1440179655 failed: java.io.IOException: org.apache.activemq.transport.ws.MQTTSocket cannot be cast to org.apache.activemq.transport.TransportFilter;;;","08/May/14 15:19;dhirajsb;Hi [~surfnerd], sorry about that, I missed the fact that MQTTSocket implements TransportSupport and not TransportFilter. I added a couple of more commits to PR21, can you test them for MQTT WS? ;;;","10/May/14 04:01;surfnerd;Hey [~dhirajsb] Thanks a lot. It is working on WS and MQTT both.

One another weird behaviour( Can't find the reason and might not be related to this JIRA!)
Steps to recreate :
1. Download files that i uploaded
2. Connect to broker with two_user
3. Take another client and connect to broker with one_admin and subscribe to #
4. Publish in two_user

You will see message leaked to admin. Now if you connect to one_admin first then it wont happen !!;;;","13/May/14 20:20;dhirajsb;Hi Surf,

I had a discussion with Dejan about the other option of using Retroactive consumers, and I believe I have come up with a solution in PR22 that works elegantly for both MQTT and JMS clients. 

Can you test PR-22 with your test client and verify that it works? Since it includes major changes to MQTT transport and minor changes to Broker core classes, it should be thoroughly tested and validated before being applied. 

Regards,
Dhiraj. ;;;","16/May/14 21:37;dhirajsb;Hi [~surfnerd], I've added more commits to PR-22 to fix durable subscriptions. The retained message test is also more elaborate. Hopefully this will be last change. 

Please let us know whether PR-22 works in your tests so it can be merged into Apache trunk. 

Thanks,
Dhiraj. ;;;","17/May/14 16:55;surfnerd;[~dhirajsb] Sorry for late reply.
I will definitely test and get back to you today. PR 22 looks more robust.;;;","18/May/14 17:23;githubbot;Github user dhirajsb closed the pull request at:

    https://github.com/apache/activemq/pull/21
;;;","18/May/14 18:00;surfnerd;Hey [~dhirajsb]

It is working good. I am checking 5187 from pull 24 though.

Thanks;;;","19/May/14 17:08;dhirajsb;Hi [~surfnerd],

Thanks for validating PR22. If you tested with PR24 that should be good, since it includes commits from PR22. We could just as well apply PR24 directly to ActiveMQ trunk. Also, are you testing Virtual Topics too, it is a pretty cool feature I added. I've written a post about it at http://rockablogbaby.blogspot.com/2014/05/scalable-iot-integration-using-apache.html

Regards,
Dhiraj. ;;;","26/May/14 09:29;dejanb;I applied PR22. Thanks Dhiraj for the contributions.

All we need now is to document this new feature (http://activemq.apache.org/subscription-recovery-policy.html).;;;","09/Jun/14 14:40;dhirajsb;Hi Dejan, did you also apply the patch for AMQ-5187? That one is needed to support virtual topics for MQTT. ;;;","09/Jun/14 15:44;dejanb;Hi Dhiraj,

I didn't, I thought there's some more work left to be done there. Will do it next.;;;","20/Jun/14 16:13;surfnerd;Hi [~dhirajsb] and [~dejanb],

Is 5187 patch applied ?
;;;","12/Sep/14 16:28;dhirajsb;Hi Surf, AMQ-5187 has been applied. 
;;;","11/Feb/15 10:43;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/22
;;;",,,,,
STOMP browse gets null pointer exception if ACK mode is not AUTO,AMQ-5159,12710062,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,23/Apr/14 15:30,23/Apr/14 15:34,14/Jul/23 05:44,23/Apr/14 15:34,5.9.0,5.9.1,,,,,,,,5.10.0,,,,STOMP,,,,,0,,,,,,If a stomp client subscribes as a Queue Browser but doesn't request the auto acknowledge mode then a NullPointerException is triggered when the end of Browse message is sent.  ,,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,388384,,,Wed Apr 23 15:34:44 UTC 2014,,,,,,,,,,,"0|i1uwiv:",388639,,,,,,,,,,,,,,,,,,,,,"23/Apr/14 15:34;tabish;Fixed on trunk;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Multiple tests using durable subs are failing,AMQ-5156,12710037,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,kearls,kearls,23/Apr/14 13:27,24/Apr/14 09:55,14/Jul/23 05:44,24/Apr/14 09:55,,,,,,,,,,5.10.0,,,,,,,,,0,,,,,,"I'll look into this further, but the following tests have recently started failing:

org.apache.activemq.bugs.AMQ4413Test.testDurableSubMessageLoss
org.apache.activemq.bugs.DurableConsumerTest.testConcurrentDurableConsumer {useDedicatedTaskRunner=true}
org.apache.activemq.bugs.DurableConsumerTest.testConcurrentDurableConsumer {useDedicatedTaskRunner=false}
org.apache.activemq.store.jdbc.JDBCMessagePriorityTest.testDurableSubsReconnect {dispatchAsync=false, useCache=true, prefetchVal=1000}
org.apache.activemq.store.jdbc.JDBCMessagePriorityTest.testDurableSubsReconnect {dispatchAsync=false, useCache=false, prefetchVal=1000}
org.apache.activemq.store.kahadb.KahaDBMessagePriorityTest.testDurableSubsReconnect {dispatchAsync=false, useCache=true, prefetchVal=1000}
org.apache.activemq.store.kahadb.KahaDBMessagePriorityTest.testDurableSubsReconnect {dispatchAsync=false, useCache=false, prefetchVal=1000}
org.apache.activemq.usecases.DurableConsumerCloseAndReconnectTcpTest.testDurableSubscriberReconnectMultipleTimes
org.apache.activemq.usecases.DurableConsumerCloseAndReconnectTest.testDurableSubscriberReconnectMultipleTimes
org.apache.activemq.usecases.DurableSubscriptionOfflineTest.testOrderOnActivateDeactivate",,gtully,kearls,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5146,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,388359,,,Thu Apr 24 09:55:04 UTC 2014,,,,,,,,,,,"0|i1uwdb:",388614,Regression,Unit Test Broken,,,,,,,,,,,,,,,,,,,"24/Apr/14 08:22;kearls;Gary, it looks like these are failing because of fad1dd0f1727af8ce6e0d05a51c32cc63f658e24

;;;","24/Apr/14 09:52;gtully;predelivery max redeliveries check should be confined to transacted sessions;;;","24/Apr/14 09:55;gtully;resolved in http://git-wip-us.apache.org/repos/asf/activemq/commit/f70dc743

check should have been confined to transacted sessions;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Heartbeat fails in STOMP over WebSockets,AMQ-5155,12709955,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,bergamot,bergamot,23/Apr/14 07:16,11/May/15 23:37,14/Jul/23 05:44,28/Apr/15 22:11,5.10.0,5.9.1,,,,,,,,5.12.0,,,,,,,,,12,,,,,,"From AMQ-4740:
I receive the following error after establishing a connection and heartbeat through stomp.js. This seems to occur after the 'PING' is sent.
---------- stomp.js output
<<< CONNECTED
heart-beat:10000,10000
session:ID:localhost.localdomain-45596-1396530920609-2:2
server:ActiveMQ/5.10-SNAPSHOT
version:1.1
send PING every 10000ms 
check PONG every 10000ms 
<<< PONG 
>>> PING 
did not receive server activity for the last 20005ms 
Whoops! Lost connection to ws://172.16.99.73:61614/stomp
--------------------- activemq console ---------------
WARN | Transport Connection to: StompSocket_19548821 failed: java.io.IOException
Exception in thread ""ActiveMQ InactivityMonitor Worker"" java.lang.NullPointerException
at org.apache.activemq.transport.AbstractInactivityMonitor.onException(AbstractInactivityMonitor.java:314)
at org.apache.activemq.transport.AbstractInactivityMonitor$4.run(AbstractInactivityMonitor.java:215)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
at java.lang.Thread.run(Thread.java:722)
WARN | Transport Connection to: StompSocket_19548821 failed: java.io.IOException
Exception in thread ""ActiveMQ InactivityMonitor Worker"" java.lang.NullPointerException
at org.apache.activemq.transport.AbstractInactivityMonitor.onException(AbstractInactivityMonitor.java:314)
at org.apache.activemq.transport.AbstractInactivityMonitor$4.run(AbstractInactivityMonitor.java:215)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
at java.lang.Thread.run(Thread.java:722)

For me it looks as if the StompInactivityMonitor is delivering its events to the wrong Transport, i.e. it needs a ""narrow()"" when setting it up.",,amonaco,bergamot,bharris,bhtek,chadkelly,chris.hinshaw,gigaclood,jprillaman,Peter.Pfort,sebsjo,tabish,tcharl,thezbyg,zgl,zhaiyun,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4740,,,AMQ-4740,,,,,,,,,,,,,,"09/Mar/15 12:34;sebsjo;AMQ-5155-jetty8.diff;https://issues.apache.org/jira/secure/attachment/12703417/AMQ-5155-jetty8.diff","09/Mar/15 12:34;sebsjo;AMQ-5155-jetty9.diff;https://issues.apache.org/jira/secure/attachment/12703418/AMQ-5155-jetty9.diff","18/Apr/15 02:58;chadkelly;firefox_bug_example1.pcapng;https://issues.apache.org/jira/secure/attachment/12726334/firefox_bug_example1.pcapng","21/Apr/15 03:33;chadkelly;patchfile.txt;https://issues.apache.org/jira/secure/attachment/12726768/patchfile.txt",,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,388277,,,Mon May 11 23:37:47 UTC 2015,,,,,,,,,,,"0|i1uvv3:",388532,,,,,,,,,,,,,,,,,,,,,"11/Jun/14 00:53;chadkelly;Someone please help resolve this ticket. The bug described above is still present in 5.9.1. I tried both cases, heartbeat set to 0,0 and 10000,10000. Slightly different buggy behaviors, but it still does not work. Please:
1) download 5.9.1
2) bin/activemq console xbean:examples/conf/activemq-demo.xml
3) open two browsers (firefox/chrome) to http://localhost:8161/demo/websocket/index.html
4) type a few messages over a 5 minute period

WARN | Transport Connection to: StompSocket_1998606381 failed: java.io.IOException
WARN | Transport Connection to: StompSocket_178709817 failed: java.io.IOException
Exception in thread ""ActiveMQ InactivityMonitor Worker"" java.lang.NullPointerException
at org.apache.activemq.transport.AbstractInactivityMonitor.onException(AbstractInactivityMonitor.java:314)
at org.apache.activemq.transport.AbstractInactivityMonitor$4.run(AbstractInactivityMonitor.java:215)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
at java.lang.Thread.run(Thread.java:745)
Exception in thread ""ActiveMQ InactivityMonitor Worker"" java.lang.NullPointerException
at org.apache.activemq.transport.AbstractInactivityMonitor.onException(AbstractInactivityMonitor.java:314)
at org.apache.activemq.transport.AbstractInactivityMonitor$4.run(AbstractInactivityMonitor.java:215)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
at java.lang.Thread.run(Thread.java:745)
;;;","11/Jun/14 01:19;tabish;Why not try and create a unit test and submit a patch that fixes it?;;;","31/Dec/14 19:56;tcharl;Hi,
Can we pull up the Priority, as it is a real blocker for websocket users? I really hope that it will be corrected in 5.10.1: our enterprise stack is stuck with 5.8 because of it.
@Timothy, I'm sorry, I tried but the AMQ internals are not so easy to understand, I'm sure that it'll not be so difficult for an expert like you, but it's really red hairing for noobs like me...

Regards,;;;","05/Jan/15 00:31;zhaiyun;Can we pull up the Priority
-> we all think so.;;;","05/Mar/15 11:49;gigaclood;Hi, 
I have created a patch for activemq 5.9.1 version that seems to work.

These are my changes for org.apache.activemq.transport.ws.StompSocket:

1. in doStart() I set transportListener to remove NPE:
{code}
@Override
    protected void doStart() throws Exception {
        socketTransportStarted.countDown();
		stompInactivityMonitor.setTransportListener(this.getTransportListener());
    }
{code}

2. in onMessage(String data) I managed keepalive frame:
{code}
if (!transportStartedAtLeastOnce()) {
            LOG.debug(""Waiting for StompSocket to be properly started..."");
            try {
                socketTransportStarted.await();
            } catch (InterruptedException e) {
                LOG.warn(""While waiting for StompSocket to be properly started, we got interrupted!! Should be okay, but you could see race conditions..."");
            }
        }
        try {
	      if (data!=null && data.equals(""\n""))
		{
		    sendToActiveMQ(new KeepAliveInfo());
		}
	      else {
		   protocolConverter.onStompCommand((StompFrame)wireFormat.unmarshal(new ByteSequence(data.getBytes(""UTF-8""))));
		}
        } catch (Exception e) {
            onException(IOExceptionSupport.create(e));
        }
{code}

Can I share with you my code in a better way?
Thanks
Claudio Parodi;;;","09/Mar/15 12:34;sebsjo;Hi Claudio,

I tried your code with ActiveMQ 5.11.1 and it seems to work fine now, at least with the stomp.js example chat test.
Made some diffs for the 5.11.1 version that I'll attach to this ticket.

Thanks!;;;","25/Mar/15 05:53;amonaco;I've tried every version >= 5.9.1 to 5.12-SNAPSHOT and I can reproduce the reported issue. I guess for now some people will have to stick to 5.8 for production. This is a bug that affects everyone using Websockets and it's been open for almost a year :|;;;","31/Mar/15 20:42;tabish;Applied a slightly tweaked version of the patch, thanks for looking into it.  ;;;","02/Apr/15 07:13;Peter.Pfort;Hi Timothy,
your change in version 5.12 isn't complete. You forget the ""else"" before the ""onStompCommand ..."", like in the snippet from Claudio.

The ""(StompFrame)wireFormat.unmarshal"" throw an EOFException, because the KeepAlive command isn't handled in it. Then the session is marked as failed.

Please complete the code.

Peter;;;","02/Apr/15 13:11;tabish;Added a fix, let me know if it works for you.;;;","07/Apr/15 08:04;Peter.Pfort;It's works now.

Thanks;;;","09/Apr/15 17:05;chadkelly;Even though the above bug was fixed, a related bug now occurs. This may deserve a new ticket? Can someone confirm the following:
1) Download a recent 5.12 SNOPSHOT that works and contains the patch above. I used https://repository.apache.org/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.12-SNAPSHOT/apache-activemq-5.12-20150407.222248-96-bin.tar.gz
2) bin/activemq console xbean:examples/conf/activemq-demo.xml
3) open two browsers (firefox/chrome) to http://localhost:8161/demo/websocket/index.html
4) In a single browser window, type 1, 2, 3, ... 9 with a return/enter after each number 
5) Half of the chat ends up in one browser, and half in the other. 

This bug causes the receiving browser to only get 1/2 the chats. Could this bug relate to the new added code that uses ""/n""?

Can someone confirm this?;;;","09/Apr/15 17:14;tabish;This is not a bug, the default address  string in that example is: /queue/test which means that the messages are load balanced across connections, try it with /topic/test and it should work as expected. ;;;","09/Apr/15 17:28;chadkelly;You are correct, using /topic/test works as expected. I performed various tests and no issues to report.
Thank you very much for solving this bug. This is the one feature I needed in order to use ActiveMQ. I appreciate everyone's contribution in resolving this problem and look forward to the release of 5.12. ;;;","09/Apr/15 17:40;tabish;Keep testing it and report back if you find any other gremlins.  ;;;","18/Apr/15 03:01;chadkelly;REVISION
Can someone confirm this bug occurs in their environment? If so, this bug relates to AMQ-5155 and AMQ-4674. I recommend that the ActiveMQ WebSocket example should work as is, regardless of using parameters like transport.hbGracePeriodMultiplier. Using Fedora/Firefox would cause the bug 50% of the times after 50-500 PINGs, but NO bug to report in Fedora/Chrome because of timing conditions.

The bug manifests itself in ""/activemq-client/src/main/java/org/apache/activemq/transport/AbstractInactivityMonitor.java"" when the timing of onCommand() (generated by the web browser PING or message) crosses over the timing of readCheck(). In other words, the 10 second timing of onCommand() via web browser's PING occurs before  the 10 second thread timing of readCheck(), but with a small time drift, the timing of readCheck() starts to occur before onCommand(). At this exact cross over point,  readCheck() will occur twice, and this will cause the bug. In the log below, the timing sequence is:
17:05:21,162 | DEBUG | onCommand()
17:05:21,162 | DEBUG | readCheck()
17:05:31,162 | DEBUG | readCheck()
17:05:31,164 | DEBUG | onCommand()

Opening Web Socket...
Web Socket Opened...
>>> CONNECT
accept-version:1.1,1.0
heart-beat:10000,10000
login:guesttgg
passcode:guest

<<< CONNECTED
server:ActiveMQ/5.12-SNAPSHOT
heart-beat:10000,10000
session:ID:c1-39862-1429234022608-4:2
version:1.1

connected to server ActiveMQ/5.12-SNAPSHOT
send PING every 10000ms
check PONG every 10000ms
connected to Stomp
>>> SUBSCRIBE
id:sub-0
destination:/queue/test (same behavor for /topic/test)

<<< PONG
>>> PING
... 395 times this case, but 50-500 times in general
<<< PONG
>>> PING
<<< PONG
>>> PING
>>> PING
>>> PING
did not receive server activity for the last 20003ms
Whoops! Lost connection to ws://localhost:61614/stomp


INFO version of data/activemq.log
2015-04-17 15:49:12,750 | WARN  | Transport Connection to: StompSocket_919027643 failed: org.apache.activemq.transport.InactivityIOException: Channel was inactive for too (>10000) long: StompSocket_919027643 | org.apache.activemq.broker.TransportConnection.Transport | ActiveMQ InactivityMonitor Worker

DEBUG with special coding version of data/activemq.log
2015-04-19 17:05:21,162 | DEBUG | onCommand() | org.apache.activemq.transport.AbstractInactivityMonitor | qtp1493158871-33
2015-04-19 17:05:21,162 | DEBUG | 10000ms elapsed since last read check. | org.apache.activemq.transport.AbstractInactivityMonitor | ActiveMQ InactivityMonitor ReadCheckTimer
2015-04-19 17:05:21,162 | DEBUG | readCheck() | org.apache.activemq.transport.AbstractInactivityMonitor | ActiveMQ InactivityMonitor ReadCheckTimer
2015-04-19 17:05:31,161 | DEBUG | WriteChecker: 10000ms elapsed since last write check. | org.apache.activemq.transport.AbstractInactivityMonitor | ActiveMQ InactivityMonitor WriteCheckTimer
2015-04-19 17:05:31,161 | DEBUG | Running WriteCheck[StompSocket_1693369093] | org.apache.activemq.transport.AbstractInactivityMonitor | ActiveMQ InactivityMonitor Worker
2015-04-19 17:05:31,162 | DEBUG | 10000ms elapsed since last read check. | org.apache.activemq.transport.AbstractInactivityMonitor | ActiveMQ InactivityMonitor ReadCheckTimer
2015-04-19 17:05:31,162 | DEBUG | readCheck() | org.apache.activemq.transport.AbstractInactivityMonitor | ActiveMQ InactivityMonitor ReadCheckTimer
2015-04-19 17:05:31,163 | DEBUG | No message received since last read check for org.apache.activemq.transport.ws.jetty8.StompSocket@64eec305. Throwing InactivityIOException. | org.apache.activemq.transport.AbstractInactivityMonitor | ActiveMQ InactivityMonitor ReadCheckTimer
2015-04-19 17:05:31,164 | DEBUG | Running ReadCheck[StompSocket_1693369093] | org.apache.activemq.transport.AbstractInactivityMonitor | ActiveMQ InactivityMonitor Worker
2015-04-19 17:05:31,164 | DEBUG | onCommand() | org.apache.activemq.transport.AbstractInactivityMonitor | qtp1493158871-30;;;","21/Apr/15 03:33;chadkelly;/activemq-client/src/main/java/org/apache/activemq/transport/AbstractInactivityMonitor.java;;;","21/Apr/15 03:56;chadkelly;Hi Timothy,
The included patch will give the read check thread a 2nd chance (via 1 second) before exception and termination. It also designs the read check thread and write check thread to be nearly identical. I will implement other approaches should this one NOT be satisfactory. The attached patchfile.txt is for “/activemq-client/src/main/java/org/apache/activemq/transport/AbstractInactivityMonitor.java”.

I believe there is a fundamental design problem with AMQ heartbeats, because the timing of web browsers heartbeats has a cadence equal to the timing for AMQ to check heartbeats. Eventually, due to very small changes in time, the web browser heartbeat can eventually cross over AMQ checks for heartbeats. In the included example, the web browser client is sending at the rate of 10 seconds, and AMQ server is also checking at the rate of 10 seconds. Longer term testing, with a variety of websocket enabled browsers, show that the heartbeats can cross over. ;;;","21/Apr/15 23:59;chadkelly;Please retest 5.12-SNAPSHOT in your environment using Firefox. I want to confirm that the problem still persists in other environments under more extensive testing. Patch included above (patchfile.txt) has not failed in 5.12-SNAPSHOT for 32+ hours of testing. The websocket chat example using the current SNAPHOT will fail for me in Fedora 21/Firefox.

1) download the latest 5.12-SNAPSHOT at https://repository.apache.org/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.12-SNAPSHOT/
2) bin/activemq start xbean:examples/conf/activemq-demo.xml
3) open three instances of Firefox (because it has greater time variation) to http://localhost:8161/demo/websocket/index.html and view for 20 minutes.;;;","28/Apr/15 19:12;tabish;Will look into reported disconnects when heartbeats are flowing.  ;;;","28/Apr/15 21:25;tabish;The main problem here is that the StompSocket is not providing a valid received counter value for the inactivity monitor to track continuing read progress, and a few other nits that needs fixing.  I also looks like there might be a memory leak in play also but I'm still investigating that.;;;","28/Apr/15 22:11;tabish;Added fix that ensures the inactivity monitor can properly determine heartbeat and normal STOMP traffic when performing read checks. ;;;","29/Apr/15 18:47;chadkelly;Timothy, I will test out your patch on May 9-11 and report back. Thank you very much for your contribution.;;;","08/May/15 19:52;chris.hinshaw;Verified that the issue appears to be resolved with the 5.12 snapshot from May 8th. Thanks you very very much.;;;","08/May/15 19:53;Peter.Pfort;Guten Tag, vielen Dank für Ihre Nachricht! Ich bin vom 01.05.2015 bis zum 25.05.2015 nicht im Büro. Ihre Emails werden in dieser Zeit weder gelesen noch weitergeleitet. In dringenden Fällen wenden Sie sich bitte an den alfa Support (+49 (0) 6074 / 3104 - 333). Nach meiner Rückkehr werde ich Ihre Nachricht umgehend beantworten. Mit freundlichen Grüßen Best regards Peter Pfort
;;;","11/May/15 23:21;chadkelly;Timothy, I performed various tests and no issues to report. 30+ hours of testing with 6 concurrent web browser connections  using Firefox/Chrome.;;;","11/May/15 23:37;tabish;Great, thanks for reporting back.  ;;;",,,,,,,,,,,,,,
LevelDB does not store subscribedDestination for durable subscriptions,AMQ-5153,12709191,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,badavis,badavis,18/Apr/14 00:51,19/Apr/16 13:56,14/Jul/23 05:44,19/Apr/16 13:55,5.9.1,,,,,,,,,5.13.3,5.14.0,,,LevelDB,,,,,1,,,,,,LevelDB store does not save the subscribedDestination of the SubscriptionInfo for a durable subscription.  This is important because when a restart happens you have no clue if this durable subscription goes with the topic or to a different topic (because of wildcarding).,,badavis,brianjohnson,ceposta,jira-bot,osmanrafiq,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6254,,,,,,,,,,,,,,,,,,,,,,,,"15/Apr/16 08:04;osmanrafiq;AMQ5153LevelDBSubscribedDestTest.java;https://issues.apache.org/jira/secure/attachment/12798917/AMQ5153LevelDBSubscribedDestTest.java",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,387514,,,Tue Apr 19 13:55:40 UTC 2016,,,,,,,,,,,"0|i1ur73:",387776,,,,,,,,,,,,,,,,,,,,,"19/Aug/14 14:42;tabish;Do you have a test case or some additional information that would help in investigating this issue?;;;","20/Aug/14 13:13;badavis;Here is how to reproduce the issue:

create a topic testing.durable.>
create a topic testing.durable.test
create a durable on testing.durable.>
create a different durable on testing.durable.test
send message to testing.durable.>

restart broker

when you look at the subscribers all durables are tied to testing.durable.test

this happens because the consumers get added to all matching subscribers creating them in the LevelDB store, but because the store does not store the subscribedDestination on a restart levelDB loses the durable's real topic.

;;;","20/Aug/14 13:28;tabish;Recommend you create a unit test and try it against the latest release. ;;;","20/Apr/15 14:49;ceposta;[~badavis] can you try on a more recent version?
I've committed a unit test here: https://github.com/apache/activemq/commit/01f56d0ca255852bf9c12b889abd8d1297a2b5a9

that shows this works correctly. If you can alter that unit test to show failure, then we can take a closer look.

let us know!;;;","25/Apr/15 03:33;badavis;I did not get enough time to go through your test and change it to show the issue.  I did go through what I did before and reproduced the bug.   I also think I know what is wrong with your test.

If you do the steps I stated on a broker that you can restart (kill the process and bring back a new process) it will show the bug.  I did my test through the web console and the bug is still there on 5.11.1.  The key is restarting the broker.  I believe that is also the issue with your test.  You never get a new broker you reuse a broker, stopping  and starting it.  My guess is the LevelDBPersistentAdapter probably does not get rid of state on the stop of a broker and reuses that state on a start.

Hope this helps.

;;;","15/Apr/16 08:04;osmanrafiq;Hi guys,

We are having an issue related (the same?) to the one [~badavis] is describing on both ActiveMQ 5.11.1 and 5.12.2.

From our loggings it seems that the Level DB adapter somehow replaces the *subscribedDestination* field of SubscriptionInfo with the *desitnation* field.
Before restart (what is being sent to LevelDB):
2016-04-14 15:23:21,601 | DEBUG | alphabet.a store adding subscription: SubscriptionInfo {*subscribedDestination = topic://alphabet.>, destination = topic://alphabet.a*, clientId = CFH.BO.TCS, subscriptionName = alphabet.>, selector = null} | org.apache.activemq.store.LoggingTopicMessageStore | ActiveMQ Transport: tcp:///10.0.6.1:55924@61616

After restart (what broker is reading back from LevelDB):
2016-04-14 15:24:15,774 | DEBUG | Restoring durable subscription: SubscriptionInfo {*subscribedDestination = topic://alphabet.a, destination = null*, clientId = CFH.BO.TCS, subscriptionName = alphabet.>, selector = null} | org.apache.activemq.broker.region.TopicRegion

I have attached an updated version of the previously mentioned unit test to  verify the issue hopefully.

Note that the bug alone is not that severe as the TopicRegion correctly replaces the restored faulty subscription when reconnecting the durable subscriber. 

However, if the broker is being used with broker plugins (especially the authorization/authentication plugins) then the TopicRegion is not able to replace the faulty subscription and you end up having a ghost subscriber.;;;","19/Apr/16 13:54;jira-bot;Commit b027e655538226b56f1fe277a426e0df41501fc6 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b027e65 ]

https://issues.apache.org/jira/browse/AMQ-5153
https://issues.apache.org/jira/browse/AMQ-6254

Store the original subscribed destination along with the target
destination in the subscription info object to ensure that wildcard
subscriptions remain linked.  ;;;","19/Apr/16 13:54;jira-bot;Commit ad07ee4612bd537ad4a441464ded701d98b0fcc1 in activemq's branch refs/heads/activemq-5.13.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=ad07ee4 ]

https://issues.apache.org/jira/browse/AMQ-5153
https://issues.apache.org/jira/browse/AMQ-6254

Store the original subscribed destination along with the target
destination in the subscription info object to ensure that wildcard
subscriptions remain linked.
(cherry picked from commit b027e655538226b56f1fe277a426e0df41501fc6)
;;;","19/Apr/16 13:55;tabish;New subscriptions will now properly store the subscribed destination;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Potential deadlock ,AMQ-5149,12708762,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,16/Apr/14 13:42,16/Apr/14 13:45,14/Jul/23 05:44,16/Apr/14 13:45,5.9.1,,,,,,,,,5.10.0,,,,,,,,,0,,,,,,"There's a potential for deadlock between transaction completion with optimizeDispatch=true and periodic message expiry, while checkpoint is in progress.
Contention is over pagedInPendingDispatchLock and checkpointLock.
The problem is that we're expiring messages under the pagedInPendingDispatchLock, so the solution is to change this and use the same pattern as we do with pagedInMessages expiry.
Using optimizedDispatch=false or expireMessagesPeriod=0 will workaround the issue.
Relevant thread traces
{code}""ActiveMQ Journal Checkpoint Worker"" daemon prio=10 tid=0x00007f0bb8b9d000 nid=0x169b waiting on condition [0x00007f0ba6e95000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x00000000e1c4c4d8> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:834)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:867)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1197)
	at java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock.lock(ReentrantReadWriteLock.java:945)
	at org.apache.activemq.store.kahadb.MessageDatabase.checkpointUpdate(MessageDatabase.java:1366)
	at org.apache.activemq.store.kahadb.MessageDatabase.checkpointCleanup(MessageDatabase.java:840)
	at org.apache.activemq.store.kahadb.MessageDatabase$3.run(MessageDatabase.java:317)

ActiveMQ Broker[localhost] Scheduler"" daemon prio=10 tid=0x00007f0bbae73800 nid=0x1652 waiting on condition [0x00007f0ba7197000]
  java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x00000000e1c4c4d8> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:834)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireShared(AbstractQueuedSynchronizer.java:964)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireShared(AbstractQueuedSynchronizer.java:1282)
	at java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock.lock(ReentrantReadWriteLock.java:731)
	at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:886)
	at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:869)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.removeMessage(KahaDBStore.java:444)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.removeAsyncMessage(KahaDBStore.java:416)
	at org.apache.activemq.store.kahadb.KahaDBTransactionStore.removeAsyncMessage(KahaDBTransactionStore.java:495)
	at org.apache.activemq.store.kahadb.KahaDBTransactionStore$1.removeAsyncMessage(KahaDBTransactionStore.java:182)
	at org.apache.activemq.broker.region.Queue.acknowledge(Queue.java:850)
	at org.apache.activemq.broker.region.Queue.removeMessage(Queue.java:1616)
	at org.apache.activemq.broker.region.Queue.removeMessage(Queue.java:1608)
	at org.apache.activemq.broker.region.Queue.messageExpired(Queue.java:1674)
	at org.apache.activemq.broker.region.Queue.messageExpired(Queue.java:1664)
	at org.apache.activemq.broker.region.Queue.doBrowse(Queue.java:1037)
	at org.apache.activemq.broker.region.Queue.expireMessages(Queue.java:836)
	at org.apache.activemq.broker.region.Queue.access$100(Queue.java:98)
	at org.apache.activemq.broker.region.Queue$2.run(Queue.java:138)
	at org.apache.activemq.thread.SchedulerTimerTask.run(SchedulerTimerTask.java:33)
	at java.util.TimerThread.mainLoop(Timer.java:555)
	at java.util.TimerThread.run(Timer.java:505)

""ActiveMQ NIO Worker 76408"" daemon prio=10 tid=0x00007f0b98db3800 nid=0x5241 waiting on condition [0x00007f0ba8bb1000]
  java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x00000000e1c6ff98> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:834)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireShared(AbstractQueuedSynchronizer.java:964)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireShared(AbstractQueuedSynchronizer.java:1282)
	at java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock.lock(ReentrantReadWriteLock.java:731)
	at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1475)
	- locked <0x00000000e1c70130> (a java.lang.Object)
	at org.apache.activemq.broker.region.Queue.wakeup(Queue.java:1709)
	at org.apache.activemq.broker.region.PrefetchSubscription$2.afterCommit(PrefetchSubscription.java:439)
	at org.apache.activemq.transaction.Transaction.fireAfterCommit(Transaction.java:117)
	at org.apache.activemq.transaction.Transaction.doPostCommit(Transaction.java:185)
	at org.apache.activemq.transaction.Transaction$2.call(Transaction.java:54)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)
	at java.util.concurrent.FutureTask.run(FutureTask.java:166)
	at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:1132)
	at org.apache.activemq.store.kahadb.MessageDatabase$10.visit(MessageDatabase.java:1003)
	at org.apache.activemq.store.kahadb.data.KahaCommitCommand.visit(KahaCommitCommand.java:130)
	at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:985)
	at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:892)
	at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:869)
	at org.apache.activemq.store.kahadb.KahaDBTransactionStore.commit(KahaDBTransactionStore.java:294)
	at org.apache.activemq.transaction.XATransaction.storeCommit(XATransaction.java:85)
	at org.apache.activemq.transaction.XATransaction.commit(XATransaction.java:75)
	at org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:263)
	at org.apache.activemq.broker.BrokerFilter.commitTransaction(BrokerFilter.java:97)
	at org.apache.activemq.broker.BrokerFilter.commitTransaction(BrokerFilter.java:97)
	at org.apache.activemq.broker.BrokerFilter.commitTransaction(BrokerFilter.java:97)
	at org.apache.activemq.broker.BrokerFilter.commitTransaction(BrokerFilter.java:97)
	at org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:103)
	at org.apache.activemq.broker.TransportConnection.processCommitTransactionTwoPhase(TransportConnection.java:465)
	at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:102)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.nio.NIOTransport.serviceRead(NIOTransport.java:138)
	at org.apache.activemq.transport.nio.NIOTransport$1.onSelect(NIOTransport.java:69)
	at org.apache.activemq.transport.nio.SelectorSelection.onSelect(SelectorSelection.java:94)
	at org.apache.activemq.transport.nio.SelectorWorker$1.run(SelectorWorker.java:119)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722){code}",,dejanb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,387085,,,Wed Apr 16 13:45:44 UTC 2014,,,,,,,,,,,"0|i1uok7:",387348,,,,,,,,,,,,,,,,,,,,,"16/Apr/14 13:45;dejanb;Fixed with http://git-wip-us.apache.org/repos/asf/activemq/commit/e9479275 along with a small refactoring of pagedInMessages (a first step toward more refactorings in this area).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RedeliveryPolicy exceeded for crashing consumer,AMQ-5146,12708506,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,15/Apr/14 12:21,24/Nov/16 16:41,14/Jul/23 05:44,16/Apr/14 14:57,5.9.1,,,,,,,,,5.10.0,,,,JMS client,,,,,0,DLQ,redelivery,redeliveryPolicy,transaction,,"A consumer with a transacted session that dies after receive or in onMessage (due to some of the message content for example), but before the a transaction can complete will continue to receive the message.
The connection will die, the transaction will rollback, the broker will increment the redeliveryCounter and redispatch the message.
However the redeliveryPolicy, which is only checked on rollback (client side) will never kick in.
the result is infinite redelivery with an ever incrementing redeliveryCounter.
It is a reasonable expectation that this message would eventually find its way into the dlq.
The broker redelivery plugin does not help because it is triggered by the client side poison ack. 

Either the broker redelivery plugin can get involved before dispatch, or a client can do a predispatch check.",,gtully,tom_m,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQNET-489,AMQCPP-552,,AMQ-6517,,,,AMQ-5156,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,386829,,,Thu Apr 24 09:55:36 UTC 2014,,,,,,,,,,,"0|i1umzr:",387093,,,,,,,,,,,,,,,,,,,,,"16/Apr/14 14:57;gtully;fixed in http://git-wip-us.apache.org/repos/asf/activemq/commit/fad1dd0f

the redelivery policy is validated before dispatch. If max deliveries is exceeded the message is poison acked and we move on to the next.;;;","24/Apr/14 09:55;gtully;additional refinement to config check to transacted sessions

http://git-wip-us.apache.org/repos/asf/activemq/commit/f70dc743
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
stomp+nio+ssl very slow message sending,AMQ-5144,12708258,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,kibibyte,kibibyte,14/Apr/14 13:30,08/May/14 16:58,14/Jul/23 05:44,08/May/14 16:58,5.9.0,,,,,,,,,5.10.0,,,,STOMP,,,,,0,,,,,,"Hi there 

I have following broker config: 

 <transportConnector name=""stomp"" uri=""stomp+nio+ssl://0.0.0.0:61612?maximumConnections=10000&amp;wireFormat.maxFrameSize=104857600""/>

ACTIVEMQ_OPTS_MEMORY=""-Xms1G -Xmx2G -Dorg.apache.activemq.UseDedicatedTaskRunner=false""


And followind code snippet:

{code}
 @Test
  public void plainStompTest() throws Exception {


    StompConnection sender = new StompConnection();
    StompConnection receiver = new StompConnection();

    System.setProperty(""javax.net.ssl.keyStore"", ""/home/user/.keystore/client.ks"");
    System.setProperty(""javax.net.ssl.trustStore"", ""/home/user/.keystore/client.ts"");
    System.setProperty(""javax.net.ssl.keyStorePassword"", ""changeme"");
    System.setProperty(""javax.net.ssl.trustStorePassword"", ""changeme"");

    SSLSocketFactory factory = (SSLSocketFactory) SSLSocketFactory.getDefault();
    SSLSocket sslsocket1 = (SSLSocket) factory.createSocket(""localhost"", 61612);
    SSLSocket sslsocket2 = (SSLSocket) factory.createSocket(""localhost"", 61612);

    sender.open(sslsocket1);
    receiver.open(sslsocket2);

    sender.connect(""admin"", ""admin"");
    receiver.connect(""admin"", ""admin"");

    receiver.subscribe(""/queue/receiver"");
    Thread.sleep(1000); // wait until subscribed

    char[] data = new char[toSendBytesMsgSize];
    Arrays.fill(data, 'a');

    long startTime = System.currentTimeMillis();
    logger.info(""Sending message - size "" + toSendBytesMsgSize / 1024 + "" kb"");

    sender.send(""/queue/receiver"", new String(data));
    StompFrame frame = receiver.receive(0);

    byte[] body = frame.getBody().getBytes();

    long stopTime = System.currentTimeMillis();
    long elapsedTime = stopTime - startTime;

    logger.info(""Reply received"");

    logger.info(""Execution time = "" + elapsedTime / 1000 + "" seconds"" + ""["" + elapsedTime + "" ms]"");

    assertEquals(toSendBytesMsgSize, body.length);


  }
{code}


Results for stomp+ssl : 
{code}
Sending message - size 1000 kb
Reply received
 Execution time = 0 seconds[221 ms]
{code}

Results for stomp+nio :  (i modified test client to not use ssl socket)
{code}
Sending message - size 1000 kb
Reply received
 Execution time = 0 seconds[399 ms]
{code}

Results for stomp+nio+ssl : 
{code}
Sending message - size 1000 kb
Reply received
Execution time = 54 seconds[54162 ms]
{code}


So from above we see that for stomp+nio+ssl it takes very long time to send a message. 

Anyone knows whats wrong ?

","Linux  3.11.0-15-generic #23-Ubuntu SMP Mon Dec 9 18:17:04 UTC 2013 x86_64 x86_64 x86_64 GNU/Linuxjava version ""1.7.0_45""
Java(TM) SE Runtime Environment (build 1.7.0_45-b18)
Java HotSpot(TM) 64-Bit Server VM (build 24.45-b08, mixed mode
",kibibyte,tabish,tmielke,tom_m,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,386581,,,Thu May 08 16:58:07 UTC 2014,,,,,,,,,,,"0|i1ulgn:",386845,,,,,,,,,,,,,,,,,,,,,"28/Apr/14 19:45;tabish;Have you tried using a profiler to see where the time is being spent on the stomp+nio+ssl case vs the others, perhaps that will shed some light on things.  ;;;","05/May/14 19:59;tabish;I'd recommend looking at the STOMP unit tests and trying to construct a little performance measuring test we can use to track this down.  ;;;","08/May/14 16:58;tabish;Found the trouble spot and fixed it, should fix issues across all protocols with their NIO+SSL performance. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Message expiry that is done as part of a removeSubscription command should not use the clients credentials.,AMQ-5141,12707921,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,tmielke,tmielke,11/Apr/14 11:31,01/Jun/17 10:57,14/Jul/23 05:44,14/Apr/14 15:30,5.9.0,,,,,,,,,5.10.0,,,,Broker,,,,,0,authorization,DLQ,expiry,security,,"If the broker handles a RemoveInfo command it may also kick off a message expiry check for (I presume) any prefetched messages. If messages are to be expired they get sent to ActiveMQ.DLQ by default. See stack trace in next comment.

If the broker is security enabled with authorization turned on and messages get sent to DLQ as a result of the expiry check then the broker uses the client's security context when sending the messages to DLQ. 
This implies the client user needs to have write access to ActiveMQ.DLQ. 

As this may happen with any other client, all client users will require write access to ActiveMQ.DLQ, which may not be appropriate from a security point of view. 

The broker regularly runs an expiry check and uses a broker internal security context for this task. In my opinion this same broker internal security context should be used when expiring messages as part of the RemoveInfo command. The broker should not use the client's security context. 

[1]
The current behavior can raise the following SecurityException if the client user does not have write access to ActiveMQ.DLQ

{code}
2014-04-11 08:11:22,229 | WARN  | 2.38:61201@61616 | RegionBroker | ivemq.broker.region.RegionBroker  703 | 
105 - org.apache.activemq.activemq-osgi - 5.8.0.redhat-60024 | Caught an exception sending to DLQ: Message 
ID:S930A3085-50865-635327964441522304-1:1:363:2:1 dropped=false acked=false locked=true
java.lang.SecurityException: User Test is not authorized to write to: queue://ActiveMQ.DLQ
	at org.apache.activemq.security.AuthorizationBroker.send(AuthorizationBroker.java:197)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.util.BrokerSupport.doResend(BrokerSupport.java:68)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.util.BrokerSupport.resendNoCopy(BrokerSupport.java:38)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.broker.region.RegionBroker.sendToDeadLetterQueue(RegionBroker.java:691)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.broker.BrokerFilter.sendToDeadLetterQueue(BrokerFilter.java:262)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.broker.BrokerFilter.sendToDeadLetterQueue(BrokerFilter.java:262)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.advisory.AdvisoryBroker.sendToDeadLetterQueue(AdvisoryBroker.java:413)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.broker.BrokerFilter.sendToDeadLetterQueue(BrokerFilter.java:262)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.broker.BrokerFilter.sendToDeadLetterQueue(BrokerFilter.java:262)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.broker.MutableBrokerFilter.sendToDeadLetterQueue(MutableBrokerFilter.java:274)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.broker.util.RedeliveryPlugin.sendToDeadLetterQueue(RedeliveryPlugin.java:132)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.broker.BrokerFilter.sendToDeadLetterQueue(BrokerFilter.java:262)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.broker.BrokerFilter.sendToDeadLetterQueue(BrokerFilter.java:262)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.broker.MutableBrokerFilter.sendToDeadLetterQueue(MutableBrokerFilter.java:274)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.broker.region.RegionBroker.messageExpired(RegionBroker.java:659)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.broker.BrokerFilter.messageExpired(BrokerFilter.java:257)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.broker.BrokerFilter.messageExpired(BrokerFilter.java:257)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.advisory.AdvisoryBroker.messageExpired(AdvisoryBroker.java:283)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.broker.BrokerFilter.messageExpired(BrokerFilter.java:257)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.broker.BrokerFilter.messageExpired(BrokerFilter.java:257)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.broker.MutableBrokerFilter.messageExpired(MutableBrokerFilter.java:269)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.broker.BrokerFilter.messageExpired(BrokerFilter.java:257)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.broker.BrokerFilter.messageExpired(BrokerFilter.java:257)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.broker.MutableBrokerFilter.messageExpired(MutableBrokerFilter.java:269)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.broker.region.Queue.messageExpired(Queue.java:1671)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.broker.region.PrefetchSubscription.dispatchPending(PrefetchSubscription.java:648)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.broker.region.PrefetchSubscription.add(PrefetchSubscription.java:162)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.broker.region.Queue.doActualDispatch(Queue.java:1907)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.broker.region.Queue.doDispatch(Queue.java:1834)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.broker.region.Queue.removeSubscription(Queue.java:576)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.broker.region.AbstractRegion.removeConsumer(AbstractRegion.java:380)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.broker.region.RegionBroker.removeConsumer(RegionBroker.java:364)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.broker.jmx.ManagedRegionBroker.removeConsumer(ManagedRegionBroker.java:247)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.broker.BrokerFilter.removeConsumer(BrokerFilter.java:117)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.broker.BrokerFilter.removeConsumer(BrokerFilter.java:117)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.advisory.AdvisoryBroker.removeConsumer(AdvisoryBroker.java:253)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.broker.BrokerFilter.removeConsumer(BrokerFilter.java:117)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.broker.BrokerFilter.removeConsumer(BrokerFilter.java:117)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.broker.MutableBrokerFilter.removeConsumer(MutableBrokerFilter.java:123)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.broker.BrokerFilter.removeConsumer(BrokerFilter.java:117)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.broker.BrokerFilter.removeConsumer(BrokerFilter.java:117)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.broker.MutableBrokerFilter.removeConsumer(MutableBrokerFilter.java:123)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.broker.TransportConnection.processRemoveConsumer(TransportConnection.java:651)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.command.RemoveInfo.visit(RemoveInfo.java:76)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]
	at java.lang.Thread.run(Unknown Source)[:1.6.0_26]
{code}
 
",,dejanb,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6693,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,386244,,,Mon Apr 14 15:30:42 UTC 2014,,,,,,,,,,,"0|i1ujdz:",386509,,,,,,,,,,,,,,,,,,,,,"11/Apr/14 11:34;tmielke;Don't have a Unit test at hand but could build one if time permits.;;;","11/Apr/14 12:13;tmielke;Here are two possible workarounds:
1)
The quick solution is to grant write permissions to user 'Test' but potentially other users could be affected as well and may also need write permissions for ActiveMQ.DLQ. In the worst case all users may require write permissions to ActiveMQ.DLQ.

2)
In case you don't care about these expired messages you can also configure the broker to simply discard expired messages using this configuration within the policyEntry config

{code:xml}
<deadLetterStrategy>
  <sharedDeadLetterStrategy processExpired=""false"" />
</deadLetterStrategy>
{code}

as per http://activemq.apache.org/message-redelivery-and-dlq-handling.html. Then the permission problem won't arise.
;;;","14/Apr/14 15:30;dejanb;Fixed with http://git-wip-us.apache.org/repos/asf/activemq/commit/7646526c;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ArithmeticException: / by zero in HealthView.healthList() when using JMX-Health-Operations,AMQ-5140,12707722,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,tom_m,tom_m,10/Apr/14 14:55,01/Jul/14 21:54,14/Jul/23 05:44,01/Jul/14 21:54,5.8.0,,,,,,,,,5.10.0,,,,Broker,JMX,,,,0,,,,,,"Using hawtio, navigate to activeMQ, select Health in Tree, then Operations.

Both operations Health() and Health list() lead to the exception, although in the attributes section everything is fine!?

Status: Good 

{noformat}
java.lang.ArithmeticException: / by zero
	at org.apache.activemq.broker.jmx.HealthView.healthList(HealthView.java:158)
	at org.apache.activemq.broker.jmx.HealthView.health(HealthView.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at sun.reflect.misc.Trampoline.invoke(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor17.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at sun.reflect.misc.MethodUtil.invoke(Unknown Source)
	at com.sun.jmx.mbeanserver.StandardMBeanIntrospector.invokeM2(Unknown Source)
	at com.sun.jmx.mbeanserver.StandardMBeanIntrospector.invokeM2(Unknown Source)
	at com.sun.jmx.mbeanserver.MBeanIntrospector.invokeM(Unknown Source)
	at com.sun.jmx.mbeanserver.PerInterface.invoke(Unknown Source)
	at com.sun.jmx.mbeanserver.MBeanSupport.invoke(Unknown Source)
	at javax.management.StandardMBean.invoke(Unknown Source)
	at org.apache.activemq.broker.jmx.AnnotatedMBean.invoke(AnnotatedMBean.java:198)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(Unknown Source)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(Unknown Source)
	at org.jolokia.handler.ExecHandler.doHandleRequest(ExecHandler.java:98)
	at org.jolokia.handler.ExecHandler.doHandleRequest(ExecHandler.java:40)
	at org.jolokia.handler.JsonRequestHandler.handleRequest(JsonRequestHandler.java:89)
	at org.jolokia.backend.MBeanServerExecutorLocal.handleRequest(MBeanServerExecutorLocal.java:109)
	at org.jolokia.backend.MBeanServerHandler.dispatchRequest(MBeanServerHandler.java:102)
	at org.jolokia.backend.LocalRequestDispatcher.dispatchRequest(LocalRequestDispatcher.java:98)
	at org.jolokia.backend.BackendManager.callRequestDispatcher(BackendManager.java:409)
	at org.jolokia.backend.BackendManager.handleRequest(BackendManager.java:158)
	at org.jolokia.http.HttpRequestHandler.executeRequest(HttpRequestHandler.java:197)
	at org.jolokia.http.HttpRequestHandler.handlePostRequest(HttpRequestHandler.java:137)
	at org.jolokia.http.AgentServlet$2.handleRequest(AgentServlet.java:399)
	at org.jolokia.http.AgentServlet.handle(AgentServlet.java:287)
	at org.jolokia.http.AgentServlet.doPost(AgentServlet.java:256)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:713)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:652)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1329)
	at io.hawt.web.AuthenticationFilter$2.run(AuthenticationFilter.java:143)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Unknown Source)
	at io.hawt.web.AuthenticationFilter.executeAs(AuthenticationFilter.java:140)
	at io.hawt.web.AuthenticationFilter.doFilter(AuthenticationFilter.java:108)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1300)
	at io.hawt.web.CORSFilter.doFilter(CORSFilter.java:42)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1300)
	at org.ops4j.pax.web.service.internal.WelcomeFilesFilter.doFilter(WelcomeFilesFilter.java:193)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1300)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:445)
	at org.ops4j.pax.web.service.jetty.internal.HttpServiceServletHandler.doHandle(HttpServiceServletHandler.java:70)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:534)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:227)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1038)
	at org.ops4j.pax.web.service.jetty.internal.HttpServiceContext.doHandle(HttpServiceContext.java:117)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:374)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:189)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:972)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.ops4j.pax.web.service.jetty.internal.JettyServerHandlerCollection.handle(JettyServerHandlerCollection.java:75)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:363)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:483)
	at org.eclipse.jetty.server.AbstractHttpConnection.content(AbstractHttpConnection.java:931)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.content(AbstractHttpConnection.java:992)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:856)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:240)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:627)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:51)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Unknown Source)
{noformat}","ActiveMQ 5.8.0, hawtio 1.3.0",tabish,tom_m,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Jul/14 15:27;tom_m;activemq.schedulerSupport.xml;https://issues.apache.org/jira/secure/attachment/12653408/activemq.schedulerSupport.xml",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,386045,,,Tue Jul 01 21:54:49 UTC 2014,,,,,,,,,,,"0|i1ui5z:",386309,,,,,,,,,,,,,,,,,,,,,"05/May/14 20:13;tabish;Couldn't reproduce this but I went ahead and added some additional defensive checks to prevent divide by zero from ever happening.  ;;;","01/Jul/14 15:27;tom_m;I finally found the cause and how to reproduce this exception:

<broker ... schedulerSupport=""true""> --> call JMX-Operation health() and the exception occurs.

<broker ... schedulerSupport=""false"">  --> everything is fine!;;;","01/Jul/14 21:54;tabish;Tested using this configuration against 5.10 and no issue.  Provide a JUnit test that fails against v5.10.0 or later if you can.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Useless code in VMTransport class,AMQ-5138,12706922,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,sdcf,sdcf,07/Apr/14 10:42,07/Apr/14 14:58,14/Jul/23 05:44,07/Apr/14 14:58,5.9.0,,,,,,,,,5.10.0,,,,Broker,,,,,0,,,,,,"In VMTransport class taskRunner is set to null two times needlessly on the next line and couple of lines below:    
       {color:red}taskRunner = null;{color}
            messageQueue = null;

            if (mq != null) {
                mq.clear();
            }

            // Allow pending deliveries to finish up, but don't wait
            // forever in case of an stalled onCommand.
            if (tr != null) {
                try {
                    tr.shutdown(TimeUnit.SECONDS.toMillis(1));
                } catch(Exception e) {
                }
                {color:red}taskRunner = null;{color}
            }",,sdcf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,385245,,,2014-04-07 10:42:34.0,,,,,,,,,,,"0|i1ud93:",385512,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MemoryUsage is not decremented on a JMS topic when rolling back a transacted session,AMQ-5136,12706626,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,barlabanov,barlabanov,04/Apr/14 13:36,30/Apr/14 16:10,14/Jul/23 05:44,30/Apr/14 16:10,5.8.0,5.9.0,,,,,,,,5.10.0,,,,Broker,,,,,0,,,,,,"When sending a message to a topic using a transacted session, memory usage is not decremented correctly when session.rollback is called. It is decremented on commit but not on rollback. This has quite bad consequences since after some time depending on the system memory usage settings and amount of rolled back messages, the broker starts to reject messages saying that Usage Manager memory limit is reached. The only solution is to restart the broker.
I created a small Maven project (see the attachment) with a unit test starting an embedded broker and two test methods: one sending messages with session.commit and another with session.rollback(). The last one fails to assert the memory usage. In the output one can see quite a lot of error logs written by ActiveMQ. The problem is reproducible with 5.8.0 and 5.9.0.
The problem seems to be in org.apache.activemq.broker.region.Topic#doMessageSend method where a transaction synchronization is registered. In the transaction synchronization only afterCommit is supplied, but no afterRollback. So there seems to be nobody calling message.decrementReferenceCount().
",,barlabanov,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Apr/14 13:37;barlabanov;activemqbug.zip;https://issues.apache.org/jira/secure/attachment/12638683/activemqbug.zip",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,384949,,,Wed Apr 30 16:10:05 UTC 2014,,,,,,,,,,,"0|i1ubfb:",385216,,,,,,,,,,,,,,,,,,,,,"04/Apr/14 13:37;barlabanov;Maven project with the test.;;;","28/Apr/14 11:41;barlabanov;Can anybody comment this issue? Any ideas when it will be fixed? The fix would be quite easy: just add a correct rollback listener.;;;","30/Apr/14 16:10;gtully;thanks for the nice test.
fix and test in http://git-wip-us.apache.org/repos/asf/activemq/commit/c5c14953;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add proton META_INF/services to the activemq-osgi bundle definition so AMQP works inside Karaf,AMQ-5131,12706422,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,tabish,tabish,03/Apr/14 13:58,03/Apr/14 21:12,14/Jul/23 05:44,03/Apr/14 21:12,5.10.0,,,,,,,,,5.10.0,,,,OSGi/Karaf,,,,,0,,,,,,,,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,384745,,,2014-04-03 13:58:20.0,,,,,,,,,,,"0|i1ua67:",385012,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Provide SSL_OPTS to all tasks in shell scripts,AMQ-5128,12705622,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,31/Mar/14 10:52,31/Mar/14 10:58,14/Jul/23 05:44,31/Mar/14 10:58,5.9.0,,,,,,,,,5.10.0,,,,,,,,,0,,,,,,Currently SSL_OPTS are not always being passed to the activemq-admin (and activem) script tasks. We need those so we can browse queues over SSL for example.,,dejanb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,383956,,,Mon Mar 31 10:58:11 UTC 2014,,,,,,,,,,,"0|i1u5bz:",384224,,,,,,,,,,,,,,,,,,,,,"31/Mar/14 10:58;dejanb;Fixed with http://git-wip-us.apache.org/repos/asf/activemq/commit/f5ddcf06;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MQTT Subscriber with QoS.EXACTLY_ONCE receives messages even after unsubscribing from topic,AMQ-5127,12705519,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,netlancermobi,netlancermobi,30/Mar/14 04:59,23/Jun/14 16:39,14/Jul/23 05:44,23/Jun/14 16:39,5.9.0,,,,,,,,,5.10.0,,,,MQTT,,,,,0,mqtt,,,,,"How to reproduce:
1. client c1 ( clientid1) connects, subscribes to topic A with QoS.EXACTLY_ONCE , unsubscribes topic A and disconnects.

2. client c2 ( clientid2) publishes to topic A with QoS.EXACTLY_ONCE.

3. client c1 ( clientid1) connects back again.

Expectation : client c1 shouldn't receive any messages as it has already unsubscribed

Attached test method to reproduce this issue",,netlancermobi,surfnerd,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Apr/14 17:23;netlancermobi;AMQ-5127-FixWithTest.patch;https://issues.apache.org/jira/secure/attachment/12638725/AMQ-5127-FixWithTest.patch","30/Mar/14 05:19;netlancermobi;AMQ-5127.patch;https://issues.apache.org/jira/secure/attachment/12637690/AMQ-5127.patch","30/Mar/14 05:05;netlancermobi;MQTTTest.patch;https://issues.apache.org/jira/secure/attachment/12637689/MQTTTest.patch",,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,382806,,,Mon Jun 23 16:39:22 UTC 2014,,,,,,,Patch Available,,,,"0|i1ty8f:",383074,,,,,,,,,,,,,,,,,,,,,"30/Mar/14 05:05;netlancermobi;Attached MQTTTest.patch which contains the test to reproduce.;;;","30/Mar/14 05:19;netlancermobi;Attached AMQ-5127.patch for fixing this issue.;;;","31/Mar/14 16:27;tabish;Tested against the latest 5.10-SNAPSHOT code and the test works fine.  I believe this is already fixed by previous work done on MQTT code.  ;;;","31/Mar/14 16:43;tabish;Fixed by other MQTT hardening work that's gone into 5.10.  Test added on trunk to ensure it stays fixed. ;;;","01/Apr/14 01:25;netlancermobi;Hi Timothy Bish ,

 The test added reproduces the issue as it has assertEquals(10, received);. the subscriber should not receive those messages. This behaviour has been verified with mosquitto server. Please, let me know if my understanding is not correct. 

Thanks,
nl ;;;","03/Apr/14 15:16;netlancermobi;reopening the issue as the behaviour is seen. The AMQ-5127.patch has the fix.;;;","04/Apr/14 17:23;netlancermobi;Attached AMQ-5127-FixWithTest.patch - Ignore my previous patches. Please review and let me know as we are critically affected by this issue.;;;","23/May/14 15:53;netlancermobi;Hi, 

 any updates on this.

Thanks;;;","25/May/14 16:26;surfnerd;hey [~netlancermobi]

I think this is fixed by recent hardening of MQTT. 
Try with new build and let me know.

Thanks;;;","02/Jun/14 02:37;netlancermobi;Hi Surf,

 i will check and let you know.

Thanks;;;","23/Jun/14 16:39;tabish;This appears to have been fully fixed in the MQTT hardening that went into 5.10.0.  If this is not the case a failing unit tests against the latest source is needed to show the case where it is not working.  Please reopen if additional tests show a problem is still present.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broker and clients hang,AMQ-5125,12704250,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,,Albert Barmettler,Albert Barmettler,28/Mar/14 13:45,16/Dec/14 00:07,14/Jul/23 05:44,07/Jul/14 21:55,5.10.0,5.9.0,,,,,,,,5.10.1,5.11.0,,,,,,,,4,,,,,,"JMS clients start to hang after a while in calls such as session.createObjectMessage(). Both the broker and the hanging clients can't be easily shut down when this happens - only forcefully applied kill's do the job.

I'm using queues and transactional sessions. All clients (producers and consumers) are in the same Java VM. There is only one JMS connection between the application and the broker. Each client has its own session, but they all share the same connection.

Normally, the data directory of the LevelDb contains only a few log files. But in my case, the number of log files is steadily increasing.

Furthermore, I was able to track down the issue to following circumstance: The problem only occurs, when consumers do a rollback instead of a commit when they receive the message. The rollback / redelivery works as expected - the same message is received again after a previous rollback.

As far as I can tell, the problem does not occur with KahaDb.

I'll attach a test program that provokes the error. It sets up a few hundred queues, consumers and producers. The consumers just receive the message and commit the session, but they also do ""random"" rollbacks. It can be observed immediately that the number of files starts increasing in the data directory. After a few minutes, the clients hang - sometimes sooner, sometimes later. I'll also attach the config file for the broker.

I am aware, that heavy rollbacking should not happen in normal operation. But from a long term stability perspective, this is a blocker for us.

","Windows 7, Linux
JAVA_HOME=C:\Program Files\Java\jdk1.7.0_07
ActiveMQ 5.9.0 with LevelDB storage adapter enabled",Albert Barmettler,artem.karpenko,badavis,bibryam,blondacz,ceposta,jameshome,saket,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Jul/14 14:19;jameshome;AMQ-5125_made_synchronization_in_LevelDBStore_use_private_lock.5.9.2.patch;https://issues.apache.org/jira/secure/attachment/12654320/AMQ-5125_made_synchronization_in_LevelDBStore_use_private_lock.5.9.2.patch","03/Apr/14 17:08;Albert Barmettler;Broker-threaddump-1396544622970.tdump;https://issues.apache.org/jira/secure/attachment/12638520/Broker-threaddump-1396544622970.tdump","03/Apr/14 17:08;Albert Barmettler;Clients-threaddump-1396544622970.tdump;https://issues.apache.org/jira/secure/attachment/12638519/Clients-threaddump-1396544622970.tdump","28/Mar/14 13:52;Albert Barmettler;VM.PNG;https://issues.apache.org/jira/secure/attachment/12637401/VM.PNG","28/Mar/14 13:50;Albert Barmettler;activemq.xml;https://issues.apache.org/jira/secure/attachment/12637400/activemq.xml","05/Jun/14 11:57;blondacz;broker-threads-blocked.tdump;https://issues.apache.org/jira/secure/attachment/12648470/broker-threads-blocked.tdump","28/Mar/14 13:49;Albert Barmettler;src.zip;https://issues.apache.org/jira/secure/attachment/12637399/src.zip",,,7.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,382584,,,Tue Jul 08 14:07:23 UTC 2014,,,,,,,,,,,"0|i1twuv:",382852,,,,,,,,,,,,,,,,,,,,,"28/Mar/14 13:49;Albert Barmettler;Test program;;;","28/Mar/14 13:50;Albert Barmettler;Default configuration file as shipped with ActiveMQ. LevelDb enabled.;;;","28/Mar/14 13:52;Albert Barmettler;The last minutes of the Java VM of the ActiveMQ.;;;","28/Mar/14 13:54;tabish;Recommend you test against a recent 5.10-SNAPSHOT which contains a great many fixes for LevelDB, you can make it simpler by turning your test into a JUnit test and drop it into the ActiveMQ source or create a simple maven project that allows you to quickly change version numbers. ;;;","03/Apr/14 17:08;Albert Barmettler;The problem seems to exist in the recent 5.10 snapshot as well. After a few minutes of brokering, the system comes to a halt. I attached the thread dumps of the broker and the clients. The broker seems to hang in a rollback.

I observed that the number of LevelDB log files does *not* steadily increase anymore as it did in 5.9.0. 

Regarding the operating system: I ran reproduced the issue on Windows 7 with the attached test program. We observed the problem on Linux as well, but I haven't ran my test program on this platform.;;;","05/Jun/14 11:57;blondacz;Same issue happening to us not every time but quite often on very small load and even with just one rollback. The all threads are BLOCKED. The version is  5.9.0.;;;","06/Jun/14 09:51;saket;We  have a similar issue for which I posted a message on the user forums. There is a performance test attached there which can be used to reproduce this.

http://activemq.2283324.n4.nabble.com/ActiveMQ-message-dequeuing-hangs-td4681366.html;;;","30/Jun/14 13:44;ceposta;Any chance you can see if having producers/consumers on separate connections make a difference?;;;","07/Jul/14 14:19;jameshome;I believe the issue that this ticket was raised against is the same one described here (same link as above), which badavis has analysed in his recent post:

http://activemq.2283324.n4.nabble.com/ActiveMQ-message-dequeuing-hangs-td4681366.html

I've gone through the code, and I agree with his findings.

I've attached a patch to 5.9.2 based on this, in which LevelDBStore uses an internal private lock variable instead of _this_, which removes the deadlock that can happen when the LocalTransaction synchronises externally on the transactionStore during a rollback.

Using this patch, the original (attached) test runs for hours without deadlocking, as do my own tests that previously deadlocked after a few thousand messages.

Thanks,

James

;;;","07/Jul/14 15:57;blondacz;Nice!!! 


-- 
Sent from my Android device with K-9 Mail. Please excuse my brevity.
;;;","07/Jul/14 21:55;tabish;Reviewed all the mailing list discussion and the threads dumps and the analysis is correct, the lock cannot be the LevelDBStore object since that can lead to  a lock in the hawtDispatch serialization thread runner if a task is modifying mutable state and needs to protect data that also accessible on the public store API. 

Patch applied with thanks. ;;;","08/Jul/14 02:54;badavis;Awesome that this is getting fixed.  Thank you James for fixing this.  I apologize if this is the wrong form for this, I am new to this type of development.  The other issue I noticed from my analysis is the GCPolling job and the rollback job got scheduled to the same thread at the same time in the hawtdispatcher.  It just so happens that the GCPoll job got ran first.  My system had many dispatch threads available but all the jobs only went to the one dispatch thread causing the deadlock.  Could you tell me the reasoning this is not a concern?  I personally would like to understand this better.  Thank you.

Brian;;;","08/Jul/14 14:07;tabish;The reason is simple, the serial execution of tasks protects from concurrent modification of mutable state in the LeveDB store.  If the tasks executed on multiple threads concurrently then the code would need to be drastically more protective of all mutable state in the store and you'd see a lot more locking and most likely threading related bugs. The reason for the small number of synchronized areas is to protect those bits that are exposed by the persistence adapter API which need to read or modify some things that are also modified on the dispatch thread.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Exception logged on startup: jolokia-agent: Cannot start discovery multicast handler,AMQ-5124,12704024,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,chirino,chirino,27/Mar/14 16:34,04/Jun/15 12:49,14/Jul/23 05:44,04/Jun/15 12:49,5.11.0,,,,,,,,,5.12.0,,,,Broker,,,,,0,,,,,,"jolokia-agent is barfing an ugly exception on the console on activemq startup: 

 WARN | jolokia-agent: Cannot start discovery multicast handler: java.net.SocketException: Can't assign requested address
java.net.SocketException: Can't assign requested address
	at java.net.PlainDatagramSocketImpl.join(Native Method)
	at java.net.AbstractPlainDatagramSocketImpl.joinGroup(AbstractPlainDatagramSocketImpl.java:202)
	at java.net.MulticastSocket.joinGroup(MulticastSocket.java:402)
	at org.jolokia.discovery.MulticastUtil.joinMcGroupsOnAllNetworkInterfaces(MulticastUtil.java:136)
	at org.jolokia.discovery.MulticastUtil.newMulticastSocket(MulticastUtil.java:38)
	at org.jolokia.discovery.MulticastSocketListenerThread.<init>(MulticastSocketListenerThread.java:60)
	at org.jolokia.discovery.DiscoveryMulticastResponder.start(DiscoveryMulticastResponder.java:75)
	at org.jolokia.http.AgentServlet.initDiscoveryMulticast(AgentServlet.java:176)
	at org.jolokia.http.AgentServlet.init(AgentServlet.java:162)
	at org.eclipse.jetty.servlet.ServletHolder.initServlet(ServletHolder.java:477)
",,davsclaus,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,382358,,,Thu Jun 04 12:49:01 UTC 2015,,,,,,,,,,,"0|i1tvhj:",382628,,,,,,,,,,,,,,,,,,,,,"29/Mar/14 10:33;davsclaus;Disable jolokia discovery as we need a new jolokia release so it can broadcast the correct hostname

We will revisit this in 5.11 and when a new jolokia release is out.;;;","29/Mar/14 10:38;davsclaus;Logged a ticket at jolokia
https://github.com/rhuss/jolokia/issues/135;;;","29/Apr/14 15:12;tabish;With the release of v1.2.1 this could probably make it's way back into 5.10 if done soonish. ;;;","29/Apr/14 15:14;davsclaus;Yeah 1.2.1 is being synced to maven central, so should be there in a matter of hours/tomorrow;;;","03/Jun/15 19:07;tabish;[~davsclaus] the original issue seems to be fully resolved in the latest jolokia release.  Can we go ahead and enable discovery in the default config and mark this as resolved?;;;","04/Jun/15 11:41;davsclaus;I think we should turn this off by default as now. 

I dont think people want ActiveMQ to use unwanted network activities unless they turn them on explicit.
;;;","04/Jun/15 12:49;tabish;Since its been off by default for some time now then I think we can mark this as resolved then. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Browse command is no more working with Karaf,AMQ-5121,12703931,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,LeifH,LeifH,27/Mar/14 09:02,18/Sep/14 13:30,14/Jul/23 05:44,18/Sep/14 13:30,5.9.0,,,,,,,,,5.11.0,,,,OSGi/Karaf,,,,,6,,,,,,"the activemq:browse command was working with ActiveMQ 5.8.0, but with ActiveMQ 5.9.0 the command is complaining about an unrecognized option ""jmxlocal"".

an example :
{noformat}
karaf@root> activemq:browse --amqurl tcp://localhost:61616 --user karaf --password karaf TEST.FOO
INFO: Unrecognized option: --jmxlocal
Task Usage: Main browse --amqurl <broker url> [browse-options] <destinations>
Description: Display selected destination's messages.
{noformat}","Karaf 2.3.4, OS X 10.9.2, Java 1.6.0_45",dejanb,james.burn@oup.com,LeifH,soleger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,SM-2317,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,382265,,,Thu Sep 18 13:30:32 UTC 2014,,,,,,,,,,,"0|i1tux3:",382536,Regression,,,,,,,,,,,,,,,,,,,,"26/Jun/14 10:32;james.burn@oup.com;JB

Many thanks for picking this up. 

James

;;;","18/Sep/14 13:30;dejanb;Fixed with https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=fb684db4;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"broker redeliveryPlugin: after message redelivery, all subsequent ""producer.send()"" using same message are ""scheduled"" for delivery to queue rather than delivered to queue as normal",AMQ-5119,12703798,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,pgfox,pgfox,26/Mar/14 18:59,27/Mar/14 15:14,14/Jul/23 05:44,27/Mar/14 15:14,5.9.0,,,,,,,,,5.10.0,,,,Broker,,,,,0,,,,,,"example:

- consumer on QueueA does a transaction.rollback 
- message is being redelivered by the redeliveryPlugin to QueueA - as expected.
- When the message is consumed again the AMQ_SCHEDULED_DELAY property is still set 
-  the same message is subsequently sent to queueB 
- the send() is intercepted by org.apache.activemq.broker.scheduler.SchedulerBroker and scheduled for delivery later - this is not expected
",- tested on latest 5.10 snapshot,gtully,pgfox,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Mar/14 19:01;pgfox;RedeliveryPluginHeaderTest.java;https://issues.apache.org/jira/secure/attachment/12636977/RedeliveryPluginHeaderTest.java",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,382132,,,Thu Mar 27 15:14:13 UTC 2014,,,,,,,,,,,"0|i1tu3z:",382405,,,,,,,,,,,,,,,,,,,,,"26/Mar/14 19:02;pgfox;unit test attached - RedeliveryPluginHeaderTest;;;","27/Mar/14 15:14;gtully;thanks for the test.
issue was in message marshalling - when we get a property before removing the existing marshalled properties were not getting cleared so they were being retained. A little crazy that this bug has survived for so long.

thanks for the test.
fix and additional test in
http://git-wip-us.apache.org/repos/asf/activemq/commit/c07514f5;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
batchStatment is misspelled for JDBC adaptors,AMQ-5116,12702911,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,jgenender,jgenender,21/Mar/14 17:12,21/Mar/14 19:19,14/Jul/23 05:44,21/Mar/14 19:19,5.x,,,,,,,,,5.10.0,,,,Broker,,,,,0,,,,,,"batchStatment is misspelled for JDBC adaptors and causes confusion for setting the field.  It should have proper spelling as ""batchStatement"" - notice the e.

Fix should provide backward compatibility, but mark it as deprecated.",,githubbot,jgenender,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Mar/14 17:48;jgenender;patch;https://issues.apache.org/jira/secure/attachment/12636068/patch",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,381248,,,Fri Mar 21 18:38:47 UTC 2014,,,,,,,Patch Available,,,,"0|i1topb:",381524,,,,,,,,,,,,,,,,,,,,,"21/Mar/14 17:16;githubbot;GitHub user jgenender opened a pull request:

    https://github.com/apache/activemq/pull/18

    Fix for AMQ-5116.  Deprecated batchStatment and added batchStatement.

    Added deprecation warnings in the log for those using the misspelled
    version.  Both versions will set batchStatement for now.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/jgenender/activemq trunk

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/18.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #18
    
----
commit 7b3815fe6e78bd06cc33e6b1982875c5a259d2dc
Author: Jeff Genender <jgenender@savoirtech.com>
Date:   2014-03-21T17:12:59Z

    Fix for AMQ-5116.  Deprecated batchStatment and added batchStatement.
    Added deprecation warnings in the log for those using the misspelled
    version.  Both versions will set batchStatement for now.

----
;;;","21/Mar/14 17:17;jgenender;Pull request sent.;;;","21/Mar/14 17:48;jgenender;Attaching a patch as the github delay may be a bit slow in getting the latest;;;","21/Mar/14 18:38;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/18
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LevelDB sync=true is not being honored.,AMQ-5115,12702899,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,21/Mar/14 16:22,12/Jun/14 15:56,14/Jul/23 05:44,12/Jun/14 15:56,,,,,,,,,,5.10.0,,,,,,,,,1,,,,,,,,gtully,keffin.barnaby,sbrandt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,381236,,,Thu Jun 12 15:56:55 UTC 2014,,,,,,,,,,,"0|i1tomn:",381512,,,,,,,,,,,,,,,,,,,,,"21/Mar/14 16:22;chirino;This could potential lead to data loss as writes to the journal are being done async.
;;;","04/Jun/14 14:19;keffin.barnaby;This bug is still marked open/unresolved despite being in the resolved bugs list for the 5.10 release vote.

Using heavy message loads and triggering failovers, I believe I can trigger this problem (I can lose a small number of messages, this seems a plausible reason) against out 5.9.1 dev cluster. I haven't been able to set up a cluster of 5.10-SNAPSHOT to test if it is actually fixed yet. Do you believe this bug has actually been resolved?;;;","12/Jun/14 15:56;gtully;this looks done to me.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JmsCronSchedulerTest fails intermittently because of race condition in test,AMQ-5113,12702619,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,kearls,kearls,kearls,20/Mar/14 12:32,20/Mar/14 13:07,14/Jul/23 05:44,20/Mar/14 13:07,,,,,,,,,,,,,,Test Cases,,,,,0,,,,,,testSimulatenousCron fails intermittently because of a race condition involving the order of updating countDownLatches in onMessage.,,kearls,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,380958,,,2014-03-20 12:32:17.0,,,,,,,,,,,"0|i1tmxz:",381237,Unit Test Broken,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MQTT server connections are not thread safe,AMQ-5112,12702516,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,dejanb,dhirajsb,dhirajsb,19/Mar/14 23:46,21/Mar/14 10:30,14/Jul/23 05:44,20/Mar/14 10:34,5.9.0,,,,,,,,,5.10.0,,,,MQTT,,,,,0,,,,,,"MQTTProtocolConverter uses MQTTTransportFilter.sendToMQTT() to send packets to clients. However, there is a race condition where the converter is sending SUBACK or other acks to clients when ActiveMQ messages from the Broker also try to call sendToMQTT() to send PUBLISH packets to the same client. 

A patch is included which fixes this by synchronizing the call to the underlying transport buffer in MQTTTransportFilter.sendToMQTT(). This also resolves another issue AMQ-4712, where some tests would intermittently fail due to this race condition. Those tests were marked as ignored, so this patch enables them again. ",,dejanb,dhirajsb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Mar/14 23:48;dhirajsb;AMQ-5112.patch;https://issues.apache.org/jira/secure/attachment/12635687/AMQ-5112.patch","20/Mar/14 17:08;dhirajsb;AMQ-5112.patch2;https://issues.apache.org/jira/secure/attachment/12635824/AMQ-5112.patch2",,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,380855,,,Fri Mar 21 10:30:07 UTC 2014,,,,,,,Patch Available,,,,"0|i1tmbb:",381134,,,,,,,,,,,,,,,,,,,,,"19/Mar/14 23:48;dhirajsb;Patch to resolve Broker thread safety issue in MQTT;;;","20/Mar/14 10:34;dejanb;Patch applied with

http://git-wip-us.apache.org/repos/asf/activemq/commit/4ba4aa21

Although I still see testResendMessageId failing regularly

Failed tests:
  MQTTSSLTest>MQTTTest.testResendMessageId:717 null
  MQTTTest.testResendMessageId:720 null;;;","20/Mar/14 17:08;dhirajsb;Simplified version of testResendMessageId with a higher receive timeout;;;","21/Mar/14 10:30;dejanb;Thanks Dhiraj, I applied the patch and also improved testClientConnectionFailure() test which was failing intermittently. It looks good now.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
No disposition set on Discharge response for AMQP TX commit or rollback,AMQ-5110,12702417,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,19/Mar/14 16:50,19/Mar/14 16:56,14/Jul/23 05:44,19/Mar/14 16:56,5.9.0,,,,,,,,,5.10.0,,,,AMQP,,,,,0,,,,,,When an AMQP transaction is committed or rolled back the broker settles the delivery but does not set an Accepted outcome on the delivery.  The spec indicates that a proper discharge response will contain an accepted outcome along with being remotely settled.  ,,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,380756,,,Wed Mar 19 16:56:43 UTC 2014,,,,,,,,,,,"0|i1tlpb:",381035,,,,,,,,,,,,,,,,,,,,,"19/Mar/14 16:56;tabish;Fixed on trunk;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MQTT subscriptions for cleansession=true MUST be non-durable,AMQ-5108,12702337,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,dhirajsb,dhirajsb,19/Mar/14 08:04,21/Jul/14 22:25,14/Jul/23 05:44,21/Jul/14 22:25,5.9.0,,,,,,,,,5.11.0,,,,MQTT,,,,,0,,,,,,"When MQTT cleansession flag is set to 1, the Broker MUST remove existing subscriptions for the provided client id as well as not leave any subscriptions created in that clean session around after the network connection is closed. ActiveMQ MUST therefore create non-durable subscriptions for cleansession=1 sessions. 

A patch is attached that adds this behavior, as well as fixes some small issues in MQTT tests. It also includes a fix to remove connection info when the connection is shutdown due to a transport error or exception. ",,dhirajsb,gtully,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Mar/14 08:09;dhirajsb;AMQ-5108.patch;https://issues.apache.org/jira/secure/attachment/12635513/AMQ-5108.patch",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,380677,,,Mon Jul 21 22:25:40 UTC 2014,,,,,,,Patch Available,,,,"0|i1tl7r:",380956,,,,,,,,,,,,,,,,,,,,,"19/Mar/14 08:09;dhirajsb;Patch to fix cleansession behavior and improvements to tests, also marked testResendMessageId() as ignored as it causes unexplained failures as mentioned in AMQ-4712. ;;;","19/Mar/14 14:36;gtully;with that patch applied i often see:{code}Tests run: 29, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 41.505 sec <<< FAILURE! - in org.apache.activemq.transport.mqtt.MQTTTest
testReceiveMessageSentWhileOffline(org.apache.activemq.transport.mqtt.MQTTTest)  Time elapsed: 0.328 sec  <<< ERROR!
java.net.ProtocolException: Command from server contained an invalid message id: 1
	at org.fusesource.mqtt.client.CallbackConnection.completeRequest(CallbackConnection.java:723)
	at org.fusesource.mqtt.client.CallbackConnection.processFrame(CallbackConnection.java:762)
	at org.fusesource.mqtt.client.CallbackConnection.access$1500(CallbackConnection.java:51)
	at org.fusesource.mqtt.client.CallbackConnection$6.onTransportCommand(CallbackConnection.java:392)
	at org.fusesource.hawtdispatch.transport.TcpTransport.drainInbound(TcpTransport.java:709)
	at org.fusesource.hawtdispatch.transport.TcpTransport$6.run(TcpTransport.java:588)
	at org.fusesource.hawtdispatch.internal.NioDispatchSource$3.run(NioDispatchSource.java:209)
	at org.fusesource.hawtdispatch.internal.SerialDispatchQueue.run(SerialDispatchQueue.java:100)
	at org.fusesource.hawtdispatch.internal.pool.SimpleThread.run(SimpleThread.java:77){code} this needs some investigation. But it works standalone so may just be some inter test interactions.;;;","19/Mar/14 14:40;gtully;patch applied with thanks - http://git-wip-us.apache.org/repos/asf/activemq/commit/bf8eb0e6;;;","31/Mar/14 22:36;tabish;Think this one might be sorted, all tests appear to be enabled and passing now. ;;;","21/Jul/14 22:25;tabish;This appears to be fixed now tests run without any issues;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
In-flight queue message redelivered to multiple listeners upon broker shutdown,AMQ-5107,12702213,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,artnaseef,gregg,gregg,18/Mar/14 18:32,27/Mar/14 15:16,14/Jul/23 05:44,27/Mar/14 15:16,5.9.0,,,,,,,,,5.10.0,,,,Transport,,,,,0,,,,,,"
To reproduce: 

1) Start 3 or more listener processes (see listener code below)

2) Run producer to push one message on queue (see producer code below)

3) One of the listeners will pick-up the message and sleep for one minute before auto acknowledging the message

4) Start a shutdown sequence of the broker within the 60 second window (Ctrl-C or issue Terminate jvm(int) command from Hawtio console) 

5) All other idle listeners should get the same message redelivered simultaneously, each one having deliveryCount incremented 



Listener code:
--------------

package com.test;
import javax.jms.Connection;
import javax.jms.Destination;
import javax.jms.Message;
import javax.jms.MessageConsumer;
import javax.jms.MessageListener;
import javax.jms.Session;
import javax.jms.TextMessage;
import org.apache.activemq.ActiveMQConnectionFactory;

public class TestListener {
	public static void main(String[] args) {
		try {	
			ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory(""tcp://localhost:61616"");
			Connection connection = connectionFactory.createConnection();
			Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
			Destination destination = session.createQueue(""TEST.QUEUE"");
			MessageConsumer consumer = session.createConsumer(destination);
			
			consumer.setMessageListener(new MessageListener() {
				public void onMessage(Message message) {
					try	{
						TextMessage textMessage = (TextMessage) message;
						System.out.print(""\nReceived "" + textMessage.getText());
						System.out.print("", Redelivery: "" + message.getJMSRedelivered());
						System.out.print("", Count: "" + message.getLongProperty(""JMSXDeliveryCount""));
						Thread.sleep(60000);			
						System.out.print(""... finished after sleep"");
					} catch (Exception e) {
						e.printStackTrace();
					}
				}
			});
			
			connection.start();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public TestListener() {
		super();
	}
}


Producer code:
--------------

package com.test;
import java.util.Date;
import javax.jms.Connection;
import javax.jms.Destination;
import javax.jms.MessageProducer;
import javax.jms.Session;
import javax.jms.TextMessage;

import org.apache.activemq.ActiveMQConnectionFactory;

public class TestProducer {
	public static void main(String[] args) {
		try {
			thread(new HelloWorldProducer(), false);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
 
	public static class HelloWorldProducer implements Runnable {
		public void run() {
			try {
				ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory(""tcp://localhost:61616"");
				Connection connection = connectionFactory.createConnection();
				connection.start();
				Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
				Destination destination = session.createQueue(""TEST.QUEUE"");
				MessageProducer producer = session.createProducer(destination);

				String text = ""test message created on "" + new Date();
				TextMessage message = session.createTextMessage(text);
				System.out.println(""Sent "" + text);
				producer.send(message);

				session.close();
				connection.close();
			}
			catch (Exception e) {
				e.printStackTrace();
			}
		}
		public HelloWorldProducer() {}
	}

	public static void thread(Runnable runnable, boolean daemon) {
		Thread brokerThread = new Thread(runnable);
		brokerThread.setDaemon(daemon);
		brokerThread.start();
	}
    
	public TestProducer() {
		super();
	}
}


","Windows 7 64Bit - Java ""1.6.0_20""
CentOS 6.0 - Java ""1.7.0_09-icedtea"" ",artnaseef,gregg,gtully,lichtin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,380553,,,Thu Mar 27 15:16:03 UTC 2014,,,,,,,,,,,"0|i1tkgn:",380833,,,,,,,,,,,,,,,,,,,,,"18/Mar/14 22:43;artnaseef;Are the duplicates only as the broker shuts down, or do they occur after the broker restarts as well?;;;","18/Mar/14 23:02;artnaseef;I reproduced this.  I also tried using the failover transport, shutting down the broker, restarting all the clients, bringing the broker back up, and then shutting it down again.

In this second test case, the message was only redelivered one time.  Since the multiple deliveries only happen as the broker is shutting down, the shutdown of each connection is leading to redelivery to another consumer on another connection, and in the errant case, the second connection to shutdown (out of 3) happens to be the next one to which the message is delivered.  Therefore, the last connection remaining also gets the message.  Like this:

* Consumer 1 gets message
* Consumer 1 connection shuts down
* Consumer 2 gets message
* Consumer 2 connection shuts down
* Consumer 3 gets message
* Consumer 3 connection shuts down

Bottom line - the broker should not be redelivering (or even delivering) any messages during shutdown.  Not sure if this will be an easy fix though, since the broker sends messages (advisories) to advise of things like shutting down consumers.

;;;","18/Mar/14 23:05;artnaseef;Problem exists on 5.10-SNAPSHOT.;;;","19/Mar/14 02:48;artnaseef;Looking at this more closely, I'm leaning toward this being a non-problem.

The JMS specification states this for AUTO_ACKNOWLEDGE:

{quote}
AUTO_ACKNOWLEDGE - With this option, the session automatically acknowledges a client’s receipt of a message when it has either successfully returned from a call to receive or the MessageListener it has called to process the message successfully returns.
{quote}

This means that MessageListener *must* be prepared to handle duplicates coming into the {{onMessage}} call because (a) the message does not get acknowledged until the handler returns, and (b) there's always the chance that client application will fail between the {{onMessage}} call and the message ACK (leading to redeliveries).

Really, all client apps should be prepared to handle duplicates, although transacted applications are best positioned to avoid them.

While it may be possible to improve this one case, such a change is not trivial, and such a change would not prevent the same condition from requiring handling in the client.;;;","19/Mar/14 13:04;gtully;there may be an easy fix in org.apache.activemq.broker.region.Queue#removeSubscription. Don't do further dispatch if the broker is shutting down. this would avoid the cascade effect of dispatch to each closing connection in order. essentially gate the call to wakeup with a check on broker shutdown.;;;","19/Mar/14 13:34;artnaseef;Thanks Gary - I'll take a look at that; if it proves to be straight-forward and effective, I'll put it in there.;;;","27/Mar/14 15:16;artnaseef;Fixed Queue handling to avoid re-dispatch of unacked messages on removal of a consumer when the broker is shutting down.

Commit: https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=29f34f4dab68ceb3138a6194617fa8f13f4d3875

Includes a unit test.  There is a race condition in the tests which appears to be in between removal of all the queue's consumers and the resend logic on the Queue which causes false positives (i.e. failure to detect a problem), so the test runs up to 3 iterations in an attempt to increase reliability.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
unable to build trunk from scratch due to missing dependency,AMQ-5106,12702120,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,ccancellieri,ccancellieri,18/Mar/14 10:57,19/Mar/14 16:38,14/Jul/23 05:44,19/Mar/14 15:57,,,,,,,,,,5.10.0,,,,,,,,,0,,,,,,"Hi I'm not able to complete the mvn eclipse:clean eclise:eclipse on the trunk due to a missing jar.
org.apache.xerces:xercesImpl:jar:2.11.0
could not be located over default repository (and I've no local copy).
Please add some repository or deploy it over officials repo.

Here is the stack trace:

org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal on project activemq-karaf-itest: Could not resolve dependencies for project org.apache.activemq:activemq-karaf-itest:jar:5.10-SNAPSHOT: Could not find artifact org.apache.xerces:xercesImpl:jar:2.11.0 in repo.jenkins-ci.org (http://repo.jenkins-ci.org/public/)
        at org.apache.maven.lifecycle.internal.LifecycleDependencyResolver.getDependencies(LifecycleDependencyResolver.java:220)
        at org.apache.maven.lifecycle.internal.LifecycleDependencyResolver.resolveProjectDependencies(LifecycleDependencyResolver.java:127)
        at org.apache.maven.lifecycle.internal.MojoExecutor.ensureDependenciesAreResolved(MojoExecutor.java:257)
        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:200)
        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
        at org.apache.maven.lifecycle.internal.MojoExecutor.executeForkedExecutions(MojoExecutor.java:364)
        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:198)
        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
        at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
        at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
        at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
        at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:318)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:153)
        at org.apache.maven.cli.MavenCli.execute(MavenCli.java:555)
        at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:214)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:158)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
        at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
        at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:414)
        at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:357)
Caused by: org.apache.maven.project.DependencyResolutionException: Could not resolve dependencies for project org.apache.activemq:activemq-karaf-itest:jar:5.10-SNAPSHOT: Could not find artifact org.apache.xerces:xercesImpl:jar:2.11.0 in repo.jenkins-ci.org (http://repo.jenkins-ci.org/public/)
        at org.apache.maven.project.DefaultProjectDependenciesResolver.resolve(DefaultProjectDependenciesResolver.java:198)
        at org.apache.maven.lifecycle.internal.LifecycleDependencyResolver.getDependencies(LifecycleDependencyResolver.java:195)
        ... 26 more
Caused by: org.eclipse.aether.resolution.DependencyResolutionException: Could not find artifact org.apache.xerces:xercesImpl:jar:2.11.0 in repo.jenkins-ci.org (http://repo.jenkins-ci.org/public/)
        at org.eclipse.aether.internal.impl.DefaultRepositorySystem.resolveDependencies(DefaultRepositorySystem.java:384)
        at org.apache.maven.project.DefaultProjectDependenciesResolver.resolve(DefaultProjectDependenciesResolver.java:192)
        ... 27 more
Caused by: org.eclipse.aether.resolution.ArtifactResolutionException: Could not find artifact org.apache.xerces:xercesImpl:jar:2.11.0 in repo.jenkins-ci.org (http://repo.jenkins-ci.org/public/)
        at org.eclipse.aether.internal.impl.DefaultArtifactResolver.resolve(DefaultArtifactResolver.java:459)
        at org.eclipse.aether.internal.impl.DefaultArtifactResolver.resolveArtifacts(DefaultArtifactResolver.java:262)
        at org.eclipse.aether.internal.impl.DefaultRepositorySystem.resolveDependencies(DefaultRepositorySystem.java:367)
        ... 28 more
Caused by: org.eclipse.aether.transfer.ArtifactNotFoundException: Could not find artifact org.apache.xerces:xercesImpl:jar:2.11.0 in repo.jenkins-ci.org (http://repo.jenkins-ci.org/public/)
        at org.eclipse.aether.connector.wagon.WagonRepositoryConnector$6.wrap(WagonRepositoryConnector.java:1012)
        at org.eclipse.aether.connector.wagon.WagonRepositoryConnector$6.wrap(WagonRepositoryConnector.java:1004)
        at org.eclipse.aether.connector.wagon.WagonRepositoryConnector$GetTask.run(WagonRepositoryConnector.java:725)
        at org.eclipse.aether.util.concurrency.RunnableErrorForwarder$1.run(RunnableErrorForwarder.java:67)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.Thread.run(Thread.java:662)
[ERROR] 
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/DependencyResolutionException
[ERROR] 
[ERROR] After correcting the problems, you can resume the build with the command
[ERROR]   mvn <goals> -rf :activemq-karaf-itest","mvn -version
Apache Maven 3.1.0 (893ca28a1da9d5f51ac03827af98bb730128f9f2; 2013-06-28 04:15:32+0200)
Maven home: /home/carlo/work/programs/apache-maven-3.1.0
Java version: 1.6.0_33, vendor: Sun Microsystems Inc.
Java home: /usr/lib/jvm/jdk1.6.0_33/jre
Default locale: en_US, platform encoding: UTF-8
OS name: ""linux"", version: ""3.11.0-15-generic"", arch: ""amd64"", family: ""unix""",ccancellieri,dkulp,githubbot,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,380460,,,Wed Mar 19 16:38:35 UTC 2014,,,,,,,,,,,"0|i1tjwn:",380741,,,,,,,,,,,,,,,,,,,,,"19/Mar/14 15:03;githubbot;GitHub user ccancellieri opened a pull request:

    https://github.com/apache/activemq/pull/17

    AMQ-5106 fix: unable to build trunk from scratch due to missing dependency (eclipse:eclipse)

    This will fix the issue:
    
    https://issues.apache.org/jira/browse/AMQ-5106


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ccancellieri/activemq trunk-AMQ-5106

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/17.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #17
    
----
commit cf8819f1e4888e0322ef95ea41964bf92ca6e58e
Author: carlo <ccancellieri@hotmail.com>
Date:   2014-03-19T14:58:48Z

    AMQ-5106 fix: unable to build trunk from scratch due to missing dependency (eclipse:eclipse)

----
;;;","19/Mar/14 15:03;ccancellieri;Here is the pull req
https://github.com/apache/activemq/pull/17;;;","19/Mar/14 15:45;gtully;don't see any problem with an exclusion but I don't understand why it would be necessary.
that dependency is available from central at http://central.maven.org/maven2/xerces/xercesImpl/2.11.0/;;;","19/Mar/14 15:49;ccancellieri;the artifactId is quite different
org.apache.xerces:xercesImpl:jar
instead of
xerces:xercesImpl:jar;;;","19/Mar/14 15:49;dkulp;It's a bug in Karaf that the karaf pom depends on the wrong ""org.apache.xerces"" version.   Moving up to Karaf 2.3.4 should also fix that issue as 2.3.4 uses the ""xerces"" groupId.;;;","19/Mar/14 15:57;gtully;got it :-)

patch applied with thanks in http://git-wip-us.apache.org/repos/asf/activemq/commit/6056fde7;;;","19/Mar/14 16:38;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/17
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
leveldb fails to startup because of NoSuchMethodError,AMQ-5105,12701719,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,dejanb,netlancermobi,netlancermobi,16/Mar/14 06:10,19/Oct/15 13:43,14/Jul/23 05:44,17/Jul/14 15:16,5.10.0,,,,,,,,,5.11.0,,,,LevelDB,,,,,0,,,,,,"leveldb persistence fails to start due to errors as given below 

 Caused by: java.lang.NoSuchMethodError: com.google.common.base.Objects.firstNonNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        at com.google.common.cache.CacheBuilder.getKeyStrength(CacheBuilder.java:530)
        at com.google.common.cache.LocalCache.<init>(LocalCache.java:238)
        at com.google.common.cache.LocalCache$LocalLoadingCache.<init>(LocalCache.java:4861)
        at com.google.common.cache.CacheBuilder.build(CacheBuilder.java:803)
        at org.iq80.leveldb.impl.TableCache.<init>(TableCache.java:46)
        at org.iq80.leveldb.impl.DbImpl.<init>(DbImpl.java:155)
        at org.iq80.leveldb.impl.Iq80DBFactory.open(Iq80DBFactory.java:59)
        at org.apache.activemq.leveldb.LevelDBClient$$anonfun$replay_init$2.apply$mcV$sp(LevelDBClient.scala:661)
        at org.apache.activemq.leveldb.LevelDBClient$$anonfun$replay_init$2.apply(LevelDBClient.scala:657)
        at org.apache.activemq.leveldb.LevelDBClient$$anonfun$replay_init$2.apply(LevelDBClient.scala:657)
        at org.apache.activemq.leveldb.LevelDBClient.might_fail(LevelDBClient.scala:549)

The problem seems to be because of multiple jars having the same classes

guava-12.jar
pax-url-aether-1.5.2.jar

The class present in pax-url-aether-1.5.2.jar gets loaded causing level db to fail.",Any,adewavrin,angus.aqlu,dejanb,hkroger,jforge,kevin2014,netlancermobi,nicdoye,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5257,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,380065,,,Tue Aug 05 13:49:42 UTC 2014,,,,,,,,,,,"0|i1thhr:",380349,,,,,,,,,,,,,,,,,,,,,"16/Mar/14 06:15;netlancermobi;Current workaround is to 
Removing pax-url-aether-1.5.2.jar and disabling logQuery in activemq.conf 

   <!-- Allows accessing the server log -->
    <!--bean id=""logQuery"" class=""org.fusesource.insight.log.log4j.Log4jLogQuery""
          lazy-init=""false"" scope=""singleton""
          init-method=""start"" destroy-method=""stop"">
    </bean-->
;;;","24/Jun/14 08:58;adewavrin;It worked for us, thanks
Anselme;;;","17/Jul/14 15:16;dejanb;This is now fixed on trunk by upgrading log-insight, which now don't use pax-url-aether jar, but shades what it needs so there's no clash in guava version. I incidentally upgraded Jackson to 2.4.1 version;;;","01/Aug/14 13:45;kevin2014;For Dejan's solution,  could you give more details?   I am using  5.10.0.

which file is  log-insight that I need to upgrade?

Thanks;;;","05/Aug/14 13:49;nicdoye;Kevin: Download insight-log4j-7.2.0.redhat-060.jar and insight-log-core-7.2.0.redhat-060.jar from, for example, http://search.maven.org/#search%7Cga%7C1%7Cinsight-log

Remove the 7.2.0-redhat-024 versions from $ACTIVEMQ_HOME/lib and the place the newly downloaded jar files in there. Also remove pax-url-aether-1.5.2.jar from the same directory.

I have LevelDB working with shared storage on 5.10.0 just by doing that. Thank you, Dejan.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Show non-durable Topic subscriptions on the web console,AMQ-5104,12701644,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,artnaseef,artnaseef,artnaseef,15/Mar/14 02:57,15/Mar/14 06:16,14/Jul/23 05:44,15/Mar/14 06:16,,,,,,,,,,5.10.0,,,,Web Console,,,,,0,,,,,,Displaying non-durable Topic subscriptions on the web console will complete access to consumer details on the webconsole.,,artnaseef,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,379990,,,Sat Mar 15 06:16:26 UTC 2014,,,,,,,,,,,"0|i1th1j:",380274,,,,,,,,,,,,,,,,,,,,,"15/Mar/14 06:16;artnaseef;Fixed with commit ae2504ab8e4c3410b2c12aa8d7f938d7df638892

Added non-durable Topic subscriptions to the Subscription page.  Also added topic-specific subscription view from the Topics page.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQ4914Test.testSendHugeMessage times out on CI boxes,AMQ-5102,12701485,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,kearls,kearls,kearls,14/Mar/14 14:55,10/Jul/14 13:52,14/Jul/23 05:44,10/Jul/14 13:52,,,,,,,,,,,,,,Test Cases,,,,,0,,,,,,"This test fails intermittently with the error below.  This is a pretty marginal case; it never fails on my laptop, and it doesn't fail on CI boxes when run on its own, only when all tests are run.

testSendHugeMessage(org.apache.activemq.transport.amqp.bugs.AMQ4914Test)  Time elapsed: 303.375 sec  <<< ERROR!
java.lang.Exception: test timed out after 300000 milliseconds
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java:485)
	at org.apache.qpid.amqp_1_0.client.Receiver.receiveFromPrefetch(Receiver.java:328)
	at org.apache.qpid.amqp_1_0.client.Receiver.receive(Receiver.java:258)
	at org.apache.qpid.amqp_1_0.jms.impl.MessageConsumerImpl.receive0(MessageConsumerImpl.java:291)
	at org.apache.qpid.amqp_1_0.jms.impl.MessageConsumerImpl.receiveImpl(MessageConsumerImpl.java:260)
	at org.apache.qpid.amqp_1_0.jms.impl.MessageConsumerImpl.receive(MessageConsumerImpl.java:235)
	at org.apache.qpid.amqp_1_0.jms.impl.MessageConsumerImpl.receive(MessageConsumerImpl.java:57)
	at org.apache.activemq.transport.amqp.bugs.AMQ4914Test.doTestSendLargeMessage(AMQ4914Test.java:104)
	at org.apache.activemq.transport.amqp.bugs.AMQ4914Test.testSendHugeMessage(AMQ4914Test.java:80)",,kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,379831,,,Thu Jul 10 13:52:11 UTC 2014,,,,,,,,,,,"0|i1tg2f:",380116,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"14/Mar/14 15:05;tabish;You can add an ignore to this, it's because we are using the crippled Proton 0.6 libs again instead of the patched one Hiram created, so until we get a Proton 0.7 sending anything but tiny AMQP messages can take a long long time.;;;","14/Mar/14 15:24;kearls;Good point Tim.  @Ignore added.
;;;","10/Jul/14 13:52;kearls;Fixed during upgrade to Proton 0.7;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MQTT SUBACK packet MUST use return code 0x80 to report failed topic subscriptions,AMQ-5101,12701396,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dhirajsb,dhirajsb,14/Mar/14 01:03,29/Apr/14 15:15,14/Jul/23 05:44,29/Apr/14 15:15,5.9.0,,,,,,,,,5.10.0,,,,MQTT,,,,,0,,,,,,"MQTT 3.1.1 spec requires that failed topic subscriptions in a SUBACK packet MUST have a return code of 0x80 instead of the requested QoS. 
A patch is included to add this behavior. ",,dejanb,dhirajsb,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Mar/14 01:38;dhirajsb;AMQ-5101.patch;https://issues.apache.org/jira/secure/attachment/12634619/AMQ-5101.patch",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,379742,,,Tue Apr 29 15:15:03 UTC 2014,,,,,,,Patch Available,,,,"0|i1tfin:",380027,,,,,,,,,,,,,,,,,,,,,"14/Mar/14 01:38;dhirajsb;Patch with unit test attached. ;;;","14/Mar/14 13:14;dejanb;I applied the patch http://git-wip-us.apache.org/repos/asf/activemq/commit/ac23b017

However, I'm seeing quite regular failings of testResendMessageId test now

{code}Tests run: 27, Failures: 0, Errors: 1, Skipped: 1, Time elapsed: 32.601 sec <<< FAILURE! - in org.apache.activemq.transport.mqtt.MQTTSSLTest
testResendMessageId(org.apache.activemq.transport.mqtt.MQTTSSLTest)  Time elapsed: 1.047 sec  <<< ERROR!
java.net.ProtocolException: Command from server contained an invalid message id: 4
	at org.fusesource.mqtt.client.CallbackConnection.completeRequest(CallbackConnection.java:723)
	at org.fusesource.mqtt.client.CallbackConnection.processFrame(CallbackConnection.java:762)
	at org.fusesource.mqtt.client.CallbackConnection.access$1500(CallbackConnection.java:51)
	at org.fusesource.mqtt.client.CallbackConnection$6.onTransportCommand(CallbackConnection.java:392)
	at org.fusesource.hawtdispatch.transport.TcpTransport.drainInbound(TcpTransport.java:709)
	at org.fusesource.hawtdispatch.transport.SslTransport.drainInbound(SslTransport.java:276)
	at org.fusesource.hawtdispatch.transport.TcpTransport$6.run(TcpTransport.java:588)
	at org.fusesource.hawtdispatch.internal.NioDispatchSource$3.run(NioDispatchSource.java:209)
	at org.fusesource.hawtdispatch.internal.SerialDispatchQueue.run(SerialDispatchQueue.java:100)
	at org.fusesource.hawtdispatch.internal.pool.SimpleThread.run(SimpleThread.java:77){code}

It's probably due the timeouts introduced in the test, but nevertheless it might be good to investigate;;;","31/Mar/14 22:38;tabish;Have you seen any more failures since all the other fixes for MQTT have gone in, seems stable here.  ;;;","29/Apr/14 15:15;tabish;Test appears to be stable now with all the other MQTT fixes that have gone in.  Can reopen if things change.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Useless or dead code in OpenWireFormat class.,AMQ-5099,12701279,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,kearls,sdcf,sdcf,13/Mar/14 17:09,19/Mar/14 18:01,14/Jul/23 05:44,19/Mar/14 18:01,5.9.0,,,,,,,,,,,,,JMS client,,,,,0,,,,,,"Method marshal has following code:
        ByteSequence sequence = null;
        // if( ma!=null ) {
        // sequence = ma.getCachedMarshalledForm(this);
        // }

        if (sequence == null) {
       ....
It makes no sense to check if sequence is null because it is set to null couple of lines above and possible value change is commented. It would be better to comment the check or remove both check and commented lines.",,sdcf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,379625,,,2014-03-13 17:09:14.0,,,,,,,,,,,"0|i1tesv:",379911,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQP Protocol doesn't send back meaningfull errors for unauthroized access,AMQ-5096,12701073,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,12/Mar/14 20:09,12/Mar/14 20:13,14/Jul/23 05:44,12/Mar/14 20:13,5.9.0,,,,,,,,,5.10.0,,,,AMQP,,,,,0,,,,,,When creating a producer or consumer with invalid credentials the AMQP protocol converter doesn't send back a meaningful error condition.  We should return UNAUTHORIZED_ACCESS instead of INERNAL_ERROR.,,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,379419,,,Wed Mar 12 20:13:53 UTC 2014,,,,,,,,,,,"0|i1tdk7:",379710,,,,,,,,,,,,,,,,,,,,,"12/Mar/14 20:13;tabish;fixed on trunk;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JoramJmsNioTests fail with NameALreadyBoundException,AMQ-5094,12700669,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,kearls,kearls,kearls,11/Mar/14 10:28,11/Mar/14 14:01,14/Jul/23 05:44,11/Mar/14 14:01,,,,,,,,,,,,,,Test Cases,,,,,0,,,,,,"After the first test case all of the other cases with fail with the message below.  It looks like something is not getting shut down properly by tearDown.  

testSetObjectProperty_2(org.objectweb.jtests.jms.conform.message.properties.MessagePropertyTest)  Time elapsed: 2.01 sec  <<< ERROR!
java.lang.RuntimeException: java.lang.RuntimeException: javax.naming.NameAlreadyBoundException: testQCF
	at org.objectweb.jtests.jms.framework.PTPTestCase.setUp(PTPTestCase.java:134)
	at junit.framework.TestCase.runBare(TestCase.java:139)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:264)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:153)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: java.lang.RuntimeException: javax.naming.NameAlreadyBoundException: testQCF
	at org.apache.activemq.transport.amqp.joram.ActiveMQAdmin.createConnectionFactory(ActiveMQAdmin.java:185)
	at org.apache.activemq.transport.amqp.joram.ActiveMQAdmin.createQueueConnectionFactory(ActiveMQAdmin.java:200)
	at org.objectweb.jtests.jms.framework.PTPTestCase.setUp(PTPTestCase.java:110)
	at junit.framework.TestCase.runBare(TestCase.java:139)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:264)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:153)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: javax.naming.NameAlreadyBoundException: testQCF
	at org.eclipse.jetty.jndi.NamingContext.addBinding(NamingContext.java:1252)
	at org.eclipse.jetty.jndi.local.localContextRoot.bind(localContextRoot.java:592)
	at org.eclipse.jetty.jndi.local.localContextRoot.bind(localContextRoot.java:550)
	at javax.naming.InitialContext.bind(InitialContext.java:419)
	at org.apache.activemq.transport.amqp.joram.ActiveMQAdmin.createConnectionFactory(ActiveMQAdmin.java:183)
	at org.apache.activemq.transport.amqp.joram.ActiveMQAdmin.createQueueConnectionFactory(ActiveMQAdmin.java:200)
	at org.objectweb.jtests.jms.framework.PTPTestCase.setUp(PTPTestCase.java:110)
	at junit.framework.TestCase.runBare(TestCase.java:139)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:264)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:153)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
",,kearls,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,379012,,,Tue Mar 11 14:01:48 UTC 2014,,,,,,,,,,,"0|i1tb2f:",379304,,,,,,,,,,,,,,,,,,,,,"11/Mar/14 14:01;kearls;Fix  c8a5fb769e9acc68f7a83c9d8b37682a4225de25 in AmqpNioTransportHelper.  Fixed one spot where currentBuffer was not set to null after being consumed. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ampq with nio or nio+ssl fails when sending large messages,AMQ-5093,12700667,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,kearls,kearls,kearls,11/Mar/14 10:17,11/Mar/14 11:01,14/Jul/23 05:44,11/Mar/14 11:01,,,,,,,,,,,,,,,,,,,0,,,,,,"This can be reproduced with the test case shown below, which I will add to JMSClientTest.

public void testSendLargeMessage() throws JMSException, InterruptedException {
        Connection connection = createConnection();
        Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
        String queueName = name.toString();
        Queue queue = session.createQueue(queueName);

        MessageProducer producer=session.createProducer(queue);
        int messageSize = 1024 * 1024;
        String messageText = createLargeString(messageSize);
        Message m=session.createTextMessage(messageText);
        LOG.debug(""Sending message of {} bytes on queue {}"", messageSize, queueName);
        producer.send(m);

        MessageConsumer  consumer=session.createConsumer(queue);

        Message message = consumer.receive();
        assertNotNull(message);
        assertTrue(message instanceof TextMessage);
        TextMessage textMessage = (TextMessage) message;
        LOG.debug("">>>> Received message of length {}"", textMessage.getText().length());
        assertEquals(messageSize, textMessage.getText().length());
        assertEquals(messageText, textMessage.getText());
    }
",,kearls,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,379010,,,Tue Mar 11 11:01:14 UTC 2014,,,,,,,,,,,"0|i1tb1z:",379302,,,,,,,,,,,,,,,,,,,,,"11/Mar/14 11:01;kearls;Fixed with commit 87420cc455f6e02d5249bfe29b105f4e1e345969;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MQTT uses duplicate packet IDs for PUBLISH messages,AMQ-5092,12700632,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,dhirajsb,dhirajsb,11/Mar/14 03:48,02/May/14 10:13,14/Jul/23 05:44,02/May/14 10:13,5.9.0,,,,,,,,,5.10.0,,,,MQTT,,,,,0,,,,,,"MQTT protocol converters does not correctly generate unique packet ids for retained and non-retained publish messages sent to clients. MQTT requires that all Publish messages with QoS > 0 must have a unique packet id which can be used by clients to coordinate the PUBACK, PUBREC, PUBREL and PUBCOMP messages depending upon the QoS flow. 

Although retained messages published on creation of client subscriptions are copies of retained messages, they must carry a unique packet id when dispatched to clients. ActiveMQ re-uses the retained message's packet id, which makes it difficult to acknowledge these messages when wildcard topics are used. 

ActiveMQ also sends the same non-retained message multiple times for every matching subscription for overlapping subscriptions. These messages also re-use the publisher's message id as the packet id, which breaks client acknowledgment. 

A patch is included, which fixes all the above scenarios. It generates a unique packet id for every publish (retained and non-retained), and also ensures that redelivery on the same connection will re-use message ids, with the dup flag set. The patch also maps JMS redelivery status for a subscription to the MQTT Dup flag to indicate duplicate messages. Unit tests are included to test correct packet id generation. ",,dejanb,dhirajsb,gtully,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Mar/14 03:58;dhirajsb;AMQ-5092.patch;https://issues.apache.org/jira/secure/attachment/12633848/AMQ-5092.patch","11/Mar/14 20:48;dhirajsb;AMQ-5092.patch2;https://issues.apache.org/jira/secure/attachment/12634001/AMQ-5092.patch2","21/Mar/14 20:53;dhirajsb;AMQ-5092.patch3;https://issues.apache.org/jira/secure/attachment/12636107/AMQ-5092.patch3","24/Mar/14 14:01;dhirajsb;AMQ-5092.patch4;https://issues.apache.org/jira/secure/attachment/12636331/AMQ-5092.patch4",,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,378349,,,Fri May 02 10:13:50 UTC 2014,,,,,,,Patch Available,,,,"0|i1t6zb:",378641,,,,,,,,,,,,,,,,,,,,,"11/Mar/14 03:58;dhirajsb;Patch to fix MQTT publish packet id generation;;;","11/Mar/14 13:57;dejanb;Hi Dhiraj,

I ran the tests with the patch and I think I see a regression.

{code}testResendMessageId(org.apache.activemq.transport.mqtt.MQTTSSLTest)  Time elapsed: 0.039 sec  <<< ERROR!
java.net.ProtocolException: Command from server contained an invalid message id: 2{code}

Wonder if you can reproduce this on your side?;;;","11/Mar/14 20:04;dhirajsb;Hi Dejan,

I was able to reproduce the error, but the failure doesn't happen every time the tests are run. I investigated a little more and looks like its related to AMQ-4712. The tests fail when the client apparently reads the same SUBACK packet twice, even though the server only sends it once. 

Since the same tests have no issues in the non-SSL MQTTTest, it seems like an issue in SslProtocolCodec.secure_read(). But I am not familiar with the code so can't narrow it down further. 

Can we mark the failing test as ignored in MQTTSSLTest for now, and get the fix in for non-SSL case? 

Thanks,
Dhiraj. ;;;","11/Mar/14 20:35;dhirajsb;On further testing, it doesn't seem to be happening in SslProtocolCodec.secure_read(). Its hard to pin down where its happening, MQTTProtocolCodec seems to be reading the same buffer twice, but I can't determine why its doing so. ;;;","11/Mar/14 20:48;dhirajsb;I am attaching an updated patch with a fix in a unit test for another intermittent failure when messages arrive slightly out of order for overlapping subscriptions. I have also refined the tests to add a slight delay after removing and creating subscriptions in testResendMessageId(), which seems to let the test pass now. 

Please test with the updated patch instead of the previous one. ;;;","12/Mar/14 13:01;gtully;patch applied with thanks in http://git-wip-us.apache.org/repos/asf/activemq/commit/67f151fe;;;","21/Mar/14 19:58;dhirajsb;Packet id generation must resume id sequence after client reconnects;;;","21/Mar/14 20:53;dhirajsb;Attaching patch3 to fix packet id generation, resolves resendMessageId() test failures, also adds a couple of extra unit tests to check id generation for cleansession=0 and cleansession=1;;;","21/Mar/14 21:11;tabish;patch applied on trunk with thanks.  Tests are all passing here.;;;","24/Mar/14 13:56;dhirajsb;Thanks Tim. I pulled from masterrep/trunk and see that the changes to MQTTTest in .patch3 were not merged. ;;;","24/Mar/14 14:01;dhirajsb;Adding patch4 for unit tests for cleansession 0 and 1 id generation;;;","24/Mar/14 14:17;tabish;Added in the missing test. ;;;","29/Apr/14 15:17;tabish;Dhiraj, can we consider this resolved now?;;;","02/May/14 04:04;dhirajsb;[~tabish121] Yes, we can mark this resolved;;;","02/May/14 10:13;tabish;Fixed on trun;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Improve Failover transport transaction tracking,AMQ-5090,12699395,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,07/Mar/14 11:03,02/Apr/14 21:43,14/Jul/23 05:44,07/Mar/14 11:10,5.9.0,,,,,,,,,5.10.0,5.9.1,,,,,,,,0,,,,,,If corrupted TransactionInfo (with transactionId=null) comes to FailoverTransport.oneway() it can lead to eternal reconnect loop as tracking of the command will fail. We need to check transactionId and not trigger reconnect if tracking fails.,,dejanb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,377742,,,Fri Mar 07 11:10:05 UTC 2014,,,,,,,,,,,"0|i1t38n:",378034,,,,,,,,,,,,,,,,,,,,,"07/Mar/14 11:10;dejanb;Fixed with http://git-wip-us.apache.org/repos/asf/activemq/commit/8188f7f8;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Inflight Count for topics is not correct,AMQ-5089,12699366,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,anujkhandelwal,anujkhandelwal,07/Mar/14 08:55,17/Jul/15 18:42,14/Jul/23 05:44,19/Mar/14 15:36,5.8.0,,,,,,,,,5.10.0,,,,Broker,,,,,0,,,,,,"Hi,

It is coming from: 
http://activemq.2283324.n4.nabble.com/Inflight-Count-for-topics-not-correct-td4678407.html#a4678583


Problem:  Inflight count is not going down for topics once consumer is disconnected or sent acknowledgements for the messages it has received.
For topics once inflight count is increased, it is never going back down. 


Test Scenario: 
When a producer and a consumer connected to the broker but consumer is little bit slow, there will be inflight messages in the broker which are not yet acknowledged. 
Case 1 :Now after some time when consumer acknowledged the messages, than inflight count should decrease, but that is not happening for topics.
Case 2 :Now If at this point of time, I stop consumer broker should make inflight count to '0' because those messages are not inflight now. (for queue these are now held messages and for topic those messages are dropped). But when I check in Jconsole, I found that: for a queue it is working fine and going down to 0 but for topics inflight count is not changing.



Test Case: I tested with normal java consumer subscribing to a topic, I put thread.sleep(5000) while receiving messages. Now consumer will take time to acknowledge messages which are received. So that we can see inflight messages. 
Now after 5 seconds, consumer has received the messages and also sent acknowledgement to the broker but inflight count is not decreasing. Now if I disconnects consumer inflight count should go down to '0', again here also it is not changing for that topic.



Thanks,
Anuj ",,anujkhandelwal,gtully,satramas,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQCPP-578,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,377713,,,Wed Mar 19 15:36:30 UTC 2014,,,,,,,,,,,"0|i1t32f:",378005,,,,,,,,,,,,,,,,,,,,,"11/Mar/14 15:56;anujkhandelwal;Did anybody get a chance to look at this ?;;;","11/Mar/14 16:26;gtully;I had a quick peek just now, it looks like we could improve this, we track the enqueue/dequeue count for a topic sub but don't subtract the difference from the destination inflight when the consumer goes away with pending acks. As it stands, one abortive consumer can skew the metric for the destination which otherwise would be some indication of how slow consumers are. However for topics the broker does not really care b/c there is no broker side state for non durable topic subs.;;;","19/Mar/14 15:36;gtully;fix in http://git-wip-us.apache.org/repos/asf/activemq/commit/b136df17

client ack is now respected for topics subs - and counters decremented on ack rather than on delivered ack.
expired case now has its own ack type so it can be separate from delivered ack.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RedeliveryPolicy redeliveryDelay is ignored if initialRedeliveryDelay is specified ,AMQ-5087,12699282,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,06/Mar/14 22:35,02/Apr/14 21:43,14/Jul/23 05:44,06/Mar/14 22:42,5.9.0,,,,,,,,,5.10.0,5.9.1,,,Broker,JMS client,,,,0,initialRedeliveryDelay,redeliveryPolicy,,,,"If we specify RedeliveryPolicy initialRedeliveryDelay and no exponent the value is used for every redelivery attempt, not just the first.",,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,377629,,,Thu Mar 06 22:42:08 UTC 2014,,,,,,,,,,,"0|i1t2jz:",377922,,,,,,,,,,,,,,,,,,,,,"06/Mar/14 22:42;gtully;fix in http://git-wip-us.apache.org/repos/asf/activemq/commit/33b88d34

initialRedeliveryDelay used for first attempt
redeliveryDelay is now used for subsequent attempts;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
vm transport create=false&waitForStart race condition,AMQ-5086,12699227,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,cmamen,cmamen,06/Mar/14 18:30,16/Dec/14 00:00,14/Jul/23 05:44,09/Jun/14 19:46,5.7.0,5.8.0,5.9.0,,,,,,,5.10.1,5.11.0,,,Broker,,,,,0,,,,,,"Experience this bug on 5.7.0, I think this is the same on the trunk

using vm transport for a client to connect to an embedded broker, in a multithreaded application, I'm experiencing a an error (sometimes) which appears to be a race condition at startup.

Im using create=false and waitForStart to create a connectionFactory for a client connection
vm://ApplicationName?create=false&waitForStart=120000

The broker service is started in a seperate thread

the client connection is started first. but surprisingly it tries start the brokers transport connector. An apparent glitch follows when the broker service stops and re-start the transport.

{noformat}
2014-03-05 11:07:57,626 [ClientConnection_thread] INFO  org.apache.activemq.broker.TransportConnector - Connector vm://ApplicationName Started
[...]
2014-03-05 11:08:07,009 [Main_thread] INFO  org.apache.activemq.broker.TransportConnector - Connector vm://ApplicationName Stopped
2014-03-05 11:08:07,011 [Main_thread] INFO  org.apache.activemq.broker.TransportConnector - Connector vm://ApplicationName Started
{noformat}

I look into the activemq source and saw this:

BrokerService.class
{code}
public void start() throws Exception {
[...]
    // in jvm master slave, lets not publish over existing broker till we get the lock
    final BrokerRegistry brokerRegistry = BrokerRegistry.getInstance();
    if (brokerRegistry.lookup(getBrokerName()) == null) {
            brokerRegistry.bind(getBrokerName(), BrokerService.this);
    }
    startPersistenceAdapter(startAsync);
    startBroker(startAsync);
    brokerRegistry.bind(getBrokerName(), BrokerService.this);
{code}

VMTransportFactory.class
{code}
    private BrokerService lookupBroker(final BrokerRegistry registry, final String brokerName, int waitForStart) {
        BrokerService broker = null;
        synchronized(registry.getRegistryMutext()) {
            broker = registry.lookup(brokerName);
            if (broker == null && waitForStart > 0) {
                final long expiry = System.currentTimeMillis() + waitForStart;
                while (broker == null  && expiry > System.currentTimeMillis()) {
                    long timeout = Math.max(0, expiry - System.currentTimeMillis());
                    try {
                        LOG.debug(""waiting for broker named: "" + brokerName + "" to start"");
                        registry.getRegistryMutext().wait(timeout);
                    } catch (InterruptedException ignored) {
                    }
                    broker = registry.lookup(brokerName);
                }
            }
        }
        return broker;
    }
{code}

It appears that create=false and waitForStart only waits for the broker to be added to the BrokerRegistry. However when the brokerService is starts, it seems that the broker is added to the registry before it is started.

I believe some synchronization is missing make the VMTransportFactory wait for the broker not only to be added to the registry, but also fully started.










",,cmamen,tabish,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/May/14 16:55;tabish;AMQ5086.patch;https://issues.apache.org/jira/secure/attachment/12643389/AMQ5086.patch",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,377574,,,Mon Jun 09 19:46:54 UTC 2014,,,,,,,,,,,"0|i1t27z:",377868,,,,,,,,,,,,,,,,,,,,,"05/May/14 16:54;tabish;Would be great if you could come up with a test case to reproduce this issue.  I'll attach a patch file here that I think should address your issue but a test would be needed to ensure it stays fixed into the future.  ;;;","09/Jun/14 19:46;tabish;Added a proper wait for start and some tests. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RAR - missing messages on master slave failover,AMQ-5080,12698413,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,03/Mar/14 13:13,10/Sep/14 13:32,14/Jul/23 05:44,03/Mar/14 15:16,5.9.0,,,,,,,,,5.10.0,5.11.0,,,JCA Container,,,,,0,2PC,MDB,RAR,XA,,"With repeated failover between master and slave and mdb that consumers from A and sends to B in a transaction we can -
a) loose some messages acked as duplicates in error
b) duplicate some messages when acks are lost in error but don't force a rollback.

A long running test that consumers/produces 20k messages with a failover every 200 messages eventually shows up various problems. With XA recovery and async completion - there are many code path variations.",,fertroya,gtully,lichtin,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,376771,,,Wed Sep 10 13:32:56 UTC 2014,,,,,,,,,,,"0|i1sxaf:",377066,,,,,,,,,,,,,,,,,,,,,"03/Mar/14 15:16;gtully;fix in https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=e8818faf

brokerUrl {code}failover:(...)?maxReconnectAttempts=0{code};;;","09/Sep/14 19:59;fertroya;Hi [~gtully] I've noticed this commit refers to this fix as well https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=207d4cdee682b65f3c434b51f440b1b6c28eefbd but it's commit date is the 28/Jul/14.

The release date for 5.10.0 is prior to that, as you can see in Maven Central http://central.maven.org/maven2/org/apache/activemq/activemq-rar/5.10.0/

When is this fix (containing the last commit) suppose to be delivered?
Is the Fix Version field wrong?

Thanks;;;","10/Sep/14 13:32;gtully;@Fer that refinement will make 5.11;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQP Transport throws unauthorized access for all error that occur during a connection attempt,AMQ-5075,12697002,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,tabish,tabish,24/Feb/14 21:08,24/Feb/14 21:10,14/Jul/23 05:44,24/Feb/14 21:10,5.9.0,,,,,,,,,5.10.0,,,,AMQP,,,,,0,,,,,,When a client attempts to connect and the attempt fails for things other than a security violation the broker should set a different ErrorCondition on the Proton transport.  For instance the InvalidClientIdException shouldn't trigger that error but instead should trigger an INVALID_FIELD condition.  ,,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,375477,,,Mon Feb 24 21:10:32 UTC 2014,,,,,,,,,,,"0|i1spbr:",375773,,,,,,,,,,,,,,,,,,,,,"24/Feb/14 21:10;tabish;Fixed on trunk;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MQTT paths with empty levels are not handled correctly,AMQ-5074,12696598,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,dhirajsb,dhirajsb,21/Feb/14 17:53,21/Mar/14 20:10,14/Jul/23 05:44,24/Feb/14 14:07,5.9.0,,,,,,,,,5.10.0,,,,MQTT,,,,,0,,,,,,"MQTT allows empty """" names for path levels, for example /TopicA has two levels, """" and TopicA, similarly TopicA/ has two levels TopicA and """". The leading and trailing '/' in MQTT is significant. 

The '/' character in MQTT paths and filters is mapped to '.' in ActiveMQ, which leads to names like '.TopicA' and 'TopicA.'. However, ActiveMQ ignores empty path levels, although, they are just as significant for ActiveMQ. Although these path names are not common in ActiveMQ, which maybe the reason why the issue hasn't been discovered until now. 

ActiveMQ needs to treat empty levels as significant, and pattern match accordingly. This requires change to ActiveMQDestination.getDestinationPaths() and some code cleanup in DestinationMap related classes and Destination filtering classes. A patch is attached (along with unit tests) to address this issue. ",,dhirajsb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4884,,,"21/Feb/14 17:54;dhirajsb;AMQ-5074.patch;https://issues.apache.org/jira/secure/attachment/12630344/AMQ-5074.patch",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,375074,,,Mon Feb 24 14:07:25 UTC 2014,,,,,,,Patch Available,,,,"0|i1smuv:",375373,,,,,,,,,,,,,,,,,,,,,"21/Feb/14 17:54;dhirajsb;Patch attached to fix MQTT and ActiveMQ wildcard matching. ;;;","24/Feb/14 14:07;chirino;Patch applied.. Many thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Session.commit() hangs when amqp+nio+ssl is used,AMQ-5073,12696590,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,kearls,kearls,kearls,21/Feb/14 17:27,28/Feb/14 16:53,14/Jul/23 05:44,28/Feb/14 16:53,5.9.0,,,,,,,,,5.10.0,,,,,,,,,0,,,,,,"This is similar to AMQ-5042.  To reproduce run JMSClientTest.testSessionTransactedCommit using nio+ssl.  (I will add JMSClientNioPlusSslTest shortly)

",,kearls,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,375066,,,Fri Feb 28 16:53:24 UTC 2014,,,,,,,,,,,"0|i1smt3:",375365,,,,,,,,,,,,,,,,,,,,,"28/Feb/14 16:53;kearls;Updated AmqpNioSslTransport.processCommand to handle frames properly.

See checkin 2360fb859694bacac1e48092e53a56b388e1d2f0
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong or incomplete log message in PooledTaskRunner class.,AMQ-5071,12696526,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,sdcf,sdcf,21/Feb/14 13:28,02/Apr/14 21:44,14/Jul/23 05:44,21/Feb/14 17:15,5.9.0,,,,,,,,,5.10.0,5.9.1,,,,,,,,0,client,,,,,"Shutdown method provide incomplete trace information because second variable is missing for second {} in LOG.trace(...)
  /**
     * shut down the task
     *
     * @throws InterruptedException
     */
    public void shutdown(long timeout) throws InterruptedException {
        LOG.trace(""Shutdown timeout: {} task: {}"", task);

Should be changed to:
 LOG.trace(""Shutdown timeout: {} task: {}"", timeout,task);",,sdcf,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,375002,,,Sat Feb 22 22:22:41 UTC 2014,,,,,,,,,,,"0|i1smev:",375301,,,,,,,,,,,,,,,,,,,,,"22/Feb/14 19:40;sdcf;The class DedicatedTaskRunner has the same bug. Could you please fix it too?;;;","22/Feb/14 22:22;tabish;Done;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broker should stop accepting work when trying to shut down transports,AMQ-5070,12696491,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,21/Feb/14 10:20,02/Apr/14 21:44,14/Jul/23 05:44,21/Feb/14 10:36,5.9.0,,,,,,,,,5.10.0,5.9.1,,,,,,,,0,,,,,,"While broker is shutting down, rarely in overstressed environment, it can block for a while trying to stop transport connections. In those situations we should prevent the broker from accepting any work (new connections and commands through existing ones). ",,dejanb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,374967,,,Fri Feb 21 10:36:37 UTC 2014,,,,,,,,,,,"0|i1sm73:",375266,,,,,,,,,,,,,,,,,,,,,"21/Feb/14 10:36;dejanb;Fixed with http://git-wip-us.apache.org/repos/asf/activemq/commit/c6fe94ec;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support hardening/persisting the JMSRedeliveryFlag across restarts,AMQ-5068,12696246,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,20/Feb/14 13:47,11/Dec/15 17:34,14/Jul/23 05:44,26/Mar/14 11:21,5.9.0,,,,,,,,,5.10.0,,,,Message Store,,,,,0,JMSRedelivered,persistence,recovery,redelivery,,"WMQ supports a HARDENBO[1] flag on the redelivery flag impl. Which persists before dispatch. And has a corresponding performance impact.
So we need to implement an additional journal command to persist delivery attempts and update the counter on restart/recovery to get parity.

This will allow the redeliverFlag to be guaranteed to flag a potential duplicate dispatch in the event of a hard broker failure just after dispatch.

[1] http://publib.boulder.ibm.com/infocenter/wmqv7/v7r0/index.jsp?topic=%2Fcom.ibm.mq.explorer.doc%2Fe_properties_queues.htm
",,gtully,jira-bot,lichtin,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3519,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,374722,,,Fri Dec 11 17:34:49 UTC 2015,,,,,,,,,,,"0|i1skov:",375022,,,,,,,,,,,,,,,,,,,,,"14/Mar/14 14:50;gtully;The persisting on rollback is fine when the broker stays alive or dies after a rollback or shuts down gracefully.
But if there is no transaction, or the broker aborts (and does not get a chance to write any more) we have a problem.

This new solution requires writing 'before' we dispatch, so if we reread the store we know it 'may be' a duplicate dispatch.

It is about duplicate dispatch rather than duplicate delivery.;;;","26/Mar/14 11:21;gtully;Fix in http://git-wip-us.apache.org/repos/asf/activemq/commit/266d23ef

enabled via destination policy{code}<policyEntry ... persistJMSRedelivered=""true"" />{code}

This ensures that the JMSRedelivered header will always be set on a restart.
Note: this is only done once, to preserve the redelivered flag. the redelivery count is not preserved.;;;","26/Mar/14 11:21;gtully;implemented for kahadb, leveldb and jdbc message stores.;;;","11/Dec/15 17:06;jira-bot;Commit c78eddce7ed3045b5508dd6713252dca8766436c in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=c78eddc ]

revert sync ack send for https://issues.apache.org/jira/browse/AMQ-3519 due to rework in https://issues.apache.org/jira/browse/AMQ-5068 - sync send no longer needed because redelivered flag is persisted before dispatch. This avoids a roundtrip overhead on individual ack, ie priority or nonBlockingRedelivery options in the mix
;;;","11/Dec/15 17:34;jira-bot;Commit f8488916c2cc04c402e437fdbc2f61f118189d08 in activemq's branch refs/heads/activemq-5.13.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=f848891 ]

revert sync ack send for https://issues.apache.org/jira/browse/AMQ-3519 due to rework in https://issues.apache.org/jira/browse/AMQ-5068 - sync send no longer needed because redelivered flag is persisted before dispatch. This avoids a roundtrip overhead on individual ack, ie priority or nonBlockingRedelivery options in the mix

(cherry picked from commit c78eddce7ed3045b5508dd6713252dca8766436c)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Duplicate MQTT Subscription with a different QoS for the same Topic MUST remove the older Subscription,AMQ-5066,12696018,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,dhirajsb,dhirajsb,19/Feb/14 17:38,19/Feb/14 19:13,14/Jul/23 05:44,19/Feb/14 19:13,5.9.0,,,,,,,,,5.10.0,,,,MQTT,,,,,0,,,,,,"When a client sends a SUBSCRIBE message with the same Topic/Filter as a previous SUBSCRIBE message but a different QoS, the Server MUST discard the older subscription, and resend all retained messages limited to the new Subscription QoS. ",,dhirajsb,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Feb/14 18:06;dhirajsb;AMQ-5066.patch;https://issues.apache.org/jira/secure/attachment/12629824/AMQ-5066.patch",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,374495,,,Wed Feb 19 19:13:37 UTC 2014,,,,,,,Patch Available,,,,"0|i1sjaf:",374795,,,,,,,,,,,,,,,,,,,,,"19/Feb/14 18:06;dhirajsb;Patch for duplicate subscriptions, apply after patch for AMQ-5065;;;","19/Feb/14 19:13;tabish;Patch applied;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MQTT Retained message QoS must be set to a maximum of Subscription's QoS,AMQ-5065,12696016,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,dhirajsb,dhirajsb,19/Feb/14 17:29,19/Feb/14 19:10,14/Jul/23 05:44,19/Feb/14 19:10,5.9.0,,,,,,,,,5.10.0,,,,MQTT,,,,,0,,,,,,Retained messages must have a QoS of either the one set by the original publisher of the message or the maximum of the QoS of the subscription QoS granted to a receiver. ,,dhirajsb,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Feb/14 17:34;dhirajsb;AMQ-5065.patch;https://issues.apache.org/jira/secure/attachment/12629817/AMQ-5065.patch",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,374493,,,Wed Feb 19 19:10:09 UTC 2014,,,,,,,,,,,"0|i1sj9z:",374793,,,,,,,,,,,,,,,,,,,,,"19/Feb/14 17:34;dhirajsb;Attached patch to set Retained message QoS to maximum of Subscription QoS;;;","19/Feb/14 19:10;tabish;Patch applied. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMSClientNioTest fails intermittently,AMQ-5062,12695660,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,kearls,kearls,kearls,18/Feb/14 09:57,28/Feb/14 16:54,14/Jul/23 05:44,28/Feb/14 16:54,5.9.0,,,,,,,,,5.10.0,,,,AMQP,,,,,0,,,,,,"I'm not sure whether this is just a test issue.  All test cases pass if run individually, and sometimes the whole test suite passes.  Other times, however, it gets errors like those shown below.  Depending on the run, different test cases will fail.

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.apache.activemq.transport.amqp.JMSClientNioTest
Tests run: 21, Failures: 3, Errors: 1, Skipped: 0, Time elapsed: 343.636 sec <<< FAILURE! - in org.apache.activemq.transport.amqp.JMSClientNioTest
testExecptionListenerCalledOnBrokerStop(org.apache.activemq.transport.amqp.JMSClientNioTest)  Time elapsed: 21.063 sec  <<< FAILURE!
java.lang.AssertionError: No exception listener event fired.
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at org.apache.activemq.transport.amqp.JMSClientTest.testExecptionListenerCalledOnBrokerStop(JMSClientTest.java:715)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)

testTopicConsumerSync(org.apache.activemq.transport.amqp.JMSClientNioTest)  Time elapsed: 77.172 sec  <<< ERROR!
java.lang.Exception: test timed out after 45000 milliseconds
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java:503)
	at org.apache.qpid.amqp_1_0.transport.ConnectionEndpoint.open(ConnectionEndpoint.java:154)
	at org.apache.qpid.amqp_1_0.client.Connection.<init>(Connection.java:284)
	at org.apache.qpid.amqp_1_0.client.Connection.<init>(Connection.java:143)
	at org.apache.qpid.amqp_1_0.jms.impl.ConnectionImpl.connect(ConnectionImpl.java:115)
	at org.apache.qpid.amqp_1_0.jms.impl.ConnectionImpl.start(ConnectionImpl.java:284)
	at org.apache.activemq.transport.amqp.JMSClientTest.createConnection(JMSClientTest.java:794)
	at org.apache.activemq.transport.amqp.JMSClientTest.createConnection(JMSClientTest.java:754)
	at org.apache.activemq.transport.amqp.JMSClientTest.testTopicConsumerSync(JMSClientTest.java:626)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)

testConsumerReceiveTimedThrowsWhenBrokerStops(org.apache.activemq.transport.amqp.JMSClientNioTest)  Time elapsed: 12.525 sec  <<< FAILURE!
java.lang.AssertionError: Should have thrown an IllegalStateException
	at org.junit.Assert.fail(Assert.java:88)
	at org.apache.activemq.transport.amqp.JMSClientTest.testConsumerReceiveTimedThrowsWhenBrokerStops(JMSClientTest.java:411)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)

testConsumerReceiveNoWaitThrowsWhenBrokerStops(org.apache.activemq.transport.amqp.JMSClientNioTest)  Time elapsed: 12.515 sec  <<< FAILURE!
java.lang.AssertionError: Should have thrown an IllegalStateException
	at org.junit.Assert.fail(Assert.java:88)
	at org.apache.activemq.transport.amqp.JMSClientTest.testConsumerReceiveNoWaitThrowsWhenBrokerStops(JMSClientTest.java:380)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)


Results :

Failed tests: 
  JMSClientNioTest>JMSClientTest.testExecptionListenerCalledOnBrokerStop:715 No exception listener event fired.
  JMSClientNioTest>JMSClientTest.testConsumerReceiveTimedThrowsWhenBrokerStops:411 Should have thrown an IllegalStateException
  JMSClientNioTest>JMSClientTest.testConsumerReceiveNoWaitThrowsWhenBrokerStops:380 Should have thrown an IllegalStateException

Tests in error: 
  JMSClientNioTest>JMSClientTest.testTopicConsumerSync:626->JMSClientTest.createConnection:754->JMSClientTest.createConnection:794->Object.wait:503->Object.wait:-2 » 

Tests run: 21, Failures: 3, Errors: 1, Skipped: 0
",,kearls,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,374168,,,Fri Feb 28 16:54:56 UTC 2014,,,,,,,,,,,"0|i1sh9r:",374468,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"28/Feb/14 16:54;kearls;Fixed as part of AMQ-5073;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"The first packet from client to Broker MUST be a CONNECT packet, Broker MUST disconnect when UNSUBSCRIBE is the first packet",AMQ-5059,12695563,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,dhirajsb,dhirajsb,17/Feb/14 18:04,17/Feb/14 18:34,14/Jul/23 05:44,17/Feb/14 18:34,5.9.0,,,,,,,,,5.10.0,,,,MQTT,,,,,0,,,,,,The method MQTTProtocolConverter.onUnSubscribe(UNSUBSRIBE command) does not call checkConnected() to check whether CONNECT has already been received or not. ,,dhirajsb,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Feb/14 18:10;dhirajsb;AMQ-5059.patch;https://issues.apache.org/jira/secure/attachment/12629409/AMQ-5059.patch",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,374071,,,Mon Feb 17 18:34:08 UTC 2014,,,,,,,Patch Available,,,,"0|i1sgof:",374371,,,,,,,,,,,,,,,,,,,,,"17/Feb/14 18:10;dhirajsb;Patch to check connection status on unsubscribe;;;","17/Feb/14 18:34;tabish;patch applied;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broker MUST respond with CONNACK with return code 0x02 for zero length client id and 0 cleansession,AMQ-5058,12695557,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,dhirajsb,dhirajsb,17/Feb/14 17:11,17/Feb/14 17:36,14/Jul/23 05:44,17/Feb/14 17:36,5.9.0,,,,,,,,,5.10.0,,,,MQTT,,,,,0,,,,,,"The CONNECT.decode() method from mqtt-client had an issue which has been fixed in https://github.com/fusesource/mqtt-client/pull/31
Wit this fix MQTTProtocolConverter.onConnect() can now check for the condition outlined below and return a CONNACK with return code 0x02. 

From MQTT 3.1.1 draft specification

[MQTT-3.1.3-6] A Server MAY allow a Client to supply a ClientId that has a length of zero bytes.
However if it does so the Server MUST treat this as a special case and assign a
unique ClientId to that Client. It MUST then process the CONNECT packet as if
the Client had provided that unique ClientId.
[MQTT-3.1.3-7] If the Client supplies a zero-byte ClientId, the Client MUST also set Clean
Session to 1.
[MQTT-3.1.3-8] If the Client supplies a zero-byte ClientId with Clean Session set to 0, the Server
MUST respond to the CONNECT Packet with a CONNACK return code 0x02
(Identifier rejected) and then close the Network Connection.
[MQTT-3.1.3-9] If the Server rejects the ClientId it MUST respond to the CONNECT Packet with
a CONNACK return code 0x02 (Identifier rejected) and then close the Network
Connection.",,dhirajsb,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Feb/14 17:12;dhirajsb;AMQ-5058.patch;https://issues.apache.org/jira/secure/attachment/12629400/AMQ-5058.patch",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,374065,,,Mon Feb 17 17:36:27 UTC 2014,,,,,,,Patch Available,,,,"0|i1sgn3:",374365,,,,,,,,,,,,,,,,,,,,,"17/Feb/14 17:12;dhirajsb;Patch for adding support for zero length client id;;;","17/Feb/14 17:36;tabish;applied on trunk;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Display the number of active transactions and age of oldest transaction on a Connection's JMX info,AMQ-5054,12695262,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,14/Feb/14 18:57,02/Apr/14 21:47,14/Jul/23 05:44,14/Feb/14 21:21,,,,,,,,,,5.10.0,5.9.1,,,Broker,,,,,0,,,,,,Long running transactions can affect the ability of KahaDB to gc log files.  Being able to identify which connections have the long running transactions would operations folks deal with these problems.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,373770,,,Fri Feb 14 21:21:40 UTC 2014,,,,,,,,,,,"0|i1setr:",374070,,,,,,,,,,,,,,,,,,,,,"14/Feb/14 21:21;chirino;Implemented.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BrokerRedeliveryTest.testNoScheduledRedeliveryOfExpired fails intermittently,AMQ-5053,12695224,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,,kearls,kearls,14/Feb/14 15:08,14/Feb/14 15:09,14/Jul/23 05:44,14/Feb/14 15:09,,,,,,,,,,,,,,Test Cases,,,,,0,,,,,,"This happens fairly regularly on CI boxes, at least on AWS.  For some reason the producerConnection.close() in sendMessage occasionally takes just over 1000 ms, which means the message expires before the test has a chance to receive it.
",,kearls,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,373732,,,Fri Feb 14 15:09:34 UTC 2014,,,,,,,,,,,"0|i1selb:",374032,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"14/Feb/14 15:09;kearls;Increased TTL from 1000 to 1500;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DemandForwardingBridgeSupport has noisy log,AMQ-5052,12695161,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,shooeugenesea.tw,shooeugenesea.tw,14/Feb/14 08:24,31/Mar/14 22:43,14/Jul/23 05:44,31/Mar/14 22:43,,,,,,,,,,5.10.0,,,,,,,,,0,,,,,,"DemandForwardingBridgeSupport#serviceRemoteConsumerAdvisory has a code:

            if (info.isBrowser()) {
                LOG.info(""{} Ignoring sub from {}, browsers explicitly suppressed"", configuration.getBrokerName(), remoteBrokerName);
                return;
            }

the original version is:

            if (info.isBrowser()) {
                if (LOG.isDebugEnabled()) {
                    LOG.info(configuration.getBrokerName() + "" Ignoring sub from "" + remoteBrokerName + "", browsers explicitly suppressed"");
                }
                return;
            }

New version code is noisy because broker always show info log when client browse message.
Please change code to:

            if (info.isBrowser()) {
                LOG.debug(""{} Ignoring sub from {}, browsers explicitly suppressed"", configuration.getBrokerName(), remoteBrokerName);
                return;
            }

Thanks",,shooeugenesea.tw,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,373669,,,Mon Mar 31 22:43:29 UTC 2014,,,,,,,,,,,"0|i1se7b:",373969,,,,,,,,,,,,,,,,,,,,,"31/Mar/14 22:43;tabish;Changed to debug level output on trunk.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MQTTInactivityMonitor throws a NullPointerException,AMQ-5051,12695084,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,dhirajsb,dhirajsb,13/Feb/14 21:31,13/Feb/14 21:50,14/Jul/23 05:44,13/Feb/14 21:50,5.9.0,,,,,,,,,5.10.0,,,,MQTT,Transport,,,,0,,,,,,"MQTTInactivityMonitor has a very obvious NPE issue in onException(), which aborts propagating the exception to it's transportListener and causes connection leaks. ",,dhirajsb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Feb/14 21:32;dhirajsb;AMQ-5051.patch;https://issues.apache.org/jira/secure/attachment/12628859/AMQ-5051.patch",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,373592,,,Thu Feb 13 21:32:43 UTC 2014,,,,,,,Patch Available,,,,"0|i1sdq7:",373892,,,,,,,,,,,,,,,,,,,,,"13/Feb/14 21:32;dhirajsb;Patch to remove the offending call attached. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maven version affects packaging,AMQ-5047,12694841,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dkulp,dkulp,dkulp,12/Feb/14 21:18,02/Apr/14 21:46,14/Jul/23 05:44,15/Feb/14 21:57,5.9.0,,,,,,,,,5.10.0,5.9.1,,,,,,,,0,,,,,,"
Depending on if you use Maven 3.0.5 or 3.1.1, you get significantly different contents for the Web Console war as well as the final binary assembly.  The two versions of Maven treat the optional=true tags in the top level pom a bit differently.

The proposed fix is to remove the optional=true tags from the top level and add them where appropriate in the child modules.   ",,dkulp,hadrian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Feb/14 21:20;dkulp;AMQ-5047.patch;https://issues.apache.org/jira/secure/attachment/12628565/AMQ-5047.patch",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,373349,,,Sat Feb 15 21:57:45 UTC 2014,,,,,,,Patch Available,,,,"0|i1sc93:",373650,,,,,,,,,,,,,,,,,,,,,"12/Feb/14 21:20;dkulp;
Patch to fix this.   I've verified that the web-console and assemblies are consistent with both Maven versions.   Tests all run (except some OOM errors in AMQP, but getting them without the change anyway.  Likely some MAVEN_OPTS or something I need).   ;;;","15/Feb/14 21:57;hadrian;Patch applied with thanks to Dan Kulp;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve MQTT spec compatibility,AMQ-5043,12694611,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,11/Feb/14 22:48,04/Jun/14 17:15,14/Jul/23 05:44,04/Jun/14 17:15,5.9.0,,,,,,,,,5.10.1,,,,Broker,,,,,0,,,,,,,,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,373119,,,Wed Jun 04 17:15:12 UTC 2014,,,,,,,,,,,"0|i1satz:",373420,,,,,,,,,,,,,,,,,,,,,"11/Feb/14 22:49;chirino;Eclipse has setup a MQTT testing suite and we are failing some of the tests.  More details can be found:

http://wiki.eclipse.org/Paho/MQTT_Interop_Testing_Day#Testing_Plans
and
http://wiki.eclipse.org/Interop_Testing_Plan;;;","29/Apr/14 15:21;tabish;Can we close this out now given all of @Dhiraj's work.;;;","04/Jun/14 17:15;tabish;Marking this as fixed following all the work that's gone into MQTT over the past months.  Issues can be opened for specific fixes or improvements as needed now.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Session.commit() hangs when amqp+nio is used,AMQ-5042,12694574,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,tabish,tabish,tabish,11/Feb/14 19:25,02/Apr/14 21:46,14/Jul/23 05:44,18/Feb/14 10:10,5.9.0,,,,,,,,,5.10.0,5.9.1,,,AMQP,,,,,0,,,,,,"The follow test will cause a hang when run against amqp+nio transport.

{code}
    @Test(timeout=30000)
    public void testSessionTransactedCommit() throws JMSException, InterruptedException {
        ActiveMQAdmin.enableJMSFrameTracing();

        Connection connection = createConnection();
        Session session = connection.createSession(true, Session.AUTO_ACKNOWLEDGE);
        Queue queue = session.createQueue(name.toString());

        connection.start();

        // transacted producer
        MessageProducer pr = session.createProducer(queue);
        for (int i = 0; i < 10; i++) {
            Message m = session.createTextMessage(""TestMessage"" + i);
            pr.send(m);
        }

        // No commit in place, so no message should be dispatched.
        MessageConsumer consumer = session.createConsumer(queue);
        TextMessage m = (TextMessage) consumer.receive(5000);

        assertNull(m);

        session.commit();

        // Messages should be available now.
        for (int i = 0; i < 10; i++) {
            Message msg = consumer.receive(5000);
            assertNotNull(msg);
        }

        session.close();
        connection.close();
    }
{code}",,kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Feb/14 20:42;tabish;testRollbackRececeivedMessage-NIO.txt;https://issues.apache.org/jira/secure/attachment/12628328/testRollbackRececeivedMessage-NIO.txt","11/Feb/14 20:42;tabish;testRollbackRececeivedMessage-non-NIO.txt;https://issues.apache.org/jira/secure/attachment/12628329/testRollbackRececeivedMessage-non-NIO.txt","11/Feb/14 20:51;tabish;testSessionTransactedCommit-NIO.txt;https://issues.apache.org/jira/secure/attachment/12628331/testSessionTransactedCommit-NIO.txt","11/Feb/14 20:51;tabish;testSessionTransactedCommit-non-NIO.txt;https://issues.apache.org/jira/secure/attachment/12628332/testSessionTransactedCommit-non-NIO.txt",,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,373082,,,Tue Feb 18 09:54:19 UTC 2014,,,,,,,,,,,"0|i1salr:",373383,,,,,,,,,,,,,,,,,,,,,"11/Feb/14 19:28;tabish;These logs are for testRollbackRececeivedMessage run with tcp and nio based versions.

Frame tracing shows a missing send from the broker:
Disposition{role=receiver,first=3,last=3,settled=true}

Which leaves things in a stuck state between client and broker.;;;","11/Feb/14 20:51;tabish;Frame tracing for the testSessionTransactedCommit over TCP and NIO;;;","18/Feb/14 09:54;kearls;Fixed by da63f3f20a348b29b43ef84bb7a4f6b02d2cd35c.  Updated AmqpNioTransport to properly handle receiving multiple frames at once on an NIO Channel.

;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMSClientTest is hanging,AMQ-5041,12694481,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,kearls,kearls,kearls,11/Feb/14 12:17,02/Apr/14 21:48,14/Jul/23 05:44,11/Feb/14 15:26,,,,,,,,,,5.10.0,5.9.1,,,Test Cases,,,,,0,,,,,,"The JMSClientTest is currently hanging on multiple test cases.  I'll attach a stack trace, but it looks like the test is hanging during the broker.stop in tearDown().

I'm going to add @Ignore tags to most of the tests so this stops hanging CI builds.  ",,jwcarman,kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,372989,,,Tue Feb 11 15:52:10 UTC 2014,,,,,,,,,,,"0|i1sa1b:",373291,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"11/Feb/14 15:40;jwcarman;Hopefully you did more than @Ignore the tests before you marked this as ""fixed"".  Merely marking them as @Ignored doesn't ""fix"" anything.  ;;;","11/Feb/14 15:47;tabish;Try checking the commit logs before commenting.  ;;;","11/Feb/14 15:52;jwcarman;You mean this one:

https://github.com/apache/activemq/commit/a165054df9c354ff17856fe8e6390c09bfdf6a2d

Where he added a bunch of @Ignore tags and that's it?  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RAR - Active session can delay/block endpoint deactivation on shutdown,AMQ-5038,12694280,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,10/Feb/14 15:08,26/Jun/18 09:25,14/Jul/23 05:44,10/Feb/14 15:35,5.9.0,,,,,,,,,5.10.0,5.9.1,,,,,,,,0,RAR,shutdown,,,,"If there are pending messages, a mdb endpoint deactivation can wait pending active session close. Thread dump of the form:
{code}3XMTHREADINFO ""Non-deferrable Alarm : 0"" J9VMThread:0x0000000030F28E00, j9thread_t:0x0000010016C22740, java/lang/Thread:0x0000000041CAAE70, state:CW, prio=5
3XMJAVALTHREAD (java/lang/Thread getId:0x47, isDaemon:true)
3XMTHREADINFO1 (native thread ID:0x39E051, native priority:0x5, native policy:UNKNOWN)
3XMTHREADINFO3 Java callstack:
4XESTACKTRACE at java/lang/Object.wait(Native Method)
4XESTACKTRACE at java/lang/Object.wait(Object.java:196(Compiled Code))
4XESTACKTRACE at org/apache/activemq/ra/ServerSessionPoolImpl.close(ServerSessionPoolImpl.java:273)
4XESTACKTRACE at org/apache/activemq/ra/ActiveMQEndpointWorker.stop(ActiveMQEndpointWorker.java:265)
4XESTACKTRACE at org/apache/activemq/ra/ActiveMQResourceAdapter.endpointDeactivation(ActiveMQResourceAdapter.java:216)
4XESTACKTRACE at com/ibm/ejs/j2c/ActivationSpecWrapperImpl.deactivateUnderRAClassLoaderContext(ActivationSpecWrapperImpl.java:508)
4XESTACKTRACE at com/ibm/ejs/j2c/ActivationSpecWrapperImpl.deactivateEndPoint(ActivationSpecWrapperImpl.java:411)
4XESTACKTRACE at com/ibm/ejs/j2c/RAWrapperImpl.deactivateEndpoint(RAWrapperImpl.java:1462)
4XESTACKTRACE at com/ibm/ejs/j2c/RALifeCycleManagerImpl.deactivateEndPoint(RALifeCycleManagerImpl.java:1811)
....{code}

Issue is inactive session are closed, but active sessions do not get an indication of the pending shutdown.",,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-7000,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,372789,,,Mon Feb 10 15:35:06 UTC 2014,,,,,,,,,,,"0|i1s8tb:",373093,,,,,,,,,,,,,,,,,,,,,"10/Feb/14 15:35;gtully;fix and test in http://git-wip-us.apache.org/repos/asf/activemq/commit/519d8f7d


we now close active sessions on deactivate to ensure they stop.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQ4914.testSendHugeMessage times out on slow CI boxes,AMQ-5036,12694257,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,kearls,kearls,10/Feb/14 13:01,10/Feb/14 13:04,14/Jul/23 05:44,10/Feb/14 13:04,,,,,,,,,,,,,,Test Cases,,,,,0,,,,,,"Just need to bump up the timeout.
",,kearls,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,372766,,,2014-02-10 13:01:19.0,,,,,,,,,,,"0|i1s8o7:",373070,Unit Test Broken,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
deleting durable subscriber exception,AMQ-5035,12694094,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,mtran,mtran,08/Feb/14 12:41,02/Dec/19 11:42,14/Jul/23 05:44,10/Feb/14 23:16,5.9.0,,,,,,,,,5.10.0,,,,Broker,Job Scheduler,,,,0,,,,,,"refer to http://activemq.2283324.n4.nabble.com/deleting-durable-subscriber-exception-tp4677521.html

getting following exception when deleting a durable subscriber with schedulerSupport set to true on the broker

2014-02-06 15:25:44,042 | WARN  | /admin/deleteSubscriber.action | org.eclipse.jetty.servlet.ServletHandler | qtp1100010806-60 
java.lang.ClassCastException: org.apache.activemq.broker.scheduler.SchedulerBroker cannot be cast to org.apache.activemq.broker.region.RegionBroker 
        at org.apache.activemq.advisory.AdvisoryBroker.removeSubscription(AdvisoryBroker.java:280) 
        at org.apache.activemq.broker.BrokerFilter.removeSubscription(BrokerFilter.java:112) 
        at org.apache.activemq.broker.BrokerFilter.removeSubscription(BrokerFilter.java:112) 
        at org.apache.activemq.broker.BrokerFilter.removeSubscription(BrokerFilter.java:112) 
        at org.apache.activemq.broker.BrokerFilter.removeSubscription(BrokerFilter.java:112) 
        at org.apache.activemq.broker.MutableBrokerFilter.removeSubscription(MutableBrokerFilter.java:117) 
        at org.apache.activemq.broker.jmx.BrokerView.destroyDurableSubscriber(BrokerView.java:430) 
        at org.apache.activemq.web.controller.DeleteSubscriber.handleRequest(DeleteSubscriber.java:38) 
        at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48) 
        at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:925) 
        at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:856) 
        at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:936) 
        at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:827) 
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:693) 
        at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:812) 
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:806) 
        at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:652) 
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1320) 
        at org.apache.activemq.web.AuditFilter.doFilter(AuditFilter.java:59) 
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1291) 
        at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) 
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) 
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1291) 
        at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:102) 
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1291) 
        at com.opensymphony.sitemesh.webapp.SiteMeshFilter.obtainContent(SiteMeshFilter.java:129) 
        at com.opensymphony.sitemesh.webapp.SiteMeshFilter.doFilter(SiteMeshFilter.java:77) 
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1291) 
        at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:443) 
        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137) 
        at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:521) 
        at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:227) 
        at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1044) 
        at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:372) 
        at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:189) 
        at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:978) 
        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135) 
        at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154) 
        at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:521) 
        at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154) 
        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116) 
        at org.eclipse.jetty.server.Server.handle(Server.java:367) 
        at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:486) 
        at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:926) 
        at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:988) 
        at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640) 
        at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235) 
        at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82) 
        at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628) 
        at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52) 
        at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608) 
        at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543) 
        at java.lang.Thread.run(Thread.java:695) 


To reproduce:
1. Download fresh copy and install 
2. Edit conf/activemq.xml and change broker line to 
<broker xmlns=""http://activemq.apache.org/schema/core"" brokerName=""localhost"" dataDirectory=""${activemq.data}"" schedulerSupport=""true""> 

3. Go to admin console and create a topic, http://localhost:8161/admin/topics.jsp
4. Go to admin console and create durable subscriber to topic above http://localhost:8161/admin/subscribers.jsp
5. Delete the durable subscriber using link on same page and it will fail 

Repeat all steps above but this time set schedulerSupport=false. Then it will delete the durable without any errors. 
",,jira-bot,mtran,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,372603,,,Mon Dec 02 11:42:23 UTC 2019,,,,,,,,,,,"0|i1s7on:",372907,,,,,,,,,,,,,,,,,,,,,"10/Feb/14 16:21;tabish;Testing on trunk and cannot reproduce;;;","10/Feb/14 21:54;mtran;But on the mailing list, you said you could reproduce the bug?

""Yup, there's a bug there.  The key is to set isUseJmx(false) in the test 
Christian created and then the exception will show up. "";;;","10/Feb/14 22:01;mtran;Re-opening because problem still exists on the snapshot
http://repository.apache.org/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.10-SNAPSHOT/apache-activemq-5.10-20131220.123112-36-bin.zip;;;","10/Feb/14 22:05;tabish;My assessment was incorrect and the problem is not reproducible using the test steps you have outlined.  If you can produce a junit test case please do otherwise this is considered a non-issue. ;;;","10/Feb/14 22:12;mtran;Ok I'll see what I can do about the unit test. Is there any possible way that the unit test Christian has written behaves differently from normal startup?;;;","10/Feb/14 22:17;tabish;If you turn on TRACE level logging you can see the configuration progress and see if there's any differences.  ;;;","10/Feb/14 22:22;mtran;Ok thanks for the tip;;;","10/Feb/14 22:42;mtran;Would you be able to tell me which maven project contains the EmbeddedBrokerAndConnectionTestSupport class that Christian has used in his unit test? I can't see it in any of the jars in the activemq installation.;;;","10/Feb/14 23:16;tabish;Ok, added some contingency code in AdvisoryBroker to ensure it will always find a region broker even if configuration causes an unexpected chain.  

Try the next SNAPSHOT build and see how that goes.  ;;;","10/Feb/14 23:23;mtran;Thanks, I appreciate it.;;;","02/Dec/19 11:42;jira-bot;Commit 4d6409b3b82c1c6ab534cf0da253971e008bc13f in activemq's branch refs/heads/master from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=4d6409b ]

AMQ-5035 - fix intermittent failure due to async close
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
webconsole url and html encoding missing,AMQ-5033,12693810,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,artnaseef,artnaseef,artnaseef,07/Feb/14 03:02,06/Feb/15 11:03,14/Jul/23 05:44,10/Feb/14 04:24,5.9.0,,,,,,,,,5.10.0,5.9.1,,,Web Console,,,,,0,,,,,,"While working on AMQ-4813, many cases of passing text through to HTML without proper HTML and URL encoding.

I believe this can cause security risks, failed operations, or a misformatted UI.",,artnaseef,dejanb,githubbot,jwcarman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,372319,,,Fri Feb 06 11:03:24 UTC 2015,,,,,,,,,,,"0|i1s5xr:",372623,,,,,,,,,,,,,,,,,,,,,"07/Feb/14 22:26;jwcarman;I did a little work on this and submitted a pull request:

https://github.com/apache/activemq/pull/15
;;;","10/Feb/14 04:24;artnaseef;Commit applied, thank you jwcarman.

Commit id 0c4790bb946127ebb9a153c1fba1e3140917aad6
;;;","11/May/14 14:00;githubbot;Github user jwcarman closed the pull request at:

    https://github.com/apache/activemq/pull/15
;;;","06/Feb/15 11:03;dejanb;This issue is related to CVE-2014-8110

The vulnerability was introduced with https://fisheye6.atlassian.com/changelog/activemq-git?cs=0c4790bb946127ebb9a153c1fba1e3140917aad6
It's fixed with http://git-wip-us.apache.org/repos/asf/activemq/commit/994d9b26

More information is available at http://activemq.apache.org/security-advisories.html;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQP Message Expiry Time not mapped correctly in many case to / from JMS,AMQ-5032,12693585,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,06/Feb/14 15:56,03/Nov/14 19:18,14/Jul/23 05:44,03/Nov/14 19:18,5.9.0,,,,,,,,,5.10.1,5.11.0,,,AMQP,,,,,0,,,,,,"The message mapping done in Proton to convert to / from JMS messages is not currently handling expiration time conversion correctly leading to message that expire immediately or have no set expiration time etc.  

Refer to: https://issues.apache.org/jira/browse/PROTON-474",,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,372170,,,Mon Nov 03 19:18:54 UTC 2014,,,,,,,,,,,"0|i1s51b:",372475,,,,,,,,,,,,,,,,,,,,,"30/Apr/14 13:41;tabish;Proton is not accepting changes here for some reason.  Will push this out while we work with them to try and get this resolved in a future release.;;;","18/Jul/14 19:58;tabish;The issue has been fixed in the Proton code, and will be in the 0.8 release. ;;;","03/Nov/14 19:18;tabish;This has been fixed with the recent update to Proton-J 0.8;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
embedded webconsole broker does not resolve activemq.data system property,AMQ-5029,12693441,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dkulp,dkulp,dkulp,05/Feb/14 21:08,02/Apr/14 21:51,14/Jul/23 05:44,06/Feb/14 20:34,5.9.0,,,,,,,,,5.10.0,5.9.1,,,Web Console,,,,,0,,,,,,"
When using jetty:run in activemq-web-console or deploying the war into tomcat, the activemq.data system property is not resolved into a directory name for the kahadb.   Thus, a ${acitvemq.data} directory is created which is strange looking.   The property placeholder thing needs to be added to the spring config.",,dkulp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,372026,,,2014-02-05 21:08:12.0,,,,,,,,,,,"0|i1s453:",372330,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove jetty and jsp compiler jars from web-console.war,AMQ-5028,12693397,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dkulp,dkulp,dkulp,05/Feb/14 17:54,02/Apr/14 21:50,14/Jul/23 05:44,07/Feb/14 01:31,,,,,,,,,,5.10.0,5.9.1,,,Web Console,,,,,0,,,,,,"
The container that runs the war (like Jetty or Tomcat) will compile the JSP's so there is no need for the eclipse core compiler.   Also, there isn't a need for the jetty jars.  It looks like there was an attempt to exclude those from packaging anyway via maven-war-plugin configs, but those configs aren't working.

patch:
{code}
diff --git a/activemq-web-console/pom.xml b/activemq-web-console/pom.xml
index e5f2e94..93b7fad 100755
--- a/activemq-web-console/pom.xml
<?xml version=""1.0"" encoding=""UTF-8""?>
<!--
+++ b/activemq-web-console/pom.xml
@@ -190,6 +190,14 @@
               <groupId>${project.groupId}</groupId>
               <artifactId>activemq-all</artifactId>
           </exclusion>
+          <exclusion>
+              <groupId>org.eclipse.jetty</groupId>
+              <artifactId>jetty-websocket</artifactId>
+          </exclusion>
+          <exclusion>
+              <groupId>org.eclipse.jetty</groupId>
+              <artifactId>jetty-continuation</artifactId>
+          </exclusion>
       </exclusions>
     </dependency>
     <dependency>
@@ -235,6 +243,7 @@
       <groupId>org.eclipse.jdt</groupId>
       <artifactId>core</artifactId>
       <version>3.1.1</version>
+      <scope>test</scope>
     </dependency>
     <dependency>
       <groupId>org.slf4j</groupId>
@@ -259,16 +268,6 @@
       <artifactId>standard</artifactId>
     </dependency>
 
-    <!-- XStream marshalling -->
-    <dependency>
-      <groupId>xpp3</groupId>
-      <artifactId>xpp3</artifactId>
-    </dependency>
-    <dependency>
-      <groupId>com.thoughtworks.xstream</groupId>
-      <artifactId>xstream</artifactId>
-    </dependency>
-
     <!-- used for testing -->
     <dependency>
       <groupId>junit</groupId>

{code}",,artnaseef,dkulp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,371982,,,Fri Feb 07 01:30:59 UTC 2014,,,,,,,Patch Available,,,,"0|i1s3vb:",372286,,,,,,,,,,,,,,,,,,,,,"07/Feb/14 01:30;artnaseef;Patch committed f88043eaf7fc1c089b4ffe2770743e28e7b8f6fb.

Thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Using maven-eclipse-plugin to generate eclipse projects fails for leveldb,AMQ-5027,12693389,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dkulp,dkulp,dkulp,05/Feb/14 16:44,06/Feb/14 21:00,14/Jul/23 05:44,06/Feb/14 21:00,,,,,,,,,,5.10.0,,,,,,,,,0,,,,,,"
The scala stuff in activemq-leveldb-store causes problems if you generate an eclipse project using the maven-eclipse-plugin.   Couple things need to be done:

1) Add the scala nature so its created as a scala project instead of java

2) Add the scala dirs as source dirs so eclipse see's them as source and will compile them.

git pull request coming....",,dkulp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,371974,,,2014-02-05 16:44:25.0,,,,,,,,,,,"0|i1s3tj:",372278,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.activemq.bugs.MemoryUsageBlockResumeTest sometimes hangs,AMQ-5021,12693070,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,kearls,kearls,kearls,04/Feb/14 10:08,03/Apr/14 00:34,14/Jul/23 05:44,03/Apr/14 00:34,,,,,,,,,,5.10.0,5.9.1,,,Test Cases,,,,,0,,,,,,"org.apache.activemq.bugs.MemoryUsageBlockResumeTest sometimes hangs, which can block CI builds.  I will update it to JUnit4 and add a timeout so it at least does not cause the build to hang.

I am also attaching a stack trace.
",,kearls,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Feb/14 10:09;kearls;MemoryUsageBlockResumeTest.stack;https://issues.apache.org/jira/secure/attachment/12626859/MemoryUsageBlockResumeTest.stack",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,371656,,,Tue Feb 04 10:09:14 UTC 2014,,,,,,,,,,,"0|i1s1vb:",371956,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"04/Feb/14 10:09;kearls;Stack trace from a Hudson node;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQPrefetchPolicy.setAll sets inputStreamPrefetch incorrectly,AMQ-5017,12693036,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,jahlborn,jahlborn,04/Feb/14 02:52,02/Apr/14 21:52,14/Jul/23 05:44,04/Feb/14 15:40,5.9.0,,,,,,,,,5.10.0,5.9.1,,,,,,,,0,,,,,,"ActiveMQPrefetchPolicy.setAll() sets ""this.inputStreamPrefetch"" to ""1"", which i assume is supposed to be ""i"".",,jahlborn,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,371622,,,Tue Feb 04 15:40:13 UTC 2014,,,,,,,,,,,"0|i1s1nr:",371922,,,,,,,,,,,,,,,,,,,,,"04/Feb/14 02:55;jahlborn;Also i just noticed that setAll() does not use ""getMaxPrefetch()"" to limit the new value.  dunno if this should be filed as a separate bug.;;;","04/Feb/14 15:40;tabish;Updated setAll to enforce maxPrefetch.  The input stream is now set using the all value, however you should be aware that the streams feature is deprecated and will be removed in a future release. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BitArrayBin doesn't work well with index larger than Integer.MAX_VALUE,AMQ-5016,12692898,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,susu119,susu119,03/Feb/14 16:40,18/Sep/16 05:58,14/Jul/23 05:44,06/Aug/14 14:23,5.9.0,,,,,,,,,5.11.0,,,,JMS client,,,,,0,,,,,,"In BitArrayBin class, the index's unit type is long. It also has a variable called firstIndex, which store the index where the window starts. And that firstindex's unit is int. If the index is bigger than Integer.MAX_VALUE, setBit() and getBit() starts to return bad value.

The defect causes activemq client to perform badly when receiving message that sequence id is bigger than max interger. It spends most of the time to shift window, and also blocks other consumer threads. Below is the jstack log that shows the problem.
{code}
""ActiveMQ Session Task-869879"" prio=10 tid=0x00007f412d6ee000 nid=0x3cbe runnable [0x00007f405b7b6000]
   java.lang.Thread.State: RUNNABLE
        at java.util.LinkedList.linkLast(LinkedList.java:140)
        at java.util.LinkedList.add(LinkedList.java:336)
        at org.apache.activemq.util.BitArrayBin.getBitArray(BitArrayBin.java:123)
        at org.apache.activemq.util.BitArrayBin.setBit(BitArrayBin.java:59)
        at org.apache.activemq.ActiveMQMessage AuditNoSync.isDuplicate(ActiveMQMessageAuditNoSyn c.java:160)
        at org.apache.activemq.ActiveMQMessageAudit.isDuplicate(ActiveMQMessageAudit.java:59)
        - locked <0x00007f46a0138ab0> (a org.apache.activemq.ActiveMQMessageAudit)
        at org.apache.activemq.ActiveMQMessage AuditNoSync.isDuplicate(ActiveMQMessageAuditNoSyn c.java:140)
        at org.apache.activemq.ConnectionAudit.isDuplicate(ConnectionAudit.java:52)
        - locked <0x00007f4881e6b968> (a org.apache.activemq.ConnectionAudit)
        at org.apache.activemq.ActiveMQConnection.isDuplicate(ActiveMQConnection.java:2291)
        at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:1223)
        - locked <0x00007f45db222fb8> (a java.lang.Object)
        at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:134)
        at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:205)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:127)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:48)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
        at java.lang.Thread.run(Thread.java:722)
{code}
",,gtully,susu119,tabish,wangqinghuan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5507,,,,,,,,,,,,,AMQ-5507,,,,,,,,,,,"03/Feb/14 16:42;susu119;BitArrayBinTest.java;https://issues.apache.org/jira/secure/attachment/12626678/BitArrayBinTest.java",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,371484,,,Fri Sep 16 15:00:31 UTC 2016,,,,,,,,,,,"0|i1s0tj:",371787,,,,,,,,,,,,,,,,,,,,,"03/Feb/14 16:42;susu119;A unit test that expose the issue.;;;","11/Jun/14 18:20;tabish;Fixed on trunk.;;;","05/Aug/14 15:51;gtully;the fix breaks serializability and as a result reading the producer audit from the store. I guess we need to declare incompatibility and use a new serialVersionUID or maybe implement a custom read that can deal with migration.
I came across this exception{code}2014-08-05 15:24:07,992 [main           ] - WARN  MessageDatabase                - Cannot recover message audit
java.io.InvalidClassException: org.apache.activemq.util.BitArrayBin; incompatible types for field firstIndex
	at java.io.ObjectStreamClass.matchFields(ObjectStreamClass.java:2254)
	at java.io.ObjectStreamClass.getReflector(ObjectStreamClass.java:2149)
	at java.io.ObjectStreamClass.initNonProxy(ObjectStreamClass.java:657)
	at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1622)
	at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1517)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1771)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1350)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:370)
	at java.util.HashMap.readObject(HashMap.java:1180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1017)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1893)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1798)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1350)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1990)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1915)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1798)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1350)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:370)
	at org.apache.activemq.store.kahadb.MessageDatabase.recoverProducerAudit(MessageDatabase.java:692)
	at org.apache.activemq.store.kahadb.MessageDatabase.recover(MessageDatabase.java:595)
	at org.apache.activemq.store.kahadb.MessageDatabase.open(MessageDatabase.java:400)
	at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:418)
	at org.apache.activemq.store.kahadb.MessageDatabase.doStart(MessageDatabase.java:262)
	at org.apache.activemq.store.kahadb.KahaDBStore.doStart(KahaDBStore.java:204)
	at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:55)
	at org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter.doStart(KahaDBPersistenceAdapter.java:223)
	at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:55)
	at org.apache.activemq.broker.BrokerService.doStartPersistenceAdapter(BrokerService.java:642)
	at org.apache.activemq.broker.BrokerService.startPersistenceAdapter(BrokerService.java:631)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:596)
	at org.apache.activemq.broker.Main.main(Main.java:50)
2014-08-05 15:24:08,000 [main           ] - INFO  MessageDatabase                - Recovering from the journal ...
2014-08-05 15:24:09,639 [main           ] - INFO  MessageDatabase                - @8:3797562, 100000 entries recovered ..
{code} which is fairly ugly.;;;","06/Aug/14 14:23;gtully;add long field so that existing serialized records can be read.
http://git-wip-us.apache.org/repos/asf/activemq/commit/58ae402b;;;","16/Sep/16 15:00;wangqinghuan;I downloaded activemq 5.11.0 source.jar, i found the only change is that firstIndex is declared as long type. Then  I run the example :
 {code}   
public static void main(String[] args) {
       BitArrayBin toTest = new BitArrayBin(1024);
       //I  commented out the following code
       //toTest.setBit(1, true);       
       long largeNum = Integer.MAX_VALUE*2L +100L;
       toTest.setBit(largeNum, true);
       System.out.println(toTest.getBit(largeNum));   
	  
   }
    {code}
the result  of running the above code is ""false"".  I expect the results to be true,but I got a false;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RestPersistentTest sometimes hangs on CI boxes,AMQ-5013,12692846,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,kearls,kearls,kearls,03/Feb/14 13:28,02/Apr/14 21:53,14/Jul/23 05:44,14/Feb/14 16:37,,,,,,,,,,5.10.0,5.9.1,,,Test Cases,,,,,0,,,,,,"This test hangs occasionally on CI boxes.  I'm going to convert it to JUnit 4 and add timeouts as the first step in trying to resolve this.
",,kearls,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,371432,,,Fri Feb 14 16:37:58 UTC 2014,,,,,,,,,,,"0|i1s0i7:",371735,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"14/Feb/14 16:37;kearls;This is fixed, it was a config problem on the box.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Upgrade surefire to the latest version,AMQ-5006,12692274,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,kearls,kearls,kearls,30/Jan/14 13:21,30/Jan/14 14:49,14/Jul/23 05:44,30/Jan/14 14:49,,,,,,,,,,,,,,,,,,,0,,,,,,Upgrade the maven-surefire-plugin to 2.16,,kearls,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,370869,,,2014-01-30 13:21:46.0,,,,,,,,,,,"0|i1rx1z:",371174,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Dispatching large messages over AMQP is very slow.,AMQ-5004,12692176,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,tabish,tabish,tabish,29/Jan/14 23:21,30/Apr/14 15:10,14/Jul/23 05:44,30/Apr/14 15:10,5.9.0,,,,,,,,,5.10.0,,,,AMQP,,,,,0,,,,,,When testing against the QPid JMS client we see that a producer sending large messages 10mb+ is quite fast but a consumer takes exponentially longer to receive the message.  ,,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,370767,,,Wed Apr 30 15:10:29 UTC 2014,,,,,,,,,,,"0|i1rwfz:",371075,,,,,,,,,,,,,,,,,,,,,"30/Jan/14 16:25;tabish;Root cause is due to the SASL handshake and the proton transport not being able to re-init afterwards to the client's requested max frame size.  Work around for now is to disable SASL if in use.  ;;;","06/Feb/14 15:36;tabish;Opened: https://issues.apache.org/jira/browse/PROTON-508

The issue is internal to the Proton engine and with the current implementation there's not a whole lot we can do to workaround it short of lifting their SASL parsing code and doing the processing ourselves without trigger SASL support in the proton code.

I was able to create a patch for the proton code that works although causes some of their tests to fail. The end result was that the time on my machine to send a 10mb message went from 30+ seconds to around 300ms or so.
;;;","29/Apr/14 15:22;tabish;Awaiting publish of the released Proton v0.7 library to maven central ;;;","30/Apr/14 14:21;tabish;Updated trunk to proton 0.7 need to fix failing karaf itest before resolving this.  ;;;","30/Apr/14 15:10;tabish;fixed on trunk, all tests passing;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
On overlapping Failover a session can consume large amounts of memory trying to clear consumer state.,AMQ-5003,12692147,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,29/Jan/14 21:46,02/Apr/14 21:58,14/Jul/23 05:44,29/Jan/14 21:59,5.9.0,,,,,,,,,5.10.0,5.9.1,,,Broker,,,,,0,,,,,,If a consumer onMessage call is blocked waiting for failover to complete and send an ack and the connection to the broker is dropping as attempts to reconnect are happening a session can queue up very large number of scheduler tasks to clear in progress messages for open consumers.  Since the consumer will be holding the lock these can't fire so they just pile on.  ,,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,370738,,,Wed Jan 29 21:59:47 UTC 2014,,,,,,,,,,,"0|i1rwa7:",371049,,,,,,,,,,,,,,,,,,,,,"29/Jan/14 21:59;tabish;Added a gate to keep the session from repeating the clear in progress message consumers action until the last one finishes.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"AMQP: If a proton client only sets the ttl, and not the message timestamp, ActiveMQ does not handle the expiration correctly",AMQ-5002,12692105,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,29/Jan/14 18:53,20/Oct/14 12:41,14/Jul/23 05:44,30/Jan/14 14:52,,,,,,,,,,5.10.0,5.9.1,,,AMQP,,,,,0,,,,,,,,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5403,,,,,,,,,,,,,PROTON-474,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,370696,,,Mon Feb 03 18:44:46 UTC 2014,,,,,,,,,,,"0|i1rw13:",371007,,,,,,,,,,,,,,,,,,,,,"30/Jan/14 14:52;chirino;Fix committed.;;;","03/Feb/14 18:44;chirino;To get it working when the timestamp is set, we need this issue fixed: https://issues.apache.org/jira/browse/PROTON-474;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AbortSlowAckConsumer0Test has multiple test failures,AMQ-5001,12692035,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,kearls,kearls,29/Jan/14 13:35,29/Jan/14 16:22,14/Jul/23 05:44,29/Jan/14 16:22,,,,,,,,,,,,,,Test Cases,,,,,0,,,,,,"As part of AMQ-4286, I split up AbortSlowAckConsumerTest into 3 parts.  AbortSlowAckConsumer0Test contains 3 new test cases and 1 test case that was overridden from it's base class, AbortSlowConsumerTest.

I don't think these tests ever actually ran though, perhaps because of a bug with CombinationTestSupport.  As a result, this line of code in createBroker was never executed:

AbortSlowAckConsumerStrategy strategy = (AbortSlowAckConsumerStrategy) underTest;

This cast doesn't work, so I updated the corresponding code in AbortSlowAckConsumer0Test.  The test now gets the errors below.  I'm not sure if this is because of my conversion, or if they never would have worked.  I will add @Ignore for now for all failing tests cases.

Running org.apache.activemq.broker.policy.AbortSlowAckConsumer0Test
Tests run: 8, Failures: 4, Errors: 0, Skipped: 0, Time elapsed: 24.831 sec <<< FAILURE! - in org.apache.activemq.broker.policy.AbortSlowAckConsumer0Test
testZeroPrefetchConsumerIsAborted(org.apache.activemq.broker.policy.AbortSlowAckConsumer0Test)  Time elapsed: 1.785 sec  <<< FAILURE!
java.lang.AssertionError: Slow consumer not aborted.
	at org.junit.Assert.fail(Assert.java:88)
	at org.apache.activemq.broker.policy.AbortSlowAckConsumer0Test.testZeroPrefetchConsumerIsAborted(AbortSlowAckConsumer0Test.java:104)

testIdleConsumerCanBeAborted(org.apache.activemq.broker.policy.AbortSlowAckConsumer0Test)  Time elapsed: 0.099 sec  <<< FAILURE!
java.lang.AssertionError: Slow consumer not aborted.
	at org.junit.Assert.fail(Assert.java:88)
	at org.apache.activemq.broker.policy.AbortSlowAckConsumer0Test.testIdleConsumerCanBeAborted(AbortSlowAckConsumer0Test.java:152)

testIdleConsumerCanBeAbortedNoMessages(org.apache.activemq.broker.policy.AbortSlowAckConsumer0Test)  Time elapsed: 0.109 sec  <<< FAILURE!
java.lang.AssertionError: Idle consumer not aborted.
	at org.junit.Assert.fail(Assert.java:88)
	at org.apache.activemq.broker.policy.AbortSlowAckConsumer0Test.testIdleConsumerCanBeAbortedNoMessages(AbortSlowAckConsumer0Test.java:126)

testSlowConsumerIsAbortedViaJmx(org.apache.activemq.broker.policy.AbortSlowAckConsumer0Test)  Time elapsed: 8.073 sec  <<< FAILURE!
java.lang.AssertionError: one slow consumers expected:<1> but was:<0>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:743)
	at org.junit.Assert.assertEquals(Assert.java:118)
	at org.junit.Assert.assertEquals(Assert.java:555)
	at org.apache.activemq.broker.policy.AbortSlowConsumer0Test.testSlowConsumerIsAbortedViaJmx(AbortSlowConsumer0Test.java:99)
	at org.apache.activemq.broker.policy.AbortSlowAckConsumer0Test.testSlowConsumerIsAbortedViaJmx(AbortSlowAckConsumer0Test.java:84)


",,kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,370625,,,Wed Jan 29 16:22:57 UTC 2014,,,,,,,,,,,"0|i1rvlz:",370935,,,,,,,,,,,,,,,,,,,,,"29/Jan/14 16:22;tabish;Fixed up the tests, they weren't quite right.  All passing now. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Old Web Admin console does not manage  - new parameter  messageTTL consumerTTL connections.jsp and connections Panel display error messages,AMQ-4998,12692025,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,artnaseef,grambal,grambal,29/Jan/14 12:40,02/Apr/14 21:44,14/Jul/23 05:44,20/Feb/14 14:54,5.9.0,,,,,,,,,5.10.0,5.9.1,,,Web Console,,,,,1,,,,,,"2014-01-29 13:03:31,358 | WARN  | /admin/connections.jsp | org.eclipse.jetty.servlet.ServletHandler | qtp1721309039-46
javax.el.PropertyNotFoundException: The class 'com.sun.proxy.$Proxy7' does not have the property 'networkTTL'.
        at javax.el.BeanELResolver.getBeanProperty(BeanELResolver.java:579)
        at javax.el.BeanELResolver.getValue(BeanELResolver.java:281)
        at javax.el.CompositeELResolver.getValue(CompositeELResolver.java:175)
        at com.sun.el.parser.AstValue.getValue(AstValue.java:138)
        at com.sun.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:206)
        at org.apache.jasper.runtime.PageContextImpl.evaluateExpression(PageContextImpl.java:1001)
        at org.apache.jsp.connections_jsp._jspx_meth_c_forEach_1(org.apache.jsp.connections_jsp:213)
        at org.apache.jsp.connections_jsp._jspService(org.apache.jsp.connections_jsp:95)
        at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:109)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
        at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:389)
        at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:486)
        at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:380)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
        at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:652)
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1320)
        at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1291)
        at org.apache.activemq.web.SessionFilter.doFilter(SessionFilter.java:45)
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1291)
        at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:102)
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1291)
        at com.opensymphony.sitemesh.webapp.SiteMeshFilter.obtainContent(SiteMeshFilter.java:129)
        at com.opensymphony.sitemesh.webapp.SiteMeshFilter.doFilter(SiteMeshFilter.java:77)
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1291)
        at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:443)
        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
        at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:521)
        at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:227)


This template seems to work :

<table id=""connections"" class=""sortable autostripe"">
<thead>
<tr>
        <th>Name</th>
        <th>Message TTL</th>
        <th>Consumer TTL</th>
        <th>Dynamic Only</th>
        <th>Conduit Subscriptions</th>
        <th>Bridge Temps</th>
        <th>Decrease Priorities</th>
        <th>Dispatch Async</th>
</tr>
</thead>
<tbody>
<c:forEach items=""${requestContext.brokerQuery.networkConnectors}"" var=""nc"">
<tr>
        <td>${nc.name}</td>
        <td>${nc.messageTTL}</td>
        <td>${nc.consumerTTL}</td>
        <td>${nc.dynamicOnly}</td>
        <td>${nc.conduitSubscriptions}</td>
        <td>${nc.bridgeTempDestinations}</td>
        <td>${nc.decreaseNetworkConsumerPriority}</td>
        <td>${nc.dispatchAsync}</td>
</tr>

","CentOS release 6.4 (Final)

java version ""1.6.0_45""
Java(TM) SE Runtime Environment (build 1.6.0_45-b06)
Java HotSpot(TM) 64-Bit Server VM (build 20.45-b01, mixed mode)
",artnaseef,grambal,liuruidey@gmail.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5067,AMQ-4828,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Feb/14 13:08;grambal;connections.patch;https://issues.apache.org/jira/secure/attachment/12627122/connections.patch",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,370615,,,Thu Feb 20 14:53:59 UTC 2014,,,,,,,Patch Available,,,,"0|i1rvjr:",370925,Regression,,,,,,,,,,,,,,,,,,,,"05/Feb/14 13:08;grambal;This is the patch file;;;","07/Feb/14 07:35;liuruidey@gmail.com;I also encountered the same problem.

when i used the feature :Networks of Brokers
http://activemq.apache.org/networks-of-brokers.html

static or multicast  all lead to this issue.;;;","10/Feb/14 08:53;grambal;You could try my patch file include migration of network ttl ->2 messageTTL consumerTTL;;;","14/Feb/14 01:15;liuruidey@gmail.com; thx ~
it works.;;;","20/Feb/14 14:53;artnaseef;Applied the patch with commit dcbac84a8c4d9dabeb793081557d3bb5c6694d51.

Also added the use of ""<c:out>"" to ensure proper html-encoding of the values.

Thank you!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Dead code in VMTransport class,AMQ-4997,12692002,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,kearls,sdcf,sdcf,29/Jan/14 10:42,19/Mar/14 18:01,14/Jul/23 05:44,19/Mar/14 18:01,5.9.0,,,,,,,,,,,,,Broker,,,,,0,,,,,,"The object with name DISCONNECT is created as 
private static final Object DISCONNECT = new Object();

so it can't be modified or be overwritten somewhere outside this class.

However this object is used only two times to check if:
public void doDispatch(VMTransport transport, TransportListener transportListener, Object command) {
        if (command == DISCONNECT) {
            transportListener.onException(new TransportDisposedIOException(""Peer ("" + peer.toString() + "") disposed.""));
        } else {
            transport.receiveCounter++;
            transportListener.onCommand(command);
        }
    }

and 
if( command == DISCONNECT ) {
                tl.onException(new TransportDisposedIOException(""Peer ("" + peer.toString() + "") disposed.""));
            } else {
                tl.onCommand(command);
            }
so only one branch of ifs will be run.
Seems as some remnant of modification? ",,nickolay_martinov,sdcf,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,370592,,,2014-01-29 10:42:20.0,,,,,,,,,,,"0|i1rven:",370902,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Runtime Configuration Plugin - reapply destination interceptor after reload,AMQ-4995,12691633,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,28/Jan/14 13:47,02/Apr/14 21:58,14/Jul/23 05:44,28/Jan/14 13:56,5.9.0,,,,,,,,,5.10.0,5.9.1,,,,,,,,0,,,,,,"When we change destination interceptor we need to reapply it to all destination as otherwise the effects will have no change. An example is changing property like ""forwardOnly"" in the following configuration

{code}<destinationInterceptors>
    <virtualDestinationInterceptor>
       <virtualDestinations>
           <compositeQueue forwardOnly=""false"" name=""VirtualDestination.CompositeQueue"">
               <forwardTo>
                   <queue physicalName=""VirtualDestination.QueueConsumer""/>
                   <topic physicalName=""VirtualDestination.TopicConsumer""/>
               </forwardTo>
           </compositeQueue>
       </virtualDestinations>
    </virtualDestinationInterceptor>
</destinationInterceptors>{code}",,dejanb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,370378,,,Tue Jan 28 13:56:31 UTC 2014,,,,,,,,,,,"0|i1ru1r:",370679,,,,,,,,,,,,,,,,,,,,,"28/Jan/14 13:56;dejanb;Fixed with http://git-wip-us.apache.org/repos/asf/activemq/commit/55da9bc8;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web Console - java.lang.OutOfMemoryError: Java heap space - while browsing deep queues,AMQ-4994,12691351,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,hadrian,dejanb,dejanb,27/Jan/14 11:07,02/Apr/14 21:54,14/Jul/23 05:44,31/Jan/14 22:04,5.9.0,,,,,,,,,5.10.0,5.9.1,,,Web Console,,,,,0,,,,,,"When browsing a deep queue with large number of messages, broker throws 

{code}java.lang.OutOfMemoryError: Java heap space
	at java.util.Arrays.copyOf(Arrays.java:2367)
	at java.io.CharArrayWriter.write(CharArrayWriter.java:105)
	at java.io.PrintWriter.write(PrintWriter.java:426)
	at com.opensymphony.module.sitemesh.filter.RoutablePrintWriter.write(RoutablePrintWriter.java:144)
	at org.apache.jasper.runtime.JspWriterImpl.flushBuffer(JspWriterImpl.java:181)
	at org.apache.jasper.runtime.JspWriterImpl.write(JspWriterImpl.java:412)
	at org.apache.taglibs.standard.tag.common.core.OutSupport.writeEscapedXml(OutSupport.java:239)
	at org.apache.taglibs.standard.tag.common.core.OutSupport.out(OutSupport.java:208)
	at org.apache.taglibs.standard.tag.common.core.OutSupport.doStartTag(OutSupport.java:128)
	at org.apache.jsp.browse_jsp._jspx_meth_c_out_6(org.apache.jsp.browse_jsp:323)
	at org.apache.jsp.browse_jsp.access$8(org.apache.jsp.browse_jsp:314)
	at org.apache.jsp.browse_jsp$browse_jspHelper.invoke0(org.apache.jsp.browse_jsp:426)
	at org.apache.jsp.browse_jsp$browse_jspHelper.invoke(org.apache.jsp.browse_jsp:450)
	at org.apache.jsp.tag.web.jms.forEachMessage_tag.doTag(org.apache.jsp.tag.web.jms.forEachMessage_tag:89)
	at org.apache.jsp.browse_jsp._jspx_meth_jms_forEachMessage_0(org.apache.jsp.browse_jsp:170)
	at org.apache.jsp.browse_jsp._jspService(org.apache.jsp.browse_jsp:100)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:109)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:389)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:486)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:380)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:652)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1320)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1291)
	at org.apache.activemq.web.SessionFilter.doFilter(SessionFilter.java:45)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1291)
	at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:102)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1291)
	at com.opensymphony.sitemesh.webapp.SiteMeshFilter.obtainContent(SiteMeshFilter.java:129){code}

when trying to browse that queue.

To reproduce it:

1. Start a broker with default configuration

2. Send 200k messages with

{code}ant producer -Dmax=200000 -Ddurable=true -Dsubject=TEST{code}

3. Try to browse the queue

http://localhost:8161/admin/browse.jsp?JMSDestination=TEST

The proper solution to this problem is to implement proper pagination while browsing the messages, so users can browse through all messages showing 100 msgs (or so) at the time and not using all the available memory.
",,akuntamukkala,artnaseef,dejanb,dkulp,hadrian,zmhassan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jan/14 01:38;dkulp;AMQ-4994.patch;https://issues.apache.org/jira/secure/attachment/12626037/AMQ-4994.patch",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,370096,,,Wed Feb 05 02:42:21 UTC 2014,,,,,,,,,,,"0|i1rscf:",370398,,,,,,,,,,,,,,,,,,,,,"28/Jan/14 02:34;hadrian;Dejan,

Why is this a bug and why is this a blocker? The console was designed to keep messages in memory. Obviously past a certain limit one would run out of memory. What I understand is that you actually require an improvement, which would be probably major, not even critical for the console to use pagination to handle a limited number of messages.

I would argue that for extremely large messages even 100 msgs per page would probably be too much. I also find your suggestion to use pagination a bit lacking, as if one would have 200k messages in the queue pagination would definitely not help and more advanced features like (multi-faceted) filtering would be necessary. 

A good place to start is documenting the limitations of the current console.;;;","28/Jan/14 12:29;dejanb;In my opinion, anything that can cause broker (a vital middleware infrastructure component) to crash in production with OOM should be considered a blocker bug.;;;","28/Jan/14 15:33;zmhassan;Hi,

I had a similar problem when I was building BZCareer.com search engine where I had half a million records in the database that I wanted to show to users. I couldn't just send half a million JSON objects from the server to the client because it's just too much data. Rather I gave them the first 10 records per page. 

For that reason I have to agree with Dejan regarding his suggestion for adding pagination. 

Users don't need to see 200,000 records on a single page. Only maybe 100 records per page. 

If everyone agrees with this I can write the client side JavaScript to generate pagination and get data asynchronously. I can also write the server side code that will return a JSON object with the first hundred records and subsequent records from specifying in the query string 'page=#'.


/admin/browse.jsp?JMSDestination=TEST&page=1
Note: Page=1 is the first 100 records and so on...

I think pagination added to the console would solve this issue. With every decision we can weigh the benefit vs the cost. If this is a benefit that has no cost then why not implement this or better yet why not let me implement this as a matter of fact.


Thanks,
Zak
@Prospect1010
http://github.com/zmhassan
;;;","28/Jan/14 15:41;hadrian;Zak, go for it, thanks.
One suggestion: what if instead of using one ""page"" parameter in URL you'd use two ""from"" and ""to"" parameters to specify the message range explicitly? It's semantically equivalent. On the page you can still display pages with a little bit of arithmetic in js.;;;","28/Jan/14 15:56;zmhassan;
Great suggestion Hadrian. I have logic in the code to do that. I will be using similar code found on this page: 

http://www.bzcareer.com/CA/search?keyword=Developer&local=
Note: view source to see how I did it.

As you can see you won't see a from or to anywhere in the query string. It's all handled via Ajax. 'from' and 'to' we don't need to expose to the user however I was planning on including a single parameter to avoid confusion 'page=#'. 

How about we add a drop down where a user can choose how many items will display per page ?

Thanks,
Zak
@Prospect1010
http://github.com/zmhassan
;;;","28/Jan/14 16:12;hadrian;Sure. Either that or profile settings, whatever you think is best. That can be easily changed if needed without changing the url structure and the rest of the logic.;;;","29/Jan/14 21:21;zmhassan;I'm able to generate pagination on the UI when the requests are small but I seem to be getting an error from the server-side ""java.lang out of memory .... "" when messages when the queue depth is large. I'm searching for where this bug is coming from. Pagination may sort of help but we still need to find some way of limiting the amount of messages that get displayed.
I narrowed down where the problem is coming from I suspect that is somewhere in:

https://github.com/apache/activemq/blob/trunk/activemq-web-console/src/main/java/org/apache/activemq/web/controller/SendMessage.java#L51-L79

Also I can imagine that there could me more messages being produced and consumed at the same time which we have to consider. Any suggestions on possible options? 

;;;","29/Jan/14 23:45;artnaseef;I'll take a look at the updated code if you like.;;;","30/Jan/14 01:38;dkulp;Here's a start of a patch that fixes the immediate OOM issue by removing the sitemesh stuff from the filterchain so everything is streamed back directly to the client without buffering.  All the .jsp are changed to include a head/header/footer jsp files that handle the formatting for those.   

This is just a start, still need to actually remove the sitemesh stuff, delete the various sitemesh specific files, etc...;;;","30/Jan/14 02:58;artnaseef;On the pagination with messages being produced and consumed - I wouldn't worry about it.  Messages may be consumed or produced all the time meaning the web UI can never be fully correct.

To keep the UI as consistent as possible, perhaps the simplest approach is to just show only one page at a time.;;;","30/Jan/14 03:45;zmhassan;I was originally planning on making a slight change in the design. I was planning on making a restful endpoint that will display the first hundred JMS messages in queue in JSON format (one argument 'page'). It would save time and resource because we don't loop through all 200,000 items in queue. However that would make a change in the design and I was thinking there must be a way that we can reuse existing code that does web service like functionality. 

One option I was looking at was that we could use the RSS/ATOM feed with xml data and pull from it via javascript on the client-side to get the messages in queue but when I tried this, it was a really large xml file and takes a long time to load. When the number of messages grow too large I was unsuccessful in requesting it and parsing it. Perhaps if we can just display 100 messages of the 200,000 in queue that would make it an easier problem to solve. 

http://localhost:8161/admin/queueBrowse/TEST?view=rss&feedType=atom_1.0


Here is an example of how I will get the xml data from JavaScript just in case anyone would like to see the code:

https://gist.github.com/zmhassan/8702385
;;;","30/Jan/14 05:25;artnaseef;Looking at the broker code, it should be feasible to modify the code to return a specific ""page"" of messages.  Probably pass a start message # and end message #, or start and count.

One concern is that the current method of returning messages is using ActiveMQQueueBrowser to iterate through messages, making the operation to skip to the first message requested inefficient.  One way to reduce that concern could be caching the browser in the web session.  Still looking through the code to see what's feasible on that front.

Another concern is what feasible limits do we attempt to address?  For example, message sizes on the order of the broker's available memory size are going to be impossible to process.  More realistically, should the solution assume that one page of messages will fit in memory?;;;","30/Jan/14 05:33;artnaseef;Hmm, looking at the JMX destination browsing code, it looks like it may only support up to 200 messages maximum.  Is that correct?;;;","30/Jan/14 05:43;artnaseef;OK, so the JMX view (browse operation on the DestinationView MBean) only supports up to 400 messages.  Found in the code and confirmed with a test (involving a lot of mouse clicks and funny stares from family members).

It would be very simple to limit the web console in the same way.;;;","30/Jan/14 15:20;dejanb;In my opinion it would be the best to move off the JMS interface for browsing and do it over JMX. Next, the JMX interface should be improved to allow browsing of all available messages (at the moment that are messages that are paged in memory, but in the future we should be able to browse the whole store), in reasonable sized batches.;;;","30/Jan/14 15:24;dkulp;
Could a new JIRA be created for the pagination stuff?   That's more of a feature request.

github pull request which removes sitemesh which is the root cause of the OOM:

https://github.com/apache/activemq/pull/10

(and the OOM COULD occur on other pages such as if there are 200K queues or similar.  This pull request fixes those as well.)
;;;","30/Jan/14 15:47;artnaseef;Ditto on the desire to move the entire solution to JMX - a separate ticket should be entered for that.  Dejan - will you take the lead on that effort?

Let's keep this issue about the OOM.  I think the paging solution is a nicer way to go, but we could simply limit the number of messages returned from here in the same way JMX does.  The down side being that it reduces existing functionality.

I'll keep working toward a paging solution - it's feeling close.;;;","31/Jan/14 18:46;zmhassan;Okay at this point I'm just testing the client side code. Every page will display 100 Jms Messages and as we paginate through it will show the next 100. I can do some optimizations but wanted  your input on the design of it. Changed a bit of the UI to look more modern using bootstrap and jQuery. 

See screenshoot:
https://www.dropbox.com/s/f8wgkae6vpgrc21/Screenshot%20from%202014-01-31%2013%3A35%3A31.png


This was done by utilizing Bootstrap 3.0 css + jQuery + teamwork  to get RSS feed data from  ActiveMQ for the first 100 messages in the queue. As we go deeper the slower it will be. I'm working on a way around that but still thinking at this point. Appreciate any feedback I'll be online at the usual times > 7pm (E.S.T).

I'll send in my pull request once I'm satisfied that everything is working 100%  test and fully functional. 

Best Regards,
Zak
“Empowerment of individuals is a key part of what makes open source work, since in the end, innovations tend to come from small groups, not from large, structured efforts.”
– Tim O’Reilly
;;;","31/Jan/14 22:04;hadrian;Patch committed with thanks to Dan Kulp.

There is no OOME thrown, tried in both Mozilla and Chrome. Without the pagination feature it takes a long time for the page to refresh. Mozilla appears to be hanging and you get a standardista-table-sorting.js unresponsive (line 404) and you have the option to continue or stop the script. Either way, the browser doesn't crash and there is no exception. 

In Chrome it's a bit nicer because of the incremental page rendering the browser is responsive at all times. One could stop loading the page though.

I even tested with two browsers trying to load the content of the TEST queue at the same time. No problems other than the large amount of memory used and longer delays in accessing the net, which is to be expected.

I believe that although the OOME issue is resolved, pagination and search features are necessary if one needs to deal with deep queues. Let's track those features as separate improvement issues.;;;","31/Jan/14 22:19;zmhassan;@Hadrian,

Yes I guess we can move the pagination stuff to a separate issue. ;;;","05/Feb/14 02:02;artnaseef;Do we have an issue for pagination?  If not, let me know and I'll create it.;;;","05/Feb/14 02:42;zmhassan;No we don't have an issue. Please create one and assign to me.

Thanks,
Zak
;;;",,,,,,,,,,,,,,,,,,,
JmsSendReceiveTwoConnectionsWithSenderUsingPoolTest.testSendReceive fails with NPE in PooledProducer,AMQ-4991,12691000,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,kearls,kearls,24/Jan/14 09:53,02/Apr/14 21:59,14/Jul/23 05:44,24/Jan/14 13:32,,,,,,,,,,5.10.0,5.9.1,,,,,,,,0,,,,,,"This test fails with the following error.  I will add an @IGnore for now.

java.lang.NullPointerException
	at org.apache.activemq.jms.pool.PooledProducer.send(PooledProducer.java:89)
	at org.apache.activemq.jms.pool.PooledProducer.send(PooledProducer.java:61)
	at org.apache.activemq.test.JmsSendReceiveTestSupport.sendMessage(JmsSendReceiveTestSupport.java:131)
	at org.apache.activemq.test.JmsSendReceiveTestSupport.sendMessages(JmsSendReceiveTestSupport.java:126)
	at org.apache.activemq.test.JmsSendReceiveTestSupport.testSendReceive(JmsSendReceiveTestSupport.java:113)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at org.apache.activemq.CombinationTestSupport.runBare(CombinationTestSupport.java:107)
	at org.apache.activemq.CombinationTestSupport.runBare(CombinationTestSupport.java:113)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:53)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:123)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:104)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:81)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
",,gtully,kearls,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4968,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,369743,,,Fri Jan 24 13:32:36 UTC 2014,,,,,,,,,,,"0|i1rq5z:",370044,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"24/Jan/14 13:32;gtully;fix in http://git-wip-us.apache.org/repos/asf/activemq/commit/95d20e5b;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Possible case of curroption in Scheduler store,AMQ-4988,12690287,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,tabish,tabish,22/Jan/14 14:56,02/Apr/14 21:59,14/Jul/23 05:44,22/Jan/14 15:10,5.8.0,5.9.0,,,,,,,,5.10.0,5.9.1,,,Job Scheduler,,,,,0,,,,,,A potential point of store corruption exists where the journal files can be removed for some jobs before the index is updated.  If the broker failed before the index update occurs the store could restart with index entries that map to journal files that no longer exist.  ,,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,369240,,,2014-01-22 14:56:46.0,,,,,,,,,,,"0|i1rn3r:",369545,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MessageGroupLateArrivalsTest.testConsumerLateToBigPartyGetsNewGroup fails intermittently,AMQ-4980,12689980,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,kearls,kearls,kearls,21/Jan/14 09:56,03/Jun/15 20:50,14/Jul/23 05:44,03/Jun/15 20:50,,,,,,,,,,5.12.0,,,,Test Cases,,,,,0,,,,,,"The MessageGroupLateArrivalsTest.testConsumerLateToBigPartyGetsNewGroup test fails intermittently on CI boxes with the following error.

Error Message

worker1 received 2 messages from groups [C] expected:<4> but was:<2>
Stacktrace

junit.framework.AssertionFailedError: worker1 received 2 messages from groups [C] expected:<4> but was:<2>
	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.failNotEquals(Assert.java:329)
	at junit.framework.Assert.assertEquals(Assert.java:78)
	at junit.framework.Assert.assertEquals(Assert.java:234)
	at junit.framework.TestCase.assertEquals(TestCase.java:401)
	at org.apache.activemq.usecases.MessageGroupLateArrivalsTest.testConsumerLateToBigPartyGetsNewGroup(MessageGroupLateArrivalsTest.java:211)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at org.apache.activemq.CombinationTestSupport.runBare(CombinationTestSupport.java:107)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:53)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:123)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:104)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:81)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
",,kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,368946,,,Wed Jun 03 20:50:51 UTC 2015,,,,,,,,,,,"0|i1rlan:",369250,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"03/Jun/15 20:50;tabish;This one has been passing consistently in CI for some time now.  Can reopen if it fails again.  ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JoramJmsNioTest hangs intermittently,AMQ-4978,12689788,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,kearls,kearls,kearls,20/Jan/14 10:19,02/Apr/14 22:05,14/Jul/23 05:44,28/Feb/14 16:55,,,,,,,,,,5.10.0,5.9.1,,,Test Cases,,,,,0,,,,,,"The JoramJmsNioTest hangs intermittently, particularly on CI nodes.  I'll add a stack trace.

This is most likely fixed by QPID 0.26.  Re-test once that is released.

$ jstack 7157
2014-01-20 10:14:31
Full thread dump Java HotSpot(TM) 64-Bit Server VM (24.45-b08 mixed mode):

""Attach Listener"" daemon prio=10 tid=0x00007f09f400d800 nid=0x1ca9 waiting on condition [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

""ActiveMQ BrokerService[localhost] Task-2"" daemon prio=10 tid=0x00007f09e4029000 nid=0x1c97 waiting on condition [0x00007f0a1179d000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x00000000eebf1108> (a java.util.concurrent.SynchronousQueue$TransferStack)
	at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:226)
	at java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:460)
	at java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:359)
	at java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:942)
	at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1068)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:744)

""ActiveMQ BrokerService[localhost] Task-1"" daemon prio=10 tid=0x00007f09e4028800 nid=0x1c96 waiting on condition [0x00007f0a10782000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x00000000eebf1108> (a java.util.concurrent.SynchronousQueue$TransferStack)
	at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:226)
	at java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:460)
	at java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:359)
	at java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:942)
	at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1068)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:744)

""ActiveMQ Transport Server: amqp+nio://localhost:0"" daemon prio=10 tid=0x00007f0a1c69e800 nid=0x1c93 runnable [0x00007f0a10681000]
   java.lang.Thread.State: RUNNABLE
	at sun.nio.ch.EPollArrayWrapper.epollWait(Native Method)
	at sun.nio.ch.EPollArrayWrapper.poll(EPollArrayWrapper.java:269)
	at sun.nio.ch.EPollSelectorImpl.doSelect(EPollSelectorImpl.java:79)
	at sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:87)
	- locked <0x00000000eec186b0> (a sun.nio.ch.Util$2)
	- locked <0x00000000eec186a0> (a java.util.Collections$UnmodifiableSet)
	- locked <0x00000000eec18588> (a sun.nio.ch.EPollSelectorImpl)
	at sun.nio.ch.SelectorImpl.select(SelectorImpl.java:98)
	at sun.nio.ch.ServerSocketAdaptor.accept(ServerSocketAdaptor.java:121)
	- locked <0x00000000eead9ec8> (a java.lang.Object)
	at org.apache.activemq.transport.tcp.TcpTransportServer.run(TcpTransportServer.java:301)
	at java.lang.Thread.run(Thread.java:744)

""RMI Reaper"" prio=10 tid=0x00007f09e4038800 nid=0x1c90 in Object.wait() [0x00007f0a1149a000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	- waiting on <0x00000000f0e6d6c0> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:135)
	- locked <0x00000000f0e6d6c0> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:151)
	at sun.rmi.transport.ObjectTable$Reaper.run(ObjectTable.java:351)
	at java.lang.Thread.run(Thread.java:744)

""RMI TCP Accept-1099"" daemon prio=10 tid=0x00007f0a1c70e000 nid=0x1c8e runnable [0x00007f0a10984000]
   java.lang.Thread.State: RUNNABLE
	at java.net.PlainSocketImpl.socketAccept(Native Method)
	at java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:398)
	at java.net.ServerSocket.implAccept(ServerSocket.java:530)
	at java.net.ServerSocket.accept(ServerSocket.java:498)
	at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.executeAcceptLoop(TCPTransport.java:388)
	at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.run(TCPTransport.java:360)
	at java.lang.Thread.run(Thread.java:744)

""ActiveMQ NIO Worker 4"" daemon prio=10 tid=0x00007f09ec194000 nid=0x1c33 waiting on condition [0x00007f0a1017c000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x00000000f0e41258> (a java.util.concurrent.SynchronousQueue$TransferStack)
	at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:226)
	at java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:460)
	at java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:359)
	at java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:942)
	at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1068)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:744)

""ActiveMQ NIO Worker 3"" daemon prio=10 tid=0x00007f09ec284000 nid=0x1c16 waiting on condition [0x00007f0a1047f000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x00000000f0e41258> (a java.util.concurrent.SynchronousQueue$TransferStack)
	at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:226)
	at java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:460)
	at java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:359)
	at java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:942)
	at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1068)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:744)

""ActiveMQ NIO Worker 2"" daemon prio=10 tid=0x00007f09ec250800 nid=0x1c11 waiting on condition [0x00007f0a10883000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x00000000f0e41258> (a java.util.concurrent.SynchronousQueue$TransferStack)
	at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:226)
	at java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:460)
	at java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:359)
	at java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:942)
	at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1068)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:744)

""ActiveMQ NIO Worker 1"" daemon prio=10 tid=0x00007f09f02b7000 nid=0x1c0e waiting on condition [0x00007f0a10b86000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x00000000f0e41258> (a java.util.concurrent.SynchronousQueue$TransferStack)
	at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:226)
	at java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:460)
	at java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:359)
	at java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:942)
	at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1068)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:744)

""RMI Scheduler(0)"" daemon prio=10 tid=0x00007f09e0010800 nid=0x1c09 waiting on condition [0x00007f0a10f8a000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x00000000c5747e48> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:226)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2082)
	at java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1090)
	at java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:807)
	at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1068)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:744)

""RMI TCP Connection(2)-10.179.133.105"" daemon prio=10 tid=0x00007f09d4001000 nid=0x1c08 runnable [0x00007f0a1108b000]
   java.lang.Thread.State: RUNNABLE
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.read(SocketInputStream.java:152)
	at java.net.SocketInputStream.read(SocketInputStream.java:122)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:235)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:254)
	- locked <0x00000000c5861c08> (a java.io.BufferedInputStream)
	at java.io.FilterInputStream.read(FilterInputStream.java:83)
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:538)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:811)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:670)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:744)

""RMI RenewClean-[10.179.133.105:40132]"" daemon prio=10 tid=0x00007f09d8003800 nid=0x1c07 in Object.wait() [0x00007f0a1118c000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	- waiting on <0x00000000c5748368> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:135)
	- locked <0x00000000c5748368> (a java.lang.ref.ReferenceQueue$Lock)
	at sun.rmi.transport.DGCClient$EndpointEntry$RenewCleanThread.run(DGCClient.java:535)
	at java.lang.Thread.run(Thread.java:744)

""RMI TCP Connection(1)-127.0.0.1"" daemon prio=10 tid=0x00007f09dc001000 nid=0x1c06 runnable [0x00007f0a1128d000]
   java.lang.Thread.State: RUNNABLE
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.read(SocketInputStream.java:152)
	at java.net.SocketInputStream.read(SocketInputStream.java:122)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:235)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:254)
	- locked <0x00000000c58620e8> (a java.io.BufferedInputStream)
	at java.io.FilterInputStream.read(FilterInputStream.java:83)
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:538)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:811)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:670)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:744)

""GC Daemon"" daemon prio=10 tid=0x00007f09e0004800 nid=0x1c05 in Object.wait() [0x00007f0a11399000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	- waiting on <0x00000000c597dc30> (a sun.misc.GC$LatencyLock)
	at sun.misc.GC$Daemon.run(GC.java:117)
	- locked <0x00000000c597dc30> (a sun.misc.GC$LatencyLock)

""RMI TCP Accept-0"" daemon prio=10 tid=0x00007f09e0001000 nid=0x1c03 runnable [0x00007f0a1159b000]
   java.lang.Thread.State: RUNNABLE
	at java.net.PlainSocketImpl.socketAccept(Native Method)
	at java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:398)
	at java.net.ServerSocket.implAccept(ServerSocket.java:530)
	at java.net.ServerSocket.accept(ServerSocket.java:498)
	at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.executeAcceptLoop(TCPTransport.java:388)
	at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.run(TCPTransport.java:360)
	at java.lang.Thread.run(Thread.java:744)

""Service Thread"" daemon prio=10 tid=0x00007f0a1c117000 nid=0x1bff runnable [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

""C2 CompilerThread1"" daemon prio=10 tid=0x00007f0a1c115000 nid=0x1bfe waiting on condition [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

""C2 CompilerThread0"" daemon prio=10 tid=0x00007f0a1c112000 nid=0x1bfd waiting on condition [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

""Signal Dispatcher"" daemon prio=10 tid=0x00007f0a1c107800 nid=0x1bfc runnable [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

""Finalizer"" daemon prio=10 tid=0x00007f0a1c0f1000 nid=0x1bfb in Object.wait() [0x00007f0a18efd000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	- waiting on <0x00000000f0e506b8> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:135)
	- locked <0x00000000f0e506b8> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:151)
	at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:189)

""Reference Handler"" daemon prio=10 tid=0x00007f0a1c0ed000 nid=0x1bfa in Object.wait() [0x00007f0a18ffe000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	- waiting on <0x00000000c5862828> (a java.lang.ref.Reference$Lock)
	at java.lang.Object.wait(Object.java:503)
	at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:133)
	- locked <0x00000000c5862828> (a java.lang.ref.Reference$Lock)

""main"" prio=10 tid=0x00007f0a1c008800 nid=0x1bf6 in Object.wait() [0x00007f0a23c3e000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	- waiting on <0x00000000eebacb28> (a java.lang.Thread)
	at java.lang.Thread.join(Thread.java:1280)
	- locked <0x00000000eebacb28> (a java.lang.Thread)
	at java.lang.Thread.join(Thread.java:1354)
	at org.apache.activemq.transport.TransportServerThreadSupport.doStop(TransportServerThreadSupport.java:81)
	at org.apache.activemq.transport.tcp.TcpTransportServer.doStop(TcpTransportServer.java:399)
	at org.apache.activemq.util.ServiceSupport.stop(ServiceSupport.java:71)
	at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)
	at org.apache.activemq.broker.TransportConnector.stop(TransportConnector.java:279)
	at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)
	at org.apache.activemq.broker.BrokerService.stopAllConnectors(BrokerService.java:2030)
	at org.apache.activemq.broker.BrokerService.stop(BrokerService.java:727)
	at org.apache.activemq.transport.amqp.joram.ActiveMQAdmin.stopServer(ActiveMQAdmin.java:125)
	at org.objectweb.jtests.jms.framework.JMSTestCase.tearDown(JMSTestCase.java:112)
	at org.objectweb.jtests.jms.framework.PTPTestCase.tearDown(PTPTestCase.java:171)
	at junit.framework.TestCase.runBare(TestCase.java:146)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:53)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:123)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:104)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)

""VM Thread"" prio=10 tid=0x00007f0a1c0ea800 nid=0x1bf9 runnable 

""GC task thread#0 (ParallelGC)"" prio=10 tid=0x00007f0a1c01e000 nid=0x1bf7 runnable 

""GC task thread#1 (ParallelGC)"" prio=10 tid=0x00007f0a1c020000 nid=0x1bf8 runnable 

""VM Periodic Task Thread"" prio=10 tid=0x00007f0a1c122000 nid=0x1c00 waiting on condition 

JNI global references: 176


",,kearls,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,368755,,,Fri Feb 28 16:55:40 UTC 2014,,,,,,,,,,,"0|i1rk47:",369059,Unit Test Broken,,,,,,,,,,,,,,,,,,,,"28/Feb/14 16:55;kearls;Fixed as part of AMQ-5073;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory leak in ConnectionStateTracker when browsing non-empty queues,AMQ-4977,12689388,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,gdanov,gdanov,16/Jan/14 22:53,27/May/14 15:20,14/Jul/23 05:44,17/Jan/14 17:31,5.6.0,5.7.0,5.8.0,5.9.0,,,,,,5.10.0,5.9.1,,,,,,,,0,,,,,,"I think I found case that is not handled by the fix AMQ-3316. We see memory leaks connected to this bug and after good amount of headbanging I think the problem is in how two methods work together - processMessagePull and trackBack. The first one has this piece of code:
{code}
  // leave a single instance in the cache
            final String id = pull.getDestination() + ""::"" + pull.getConsumerId();
            messageCache.put(id.intern(), pull);
{code}
while the second one unconditionally increases the currentCacheSize - regardless if the previous method added or replaced entry in the cache.

The situation where entries will be replaced (and not added) and the currentCacheSize will grow very fast until it wraps around and becomes negative is the following:
* have some logic that frequently creates queue browser and iterates through all the entries
* have the queue most of the time with at least one message. The more messages in the queue the faster currentCacheSize grows.

The reason is that processMessagePull reuses the consumer and destination ID for each browsed message in the queue when org.apache.activemq.ActiveMQQueueBrowser#hasMoreElements is invoked. trackBack is ignorant of this and keeps adding to the size regardless that the cache size stays the same.

Here is log from reproducing the issue as a proof:
{code}
2014-01-16 23:05:14  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 10000, 5 elements, pending scans:10, memory: 8951KB
2014-01-16 23:05:14  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 20000, 10 elements, pending scans:10, memory: 10845KB
2014-01-16 23:05:14  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 30000, 15 elements, pending scans:10, memory: 12645KB
2014-01-16 23:05:14  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 40000, 20 elements, pending scans:10, memory: 10363KB
2014-01-16 23:05:14  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 50000, 25 elements, pending scans:10, memory: 12169KB
2014-01-16 23:05:14  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 60000, 30 elements, pending scans:10, memory: 9852KB
2014-01-16 23:05:14  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 70000, 35 elements, pending scans:10, memory: 11657KB
2014-01-16 23:05:14  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 80000, 40 elements, pending scans:10, memory: 9401KB
2014-01-16 23:05:14  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 90000, 45 elements, pending scans:10, memory: 11222KB
2014-01-16 23:05:14  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 100000, 50 elements, pending scans:10, memory: 13047KB
2014-01-16 23:05:14  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 110000, 55 elements, pending scans:10, memory: 10767KB
2014-01-16 23:05:14  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 120000, 60 elements, pending scans:10, memory: 12567KB
2014-01-16 23:05:14  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 130000, 65 elements, pending scans:10, memory: 10256KB
2014-01-16 23:05:14  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 138800, 67 elements, pending scans:10, memory: 12085KB
2014-01-16 23:05:14  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 146800, 67 elements, pending scans:10, memory: 9745KB
2014-01-16 23:05:14  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 154800, 67 elements, pending scans:10, memory: 11566KB
2014-01-16 23:05:14  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 162800, 67 elements, pending scans:10, memory: 9225KB
2014-01-16 23:05:14  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 170800, 67 elements, pending scans:10, memory: 11013KB
2014-01-16 23:05:14  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 178800, 67 elements, pending scans:10, memory: 12812KB
2014-01-16 23:05:14  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 186800, 67 elements, pending scans:10, memory: 10522KB
2014-01-16 23:05:14  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 194800, 67 elements, pending scans:10, memory: 12328KB
2014-01-16 23:05:14  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 202800, 67 elements, pending scans:10, memory: 9999KB
2014-01-16 23:05:15  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 210800, 67 elements, pending scans:10, memory: 11805KB
2014-01-16 23:05:15  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 218800, 67 elements, pending scans:10, memory: 9496KB
2014-01-16 23:05:15  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 226800, 67 elements, pending scans:10, memory: 11316KB
2014-01-16 23:05:15  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 234800, 67 elements, pending scans:10, memory: 13100KB
2014-01-16 23:05:15  WARN ActiveMqMemoryLeakTest - MaxCacheSize: 131072, currentCacheSize: 242800, 67 elements, pending scans:10, memory: 10754KB
{code}

One can see that the garbage collection works well (cache does not grow) but the currentCacheSize keeps increasing
Unfortunately I cannot easily extract the original code and provide it. Hope the explanation is clear enough. ",,01sas,gdanov,tabish,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3316,,,,,,,,,,,"18/Jan/14 08:57;01sas;ConnectionStateTrackerMemoryLeakTest.java;https://issues.apache.org/jira/secure/attachment/12623785/ConnectionStateTrackerMemoryLeakTest.java",,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,368355,,,Tue May 27 15:20:45 UTC 2014,,,,,,,,,,,"0|i1rhnj:",368660,,,,,,,,,,,,,,,,,,,,,"16/Jan/14 23:24;tabish;Could you work up a JUnit test case against the ConnectionStateTracker to prove the problem exists?  ;;;","17/Jan/14 00:06;gdanov;I have one. The dump is from it. But it is coupled to tons of classes from our project which I cannot easily extract. I believe I have described the scenario in good detail for anybody who is intimate with the class to understand. I understand test would be much more comfortable for whoever wants to fix it, however I need to get some sleep so I have to stop here.

As for proving - I have heapdumps from our production servers showing both the negative sizecounter and the map containing gazillions of pullCommands, I have our custom test, I have spent 6 hours today debugging to nail it down. It is there, and I am confident about the scenario I have described.;;;","17/Jan/14 17:31;tabish;I've committed a small test and fix for the cache size value growing when nothing is actually added into the map.  Since there was no test provided to confirm this fixes the underlying issue you'll need to test and report back at some point if there is still more going on.  ;;;","18/Jan/14 08:57;01sas;Here is a test which shows this memory leak.;;;","18/Jan/14 16:37;tabish;Make sure you test on trunk now as the conditions of negative current cache size and continuous addition to the current size are now fixed.  ;;;","20/Jan/14 04:10;01sas;Test shows that cache size now stable, does not grow with time as before:
{noformat:title=Now}
2014-01-20 11:05:26  WARN ConnectionStateTrackerMemoryLeakTest - Cache size: 131200, 328 elements, memory: 21556KB
2014-01-20 11:05:31  WARN ConnectionStateTrackerMemoryLeakTest - Cache size: 131200, 328 elements, memory: 15535KB
2014-01-20 11:05:36  WARN ConnectionStateTrackerMemoryLeakTest - Cache size: 131200, 328 elements, memory: 17671KB
2014-01-20 11:05:41  WARN ConnectionStateTrackerMemoryLeakTest - Cache size: 131200, 328 elements, memory: 33767KB
2014-01-20 11:05:46  WARN ConnectionStateTrackerMemoryLeakTest - Cache size: 131200, 328 elements, memory: 43187KB
{noformat}
{noformat:title=Before}
2014-01-20 11:08:28  WARN ConnectionStateTrackerMemoryLeakTest - Cache size: 6398000, 31 elements, memory: 10546KB
2014-01-20 11:08:33  WARN ConnectionStateTrackerMemoryLeakTest - Cache size: 21079200, 31 elements, memory: 16294KB
2014-01-20 11:08:38  WARN ConnectionStateTrackerMemoryLeakTest - Cache size: 40870000, 31 elements, memory: 15740KB
2014-01-20 11:08:43  WARN ConnectionStateTrackerMemoryLeakTest - Cache size: 60265200, 31 elements, memory: 27111KB
2014-01-20 11:08:48  WARN ConnectionStateTrackerMemoryLeakTest - Cache size: 79071200, 31 elements, memory: 8817KB
{noformat};;;","27/Jan/14 14:31;gdanov;Thanks for the prompt reaction!
Can you give us basic estimation of two things:
* when will release 5.10 go out
* do we need to also upgrade our AMQ server to be on same version as the client?;;;","27/May/14 14:45;gdanov;I desperately need update when is any of the 5.9.1 or 5.10 releases going out.
We will be upgrading from 5.6 and I want to avoid patching the client jar again;;;","27/May/14 15:16;tabish;v5.9.1 was released quite some time ago. ;;;","27/May/14 15:20;gdanov;thanks. found it ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DbRestartJDBCQueueMasterSlaveLeaseQuiesceTest.testSendReceive fails intermittently,AMQ-4975,12689260,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,kearls,kearls,16/Jan/14 15:07,03/Jun/15 16:00,14/Jul/23 05:44,03/Jun/15 16:00,,,,,,,,,,5.12.0,,,,Test Cases,,,,,0,,,,,,"This test fails intermittently with the error below.  It typical fails at around message 180-185, where it looks like it receives the same message twice.

(This test is defined in JmsSendReceiveTestSupport.  I'll add an overridden no-op version in DbRestartJDBCQueueMasterSlaveLeaseQuiesceTest for now so it doesn't cause CI builds to fail)


-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.apache.activemq.broker.ft.DbRestartJDBCQueueMasterSlaveLeaseQuiesceTest
Tests run: 4, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 70.702 sec <<< FAILURE! - in org.apache.activemq.broker.ft.DbRestartJDBCQueueMasterSlaveLeaseQuiesceTest
testSendReceive(org.apache.activemq.broker.ft.DbRestartJDBCQueueMasterSlaveLeaseQuiesceTest)  Time elapsed: 18.286 sec  <<< FAILURE!
junit.framework.ComparisonFailure: Message: 181 expected:<Text for message: 18[1] at Thu Jan 16 16:02...> but was:<Text for message: 18[0] at Thu Jan 16 16:02...>
	at junit.framework.Assert.assertEquals(Assert.java:100)
	at junit.framework.TestCase.assertEquals(TestCase.java:261)
	at org.apache.activemq.JmsSendReceiveTestSupport.assertMessagesReceivedAreValid(JmsSendReceiveTestSupport.java:165)
	at org.apache.activemq.JmsSendReceiveTestSupport.assertMessagesAreReceived(JmsSendReceiveTestSupport.java:128)
	at org.apache.activemq.JmsSendReceiveTestSupport.testSendReceive(JmsSendReceiveTestSupport.java:104)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at org.apache.activemq.CombinationTestSupport.runBare(CombinationTestSupport.java:107)
	at org.apache.activemq.CombinationTestSupport.runBare(CombinationTestSupport.java:113)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:264)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:153)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)


Results :

Failed tests: 
  DbRestartJDBCQueueMasterSlaveLeaseQuiesceTest>CombinationTestSupport.runBare:113->CombinationTestSupport.runBare:107->JmsSendReceiveTestSupport.testSendReceive:104->JmsSendReceiveTestSupport.assertMessagesAreReceived:128->JmsSendReceiveTestSupport.assertMessagesReceivedAreValid:165 Message: 181 expected:<Text for message: 18[1] at Thu Jan 16 16:02...> but was:<Text for message: 18[0] at Thu Jan 16 16:02...>

Tests run: 4, Failures: 1, Errors: 0, Skipped: 0


",,kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,368227,,,Wed Jun 03 16:00:06 UTC 2015,,,,,,,,,,,"0|i1rgv3:",368532,,,,,,,,,,,,,,,,,,,,,"03/Jun/15 16:00;tabish;Marking this as closed.  Gary did some extensive work on these tests and this one seems to work well now.  Some changes went into AMQ-5174 among others for JDBC;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove NetworkConnectionsCleanedupTest?,AMQ-4974,12689252,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,kearls,kearls,kearls,16/Jan/14 14:39,02/Apr/14 22:06,14/Jul/23 05:44,17/Jan/14 09:20,,,,,,,,,,5.10.0,5.9.1,,,Test Cases,,,,,0,,,,,,"This test contains the comment:  

 // skip this test. it runs for an hour, doesn't assert anything, and could probably
    // just be removed (seems like a throwaway impl for https://issues.apache.org/activemq/browse/AMQ-1202)

I've added an @Ignore so it won't count as a failure on CI systems.  Should I just remove it?
",,gtully,kearls,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,368219,,,Fri Jan 17 09:20:12 UTC 2014,,,,,,,,,,,"0|i1rgtb:",368524,,,,,,,,,,,,,,,,,,,,,"16/Jan/14 15:49;gtully;yep, just chuck it.;;;","17/Jan/14 09:20;kearls;Removed.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FailoverConsumerTest.testPublisherFailsOver is failing,AMQ-4972,12689232,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,kearls,kearls,kearls,16/Jan/14 13:34,02/Apr/14 22:03,14/Jul/23 05:44,20/Jan/14 10:43,,,,,,,,,,5.10.0,,,,,,,,,0,,,,,,"I get the following error for this test:

Running org.apache.activemq.transport.failover.FailoverConsumerTest
Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 5.936 sec <<< FAILURE! - in org.apache.activemq.transport.failover.FailoverConsumerTest
testPublisherFailsOver(org.apache.activemq.transport.failover.FailoverConsumerTest)  Time elapsed: 5.479 sec  <<< FAILURE!
junit.framework.AssertionFailedError: expected:<1> but was:<0>
	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.failNotEquals(Assert.java:329)
	at junit.framework.Assert.assertEquals(Assert.java:78)
	at junit.framework.Assert.assertEquals(Assert.java:234)
	at junit.framework.Assert.assertEquals(Assert.java:241)
	at junit.framework.TestCase.assertEquals(TestCase.java:409)
	at org.apache.activemq.transport.failover.FailoverConsumerTest.testPublisherFailsOver(FailoverConsumerTest.java:121)


Results :

Failed tests: 
  FailoverConsumerTest>CombinationTestSupport.runBare:113->CombinationTestSupport.runBare:107->testPublisherFailsOver:121 expected:<1> but was:<0>

Tests run: 1, Failures: 1, Errors: 0, Skipped: 0

[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------

",,kearls,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,368199,,,Mon Jan 20 10:43:01 UTC 2014,,,,,,,,,,,"0|i1rgov:",368504,,,,,,,,,,,,,,,,,,,,,"17/Jan/14 20:06;tabish;Looking at the test it seems like it only ever passed due to dumb luck.  I'm not sure what the intent of it was but it doesn't seem to really be testing anything right now.  We should think about removing this one. ;;;","20/Jan/14 10:43;kearls;Removed this test based on Tim's suggestion.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deletion of a queue inaffective across broker restart,AMQ-4970,12689094,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,artnaseef,artnaseef,artnaseef,15/Jan/14 21:29,11/Jun/14 01:22,14/Jul/23 05:44,20/Jan/14 15:44,5.9.0,,,,,,,,,5.10.0,5.9.1,,,Broker,,,,,0,,,,,,"Deleting a queue, it is revived from persistent store after a broker restart.  The following steps reproduce the problem:

* Create a queue (confirmed using the REST client I/F)
* Shutdown the broker
* Startup the broker
* Confirm queue still exists via the hawtio ui (correct operation so far)
* Delete the queue
* Confirm queue removed via the hawtio ui
* Shutdown the broker
* Startup the broker
* Confirm queue was not recreated via hawtio ui (failed: queue still exists)
",mac osx/mavericks,artnaseef,fenghao0038,gtully,jahlborn,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Jan/14 15:26;artnaseef;AMQ4970Test.zip;https://issues.apache.org/jira/secure/attachment/12623668/AMQ4970Test.zip","16/Jan/14 16:06;artnaseef;AMQ4970Test.zip;https://issues.apache.org/jira/secure/attachment/12623409/AMQ4970Test.zip","16/Jan/14 02:55;artnaseef;AMQ4970Test.zip;https://issues.apache.org/jira/secure/attachment/12623300/AMQ4970Test.zip","19/Jan/14 07:01;artnaseef;amq4970.patch;https://issues.apache.org/jira/secure/attachment/12623852/amq4970.patch",,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,368061,,,Wed Jun 11 01:22:57 UTC 2014,,,,,,,,,,,"0|i1rfvj:",368367,,,,,,,,,,,,,,,,,,,,,"15/Jan/14 21:39;tabish;Recommend you create a JUnit test to reproduce.;;;","15/Jan/14 22:05;artnaseef;Thanks. I am working on it. Any good way to unit test this without actually creating files on disk?  I plan to put files in a subdir of target. 

Sent from my iPhone

;;;","15/Jan/14 22:09;tabish;Since you are testing persistence you kind of have to write to disk.  That said there's a ton of unit tests to work from, I'd recommend you take a peek at QueuePurgeTest.java in activemq-unit-tests;;;","15/Jan/14 22:12;gtully;@Arthur - there is no problem with creating files in the target dir. that is what most of the store unit tests do. Peek at: org.apache.activemq.store.kahadb.*;;;","16/Jan/14 02:52;artnaseef;@Timothy Bish - thank you for the reference to QueuePurgeTest.;;;","16/Jan/14 02:55;artnaseef;AMQ4970Test.zip - Attached  zip file with a self-contained test project.  ""mvn test"" runs the test.

I'm not reproducing the failures with this test.  Trying to consider what may be different.  One thing coming to mind is that my earlier test involved running the broker in console mode and using ctrl-c to stop it.;;;","16/Jan/14 03:25;artnaseef;Looks like the difference is ActiveMQConnection.destroyDestination() versus BrokerView.removeQueue().;;;","16/Jan/14 16:06;artnaseef;Updated AMQ4970Test.zip so it now tests both the ActiveMQConnection.destroyDestination() and BrokerView.deleteQueue() methods.

Still not reproducing the problem this way.

Tried another approach (capturing kahadb snapshots):

== part 1 ==
* Clear the kahadb
* Start the broker
* Create two destinations
* Stop the broker
* Take snapshot 1 of the kahadb
* Start the broker
* Remove one destination
* Stop the broker
* Take snapshot 2 of the kahadb
* Start the broker
* Confirm errant operation (removed destination recreated)

== part 2 ==
* Stop the broker
* Clear the kahadb
* Start the broker
* Create 2 destinations
* Remove 1 destination
* Stop the broker
* Capture snapshot 3 of the kahadb
* Start the broker
* Confirm correct operation (destination remains removed)

Comparing Snapshots 2 and 3, there are differences (as expected):

* The db.redo file contains the removed destination name in the errant process path.
* The db.redo file in the normal path does not contain the removed destination name.
* And the normal path has a db.free file.
* The errant path does not.

I'm wondering if something in the out-of-the-box configs differing from the internal broker in the AMQ4970Test is contributing to the problem.

Any ideas would be welcome.;;;","17/Jan/14 04:13;artnaseef;Trying the exact same config with leveldb, the problem does not happen.;;;","17/Jan/14 05:15;artnaseef;This is interesting - turned on DEBUG logging on org.apache.activemq.broker.region and found this:

{noformat}
2014-01-16 22:10:18,028 | DEBUG | localhost removing destination: queue://TEST2 | org.apache.activemq.broker.region.AbstractRegion | ActiveMQ Transport: tcp:///127.0.0.1:49946@61616
2014-01-16 22:10:18,033 | DEBUG | localhost adding destination: topic://ActiveMQ.Advisory.Queue | org.apache.activemq.broker.region.AbstractRegion | ActiveMQ Transport: tcp:///127.0.0.1:49946@61616
2014-01-16 22:10:18,044 | DEBUG | localhost removing consumer: ID:Arthur-Naseefs-MacBook-Pro.local-49945-1389935417793-1:1:-1:1 for destination: ActiveMQ.Advisory.TempQueue,ActiveMQ.Advisory.TempTopic | org.apache.activemq.broker.region.AbstractRegion | ActiveMQ Transport: tcp:///127.0.0.1:49946@61616
2014-01-16 22:10:38,199 | DEBUG | queue://TEST2 expiring messages .. | org.apache.activemq.broker.region.Queue | ActiveMQ Broker[localhost] Scheduler
2014-01-16 22:10:38,201 | DEBUG | TEST2 toPageIn: 0, Inflight: 0, pagedInMessages.size 0, enqueueCount: 0, dequeueCount: 0 | org.apache.activemq.broker.region.Queue | ActiveMQ Broker[localhost] Scheduler
2014-01-16 22:10:38,203 | DEBUG | queue://TEST2 expiring messages done. | org.apache.activemq.broker.region.Queue | ActiveMQ Broker[localhost] Scheduler
{noformat}

Watching the contents of the db.redo file, I see the destination name removed, and then return.;;;","17/Jan/14 05:35;artnaseef;The GC of the destination appears to be the missing link.  Adding a Thread.sleep(60000) to the test causes 100% failure - of both forms of deletion.;;;","17/Jan/14 15:26;artnaseef;Attaching updated test project - this one fails 100% of the time with a 2 second delay added to the process.

Message expiration is causing revival of the destination.;;;","17/Jan/14 15:32;gtully;great work tracking this down. How does the expiration thread/task have a reference to a deleted destination? Must still be suck in some list or there is a race between the start of the task execution and the removal.;;;","17/Jan/14 19:40;tabish;Tried the test using trunk code, could not reproduce after quite a few runs.  ;;;","17/Jan/14 20:26;artnaseef;Huh, that's interesting Timothy.  I wonder what's different.  I'm working with a version of the trunk that can't be more than a couple of weeks old.  I'm running this on a mac.  I think jdk 1.7 - need to verify.

With a little debug logging, I see that the task for expiring messages continues to be called even though the cancel method is called on the scheduler for the task.  I haven't had a chance to do any more than that today due to other priorities.;;;","18/Jan/14 01:39;artnaseef;Hmm:

{noformat}
DEBUG | localhost adding destination: queue://TEST1
 INFO | TBD ASN: scheduling queue://TEST1
DEBUG | TEST1 toPageIn: 0, Inflight: 0, pagedInMessages.size 0, enqueueCount: 0, dequeueCount: 0
 INFO | TBD ASN: scheduling queue://TEST1
DEBUG | TEST1 toPageIn: 0, Inflight: 0, pagedInMessages.size 0, enqueueCount: 0, dequeueCount: 0
{noformat}

Two of these tasks are being scheduled?  Next check - is it one Queue instance or two?;;;","18/Jan/14 04:17;artnaseef;Two starts of the queue.  FIRST STACK is the trace on the first call to {{Queue.start}} and the SECOND is, well, the second.

{noformat}
2014-01-17 21:15:07,071 ERROR [main] org.apache.activemq.broker.region.Queue - TBD ASN XXX: first start
java.lang.Exception: FIRST STACK
	at org.apache.activemq.broker.region.Queue.start(Queue.java:1008)
	at org.apache.activemq.broker.region.AbstractRegion.addDestination(AbstractRegion.java:140)
	at org.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:321)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:167)
	at org.apache.activemq.advisory.AdvisoryBroker.addDestination(AdvisoryBroker.java:169)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:167)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:167)
	at org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:172)
	at org.apache.activemq.broker.region.AbstractRegion.start(AbstractRegion.java:98)
	at org.apache.activemq.broker.region.RegionBroker.start(RegionBroker.java:190)
	at org.apache.activemq.broker.jmx.ManagedRegionBroker.start(ManagedRegionBroker.java:120)
	at org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:182)
	at org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:182)
	at org.apache.activemq.broker.TransactionBroker.start(TransactionBroker.java:120)
	at org.apache.activemq.broker.BrokerService$5.start(BrokerService.java:2150)
	at org.apache.activemq.broker.BrokerService.doStartBroker(BrokerService.java:648)
	at org.apache.activemq.broker.BrokerService.startBroker(BrokerService.java:632)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:568)
	at org.apache.activemq.AMQ4970Test.setupBroker(AMQ4970Test.java:90)
	at org.apache.activemq.AMQ4970Test.restartBroker(AMQ4970Test.java:221)
	at org.apache.activemq.AMQ4970Test.runOneTestQueueRemoval(AMQ4970Test.java:184)
	at org.apache.activemq.AMQ4970Test.testQueueDeletionViaBrokerViewRemoveQueueInKahaDBStore(AMQ4970Test.java:128)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.BlockJUnit4ClassRunner.runNotIgnored(BlockJUnit4ClassRunner.java:79)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:71)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:49)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
2014-01-17 21:15:07,074 ERROR [main] org.apache.activemq.broker.region.Queue - TBD ASN XXX: second start
java.lang.Exception: SECOND STACK
	at org.apache.activemq.broker.region.Queue.start(Queue.java:1005)
	at org.apache.activemq.broker.region.AbstractRegion.start(AbstractRegion.java:104)
	at org.apache.activemq.broker.region.RegionBroker.start(RegionBroker.java:190)
	at org.apache.activemq.broker.jmx.ManagedRegionBroker.start(ManagedRegionBroker.java:120)
	at org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:182)
	at org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:182)
	at org.apache.activemq.broker.TransactionBroker.start(TransactionBroker.java:120)
	at org.apache.activemq.broker.BrokerService$5.start(BrokerService.java:2150)
	at org.apache.activemq.broker.BrokerService.doStartBroker(BrokerService.java:648)
	at org.apache.activemq.broker.BrokerService.startBroker(BrokerService.java:632)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:568)
	at org.apache.activemq.AMQ4970Test.setupBroker(AMQ4970Test.java:90)
	at org.apache.activemq.AMQ4970Test.restartBroker(AMQ4970Test.java:221)
	at org.apache.activemq.AMQ4970Test.runOneTestQueueRemoval(AMQ4970Test.java:184)
	at org.apache.activemq.AMQ4970Test.testQueueDeletionViaBrokerViewRemoveQueueInKahaDBStore(AMQ4970Test.java:128)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.BlockJUnit4ClassRunner.runNotIgnored(BlockJUnit4ClassRunner.java:79)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:71)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:49)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
{noformat};;;","18/Jan/14 04:49;artnaseef;Thanks for the input Gary (sorry I missed it earlier).;;;","18/Jan/14 06:07;artnaseef;Last of the small updates.

After pulling down the head and testing, the test passes.  I'm trying to track down the change that appears to fix the problem to understand why it makes the test pass - in case it doesn't truly fix the root cause.;;;","19/Jan/14 03:36;artnaseef;Here's the finding:

* The issue is caused, at least in part, by redundant starts of the Queue (i.e. two calls to Queue.start)
* On the head, this still happens
* On the older code, the redundant start causes redundant exipred-message scheduling which appears to cause the Queue to revive after a removeDestination
** The revival only takes affect on broker restart
** So, the kahadb remembers the destination, but it doesn't revive in broker memory
* On the head, the redundant start doesn't lead to the revival; not sure why.

I recommend protecting against redundant starts by adding a flag and check to the Queue - using encapsulation to have the Queue keep itself robust.  Even without the queue revival, redundant starts of the Queue can only lead to problems (such as a scheduler task leak).  I'll submit a patch. ;;;","19/Jan/14 07:01;artnaseef;Attaching a patch that prevents duplicate starts and stops of a single org.apache.broker.region.Queue.  Failures during startup or shutdown of the Queue are ignored, so the results will be the same as they were before.;;;","20/Jan/14 15:44;tabish;Fixed on trunk. ;;;","21/Jan/14 04:49;jahlborn;Hey Arthur,
thanks for tracking this down and figuring out how to fix it.  just curious, though, should there be a similar fix applied to Topic.java as well?;;;","22/Jan/14 19:01;jahlborn;Actually, i may have figured this out myself.  topics don't seem to be reloaded at startup like queues.;;;","22/Jan/14 20:54;artnaseef;I think it's worth adding the protection - the extra processing only adds an infrequent operation that can only prevent problems.;;;","11/Jun/14 01:22;artnaseef;Fix revision: https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=f7cbe9fa173f1f3cf91d016ed340f90a2bd61242;;;",,,,,,,,,,,,,,,
activemq-camel should explicitly Import-Package org.apache.activemq.pool,AMQ-4967,12688564,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,13/Jan/14 16:12,07/Jun/14 18:56,14/Jul/23 05:44,13/Jan/14 16:14,5.9.0,,,,,,,,,5.10.0,5.9.1,,,Camel,,,,,0,,,,,,,,artnaseef,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,367583,,,Sat Jun 07 18:56:01 UTC 2014,,,,,,,,,,,"0|i1rcyn:",367891,,,,,,,,,,,,,,,,,,,,,"13/Jan/14 16:14;tabish;Fixed on trunk. ;;;","07/Jun/14 18:56;artnaseef;Fix commit: 6377d49a1c2e501b7f9daa39a4ed91e8cf4114b1

https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=6377d49a1c2e501b7f9daa39a4ed91e8cf4114b1
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Connections not closing on AMQP connector when client closes its side.,AMQ-4962,12687532,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,06/Jan/14 21:40,22/Apr/14 16:10,14/Jul/23 05:44,06/Jan/14 22:39,5.9.0,,,,,,,,,5.10.0,5.9.1,,,AMQP,,,,,0,,,,,,Using the QPid AMQP JMS client and creating and closing a connection the connection count on the connector shows that there are lingering Connections.  For some reason the connection close is not being detected and processed correctly.  ,,ratana,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,366533,,,Tue Apr 22 16:10:16 UTC 2014,,,,,,,,,,,"0|i1r6i7:",366844,,,,,,,,,,,,,,,,,,,,,"06/Jan/14 22:39;tabish;Fixed on trunk.  ;;;","22/Apr/14 16:10;ratana;I am facing this issue (connection not getting closed on UI), also i have updated Apache MQ to 5.9.1 from 5.9.
Could you please let me know what needs to be configured apart from updating Apache MQ version from 5.9 to 5.9.1

Thanks
Anand;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
